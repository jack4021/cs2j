// $ANTLR 3.2 Sep 23, 2009 12:02:23 /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g 2021-03-09 19:06:49

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162


	using System;
	using System.IO;
	using System.Xml;
	using System.Xml.Xsl;
	using System.Collections;
	using System.Text;
	using System.Text.RegularExpressions;


using System;
using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;using Stack = System.Collections.Generic.Stack<object>;
using List = System.Collections.IList;
using ArrayList = System.Collections.Generic.List<object>;
using Map = System.Collections.IDictionary;
using HashMap = System.Collections.Generic.Dictionary<object, object>;
using Antlr.StringTemplate;
using Antlr.StringTemplate.Language;

namespace  Twiglet.CS2J.Translator.Transform 
{
    public partial class JavaPrettyPrint : Twiglet.CS2J.Translator.Transform.CommonWalker
    {
        public static readonly string[] tokenNames = new string[] 
    	{
            "<invalid>", 
    		"<EOR>", 
    		"<DOWN>", 
    		"<UP>", 
    		"PACKAGE", 
    		"CLASS", 
    		"EXTENDS", 
    		"IMPLEMENTS", 
    		"IMPORT", 
    		"INTERFACE", 
    		"FINAL", 
    		"ANNOTATION", 
    		"OUT", 
    		"CONST", 
    		"EVENT", 
    		"METHOD", 
    		"PROPERTY", 
    		"INDEXER", 
    		"FIELD", 
    		"OPERATOR", 
    		"ENUM", 
    		"DELEGATE", 
    		"CONVERSION_OPERATOR", 
    		"CONSTRUCTOR", 
    		"DESTRUCTOR", 
    		"METHOD_HEADER", 
    		"PARAMS", 
    		"PARAMS_TYPELESS", 
    		"SWITCH_SECTION", 
    		"YIELD_RETURN", 
    		"YIELD_BREAK", 
    		"UNCHECKED", 
    		"GLOBAL_ATTRIBUTE", 
    		"ATTRIBUTE", 
    		"MONOPLUS", 
    		"MONOMINUS", 
    		"MONONOT", 
    		"MONOTWIDDLE", 
    		"MONOSTAR", 
    		"ADDRESSOF", 
    		"PREINC", 
    		"PREDEC", 
    		"POSTINC", 
    		"POSTDEC", 
    		"PARENS", 
    		"INDEX", 
    		"APPLY", 
    		"ARGS", 
    		"NEW", 
    		"NEW_ARRAY", 
    		"NEW_DELEGATE", 
    		"NEW_ANON_OBJECT", 
    		"STATIC_CONSTRUCTOR", 
    		"PUBLIC", 
    		"PROTECTED", 
    		"PRIVATE", 
    		"INTERNAL", 
    		"STATIC", 
    		"RETURN", 
    		"TRY", 
    		"CATCH", 
    		"FINALLY", 
    		"THROW", 
    		"ELSE", 
    		"BREAK", 
    		"OBJECT", 
    		"THIS", 
    		"FOREACH", 
    		"IN", 
    		"OPEN_BRACKET", 
    		"CLOSE_BRACKET", 
    		"OPEN_BRACE", 
    		"CLOSE_BRACE", 
    		"LPAREN", 
    		"NULL_COALESCE", 
    		"IF", 
    		"ASSIGN", 
    		"PLUS_ASSIGN", 
    		"MINUS_ASSIGN", 
    		"STAR_ASSIGN", 
    		"DIV_ASSIGN", 
    		"MOD_ASSIGN", 
    		"BIT_AND_ASSIGN", 
    		"BIT_OR_ASSIGN", 
    		"BIT_XOR_ASSIGN", 
    		"LEFT_SHIFT_ASSIGN", 
    		"RIGHT_SHIFT_ASSIGN", 
    		"UNSIGNED_RIGHT_SHIFT_ASSIGN", 
    		"COND_EXPR", 
    		"RIGHT_SHIFT", 
    		"INSTANCEOF", 
    		"LOG_OR", 
    		"LOG_AND", 
    		"BIT_OR", 
    		"BIT_XOR", 
    		"BIT_AND", 
    		"NOT_EQUAL", 
    		"EQUAL", 
    		"LTHAN", 
    		"LTE", 
    		"GTE", 
    		"LEFT_SHIFT", 
    		"UNSIGNED_RIGHT_SHIFT", 
    		"SUPER", 
    		"LONGNUMBER", 
    		"PLUS", 
    		"MINUS", 
    		"DIV", 
    		"MOD", 
    		"STAR", 
    		"LAMBDA", 
    		"COMMA", 
    		"TYPE", 
    		"TYPE_VAR", 
    		"TYPE_DYNAMIC", 
    		"ENUM_BODY", 
    		"TYPE_PARAM_CONSTRAINT", 
    		"UNARY_EXPR", 
    		"CAST_EXPR", 
    		"EXCEPTION", 
    		"SYNCHRONIZED", 
    		"PAYLOAD", 
    		"PAYLOAD_LIST", 
    		"JAVAWRAPPER", 
    		"JAVAWRAPPEREXPRESSION", 
    		"JAVAWRAPPERARGUMENT", 
    		"JAVAWRAPPERARGUMENTLIST", 
    		"JAVAWRAPPERTYPE", 
    		"SEP", 
    		"KGHOLE", 
    		"BOOL", 
    		"BYTE", 
    		"CHAR", 
    		"SHORT", 
    		"INT", 
    		"LONG", 
    		"FLOAT", 
    		"DOUBLE", 
    		"IDENTIFIER", 
    		"Real_literal", 
    		"NUMBER", 
    		"Hex_number", 
    		"Character_literal", 
    		"STRINGLITERAL", 
    		"Verbatim_string_literal", 
    		"TRUE", 
    		"FALSE", 
    		"NULL", 
    		"DOT", 
    		"PTR", 
    		"GT", 
    		"USING", 
    		"ELIF", 
    		"ENDIF", 
    		"DEFINE", 
    		"UNDEF", 
    		"SEMI", 
    		"RPAREN", 
    		"WS", 
    		"TS", 
    		"DOC_LINE_COMMENT", 
    		"LINE_COMMENT", 
    		"COMMENT", 
    		"EscapeSequence", 
    		"Verbatim_string_literal_character", 
    		"Decimal_digits", 
    		"INTEGER_TYPE_SUFFIX", 
    		"Decimal_integer_literal", 
    		"GooBallIdentifier", 
    		"GooBall", 
    		"IdentifierStart", 
    		"IdentifierPart", 
    		"Exponent_part", 
    		"Real_type_suffix", 
    		"Pragma", 
    		"PP_CONDITIONAL", 
    		"PREPROCESSOR_DIRECTIVE", 
    		"IF_TOKEN", 
    		"DEFINE_TOKEN", 
    		"ELSE_TOKEN", 
    		"ENDIF_TOKEN", 
    		"UNDEF_TOKEN", 
    		"PP_EXPRESSION", 
    		"PP_OR_EXPRESSION", 
    		"PP_AND_EXPRESSION", 
    		"PP_EQUALITY_EXPRESSION", 
    		"PP_UNARY_EXPRESSION", 
    		"PP_PRIMARY_EXPRESSION", 
    		"UNICODE_LETTER", 
    		"HEX_DIGIT", 
    		"HEX_DIGITS", 
    		"DECIMAL_DIGIT", 
    		"Sign", 
    		"'namespace'", 
    		"'extern'", 
    		"'alias'", 
    		"'partial'", 
    		"'new'", 
    		"'unsafe'", 
    		"'abstract'", 
    		"'sealed'", 
    		"'readonly'", 
    		"'volatile'", 
    		"'virtual'", 
    		"'override'", 
    		"'const'", 
    		"'void'", 
    		"'base'", 
    		"'::'", 
    		"'++'", 
    		"'--'", 
    		"':'", 
    		"'out'", 
    		"'ref'", 
    		"'sizeof'", 
    		"'checked'", 
    		"'unchecked'", 
    		"'default'", 
    		"'delegate'", 
    		"'typeof'", 
    		"'?'", 
    		"'extends'", 
    		"'is'", 
    		"'as'", 
    		"'into'", 
    		"'from'", 
    		"'join'", 
    		"'on'", 
    		"'equals'", 
    		"'let'", 
    		"'orderby'", 
    		"'ascending'", 
    		"'descending'", 
    		"'select'", 
    		"'group'", 
    		"'by'", 
    		"'where'", 
    		"'assembly'", 
    		"'module'", 
    		"'field'", 
    		"'event'", 
    		"'method'", 
    		"'param'", 
    		"'property'", 
    		"'type'", 
    		"'class'", 
    		"'throws'", 
    		"'get'", 
    		"'set'", 
    		"'add'", 
    		"'remove'", 
    		"'sbyte'", 
    		"'ushort'", 
    		"'uint'", 
    		"'ulong'", 
    		"'struct'", 
    		"'__arglist'", 
    		"'params'", 
    		"'interface'", 
    		"'operator'", 
    		"'implicit'", 
    		"'explicit'", 
    		"'fixed'", 
    		"'var'", 
    		"'dynamic'", 
    		"'stackalloc'", 
    		"'switch'", 
    		"'case'", 
    		"'while'", 
    		"'do'", 
    		"'for'", 
    		"'continue'", 
    		"'goto'", 
    		"'lock'", 
    		"'yield'", 
    		"'decimal'", 
    		"'string'", 
    		"'pragma'"
        };

        public const int DECIMAL_DIGIT = 191;
        public const int MONOMINUS = 35;
        public const int PACKAGE = 4;
        public const int GLOBAL_ATTRIBUTE = 32;
        public const int STAR = 109;
        public const int JAVAWRAPPERTYPE = 127;
        public const int T__259 = 259;
        public const int T__258 = 258;
        public const int MOD = 108;
        public const int T__257 = 257;
        public const int CONST = 13;
        public const int PREDEC = 41;
        public const int T__262 = 262;
        public const int Character_literal = 142;
        public const int SWITCH_SECTION = 28;
        public const int T__263 = 263;
        public const int T__260 = 260;
        public const int T__261 = 261;
        public const int T__266 = 266;
        public const int LEFT_SHIFT_ASSIGN = 85;
        public const int T__267 = 267;
        public const int T__264 = 264;
        public const int T__265 = 265;
        public const int EOF = -1;
        public const int TYPE = 112;
        public const int ELSE_TOKEN = 179;
        public const int RPAREN = 157;
        public const int FINAL = 10;
        public const int IMPORT = 8;
        public const int UNCHECKED = 31;
        public const int CAST_EXPR = 118;
        public const int USING = 151;
        public const int T__247 = 247;
        public const int NOT_EQUAL = 96;
        public const int T__246 = 246;
        public const int T__249 = 249;
        public const int T__248 = 248;
        public const int PP_AND_EXPRESSION = 184;
        public const int THIS = 66;
        public const int RETURN = 58;
        public const int T__250 = 250;
        public const int ARGS = 47;
        public const int T__251 = 251;
        public const int T__252 = 252;
        public const int T__253 = 253;
        public const int T__254 = 254;
        public const int T__255 = 255;
        public const int Sign = 192;
        public const int UNICODE_LETTER = 188;
        public const int T__256 = 256;
        public const int TYPE_VAR = 113;
        public const int TYPE_PARAM_CONSTRAINT = 116;
        public const int YIELD_BREAK = 30;
        public const int PARAMS_TYPELESS = 27;
        public const int STATIC = 57;
        public const int DELEGATE = 21;
        public const int ELSE = 63;
        public const int MINUS_ASSIGN = 78;
        public const int NUMBER = 140;
        public const int BOOL = 130;
        public const int Decimal_integer_literal = 167;
        public const int DEFINE_TOKEN = 178;
        public const int INT = 134;
        public const int UNDEF_TOKEN = 181;
        public const int ENDIF_TOKEN = 180;
        public const int UNSIGNED_RIGHT_SHIFT_ASSIGN = 87;
        public const int WS = 158;
        public const int PP_PRIMARY_EXPRESSION = 187;
        public const int OUT = 12;
        public const int T__269 = 269;
        public const int T__268 = 268;
        public const int COND_EXPR = 88;
        public const int YIELD_RETURN = 29;
        public const int T__275 = 275;
        public const int T__276 = 276;
        public const int T__277 = 277;
        public const int MONOSTAR = 38;
        public const int GT = 150;
        public const int T__271 = 271;
        public const int LEFT_SHIFT = 101;
        public const int T__272 = 272;
        public const int T__273 = 273;
        public const int POSTINC = 42;
        public const int T__274 = 274;
        public const int PP_EQUALITY_EXPRESSION = 185;
        public const int CONSTRUCTOR = 23;
        public const int T__270 = 270;
        public const int T__215 = 215;
        public const int T__216 = 216;
        public const int PROTECTED = 54;
        public const int T__213 = 213;
        public const int APPLY = 46;
        public const int T__214 = 214;
        public const int T__219 = 219;
        public const int T__217 = 217;
        public const int T__218 = 218;
        public const int ANNOTATION = 11;
        public const int UNARY_EXPR = 117;
        public const int FLOAT = 136;
        public const int T__223 = 223;
        public const int T__222 = 222;
        public const int LPAREN = 73;
        public const int T__221 = 221;
        public const int T__220 = 220;
        public const int T__202 = 202;
        public const int PARENS = 44;
        public const int T__203 = 203;
        public const int T__204 = 204;
        public const int LONGNUMBER = 104;
        public const int T__205 = 205;
        public const int T__206 = 206;
        public const int T__207 = 207;
        public const int IMPLEMENTS = 7;
        public const int T__208 = 208;
        public const int T__209 = 209;
        public const int JAVAWRAPPEREXPRESSION = 124;
        public const int SEP = 128;
        public const int PREPROCESSOR_DIRECTIVE = 176;
        public const int PREINC = 40;
        public const int RIGHT_SHIFT_ASSIGN = 86;
        public const int PLUS = 105;
        public const int LOG_OR = 91;
        public const int LAMBDA = 110;
        public const int LOG_AND = 92;
        public const int T__210 = 210;
        public const int T__212 = 212;
        public const int PARAMS = 26;
        public const int T__211 = 211;
        public const int T__239 = 239;
        public const int T__237 = 237;
        public const int T__238 = 238;
        public const int T__235 = 235;
        public const int T__236 = 236;
        public const int TS = 159;
        public const int HEX_DIGIT = 189;
        public const int SHORT = 133;
        public const int INSTANCEOF = 90;
        public const int PAYLOAD = 121;
        public const int CLOSE_BRACE = 72;
        public const int METHOD_HEADER = 25;
        public const int MINUS = 106;
        public const int T__245 = 245;
        public const int T__244 = 244;
        public const int SEMI = 156;
        public const int T__243 = 243;
        public const int STAR_ASSIGN = 79;
        public const int T__242 = 242;
        public const int Hex_number = 141;
        public const int T__241 = 241;
        public const int T__240 = 240;
        public const int STATIC_CONSTRUCTOR = 52;
        public const int T__228 = 228;
        public const int T__229 = 229;
        public const int T__224 = 224;
        public const int ENUM = 20;
        public const int T__225 = 225;
        public const int T__226 = 226;
        public const int T__227 = 227;
        public const int UNSIGNED_RIGHT_SHIFT = 102;
        public const int STRINGLITERAL = 143;
        public const int BIT_XOR = 94;
        public const int ADDRESSOF = 39;
        public const int PLUS_ASSIGN = 77;
        public const int INTERFACE = 9;
        public const int DIV = 107;
        public const int PP_UNARY_EXPRESSION = 186;
        public const int T__232 = 232;
        public const int LONG = 135;
        public const int T__231 = 231;
        public const int PUBLIC = 53;
        public const int T__234 = 234;
        public const int T__233 = 233;
        public const int JAVAWRAPPERARGUMENTLIST = 126;
        public const int T__230 = 230;
        public const int INTERNAL = 56;
        public const int PP_OR_EXPRESSION = 183;
        public const int MOD_ASSIGN = 81;
        public const int JAVAWRAPPERARGUMENT = 125;
        public const int NEW = 48;
        public const int CHAR = 132;
        public const int DIV_ASSIGN = 80;
        public const int BREAK = 64;
        public const int OPEN_BRACKET = 69;
        public const int PAYLOAD_LIST = 122;
        public const int BIT_OR = 93;
        public const int NEW_ARRAY = 49;
        public const int TYPE_DYNAMIC = 114;
        public const int ENDIF = 153;
        public const int DOUBLE = 137;
        public const int ENUM_BODY = 115;
        public const int SUPER = 103;
        public const int COMMENT = 162;
        public const int EXCEPTION = 119;
        public const int KGHOLE = 129;
        public const int LINE_COMMENT = 161;
        public const int PRIVATE = 55;
        public const int BIT_XOR_ASSIGN = 84;
        public const int NULL = 147;
        public const int IdentifierStart = 170;
        public const int MONOTWIDDLE = 37;
        public const int TRY = 59;
        public const int Verbatim_string_literal = 144;
        public const int IF_TOKEN = 177;
        public const int ELIF = 152;
        public const int T__200 = 200;
        public const int T__201 = 201;
        public const int PROPERTY = 16;
        public const int MONOPLUS = 34;
        public const int FIELD = 18;
        public const int PP_CONDITIONAL = 175;
        public const int FOREACH = 67;
        public const int CATCH = 60;
        public const int FALSE = 146;
        public const int INTEGER_TYPE_SUFFIX = 166;
        public const int EscapeSequence = 163;
        public const int THROW = 62;
        public const int CLOSE_BRACKET = 70;
        public const int POSTDEC = 43;
        public const int DESTRUCTOR = 24;
        public const int CLASS = 5;
        public const int Real_literal = 139;
        public const int BIT_AND = 95;
        public const int PP_EXPRESSION = 182;
        public const int CONVERSION_OPERATOR = 22;
        public const int GTE = 100;
        public const int ATTRIBUTE = 33;
        public const int LTHAN = 98;
        public const int GooBall = 169;
        public const int DEFINE = 154;
        public const int LTE = 99;
        public const int IF = 75;
        public const int Exponent_part = 172;
        public const int INDEX = 45;
        public const int T__199 = 199;
        public const int T__198 = 198;
        public const int T__197 = 197;
        public const int SYNCHRONIZED = 120;
        public const int T__196 = 196;
        public const int IN = 68;
        public const int T__195 = 195;
        public const int T__194 = 194;
        public const int T__193 = 193;
        public const int OBJECT = 65;
        public const int COMMA = 111;
        public const int IDENTIFIER = 138;
        public const int EQUAL = 97;
        public const int RIGHT_SHIFT = 89;
        public const int UNDEF = 155;
        public const int DOT = 148;
        public const int IdentifierPart = 171;
        public const int JAVAWRAPPER = 123;
        public const int BYTE = 131;
        public const int MONONOT = 36;
        public const int BIT_OR_ASSIGN = 83;
        public const int DOC_LINE_COMMENT = 160;
        public const int OPERATOR = 19;
        public const int GooBallIdentifier = 168;
        public const int Pragma = 174;
        public const int Verbatim_string_literal_character = 164;
        public const int NEW_ANON_OBJECT = 51;
        public const int EVENT = 14;
        public const int TRUE = 145;
        public const int NULL_COALESCE = 74;
        public const int PTR = 149;
        public const int Decimal_digits = 165;
        public const int FINALLY = 61;
        public const int INDEXER = 17;
        public const int NEW_DELEGATE = 50;
        public const int Real_type_suffix = 173;
        public const int ASSIGN = 76;
        public const int HEX_DIGITS = 190;
        public const int EXTENDS = 6;
        public const int OPEN_BRACE = 71;
        public const int METHOD = 15;
        public const int BIT_AND_ASSIGN = 82;

        // delegates
        // delegators

        protected class TypeContext_scope 
        {
            protected internal Dictionary<string,ClassDescriptorSerialized> partialTypes;
        }
        protected Stack TypeContext_stack = new Stack();



            public JavaPrettyPrint(ITreeNodeStream input)
        		: this(input, new RecognizerSharedState()) {
            }

            public JavaPrettyPrint(ITreeNodeStream input, RecognizerSharedState state)
        		: base(input, state) {
                InitializeCyclicDFAs();

                 
            }
            
        protected StringTemplateGroup templateLib =
          new StringTemplateGroup("JavaPrettyPrintTemplates", typeof(AngleBracketTemplateLexer));

        public StringTemplateGroup TemplateLib
        {
         	get { return this.templateLib; }
         	set { this.templateLib = value; }
        }

        /// <summary> Allows convenient multi-value initialization:
        ///  "new STAttrMap().Add(...).Add(...)"
        /// </summary>
        protected class STAttrMap : Hashtable
        {
          public STAttrMap Add(string attrName, object value) 
          {
            base.Add(attrName, value);
            return this;
          }
          public STAttrMap Add(string attrName, int value) 
          {
            base.Add(attrName, value);
            return this;
          }
        }

        override public string[] TokenNames {
    		get { return JavaPrettyPrint.tokenNames; }
        }

        override public string GrammarFileName {
    		get { return "/project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g"; }
        }



            public bool IsLast { get; set; }
            public int EmittedCommentTokenIdx { get; set; }
            // If top level is partial then this will contain the components so that we can mere with other parts down the line
            public ClassDescriptorSerialized PartialDescriptor { get; set; }

        	protected string convertToJavaDoc(string docComment) {
        		string ret = null;
        		try {
                    StringBuilder javaDocStr = new StringBuilder();

        			string xml = "<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<root>" + docComment + "\n</root>";

        			// Encode the XML string in a UTF-8 byte array
        			byte[] encodedString = Encoding.UTF8.GetBytes(xml);

        			// Put the byte array into a stream and rewind it to the beginning
        			MemoryStream ms = new MemoryStream(encodedString);
        			ms.Flush();
        			ms.Position = 0;

        			// Build the XmlDocument from the MemorySteam of UTF-8 encoded bytes
        			XmlDocument xmlDoc = new XmlDocument();
        			xmlDoc.Load(ms);

                    JdXslTrans.Transform(xmlDoc,null,new StringWriter(javaDocStr));
                    ret = javaDocStr.ToString().Trim().Replace("\n", "\n* ");
                    ret = String.Format("/**\n* {0}\n*/", ret);
                }
        		catch (Exception) 
        		{
        			// skip, just return null
        		}
        		return ret;
        	}
            
        	private List<string> collectedComments = null;
            List<string> CollectedComments {
                get {
           
                    List<string> rets = new List<string>(); 
                    if (collectedComments != null) {
        				List<string> savedComments = new List<string>();
        				bool inDoc = false;
        				string xmlDoc = "";
        				foreach (string c in collectedComments) {
        					string line = processComment(c);
        				    if (Cfg.TranslatorMakeJavadocComments && line.TrimStart().StartsWith("///")) {
        						inDoc = true;
        						savedComments.Add(line);
        						xmlDoc += line.TrimStart().Substring(3).TrimStart() + "\n";
        					}
        					else 
        					{
        					    if (inDoc) {
        							string javaDoc = convertToJavaDoc(xmlDoc);
        						    if (javaDoc != null) {
        								rets.Add(javaDoc);
        							} 
                                    else {
                                       rets.AddRange(savedComments); 
                                   }
        							savedComments = new List<string>();
        							inDoc = false;
        							xmlDoc = "";
        						}
        						rets.Add(line);
        					}
                        }
        				if (inDoc) {
                           string javaDoc = convertToJavaDoc(xmlDoc);
                           if (javaDoc != null) {
                              rets.Add(javaDoc);
                           } 
                           else {
                              rets.AddRange(savedComments); 
                           }
        				}
                    }

                    collectedComments = null;
                    
                    return rets;
                }
                set {
                    if (collectedComments == null) 
                        collectedComments = new List<string>();
                    foreach (string c in value) {
                        collectedComments.Add(c);
                    }
                }
            }
                
                // substitute \\u for \u, java searches for unicode in comments so you can have an error in a comment!
                // In time, we will convert C# doc comments to javadoc
                private string processComment(string c)
                {
                    return Regex.Replace(c, "([^\\\\])\\\\u","$1\\\\u");
                }

            // Collect all comments from previous position to endIdx
            // comments are the text from tokens on the Hidden channel
            protected void collectComments(IToken tok) {
                // TokenIndex may be -1, no sweat we just won't collect anything
                collectComments(tok.TokenIndex);
            }
            protected void collectComments(int endIdx) {
                List<string> rets = new List<string>();
                List<IToken> toks = ((CommonTokenStream)this.GetTreeNodeStream().TokenStream).GetTokens(EmittedCommentTokenIdx,endIdx);
                if (toks != null) {
                    foreach (IToken tok in toks) {
                        if (tok.Channel == TokenChannels.Hidden) {
                            rets.Add(new Regex("(\\n|\\r)+").Replace(tok.Text, Environment.NewLine).Trim());
                        }
                    }
                    EmittedCommentTokenIdx = endIdx+1;
                }
                CollectedComments = rets;
            }

            protected void collectComments() {
                collectComments(((CommonTokenStream)this.GetTreeNodeStream().TokenStream).GetTokens().Count - 1);
            }

            protected List<string> escapeJavaString(string rawStr)
            {
                List<string> rets = new List<string>();
                StringBuilder buf = new StringBuilder();
                bool seenDQ = false;
                foreach (char ch in rawStr)
                {
                    switch (ch)
                    {
                    case '\\':
                        buf.Append("\\\\");
                        break;
                    case '"':
                        if (seenDQ)
                            buf.Append("\\\"");
                        seenDQ = !seenDQ;
                        break;
                    case '\'':
                        buf.Append("\\'");
                        break;
                    case '\b':
                        buf.Append("\\b");
                        break;
                    case '\t':
                        buf.Append("\\t");
                        break;
                    case '\n':
                        buf.Append("\\n");
                        rets.Add(buf.ToString());
                        buf = new StringBuilder();
                        break;
                    case '\f':
                        buf.Append("\\f");
                        break;
                    case '\r':
                        buf.Append("\\r");
                        break;
                    default:
                        buf.Append(ch);
                        break;
                    }
                    if (ch != '"')
                        seenDQ = false;
                }
                if (buf.Length > 0) {
                   rets.Add(buf.ToString());
                }
                return rets;
            }

            // keving:  Found this precedence table on the ANTLR site.
            
            /** Encodes precedence of various operators; indexed by token type.
             *  If precedence[op1] > precedence[op2] then op1 should happen
             *  before op2;
             * table from http://www.cs.princeton.edu/introcs/11precedence/ 
             */
            private int[] precedence = new int[tokenNames.Length];
            private bool precedenceInitted = false;
            protected bool IsPrecedenceInitted {
                get { return precedenceInitted; }
                set { precedenceInitted = value; }
            }
            private void initPrecedence()
            {
                if (IsPrecedenceInitted) 
                    return;

                for (int i=0; i<precedence.Length; i++) {
                    // anything but these operators binds super tight
                    // for example METHOD_CALL binds tighter than PLUS
                    precedence[i] =  int.MaxValue;
                }
                precedence[ASSIGN] = 1;
                precedence[LAMBDA] = 1;
                precedence[PLUS_ASSIGN] = 1;
                precedence[MINUS_ASSIGN] = 1;
                precedence[STAR_ASSIGN] = 1;
                precedence[DIV_ASSIGN] = 1;
                precedence[MOD_ASSIGN] = 1;
                precedence[RIGHT_SHIFT_ASSIGN] = 1;
                precedence[LEFT_SHIFT_ASSIGN] = 1;
                precedence[UNSIGNED_RIGHT_SHIFT_ASSIGN] = 1;
                precedence[BIT_AND_ASSIGN] =1;
                precedence[BIT_XOR_ASSIGN] = 1;
                precedence[BIT_OR_ASSIGN] = 1;

                precedence[COND_EXPR] = 2;

                precedence[LOG_OR] = 3;

                precedence[LOG_AND] = 4;

                precedence[BIT_OR] = 5;

                precedence[BIT_XOR] = 6;

                precedence[BIT_AND] = 7;

                precedence[NOT_EQUAL] = 8;
                precedence[EQUAL] = 8;

                precedence[LTHAN] = 9;
                precedence[GT] = 9;
                precedence[LTE] = 9;
                precedence[GTE] = 9;
                precedence[INSTANCEOF] = 9;
                
                precedence[LEFT_SHIFT] = 10;
                precedence[RIGHT_SHIFT] = 10;
                precedence[UNSIGNED_RIGHT_SHIFT] = 10;

                precedence[PLUS] = 11;
                precedence[MINUS] = 11;
         
                precedence[DIV] = 12;
                precedence[MOD] = 12;
                precedence[STAR] = 12;
                 
                precedence[CAST_EXPR] = 13;
                precedence[NEW] = 13;
         
                precedence[PREINC] = 14;
                precedence[PREDEC] = 14;
                precedence[MONONOT] = 14;
                precedence[MONOTWIDDLE] = 14;
                precedence[MONOMINUS] = 14;
                precedence[MONOPLUS] = 14;
         
                precedence[POSTINC] = 15;
                precedence[POSTDEC] = 15;   
                precedence[APPLY] = 16;   
                precedence[INDEX] = 16;   
                precedence[DOT] = 16;   

                IsPrecedenceInitted = true;
             }


            // Compares precedence of op1 and op2. 
            // Returns -1 if op2 < op1
            //	        0 if op1 == op2
            //          1 if op2 > op1
            public int comparePrecedence(IToken op1, IToken op2) {
                return Math.Sign(precedence[op2.Type]-precedence[op1.Type]);
            }
            public int comparePrecedence(IToken op1, int childPrec) {
                return Math.Sign(childPrec-precedence[op1.Type]);
            }
            public int comparePrecedence(int parentPrec, int childPrec) {
                return Math.Sign(childPrec-parentPrec);
            }
            // cleverly remove any remaining ${..} tokens
            public string cleanTemplate(string template) {
                // Are there any markers in the template? Mostly, the answer will be no and we can return tout-de-suite
                string ret = template;
                if (Regex.IsMatch(ret, "\\$\\{[\\w:]+\\}")) {
                    // ${this}.fred -> fred
                    ret = Regex.Replace(ret, "\\$\\{[\\w:]+?\\}\\.", String.Empty);
                    // (a,${var},b) -> (a,b)
                    ret = Regex.Replace(ret, "\\$\\{[\\w:]+?\\}\\s*,", String.Empty);
                    // (a,${var}) -> (a)
                    ret = Regex.Replace(ret, ",\\s*\\$\\{[\\w:]+?\\}", String.Empty);
                    // (${var}) -> ()
                    ret = Regex.Replace(ret, "\\$\\{[\\w:]+?\\}", String.Empty);
                    // ${,?.+,?} ->
                    ret = Regex.Replace(ret, "\\$\\{,?[^\\}]+?,?\\}", String.Empty);
                }
                // If we have a generic type then we can scrub its generic arguments
                // by susbstituting with an empty dictionary, now tidy up the brackets
                // and commas
                ret = Regex.Replace(ret, "\\s*<(\\s*,\\s*)*>\\s*", String.Empty);
                return ret;
            }

            //
            public class ReplacementDescriptor {
                private string replacementText = "";
                private IList<StringTemplate> replacementTextList = null;
                private int replacementPrec = -1;
                public ReplacementDescriptor(string txt, int prec)
                {
                    replacementText = txt;
                    replacementPrec = prec;
                }
                public ReplacementDescriptor(string txt)
                {
                    replacementText = txt;
                    replacementPrec = Int32.MaxValue;
                }

                public ReplacementDescriptor(IList<StringTemplate> txts)
                {
                    replacementTextList = txts == null ? new List<StringTemplate>() : txts;
                    replacementPrec = Int32.MaxValue;
                }

                public string replace(Match m) {
                    // Console.Out.WriteLine("prec: {0} {1} {2} {3}", m.Value, m.Groups.Count, m.Groups[0], m.Groups[1]);
                    if (!String.IsNullOrEmpty(m.Groups[2].Value) && replacementTextList != null) {
                       // pattern has form ${(,)?v](n)(:p)?(,)?}
                       StringBuilder txtBuf = new StringBuilder();
                       bool first = true;
                       for (int idx = Int32.Parse(m.Groups[2].Value); idx < replacementTextList.Count; idx++) {
                          String argTxt = replacementTextList[idx] == null ? String.Empty : replacementTextList[idx].ToString();
                          if (!first)
                             txtBuf.Append(",");
                          txtBuf.Append(argTxt);
                          first = false;
                       }
                       if (txtBuf.Length > 0) {
                          if (!String.IsNullOrEmpty(m.Groups[1].Value))
                             txtBuf.Insert(0,",");
                          if (!String.IsNullOrEmpty(m.Groups[4].Value))
                             txtBuf.Append(",");
                       }
                       return txtBuf.ToString();
                    }
                    else {
                       int patternPrec = (String.IsNullOrEmpty(m.Groups[3].Value) ? -1 : Int32.Parse(m.Groups[3].Value));
                       return String.Format("{0}" + (replacementPrec < patternPrec ? "({1})" : "{1}") + "{2}", 
                                            !String.IsNullOrEmpty(m.Groups[1].Value) ? "," : String.Empty,
                                            replacementText,
                                            !String.IsNullOrEmpty(m.Groups[4].Value) ? "," : String.Empty
                                            );
                    }
                }
            }

            public string fillTemplate(string template, Dictionary<string,ReplacementDescriptor> templateMap) {
                string ret = template;
                // *[ -> < and ]* -> >
                ret = ret.Replace("*[","<").Replace("]*",">");
                foreach (string v in templateMap.Keys) {
                    MatchEvaluator myEvaluator = new MatchEvaluator(templateMap[v].replace);
                    ret = Regex.Replace(ret, "\\$\\{(,)?" + Regex.Escape(v) + "(?:\\](\\d+))?(?::(\\d+))?(,)?}", myEvaluator);
                }
                ret = cleanTemplate(ret);
                return ret;
            }

            protected string mkString(object s) {
               return (s == null ? String.Empty : s.ToString()); 
            }
            
            protected void mergeParts(ClassDescriptorSerialized master, ClassDescriptorSerialized part) {
               // Merge into existing descriptor 
               if (!String.IsNullOrEmpty(part.Comments)) {
                  master.Comments += "\n" + part.Comments;
               }
               if (!String.IsNullOrEmpty(part.EndComments)) {
                  master.EndComments += "\n" + part.EndComments;
               }

               // So that we can set "class" as default an doverride it when we see its an interface
               master.Type = part.Type;

               // Union all attributes
               // we don't push through attributes yet
               master.Atts += part.Atts;

               // Merge modifiers
               foreach (string m in part.Mods) {
                  if (!master.Mods.Contains(m)) {
                     master.Mods.Add(m);
                  }
               }

               if (String.IsNullOrEmpty(master.TypeParameterList)) {
                  master.TypeParameterList = part.TypeParameterList;
               }

               foreach (string m in part.ClassExtends) {
                  if (!master.ClassExtends.Contains(m)) {
                     master.ClassExtends.Add(m);
                  }
               }

               foreach (string m in part.ClassImplements) {
                  if (!master.ClassImplements.Contains(m)) {
                     master.ClassImplements.Add(m);
                  }
               }

               // Union the class bodies
               if (!String.IsNullOrEmpty(part.ClassBody)) {
                  master.ClassBody += "\n" + part.ClassBody;
               }

               foreach (KeyValuePair<String,ClassDescriptorSerialized> d in part.PartialTypes) {
                  if (master.PartialTypes.ContainsKey(d.Key)) {
                     mergeParts(master.PartialTypes[d.Key], part.PartialTypes[d.Key]);
                  }
                  else {
                     master.PartialTypes[d.Key] = part.PartialTypes[d.Key];
                  }
               }

            }

            public StringTemplate emitPackage(ClassDescriptorSerialized part)
            {
                  
               // Pretty print as text
               StringTemplate pkgST = templateLib.GetInstanceOf("package");
               (pkgST).SetAttribute("now", DateTime.Now); 
               (pkgST).SetAttribute("includeDate", Cfg.TranslatorAddTimeStamp); 
               (pkgST).SetAttribute("packageName", part.Package);
               StringTemplate impST = templateLib.GetInstanceOf("import_list");
               (impST).SetAttribute("nss", part.Imports);
               (pkgST).SetAttribute("imports", impST);
               (pkgST).SetAttribute("type", emitPartialType(part));
               (pkgST).SetAttribute("endComments", part.EndComments);
         
               return pkgST;
            }

            public StringTemplate emitPartialType(ClassDescriptorSerialized part)
            {
                  
               // Pretty print as text
               StringTemplate modST = templateLib.GetInstanceOf("modifiers");
               (modST).SetAttribute("mods", part.Mods); 
               StringTemplate serTy = templateLib.GetInstanceOf("class");
               (serTy).SetAttribute("comments", part.Comments); 
               (serTy).SetAttribute("modifiers", modST);
               (serTy).SetAttribute("type", part.Type); 
               (serTy).SetAttribute("name", part.Identifier); 
               (serTy).SetAttribute("typeparams", part.TypeParameterList);
               StringTemplate extTy = templateLib.GetInstanceOf("extends");
               (extTy).SetAttribute("types", part.ClassExtends); 
               (serTy).SetAttribute("extends", extTy); 
               StringTemplate impsTy = templateLib.GetInstanceOf("imps");
               (impsTy).SetAttribute("types", part.ClassImplements); 
               (serTy).SetAttribute("imps", impsTy); 
               (serTy).SetAttribute("body", part.ClassBody); 
               (serTy).SetAttribute("partial_types", emitParts(part.PartialTypes)); 
               (serTy).SetAttribute("end_comments", part.EndComments); 
               return serTy;
            }

            protected StringTemplate emitParts(Dictionary<string, ClassDescriptorSerialized> partialTypes)
            {
                  
               // Pretty print as text
               List<StringTemplate> serParts = new List<StringTemplate>();
               foreach (ClassDescriptorSerialized part in partialTypes.Values) {
                  StringTemplate partST = emitPartialType(part);
                  serParts.Add(partST);
               }
               StringTemplate allParts = templateLib.GetInstanceOf("seplist");
               (allParts).SetAttribute("items", serParts);
               (allParts).SetAttribute("sep", "\n");

               return allParts;
            }



        public class compilation_unit_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "compilation_unit"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:531:8: public compilation_unit : ^( PACKAGE nm= PAYLOAD ( imports )? type_declaration ) -> { PartialDescriptor != null}? -> package(now=DateTime.NowincludeDate=Cfg.TranslatorAddTimeStamppackageName=($nm.text != null && $nm.text.Length > 0 ? $nm.text : null)imports=$imports.sttype=$type_declaration.stendComments= CollectedComments );
        public JavaPrettyPrint.compilation_unit_return compilation_unit() // throws RecognitionException [1]
        {   
            TypeContext_stack.Push(new TypeContext_scope());

            JavaPrettyPrint.compilation_unit_return retval = new JavaPrettyPrint.compilation_unit_return();
            retval.start = input.LT(1);

            CommonTree nm = null;
            JavaPrettyPrint.imports_return imports1 = default(JavaPrettyPrint.imports_return);

            JavaPrettyPrint.type_declaration_return type_declaration2 = default(JavaPrettyPrint.type_declaration_return);



                initPrecedence();
                ((TypeContext_scope)TypeContext_stack.Peek()).partialTypes =  new Dictionary<string,ClassDescriptorSerialized>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:537:1: ( ^( PACKAGE nm= PAYLOAD ( imports )? type_declaration ) -> { PartialDescriptor != null}? -> package(now=DateTime.NowincludeDate=Cfg.TranslatorAddTimeStamppackageName=($nm.text != null && $nm.text.Length > 0 ? $nm.text : null)imports=$imports.sttype=$type_declaration.stendComments= CollectedComments ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:538:5: ^( PACKAGE nm= PAYLOAD ( imports )? type_declaration )
                {
                	Match(input,PACKAGE,FOLLOW_PACKAGE_in_compilation_unit107); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	nm=(CommonTree)Match(input,PAYLOAD,FOLLOW_PAYLOAD_in_compilation_unit111); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:538:26: ( imports )?
                	int alt1 = 2;
                	int LA1_0 = input.LA(1);

                	if ( (LA1_0 == IMPORT) )
                	{
                	    alt1 = 1;
                	}
                	switch (alt1) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:538:26: imports
                	        {
                	        	PushFollow(FOLLOW_imports_in_compilation_unit113);
                	        	imports1 = imports();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_type_declaration_in_compilation_unit116);
                	type_declaration2 = type_declaration();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{

                	           if (IsLast) collectComments(); 
                	           if (PartialDescriptor != null && ((TypeContext_scope)TypeContext_stack.Peek()).partialTypes.Count > 0) {
                	              // Merge into existing descriptor (must only be one)
                	              foreach (ClassDescriptorSerialized part in ((TypeContext_scope)TypeContext_stack.Peek()).partialTypes.Values) {
                	                 mergeParts(PartialDescriptor, part);
                	              }

                	              // If this is the first time we have seen thsi we must ensure Package name is there
                	              PartialDescriptor.Package = (((nm != null) ? nm.Text : null) != null && ((nm != null) ? nm.Text : null).Length > 0 ? ((nm != null) ? nm.Text : null) : null);
                	              if (((imports1 != null) ? imports1.importList : default(List<string>)) != null && ((imports1 != null) ? imports1.importList : default(List<string>)).Count > 0) {
                	                 foreach (string m in ((imports1 != null) ? imports1.importList : default(List<string>))) {
                	                    if (!PartialDescriptor.Imports.Contains(m)) {
                	                       PartialDescriptor.Imports.Add(m);
                	                    }
                	                 }
                	              }
                	              if (IsLast) {
                	                 List<string> endComments = CollectedComments;
                	                 if (endComments != null) {
                	                    foreach (string comment in endComments) {
                	                       PartialDescriptor.EndComments += comment;
                	                    }
                	                 }
                	              }
                	    
                	           }
                	        
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 568:5: -> { PartialDescriptor != null}?
                	  if ( PartialDescriptor != null) {
                	      retval.ST = null;;
                	  }
                	  else // 569:5: -> package(now=DateTime.NowincludeDate=Cfg.TranslatorAddTimeStamppackageName=($nm.text != null && $nm.text.Length > 0 ? $nm.text : null)imports=$imports.sttype=$type_declaration.stendComments= CollectedComments )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("package",
                	    new STAttrMap().Add("now", DateTime.Now).Add("includeDate", Cfg.TranslatorAddTimeStamp).Add("packageName", (((nm != null) ? nm.Text : null) != null && ((nm != null) ? nm.Text : null).Length > 0 ? ((nm != null) ? nm.Text : null) : null)).Add("imports", ((imports1 != null) ? imports1.ST : null)).Add("type", ((type_declaration2 != null) ? type_declaration2.ST : null)).Add("endComments",  CollectedComments ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                TypeContext_stack.Pop();

            }
            return retval;
        }
        // $ANTLR end "compilation_unit"

        public class type_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:575:1: type_declaration : ( class_declaration[true] -> { $class_declaration.st } | interface_declaration -> { $interface_declaration.st } | enum_declaration -> { $enum_declaration.st } | annotation_declaration -> { $annotation_declaration.st });
        public JavaPrettyPrint.type_declaration_return type_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_declaration_return retval = new JavaPrettyPrint.type_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.class_declaration_return class_declaration3 = default(JavaPrettyPrint.class_declaration_return);

            JavaPrettyPrint.interface_declaration_return interface_declaration4 = default(JavaPrettyPrint.interface_declaration_return);

            JavaPrettyPrint.enum_declaration_return enum_declaration5 = default(JavaPrettyPrint.enum_declaration_return);

            JavaPrettyPrint.annotation_declaration_return annotation_declaration6 = default(JavaPrettyPrint.annotation_declaration_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:575:17: ( class_declaration[true] -> { $class_declaration.st } | interface_declaration -> { $interface_declaration.st } | enum_declaration -> { $enum_declaration.st } | annotation_declaration -> { $annotation_declaration.st })
                int alt2 = 4;
                switch ( input.LA(1) ) 
                {
                case CLASS:
                	{
                    alt2 = 1;
                    }
                    break;
                case INTERFACE:
                	{
                    alt2 = 2;
                    }
                    break;
                case ENUM:
                	{
                    alt2 = 3;
                    }
                    break;
                case ANNOTATION:
                	{
                    alt2 = 4;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d2s0 =
                	        new NoViableAltException("", 2, 0, input);

                	    throw nvae_d2s0;
                }

                switch (alt2) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:576:5: class_declaration[true]
                        {
                        	PushFollow(FOLLOW_class_declaration_in_type_declaration242);
                        	class_declaration3 = class_declaration(true);
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 576:29: -> { $class_declaration.st }
                        	  {
                        	      retval.ST =  ((class_declaration3 != null) ? class_declaration3.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:577:4: interface_declaration
                        {
                        	PushFollow(FOLLOW_interface_declaration_in_type_declaration252);
                        	interface_declaration4 = interface_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 577:26: -> { $interface_declaration.st }
                        	  {
                        	      retval.ST =  ((interface_declaration4 != null) ? interface_declaration4.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:578:4: enum_declaration
                        {
                        	PushFollow(FOLLOW_enum_declaration_in_type_declaration261);
                        	enum_declaration5 = enum_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 578:21: -> { $enum_declaration.st }
                        	  {
                        	      retval.ST =  ((enum_declaration5 != null) ? enum_declaration5.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:579:4: annotation_declaration
                        {
                        	PushFollow(FOLLOW_annotation_declaration_in_type_declaration270);
                        	annotation_declaration6 = annotation_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 579:27: -> { $annotation_declaration.st }
                        	  {
                        	      retval.ST =  ((annotation_declaration6 != null) ? annotation_declaration6.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_declaration"

        public class qualified_identifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "qualified_identifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:582:1: qualified_identifier : identifier ( '.' identifier )* ;
        public JavaPrettyPrint.qualified_identifier_return qualified_identifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.qualified_identifier_return retval = new JavaPrettyPrint.qualified_identifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:582:21: ( identifier ( '.' identifier )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:583:2: identifier ( '.' identifier )*
                {
                	PushFollow(FOLLOW_identifier_in_qualified_identifier286);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:583:13: ( '.' identifier )*
                	do 
                	{
                	    int alt3 = 2;
                	    int LA3_0 = input.LA(1);

                	    if ( (LA3_0 == DOT) )
                	    {
                	        alt3 = 1;
                	    }


                	    switch (alt3) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:583:14: '.' identifier
                			    {
                			    	Match(input,DOT,FOLLOW_DOT_in_qualified_identifier289); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_identifier_in_qualified_identifier291);
                			    	identifier();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop3;
                	    }
                	} while (true);

                	loop3:
                		;	// Stops C# compiler whining that label 'loop3' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "qualified_identifier"

        public class namespace_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "namespace_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:584:1: namespace_name : namespace_or_type_name ;
        public JavaPrettyPrint.namespace_name_return namespace_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.namespace_name_return retval = new JavaPrettyPrint.namespace_name_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:585:2: ( namespace_or_type_name )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:585:4: namespace_or_type_name
                {
                	PushFollow(FOLLOW_namespace_or_type_name_in_namespace_name301);
                	namespace_or_type_name();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "namespace_name"

        public class modifiers_return : TreeRuleReturnScope
        {
            public List<string> modList;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:587:1: modifiers returns [List<string> modList] : ( modifier )+ -> modifiers(mods=$modList);
        public JavaPrettyPrint.modifiers_return modifiers() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.modifiers_return retval = new JavaPrettyPrint.modifiers_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.modifier_return modifier7 = default(JavaPrettyPrint.modifier_return);



               retval.modList =  new List<string>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:590:2: ( ( modifier )+ -> modifiers(mods=$modList))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:591:7: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:591:7: ( modifier )+
                	int cnt4 = 0;
                	do 
                	{
                	    int alt4 = 2;
                	    int LA4_0 = input.LA(1);

                	    if ( (LA4_0 == FINAL || (LA4_0 >= PUBLIC && LA4_0 <= PRIVATE) || LA4_0 == STATIC || LA4_0 == 194 || LA4_0 == 197 || (LA4_0 >= 199 && LA4_0 <= 204)) )
                	    {
                	        alt4 = 1;
                	    }


                	    switch (alt4) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:591:8: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_modifiers325);
                			    	modifier7 = modifier();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   retval.modList.Add(((modifier7 != null) ? modifier7.thetext : default(string))); 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt4 >= 1 ) goto loop4;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee4 =
                		                new EarlyExitException(4, input);
                		            throw eee4;
                	    }
                	    cnt4++;
                	} while (true);

                	loop4:
                		;	// Stops C# compiler whining that label 'loop4' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 591:56: -> modifiers(mods=$modList)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("modifiers",
                	    new STAttrMap().Add("mods", retval.modList));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "modifiers"

        public class modifier_return : TreeRuleReturnScope
        {
            public string thetext;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "modifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:593:1: modifier returns [string thetext] : (m= 'new' | m= 'public' | m= 'protected' | m= 'private' | m= 'abstract' | m= 'sealed' | m= 'static' | m= 'readonly' | m= 'volatile' | m= 'extern' | m= 'virtual' | m= 'override' | m= FINAL ) -> string(payload= $thetext );
        public JavaPrettyPrint.modifier_return modifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.modifier_return retval = new JavaPrettyPrint.modifier_return();
            retval.start = input.LT(1);

            CommonTree m = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:594:1: ( (m= 'new' | m= 'public' | m= 'protected' | m= 'private' | m= 'abstract' | m= 'sealed' | m= 'static' | m= 'readonly' | m= 'volatile' | m= 'extern' | m= 'virtual' | m= 'override' | m= FINAL ) -> string(payload= $thetext ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:595:9: (m= 'new' | m= 'public' | m= 'protected' | m= 'private' | m= 'abstract' | m= 'sealed' | m= 'static' | m= 'readonly' | m= 'volatile' | m= 'extern' | m= 'virtual' | m= 'override' | m= FINAL )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:595:9: (m= 'new' | m= 'public' | m= 'protected' | m= 'private' | m= 'abstract' | m= 'sealed' | m= 'static' | m= 'readonly' | m= 'volatile' | m= 'extern' | m= 'virtual' | m= 'override' | m= FINAL )
                	int alt5 = 13;
                	switch ( input.LA(1) ) 
                	{
                	case 197:
                		{
                	    alt5 = 1;
                	    }
                	    break;
                	case PUBLIC:
                		{
                	    alt5 = 2;
                	    }
                	    break;
                	case PROTECTED:
                		{
                	    alt5 = 3;
                	    }
                	    break;
                	case PRIVATE:
                		{
                	    alt5 = 4;
                	    }
                	    break;
                	case 199:
                		{
                	    alt5 = 5;
                	    }
                	    break;
                	case 200:
                		{
                	    alt5 = 6;
                	    }
                	    break;
                	case STATIC:
                		{
                	    alt5 = 7;
                	    }
                	    break;
                	case 201:
                		{
                	    alt5 = 8;
                	    }
                	    break;
                	case 202:
                		{
                	    alt5 = 9;
                	    }
                	    break;
                	case 194:
                		{
                	    alt5 = 10;
                	    }
                	    break;
                	case 203:
                		{
                	    alt5 = 11;
                	    }
                	    break;
                	case 204:
                		{
                	    alt5 = 12;
                	    }
                	    break;
                	case FINAL:
                		{
                	    alt5 = 13;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d5s0 =
                		        new NoViableAltException("", 5, 0, input);

                		    throw nvae_d5s0;
                	}

                	switch (alt5) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:595:10: m= 'new'
                	        {
                	        	m=(CommonTree)Match(input,197,FOLLOW_197_in_modifier362); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "new"; 
                	        	}

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:596:11: m= 'public'
                	        {
                	        	m=(CommonTree)Match(input,PUBLIC,FOLLOW_PUBLIC_in_modifier378); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "public"; 
                	        	}

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:597:11: m= 'protected'
                	        {
                	        	m=(CommonTree)Match(input,PROTECTED,FOLLOW_PROTECTED_in_modifier394); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "protected"; 
                	        	}

                	        }
                	        break;
                	    case 4 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:598:11: m= 'private'
                	        {
                	        	m=(CommonTree)Match(input,PRIVATE,FOLLOW_PRIVATE_in_modifier410); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "private"; 
                	        	}

                	        }
                	        break;
                	    case 5 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:599:11: m= 'abstract'
                	        {
                	        	m=(CommonTree)Match(input,199,FOLLOW_199_in_modifier426); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "abstract"; 
                	        	}

                	        }
                	        break;
                	    case 6 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:600:11: m= 'sealed'
                	        {
                	        	m=(CommonTree)Match(input,200,FOLLOW_200_in_modifier442); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "sealed"; 
                	        	}

                	        }
                	        break;
                	    case 7 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:601:11: m= 'static'
                	        {
                	        	m=(CommonTree)Match(input,STATIC,FOLLOW_STATIC_in_modifier458); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "static"; 
                	        	}

                	        }
                	        break;
                	    case 8 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:602:11: m= 'readonly'
                	        {
                	        	m=(CommonTree)Match(input,201,FOLLOW_201_in_modifier474); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "readonly"; 
                	        	}

                	        }
                	        break;
                	    case 9 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:603:11: m= 'volatile'
                	        {
                	        	m=(CommonTree)Match(input,202,FOLLOW_202_in_modifier490); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "volatile"; 
                	        	}

                	        }
                	        break;
                	    case 10 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:604:11: m= 'extern'
                	        {
                	        	m=(CommonTree)Match(input,194,FOLLOW_194_in_modifier506); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "/* [UNSUPPORTED] 'extern' modifier not supported */"; 
                	        	}

                	        }
                	        break;
                	    case 11 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:605:11: m= 'virtual'
                	        {
                	        	m=(CommonTree)Match(input,203,FOLLOW_203_in_modifier523); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "virtual"; 
                	        	}

                	        }
                	        break;
                	    case 12 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:606:11: m= 'override'
                	        {
                	        	m=(CommonTree)Match(input,204,FOLLOW_204_in_modifier539); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "override"; 
                	        	}

                	        }
                	        break;
                	    case 13 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:607:11: m= FINAL
                	        {
                	        	m=(CommonTree)Match(input,FINAL,FOLLOW_FINAL_in_modifier555); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.thetext =  "final"; 
                	        	}

                	        }
                	        break;

                	}



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 608:9: -> string(payload= $thetext )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload",  retval.thetext ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "modifier"

        public class imports_return : TreeRuleReturnScope
        {
            public List<string> importList;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "imports"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:610:1: imports returns [List<string> importList] : ( importns )+ -> import_list(nss= $importList );
        public JavaPrettyPrint.imports_return imports() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.imports_return retval = new JavaPrettyPrint.imports_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.importns_return importns8 = default(JavaPrettyPrint.importns_return);



                retval.importList =  new List<string>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:613:2: ( ( importns )+ -> import_list(nss= $importList ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:614:4: ( importns )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:614:4: ( importns )+
                	int cnt6 = 0;
                	do 
                	{
                	    int alt6 = 2;
                	    int LA6_0 = input.LA(1);

                	    if ( (LA6_0 == IMPORT) )
                	    {
                	        alt6 = 1;
                	    }


                	    switch (alt6) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:614:5: importns
                			    {
                			    	PushFollow(FOLLOW_importns_in_imports595);
                			    	importns8 = importns();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   retval.importList.Add(((importns8 != null) ? importns8.thetext : default(string))); 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt6 >= 1 ) goto loop6;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee6 =
                		                new EarlyExitException(6, input);
                		            throw eee6;
                	    }
                	    cnt6++;
                	} while (true);

                	loop6:
                		;	// Stops C# compiler whining that label 'loop6' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 614:56: -> import_list(nss= $importList )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("import_list",
                	    new STAttrMap().Add("nss",  retval.importList ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "imports"

        public class importns_return : TreeRuleReturnScope
        {
            public string thetext;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "importns"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:615:1: importns returns [string thetext] : IMPORT PAYLOAD -> import_template(ns= $PAYLOAD.text );
        public JavaPrettyPrint.importns_return importns() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.importns_return retval = new JavaPrettyPrint.importns_return();
            retval.start = input.LT(1);

            CommonTree PAYLOAD9 = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:615:34: ( IMPORT PAYLOAD -> import_template(ns= $PAYLOAD.text ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:616:4: IMPORT PAYLOAD
                {
                	Match(input,IMPORT,FOLLOW_IMPORT_in_importns623); if (state.failed) return retval;
                	PAYLOAD9=(CommonTree)Match(input,PAYLOAD,FOLLOW_PAYLOAD_in_importns625); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.thetext =  ((PAYLOAD9 != null) ? PAYLOAD9.Text : null); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 616:49: -> import_template(ns= $PAYLOAD.text )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("import_template",
                	    new STAttrMap().Add("ns",  ((PAYLOAD9 != null) ? PAYLOAD9.Text : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "importns"

        public class class_member_declaration_return : TreeRuleReturnScope
        {
            public List<string> preComments;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:618:1: class_member_declaration returns [List<string> preComments] : ( ^( CONST ( attributes )? ( modifiers )? type constant_declarators ) | ^( EVENT ( attributes )? ( modifiers )? event_declaration ) | ^( METHOD ( attributes )? ( modifiers )? type member_name ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( formal_parameter_list )? method_body ( exception )* ) -> method(modifiers=$modifiers.sttype=$type.stname= $member_name.st typeparams= $type_parameter_list.st params= $formal_parameter_list.st exceptions= $exception.st bodyIsSemi= $method_body.isSemi body= $method_body.st ) | interface_declaration -> { $interface_declaration.st } | class_declaration[false] -> { $class_declaration.st } | ^( FIELD ( attributes )? ( modifiers )? type field_declaration ) -> field(modifiers=$modifiers.sttype=$type.stfield=$field_declaration.st) | ^( OPERATOR ( attributes )? ( modifiers )? type operator_declaration ) | enum_declaration -> { $enum_declaration.st } | annotation_declaration -> { $annotation_declaration.st } | ^( CONSTRUCTOR ( attributes )? ( modifiers )? identifier ( formal_parameter_list )? block ( exception )* ) -> constructor(modifiers=$modifiers.stname= $identifier.st params= $formal_parameter_list.st exceptions= $exception.stbodyIsSemi= $block.isSemi body= $block.st ) | ^( STATIC_CONSTRUCTOR ( attributes )? ( modifiers )? block ) -> static_constructor(modifiers=$modifiers.stbodyIsSemi= $block.isSemi body= $block.st ));
        public JavaPrettyPrint.class_member_declaration_return class_member_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_member_declaration_return retval = new JavaPrettyPrint.class_member_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_parameter_constraints_clauses_return type_parameter_constraints_clauses10 = default(JavaPrettyPrint.type_parameter_constraints_clauses_return);

            JavaPrettyPrint.modifiers_return modifiers11 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.type_return type12 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.member_name_return member_name13 = default(JavaPrettyPrint.member_name_return);

            JavaPrettyPrint.type_parameter_list_return type_parameter_list14 = default(JavaPrettyPrint.type_parameter_list_return);

            JavaPrettyPrint.formal_parameter_list_return formal_parameter_list15 = default(JavaPrettyPrint.formal_parameter_list_return);

            JavaPrettyPrint.exception_return exception16 = default(JavaPrettyPrint.exception_return);

            JavaPrettyPrint.method_body_return method_body17 = default(JavaPrettyPrint.method_body_return);

            JavaPrettyPrint.interface_declaration_return interface_declaration18 = default(JavaPrettyPrint.interface_declaration_return);

            JavaPrettyPrint.class_declaration_return class_declaration19 = default(JavaPrettyPrint.class_declaration_return);

            JavaPrettyPrint.modifiers_return modifiers20 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.type_return type21 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.field_declaration_return field_declaration22 = default(JavaPrettyPrint.field_declaration_return);

            JavaPrettyPrint.enum_declaration_return enum_declaration23 = default(JavaPrettyPrint.enum_declaration_return);

            JavaPrettyPrint.annotation_declaration_return annotation_declaration24 = default(JavaPrettyPrint.annotation_declaration_return);

            JavaPrettyPrint.modifiers_return modifiers25 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.identifier_return identifier26 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.formal_parameter_list_return formal_parameter_list27 = default(JavaPrettyPrint.formal_parameter_list_return);

            JavaPrettyPrint.exception_return exception28 = default(JavaPrettyPrint.exception_return);

            JavaPrettyPrint.block_return block29 = default(JavaPrettyPrint.block_return);

            JavaPrettyPrint.modifiers_return modifiers30 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.block_return block31 = default(JavaPrettyPrint.block_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:618:60: ( ^( CONST ( attributes )? ( modifiers )? type constant_declarators ) | ^( EVENT ( attributes )? ( modifiers )? event_declaration ) | ^( METHOD ( attributes )? ( modifiers )? type member_name ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( formal_parameter_list )? method_body ( exception )* ) -> method(modifiers=$modifiers.sttype=$type.stname= $member_name.st typeparams= $type_parameter_list.st params= $formal_parameter_list.st exceptions= $exception.st bodyIsSemi= $method_body.isSemi body= $method_body.st ) | interface_declaration -> { $interface_declaration.st } | class_declaration[false] -> { $class_declaration.st } | ^( FIELD ( attributes )? ( modifiers )? type field_declaration ) -> field(modifiers=$modifiers.sttype=$type.stfield=$field_declaration.st) | ^( OPERATOR ( attributes )? ( modifiers )? type operator_declaration ) | enum_declaration -> { $enum_declaration.st } | annotation_declaration -> { $annotation_declaration.st } | ^( CONSTRUCTOR ( attributes )? ( modifiers )? identifier ( formal_parameter_list )? block ( exception )* ) -> constructor(modifiers=$modifiers.stname= $identifier.st params= $formal_parameter_list.st exceptions= $exception.stbodyIsSemi= $block.isSemi body= $block.st ) | ^( STATIC_CONSTRUCTOR ( attributes )? ( modifiers )? block ) -> static_constructor(modifiers=$modifiers.stbodyIsSemi= $block.isSemi body= $block.st ))
                int alt27 = 11;
                switch ( input.LA(1) ) 
                {
                case CONST:
                	{
                    alt27 = 1;
                    }
                    break;
                case EVENT:
                	{
                    alt27 = 2;
                    }
                    break;
                case METHOD:
                	{
                    alt27 = 3;
                    }
                    break;
                case INTERFACE:
                	{
                    alt27 = 4;
                    }
                    break;
                case CLASS:
                	{
                    alt27 = 5;
                    }
                    break;
                case FIELD:
                	{
                    alt27 = 6;
                    }
                    break;
                case OPERATOR:
                	{
                    alt27 = 7;
                    }
                    break;
                case ENUM:
                	{
                    alt27 = 8;
                    }
                    break;
                case ANNOTATION:
                	{
                    alt27 = 9;
                    }
                    break;
                case CONSTRUCTOR:
                	{
                    alt27 = 10;
                    }
                    break;
                case STATIC_CONSTRUCTOR:
                	{
                    alt27 = 11;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d27s0 =
                	        new NoViableAltException("", 27, 0, input);

                	    throw nvae_d27s0;
                }

                switch (alt27) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:619:5: ^( CONST ( attributes )? ( modifiers )? type constant_declarators )
                        {
                        	Match(input,CONST,FOLLOW_CONST_in_class_member_declaration655); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:619:13: ( attributes )?
                        	int alt7 = 2;
                        	int LA7_0 = input.LA(1);

                        	if ( (LA7_0 == ATTRIBUTE) )
                        	{
                        	    alt7 = 1;
                        	}
                        	switch (alt7) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:619:13: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration657);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:619:25: ( modifiers )?
                        	int alt8 = 2;
                        	int LA8_0 = input.LA(1);

                        	if ( (LA8_0 == FINAL || (LA8_0 >= PUBLIC && LA8_0 <= PRIVATE) || LA8_0 == STATIC || LA8_0 == 194 || LA8_0 == 197 || (LA8_0 >= 199 && LA8_0 <= 204)) )
                        	{
                        	    alt8 = 1;
                        	}
                        	switch (alt8) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:619:25: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration660);
                        	        	modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_type_in_class_member_declaration663);
                        	type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}
                        	PushFollow(FOLLOW_constant_declarators_in_class_member_declaration667);
                        	constant_declarators();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:620:7: ^( EVENT ( attributes )? ( modifiers )? event_declaration )
                        {
                        	Match(input,EVENT,FOLLOW_EVENT_in_class_member_declaration677); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:620:15: ( attributes )?
                        	int alt9 = 2;
                        	int LA9_0 = input.LA(1);

                        	if ( (LA9_0 == ATTRIBUTE) )
                        	{
                        	    alt9 = 1;
                        	}
                        	switch (alt9) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:620:15: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration679);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:620:27: ( modifiers )?
                        	int alt10 = 2;
                        	int LA10_0 = input.LA(1);

                        	if ( (LA10_0 == FINAL || (LA10_0 >= PUBLIC && LA10_0 <= PRIVATE) || LA10_0 == STATIC || LA10_0 == 194 || LA10_0 == 197 || (LA10_0 >= 199 && LA10_0 <= 204)) )
                        	{
                        	    alt10 = 1;
                        	}
                        	switch (alt10) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:620:27: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration682);
                        	        	modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}
                        	PushFollow(FOLLOW_event_declaration_in_class_member_declaration687);
                        	event_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:7: ^( METHOD ( attributes )? ( modifiers )? type member_name ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( formal_parameter_list )? method_body ( exception )* )
                        {
                        	Match(input,METHOD,FOLLOW_METHOD_in_class_member_declaration697); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:16: ( attributes )?
                        	int alt11 = 2;
                        	int LA11_0 = input.LA(1);

                        	if ( (LA11_0 == ATTRIBUTE) )
                        	{
                        	    alt11 = 1;
                        	}
                        	switch (alt11) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:16: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration699);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:28: ( modifiers )?
                        	int alt12 = 2;
                        	int LA12_0 = input.LA(1);

                        	if ( (LA12_0 == FINAL || (LA12_0 >= PUBLIC && LA12_0 <= PRIVATE) || LA12_0 == STATIC || LA12_0 == 194 || LA12_0 == 197 || (LA12_0 >= 199 && LA12_0 <= 204)) )
                        	{
                        	    alt12 = 1;
                        	}
                        	switch (alt12) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:28: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration702);
                        	        	modifiers11 = modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_type_in_class_member_declaration705);
                        	type12 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_member_name_in_class_member_declaration707);
                        	member_name13 = member_name();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:56: ( type_parameter_constraints_clauses )?
                        	int alt13 = 2;
                        	int LA13_0 = input.LA(1);

                        	if ( (LA13_0 == TYPE_PARAM_CONSTRAINT) )
                        	{
                        	    alt13 = 1;
                        	}
                        	switch (alt13) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:56: type_parameter_constraints_clauses
                        	        {
                        	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_member_declaration709);
                        	        	type_parameter_constraints_clauses10 = type_parameter_constraints_clauses();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:92: ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )?
                        	int alt14 = 2;
                        	int LA14_0 = input.LA(1);

                        	if ( (LA14_0 == ATTRIBUTE || LA14_0 == IDENTIFIER || (LA14_0 >= ELIF && LA14_0 <= UNDEF) || LA14_0 == 195 || LA14_0 == 221 || (LA14_0 >= 224 && LA14_0 <= 239) || (LA14_0 >= 241 && LA14_0 <= 244) || (LA14_0 >= 247 && LA14_0 <= 250) || LA14_0 == 256 || (LA14_0 >= 263 && LA14_0 <= 264) || LA14_0 == 274 || LA14_0 == 277) )
                        	{
                        	    alt14 = 1;
                        	}
                        	switch (alt14) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:92: type_parameter_list[$type_parameter_constraints_clauses.tpConstraints]
                        	        {
                        	        	PushFollow(FOLLOW_type_parameter_list_in_class_member_declaration712);
                        	        	type_parameter_list14 = type_parameter_list(((type_parameter_constraints_clauses10 != null) ? type_parameter_constraints_clauses10.tpConstraints : default(Dictionary<string,StringTemplate>)));
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:164: ( formal_parameter_list )?
                        	int alt15 = 2;
                        	int LA15_0 = input.LA(1);

                        	if ( (LA15_0 == PARAMS) )
                        	{
                        	    alt15 = 1;
                        	}
                        	switch (alt15) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:621:164: formal_parameter_list
                        	        {
                        	        	PushFollow(FOLLOW_formal_parameter_list_in_class_member_declaration716);
                        	        	formal_parameter_list15 = formal_parameter_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}
                        	PushFollow(FOLLOW_method_body_in_class_member_declaration733);
                        	method_body17 = method_body();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:622:63: ( exception )*
                        	do 
                        	{
                        	    int alt16 = 2;
                        	    int LA16_0 = input.LA(1);

                        	    if ( (LA16_0 == EXCEPTION) )
                        	    {
                        	        alt16 = 1;
                        	    }


                        	    switch (alt16) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:622:63: exception
                        			    {
                        			    	PushFollow(FOLLOW_exception_in_class_member_declaration735);
                        			    	exception16 = exception();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;

                        			    }
                        			    break;

                        			default:
                        			    goto loop16;
                        	    }
                        	} while (true);

                        	loop16:
                        		;	// Stops C# compiler whining that label 'loop16' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 623:7: -> method(modifiers=$modifiers.sttype=$type.stname= $member_name.st typeparams= $type_parameter_list.st params= $formal_parameter_list.st exceptions= $exception.st bodyIsSemi= $method_body.isSemi body= $method_body.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("method",
                        	    new STAttrMap().Add("modifiers", ((modifiers11 != null) ? modifiers11.ST : null)).Add("type", ((type12 != null) ? type12.ST : null)).Add("name",  ((member_name13 != null) ? member_name13.ST : null) ).Add("typeparams",  ((type_parameter_list14 != null) ? type_parameter_list14.ST : null) ).Add("params",  ((formal_parameter_list15 != null) ? formal_parameter_list15.ST : null) ).Add("exceptions",  ((exception16 != null) ? exception16.ST : null) ).Add("bodyIsSemi",  ((method_body17 != null) ? method_body17.isSemi : default(bool)) ).Add("body",  ((method_body17 != null) ? method_body17.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:624:7: interface_declaration
                        {
                        	PushFollow(FOLLOW_interface_declaration_in_class_member_declaration801);
                        	interface_declaration18 = interface_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 624:29: -> { $interface_declaration.st }
                        	  {
                        	      retval.ST =  ((interface_declaration18 != null) ? interface_declaration18.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:625:7: class_declaration[false]
                        {
                        	PushFollow(FOLLOW_class_declaration_in_class_member_declaration813);
                        	class_declaration19 = class_declaration(false);
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 625:32: -> { $class_declaration.st }
                        	  {
                        	      retval.ST =  ((class_declaration19 != null) ? class_declaration19.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:626:7: ^( FIELD ( attributes )? ( modifiers )? type field_declaration )
                        {
                        	Match(input,FIELD,FOLLOW_FIELD_in_class_member_declaration827); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:626:15: ( attributes )?
                        	int alt17 = 2;
                        	int LA17_0 = input.LA(1);

                        	if ( (LA17_0 == ATTRIBUTE) )
                        	{
                        	    alt17 = 1;
                        	}
                        	switch (alt17) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:626:15: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration829);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:626:27: ( modifiers )?
                        	int alt18 = 2;
                        	int LA18_0 = input.LA(1);

                        	if ( (LA18_0 == FINAL || (LA18_0 >= PUBLIC && LA18_0 <= PRIVATE) || LA18_0 == STATIC || LA18_0 == 194 || LA18_0 == 197 || (LA18_0 >= 199 && LA18_0 <= 204)) )
                        	{
                        	    alt18 = 1;
                        	}
                        	switch (alt18) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:626:27: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration832);
                        	        	modifiers20 = modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_type_in_class_member_declaration835);
                        	type21 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}
                        	PushFollow(FOLLOW_field_declaration_in_class_member_declaration839);
                        	field_declaration22 = field_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 626:101: -> field(modifiers=$modifiers.sttype=$type.stfield=$field_declaration.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("field",
                        	    new STAttrMap().Add("modifiers", ((modifiers20 != null) ? modifiers20.ST : null)).Add("type", ((type21 != null) ? type21.ST : null)).Add("field", ((field_declaration22 != null) ? field_declaration22.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:627:7: ^( OPERATOR ( attributes )? ( modifiers )? type operator_declaration )
                        {
                        	Match(input,OPERATOR,FOLLOW_OPERATOR_in_class_member_declaration870); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:627:18: ( attributes )?
                        	int alt19 = 2;
                        	int LA19_0 = input.LA(1);

                        	if ( (LA19_0 == ATTRIBUTE) )
                        	{
                        	    alt19 = 1;
                        	}
                        	switch (alt19) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:627:18: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration872);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:627:30: ( modifiers )?
                        	int alt20 = 2;
                        	int LA20_0 = input.LA(1);

                        	if ( (LA20_0 == FINAL || (LA20_0 >= PUBLIC && LA20_0 <= PRIVATE) || LA20_0 == STATIC || LA20_0 == 194 || LA20_0 == 197 || (LA20_0 >= 199 && LA20_0 <= 204)) )
                        	{
                        	    alt20 = 1;
                        	}
                        	switch (alt20) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:627:30: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration875);
                        	        	modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_type_in_class_member_declaration878);
                        	type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}
                        	PushFollow(FOLLOW_operator_declaration_in_class_member_declaration882);
                        	operator_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:628:7: enum_declaration
                        {
                        	PushFollow(FOLLOW_enum_declaration_in_class_member_declaration891);
                        	enum_declaration23 = enum_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 628:24: -> { $enum_declaration.st }
                        	  {
                        	      retval.ST =  ((enum_declaration23 != null) ? enum_declaration23.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:629:7: annotation_declaration
                        {
                        	PushFollow(FOLLOW_annotation_declaration_in_class_member_declaration903);
                        	annotation_declaration24 = annotation_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 629:30: -> { $annotation_declaration.st }
                        	  {
                        	      retval.ST =  ((annotation_declaration24 != null) ? annotation_declaration24.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:7: ^( CONSTRUCTOR ( attributes )? ( modifiers )? identifier ( formal_parameter_list )? block ( exception )* )
                        {
                        	Match(input,CONSTRUCTOR,FOLLOW_CONSTRUCTOR_in_class_member_declaration916); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:21: ( attributes )?
                        	int alt21 = 2;
                        	int LA21_0 = input.LA(1);

                        	if ( (LA21_0 == ATTRIBUTE) )
                        	{
                        	    alt21 = 1;
                        	}
                        	switch (alt21) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:21: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration918);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:33: ( modifiers )?
                        	int alt22 = 2;
                        	int LA22_0 = input.LA(1);

                        	if ( (LA22_0 == FINAL || (LA22_0 >= PUBLIC && LA22_0 <= PRIVATE) || LA22_0 == STATIC || LA22_0 == 194 || LA22_0 == 197 || (LA22_0 >= 199 && LA22_0 <= 204)) )
                        	{
                        	    alt22 = 1;
                        	}
                        	switch (alt22) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:33: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration921);
                        	        	modifiers25 = modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_identifier_in_class_member_declaration924);
                        	identifier26 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:56: ( formal_parameter_list )?
                        	int alt23 = 2;
                        	int LA23_0 = input.LA(1);

                        	if ( (LA23_0 == PARAMS) )
                        	{
                        	    alt23 = 1;
                        	}
                        	switch (alt23) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:56: formal_parameter_list
                        	        {
                        	        	PushFollow(FOLLOW_formal_parameter_list_in_class_member_declaration927);
                        	        	formal_parameter_list27 = formal_parameter_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}
                        	PushFollow(FOLLOW_block_in_class_member_declaration933);
                        	block29 = block();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:124: ( exception )*
                        	do 
                        	{
                        	    int alt24 = 2;
                        	    int LA24_0 = input.LA(1);

                        	    if ( (LA24_0 == EXCEPTION) )
                        	    {
                        	        alt24 = 1;
                        	    }


                        	    switch (alt24) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:630:124: exception
                        			    {
                        			    	PushFollow(FOLLOW_exception_in_class_member_declaration935);
                        			    	exception28 = exception();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;

                        			    }
                        			    break;

                        			default:
                        			    goto loop24;
                        	    }
                        	} while (true);

                        	loop24:
                        		;	// Stops C# compiler whining that label 'loop24' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 631:8: -> constructor(modifiers=$modifiers.stname= $identifier.st params= $formal_parameter_list.st exceptions= $exception.stbodyIsSemi= $block.isSemi body= $block.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("constructor",
                        	    new STAttrMap().Add("modifiers", ((modifiers25 != null) ? modifiers25.ST : null)).Add("name",  ((identifier26 != null) ? identifier26.ST : null) ).Add("params",  ((formal_parameter_list27 != null) ? formal_parameter_list27.ST : null) ).Add("exceptions",  ((exception28 != null) ? exception28.ST : null)).Add("bodyIsSemi",  ((block29 != null) ? block29.isSemi : default(bool)) ).Add("body",  ((block29 != null) ? block29.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:632:7: ^( STATIC_CONSTRUCTOR ( attributes )? ( modifiers )? block )
                        {
                        	Match(input,STATIC_CONSTRUCTOR,FOLLOW_STATIC_CONSTRUCTOR_in_class_member_declaration991); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:632:28: ( attributes )?
                        	int alt25 = 2;
                        	int LA25_0 = input.LA(1);

                        	if ( (LA25_0 == ATTRIBUTE) )
                        	{
                        	    alt25 = 1;
                        	}
                        	switch (alt25) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:632:28: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_class_member_declaration993);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:632:40: ( modifiers )?
                        	int alt26 = 2;
                        	int LA26_0 = input.LA(1);

                        	if ( (LA26_0 == FINAL || (LA26_0 >= PUBLIC && LA26_0 <= PRIVATE) || LA26_0 == STATIC || LA26_0 == 194 || LA26_0 == 197 || (LA26_0 >= 199 && LA26_0 <= 204)) )
                        	{
                        	    alt26 = 1;
                        	}
                        	switch (alt26) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:632:40: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration996);
                        	        	modifiers30 = modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_block_in_class_member_declaration999);
                        	block31 = block();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 633:8: -> static_constructor(modifiers=$modifiers.stbodyIsSemi= $block.isSemi body= $block.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("static_constructor",
                        	    new STAttrMap().Add("modifiers", ((modifiers30 != null) ? modifiers30.ST : null)).Add("bodyIsSemi",  ((block31 != null) ? block31.isSemi : default(bool)) ).Add("body",  ((block31 != null) ? block31.ST : null) ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_member_declaration"

        public class exception_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "exception"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:636:1: exception : EXCEPTION -> string(payload= $EXCEPTION.text );
        public JavaPrettyPrint.exception_return exception() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.exception_return retval = new JavaPrettyPrint.exception_return();
            retval.start = input.LT(1);

            CommonTree EXCEPTION32 = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:636:10: ( EXCEPTION -> string(payload= $EXCEPTION.text ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:637:5: EXCEPTION
                {
                	EXCEPTION32=(CommonTree)Match(input,EXCEPTION,FOLLOW_EXCEPTION_in_exception1044); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 637:15: -> string(payload= $EXCEPTION.text )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload",  ((EXCEPTION32 != null) ? EXCEPTION32.Text : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "exception"

        public class primary_expression_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "primary_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:639:1: primary_expression returns [int precedence] : ( ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload= fillTemplate($t.st.ToString(), templateMap) ) | ^( INDEX expression ( expression_list )? ) -> index(func= $expression.st funcparens= comparePrecedence(precedence[INDEX], $expression.precedence) < 0 args= $expression_list.st ) | ^( APPLY expression ( argument_list )? ) -> application(func= $expression.st funcparens= comparePrecedence(precedence[APPLY], $expression.precedence) < 0 args= $argument_list.st ) | ^( (op= POSTINC | op= POSTDEC ) expression ) -> op(pre=$expression.stop= $op.token.Text preparens= comparePrecedence($op.token, $expression.precedence) <= 0 ) | primary_expression_start -> { $primary_expression_start.st } | ^( access_operator expression identifier ( generic_argument_list )? ) -> member_access(pre= $expression.st op= $access_operator.st access= $identifier.st access_tyargs= $generic_argument_list.st preparen= comparePrecedence($access_operator.precedence, $expression.precedence) < 0 ) | ^( NEW type ( argument_list )? ( object_or_collection_initializer )? ) -> construct(type=$type.stargs=$argument_list.stinits=$object_or_collection_initializer.st) | ^( NEW_DELEGATE type ( argument_list )? class_body ) -> delegate(type=$type.stargs=$argument_list.stbody=$class_body.st) | ^( NEW_ANON_OBJECT anonymous_object_creation_expression ) | sizeof_expression | checked_expression -> { $checked_expression.st } | unchecked_expression -> { $unchecked_expression.st } | default_value_expression -> { $default_value_expression.st } | anonymous_method_expression );
        public JavaPrettyPrint.primary_expression_return primary_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.primary_expression_return retval = new JavaPrettyPrint.primary_expression_return();
            retval.start = input.LT(1);

            CommonTree op = null;
            JavaPrettyPrint.identifier_return t = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.identifier_return k = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.wrapped_return v = default(JavaPrettyPrint.wrapped_return);

            JavaPrettyPrint.expression_return expression33 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.expression_list_return expression_list34 = default(JavaPrettyPrint.expression_list_return);

            JavaPrettyPrint.expression_return expression35 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.argument_list_return argument_list36 = default(JavaPrettyPrint.argument_list_return);

            JavaPrettyPrint.expression_return expression37 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.primary_expression_start_return primary_expression_start38 = default(JavaPrettyPrint.primary_expression_start_return);

            JavaPrettyPrint.access_operator_return access_operator39 = default(JavaPrettyPrint.access_operator_return);

            JavaPrettyPrint.expression_return expression40 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.identifier_return identifier41 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.generic_argument_list_return generic_argument_list42 = default(JavaPrettyPrint.generic_argument_list_return);

            JavaPrettyPrint.type_return type43 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.argument_list_return argument_list44 = default(JavaPrettyPrint.argument_list_return);

            JavaPrettyPrint.object_or_collection_initializer_return object_or_collection_initializer45 = default(JavaPrettyPrint.object_or_collection_initializer_return);

            JavaPrettyPrint.type_return type46 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.argument_list_return argument_list47 = default(JavaPrettyPrint.argument_list_return);

            JavaPrettyPrint.class_body_return class_body48 = default(JavaPrettyPrint.class_body_return);

            JavaPrettyPrint.checked_expression_return checked_expression49 = default(JavaPrettyPrint.checked_expression_return);

            JavaPrettyPrint.unchecked_expression_return unchecked_expression50 = default(JavaPrettyPrint.unchecked_expression_return);

            JavaPrettyPrint.default_value_expression_return default_value_expression51 = default(JavaPrettyPrint.default_value_expression_return);



                retval.precedence =  int.MaxValue;
                Dictionary<string,ReplacementDescriptor> templateMap = new Dictionary<string,ReplacementDescriptor>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:643:2: ( ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload= fillTemplate($t.st.ToString(), templateMap) ) | ^( INDEX expression ( expression_list )? ) -> index(func= $expression.st funcparens= comparePrecedence(precedence[INDEX], $expression.precedence) < 0 args= $expression_list.st ) | ^( APPLY expression ( argument_list )? ) -> application(func= $expression.st funcparens= comparePrecedence(precedence[APPLY], $expression.precedence) < 0 args= $argument_list.st ) | ^( (op= POSTINC | op= POSTDEC ) expression ) -> op(pre=$expression.stop= $op.token.Text preparens= comparePrecedence($op.token, $expression.precedence) <= 0 ) | primary_expression_start -> { $primary_expression_start.st } | ^( access_operator expression identifier ( generic_argument_list )? ) -> member_access(pre= $expression.st op= $access_operator.st access= $identifier.st access_tyargs= $generic_argument_list.st preparen= comparePrecedence($access_operator.precedence, $expression.precedence) < 0 ) | ^( NEW type ( argument_list )? ( object_or_collection_initializer )? ) -> construct(type=$type.stargs=$argument_list.stinits=$object_or_collection_initializer.st) | ^( NEW_DELEGATE type ( argument_list )? class_body ) -> delegate(type=$type.stargs=$argument_list.stbody=$class_body.st) | ^( NEW_ANON_OBJECT anonymous_object_creation_expression ) | sizeof_expression | checked_expression -> { $checked_expression.st } | unchecked_expression -> { $unchecked_expression.st } | default_value_expression -> { $default_value_expression.st } | anonymous_method_expression )
                int alt36 = 14;
                alt36 = dfa36.Predict(input);
                switch (alt36) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:644:7: ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* )
                        {
                        	Match(input,JAVAWRAPPER,FOLLOW_JAVAWRAPPER_in_primary_expression1079); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_identifier_in_primary_expression1083);
                        	t = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:645:19: (k= identifier v= wrapped )*
                        	do 
                        	{
                        	    int alt28 = 2;
                        	    int LA28_0 = input.LA(1);

                        	    if ( (LA28_0 == IDENTIFIER || (LA28_0 >= ELIF && LA28_0 <= UNDEF) || LA28_0 == 195 || LA28_0 == 221 || (LA28_0 >= 224 && LA28_0 <= 239) || (LA28_0 >= 241 && LA28_0 <= 244) || (LA28_0 >= 247 && LA28_0 <= 250) || LA28_0 == 256 || (LA28_0 >= 263 && LA28_0 <= 264) || LA28_0 == 274 || LA28_0 == 277) )
                        	    {
                        	        alt28 = 1;
                        	    }


                        	    switch (alt28) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:645:20: k= identifier v= wrapped
                        			    {
                        			    	PushFollow(FOLLOW_identifier_in_primary_expression1107);
                        			    	k = identifier();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	PushFollow(FOLLOW_wrapped_in_primary_expression1111);
                        			    	v = wrapped();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if ( (state.backtracking==0) )
                        			    	{

                        			    	                           if (((k != null) ? k.ST : null).ToString() == "*")
                        			    	                              templateMap["*"] = new ReplacementDescriptor(((v != null) ? v.ppArgs : default(IList<StringTemplate>))); 
                        			    	                           else
                        			    	                              templateMap[((k != null) ? k.ST : null).ToString()] = new ReplacementDescriptor(((v != null) ? v.ST : null) != null ? ((v != null) ? v.ST : null).ToString() : "/* CS2J: <sorry, untranslated expression> */", ((v != null) ? v.precedence : default(int))); 
                        			    	                         
                        			    	}

                        			    }
                        			    break;

                        			default:
                        			    goto loop28;
                        	    }
                        	} while (true);

                        	loop28:
                        		;	// Stops C# compiler whining that label 'loop28' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 653:14: -> string(payload= fillTemplate($t.st.ToString(), templateMap) )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  fillTemplate(((t != null) ? t.ST : null).ToString(), templateMap) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:654:7: ^( INDEX expression ( expression_list )? )
                        {
                        	Match(input,INDEX,FOLLOW_INDEX_in_primary_expression1193); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_primary_expression1195);
                        	expression33 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:654:26: ( expression_list )?
                        	int alt29 = 2;
                        	int LA29_0 = input.LA(1);

                        	if ( ((LA29_0 >= PARAMS && LA29_0 <= PARAMS_TYPELESS) || (LA29_0 >= MONOPLUS && LA29_0 <= APPLY) || (LA29_0 >= NEW && LA29_0 <= NEW_ANON_OBJECT) || (LA29_0 >= OBJECT && LA29_0 <= THIS) || LA29_0 == NULL_COALESCE || (LA29_0 >= COND_EXPR && LA29_0 <= LEFT_SHIFT) || (LA29_0 >= SUPER && LA29_0 <= LAMBDA) || LA29_0 == CAST_EXPR || LA29_0 == JAVAWRAPPER || (LA29_0 >= BOOL && LA29_0 <= GT) || (LA29_0 >= ELIF && LA29_0 <= UNDEF) || LA29_0 == 195 || LA29_0 == 208 || (LA29_0 >= 214 && LA29_0 <= 219) || LA29_0 == 221 || (LA29_0 >= 224 && LA29_0 <= 239) || (LA29_0 >= 241 && LA29_0 <= 244) || (LA29_0 >= 247 && LA29_0 <= 254) || LA29_0 == 256 || (LA29_0 >= 263 && LA29_0 <= 264) || (LA29_0 >= 274 && LA29_0 <= 277)) )
                        	{
                        	    alt29 = 1;
                        	}
                        	switch (alt29) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:654:26: expression_list
                        	        {
                        	        	PushFollow(FOLLOW_expression_list_in_primary_expression1197);
                        	        	expression_list34 = expression_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[INDEX]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 654:81: -> index(func= $expression.st funcparens= comparePrecedence(precedence[INDEX], $expression.precedence) < 0 args= $expression_list.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("index",
                        	    new STAttrMap().Add("func",  ((expression33 != null) ? expression33.ST : null) ).Add("funcparens",  comparePrecedence(precedence[INDEX], ((expression33 != null) ? expression33.precedence : default(int))) < 0 ).Add("args",  ((expression_list34 != null) ? expression_list34.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:655:7: ^( APPLY expression ( argument_list )? )
                        {
                        	Match(input,APPLY,FOLLOW_APPLY_in_primary_expression1235); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_primary_expression1237);
                        	expression35 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:655:26: ( argument_list )?
                        	int alt30 = 2;
                        	int LA30_0 = input.LA(1);

                        	if ( (LA30_0 == ARGS) )
                        	{
                        	    alt30 = 1;
                        	}
                        	switch (alt30) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:655:26: argument_list
                        	        {
                        	        	PushFollow(FOLLOW_argument_list_in_primary_expression1239);
                        	        	argument_list36 = argument_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[APPLY]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 655:79: -> application(func= $expression.st funcparens= comparePrecedence(precedence[APPLY], $expression.precedence) < 0 args= $argument_list.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("application",
                        	    new STAttrMap().Add("func",  ((expression35 != null) ? expression35.ST : null) ).Add("funcparens",  comparePrecedence(precedence[APPLY], ((expression35 != null) ? expression35.precedence : default(int))) < 0 ).Add("args",  ((argument_list36 != null) ? argument_list36.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:656:7: ^( (op= POSTINC | op= POSTDEC ) expression )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:656:9: (op= POSTINC | op= POSTDEC )
                        	int alt31 = 2;
                        	int LA31_0 = input.LA(1);

                        	if ( (LA31_0 == POSTINC) )
                        	{
                        	    alt31 = 1;
                        	}
                        	else if ( (LA31_0 == POSTDEC) )
                        	{
                        	    alt31 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        	    NoViableAltException nvae_d31s0 =
                        	        new NoViableAltException("", 31, 0, input);

                        	    throw nvae_d31s0;
                        	}
                        	switch (alt31) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:656:10: op= POSTINC
                        	        {
                        	        	op=(CommonTree)Match(input,POSTINC,FOLLOW_POSTINC_in_primary_expression1280); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:656:21: op= POSTDEC
                        	        {
                        	        	op=(CommonTree)Match(input,POSTDEC,FOLLOW_POSTDEC_in_primary_expression1284); if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_primary_expression1287);
                        	expression37 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[op.token.Type]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 657:10: -> op(pre=$expression.stop= $op.token.Text preparens= comparePrecedence($op.token, $expression.precedence) <= 0 )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre", ((expression37 != null) ? expression37.ST : null)).Add("op",  op.token.Text ).Add("preparens",  comparePrecedence(op.token, ((expression37 != null) ? expression37.precedence : default(int))) <= 0 ));
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:658:7: primary_expression_start
                        {
                        	PushFollow(FOLLOW_primary_expression_start_in_primary_expression1328);
                        	primary_expression_start38 = primary_expression_start();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 658:32: -> { $primary_expression_start.st }
                        	  {
                        	      retval.ST =  ((primary_expression_start38 != null) ? primary_expression_start38.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:659:7: ^( access_operator expression identifier ( generic_argument_list )? )
                        {
                        	PushFollow(FOLLOW_access_operator_in_primary_expression1341);
                        	access_operator39 = access_operator();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_primary_expression1343);
                        	expression40 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_identifier_in_primary_expression1345);
                        	identifier41 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:659:47: ( generic_argument_list )?
                        	int alt32 = 2;
                        	int LA32_0 = input.LA(1);

                        	if ( (LA32_0 == LTHAN) )
                        	{
                        	    alt32 = 1;
                        	}
                        	switch (alt32) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:659:47: generic_argument_list
                        	        {
                        	        	PushFollow(FOLLOW_generic_argument_list_in_primary_expression1347);
                        	        	generic_argument_list42 = generic_argument_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((access_operator39 != null) ? access_operator39.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 660:8: -> member_access(pre= $expression.st op= $access_operator.st access= $identifier.st access_tyargs= $generic_argument_list.st preparen= comparePrecedence($access_operator.precedence, $expression.precedence) < 0 )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("member_access",
                        	    new STAttrMap().Add("pre",  ((expression40 != null) ? expression40.ST : null) ).Add("op",  ((access_operator39 != null) ? access_operator39.ST : null) ).Add("access",  ((identifier41 != null) ? identifier41.ST : null) ).Add("access_tyargs",  ((generic_argument_list42 != null) ? generic_argument_list42.ST : null) ).Add("preparen",  comparePrecedence(((access_operator39 != null) ? access_operator39.precedence : default(int)), ((expression40 != null) ? expression40.precedence : default(int))) < 0 ));
                        	  }

                        	}
                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:668:7: ^( NEW type ( argument_list )? ( object_or_collection_initializer )? )
                        {
                        	Match(input,NEW,FOLLOW_NEW_in_primary_expression1421); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_in_primary_expression1423);
                        	type43 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:668:18: ( argument_list )?
                        	int alt33 = 2;
                        	int LA33_0 = input.LA(1);

                        	if ( (LA33_0 == ARGS) )
                        	{
                        	    alt33 = 1;
                        	}
                        	switch (alt33) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:668:18: argument_list
                        	        {
                        	        	PushFollow(FOLLOW_argument_list_in_primary_expression1425);
                        	        	argument_list44 = argument_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:668:33: ( object_or_collection_initializer )?
                        	int alt34 = 2;
                        	int LA34_0 = input.LA(1);

                        	if ( (LA34_0 == OPEN_BRACE) )
                        	{
                        	    alt34 = 1;
                        	}
                        	switch (alt34) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:668:33: object_or_collection_initializer
                        	        {
                        	        	PushFollow(FOLLOW_object_or_collection_initializer_in_primary_expression1428);
                        	        	object_or_collection_initializer45 = object_or_collection_initializer();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[NEW]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 668:102: -> construct(type=$type.stargs=$argument_list.stinits=$object_or_collection_initializer.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("construct",
                        	    new STAttrMap().Add("type", ((type43 != null) ? type43.ST : null)).Add("args", ((argument_list44 != null) ? argument_list44.ST : null)).Add("inits", ((object_or_collection_initializer45 != null) ? object_or_collection_initializer45.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:669:4: ^( NEW_DELEGATE type ( argument_list )? class_body )
                        {
                        	Match(input,NEW_DELEGATE,FOLLOW_NEW_DELEGATE_in_primary_expression1462); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_in_primary_expression1464);
                        	type46 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:669:24: ( argument_list )?
                        	int alt35 = 2;
                        	int LA35_0 = input.LA(1);

                        	if ( (LA35_0 == ARGS) )
                        	{
                        	    alt35 = 1;
                        	}
                        	switch (alt35) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:669:24: argument_list
                        	        {
                        	        	PushFollow(FOLLOW_argument_list_in_primary_expression1466);
                        	        	argument_list47 = argument_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_class_body_in_primary_expression1469);
                        	class_body48 = class_body();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 669:52: -> delegate(type=$type.stargs=$argument_list.stbody=$class_body.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("delegate",
                        	    new STAttrMap().Add("type", ((type46 != null) ? type46.ST : null)).Add("args", ((argument_list47 != null) ? argument_list47.ST : null)).Add("body", ((class_body48 != null) ? class_body48.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:670:4: ^( NEW_ANON_OBJECT anonymous_object_creation_expression )
                        {
                        	Match(input,NEW_ANON_OBJECT,FOLLOW_NEW_ANON_OBJECT_in_primary_expression1500); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_anonymous_object_creation_expression_in_primary_expression1502);
                        	anonymous_object_creation_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:671:4: sizeof_expression
                        {
                        	PushFollow(FOLLOW_sizeof_expression_in_primary_expression1515);
                        	sizeof_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:672:4: checked_expression
                        {
                        	PushFollow(FOLLOW_checked_expression_in_primary_expression1526);
                        	checked_expression49 = checked_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 672:28: -> { $checked_expression.st }
                        	  {
                        	      retval.ST =  ((checked_expression49 != null) ? checked_expression49.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 12 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:673:4: unchecked_expression
                        {
                        	PushFollow(FOLLOW_unchecked_expression_in_primary_expression1548);
                        	unchecked_expression50 = unchecked_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 673:29: -> { $unchecked_expression.st }
                        	  {
                        	      retval.ST =  ((unchecked_expression50 != null) ? unchecked_expression50.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 13 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:674:4: default_value_expression
                        {
                        	PushFollow(FOLLOW_default_value_expression_in_primary_expression1568);
                        	default_value_expression51 = default_value_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 674:30: -> { $default_value_expression.st }
                        	  {
                        	      retval.ST =  ((default_value_expression51 != null) ? default_value_expression51.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 14 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:675:4: anonymous_method_expression
                        {
                        	PushFollow(FOLLOW_anonymous_method_expression_in_primary_expression1584);
                        	anonymous_method_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "primary_expression"

        public class primary_expression_start_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "primary_expression_start"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:695:1: primary_expression_start : ( predefined_type -> { $predefined_type.st } | ( identifier generic_argument_list )=> identifier generic_argument_list -> op(pre= $identifier.st post= $generic_argument_list.st) | i1= identifier -> { $i1.st } | primary_expression_extalias -> unsupported(reason=\"external aliases are not yet supported\"text= $primary_expression_extalias.st ) | 'this' -> string(payload= \"this\" ) | SUPER -> string(payload= \"super\" ) | ^( 'typeof' unbound_type_name ) -> typeof(type= $unbound_type_name.st ) | ^( 'typeof' type ) -> typeof(type= $type.st ) | literal -> { $literal.st });
        public JavaPrettyPrint.primary_expression_start_return primary_expression_start() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.primary_expression_start_return retval = new JavaPrettyPrint.primary_expression_start_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return i1 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.predefined_type_return predefined_type52 = default(JavaPrettyPrint.predefined_type_return);

            JavaPrettyPrint.identifier_return identifier53 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.generic_argument_list_return generic_argument_list54 = default(JavaPrettyPrint.generic_argument_list_return);

            JavaPrettyPrint.primary_expression_extalias_return primary_expression_extalias55 = default(JavaPrettyPrint.primary_expression_extalias_return);

            JavaPrettyPrint.unbound_type_name_return unbound_type_name56 = default(JavaPrettyPrint.unbound_type_name_return);

            JavaPrettyPrint.type_return type57 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.literal_return literal58 = default(JavaPrettyPrint.literal_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:695:25: ( predefined_type -> { $predefined_type.st } | ( identifier generic_argument_list )=> identifier generic_argument_list -> op(pre= $identifier.st post= $generic_argument_list.st) | i1= identifier -> { $i1.st } | primary_expression_extalias -> unsupported(reason=\"external aliases are not yet supported\"text= $primary_expression_extalias.st ) | 'this' -> string(payload= \"this\" ) | SUPER -> string(payload= \"super\" ) | ^( 'typeof' unbound_type_name ) -> typeof(type= $unbound_type_name.st ) | ^( 'typeof' type ) -> typeof(type= $type.st ) | literal -> { $literal.st })
                int alt37 = 9;
                alt37 = dfa37.Predict(input);
                switch (alt37) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:696:2: predefined_type
                        {
                        	PushFollow(FOLLOW_predefined_type_in_primary_expression_start1614);
                        	predefined_type52 = predefined_type();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 696:21: -> { $predefined_type.st }
                        	  {
                        	      retval.ST =  ((predefined_type52 != null) ? predefined_type52.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:697:4: ( identifier generic_argument_list )=> identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_primary_expression_start1645);
                        	identifier53 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_generic_argument_list_in_primary_expression_start1649);
                        	generic_argument_list54 = generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 697:80: -> op(pre= $identifier.st post= $generic_argument_list.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre",  ((identifier53 != null) ? identifier53.ST : null) ).Add("post",  ((generic_argument_list54 != null) ? generic_argument_list54.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:698:4: i1= identifier
                        {
                        	PushFollow(FOLLOW_identifier_in_primary_expression_start1670);
                        	i1 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 698:18: -> { $i1.st }
                        	  {
                        	      retval.ST =  ((i1 != null) ? i1.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:699:4: primary_expression_extalias
                        {
                        	PushFollow(FOLLOW_primary_expression_extalias_in_primary_expression_start1680);
                        	primary_expression_extalias55 = primary_expression_extalias();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 699:32: -> unsupported(reason=\"external aliases are not yet supported\"text= $primary_expression_extalias.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("unsupported",
                        	    new STAttrMap().Add("reason", "external aliases are not yet supported").Add("text",  ((primary_expression_extalias55 != null) ? primary_expression_extalias55.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:700:4: 'this'
                        {
                        	Match(input,THIS,FOLLOW_THIS_in_primary_expression_start1704); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 700:11: -> string(payload= \"this\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  "this" ));
                        	  }

                        	}
                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:701:4: SUPER
                        {
                        	Match(input,SUPER,FOLLOW_SUPER_in_primary_expression_start1721); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 701:9: -> string(payload= \"super\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  "super" ));
                        	  }

                        	}
                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:703:4: ^( 'typeof' unbound_type_name )
                        {
                        	Match(input,219,FOLLOW_219_in_primary_expression_start1743); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_unbound_type_name_in_primary_expression_start1746);
                        	unbound_type_name56 = unbound_type_name();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 703:36: -> typeof(type= $unbound_type_name.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("typeof",
                        	    new STAttrMap().Add("type",  ((unbound_type_name56 != null) ? unbound_type_name56.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:704:4: ^( 'typeof' type )
                        {
                        	Match(input,219,FOLLOW_219_in_primary_expression_start1764); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_in_primary_expression_start1767);
                        	type57 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 704:23: -> typeof(type= $type.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("typeof",
                        	    new STAttrMap().Add("type",  ((type57 != null) ? type57.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:705:4: literal
                        {
                        	PushFollow(FOLLOW_literal_in_primary_expression_start1784);
                        	literal58 = literal();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 705:12: -> { $literal.st }
                        	  {
                        	      retval.ST =  ((literal58 != null) ? literal58.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "primary_expression_start"

        public class primary_expression_extalias_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "primary_expression_extalias"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:708:1: primary_expression_extalias : ^( '::' i1= identifier i2= identifier ) -> op(pre= $i1.st op= \"::\" post= $i2.st );
        public JavaPrettyPrint.primary_expression_extalias_return primary_expression_extalias() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.primary_expression_extalias_return retval = new JavaPrettyPrint.primary_expression_extalias_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return i1 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.identifier_return i2 = default(JavaPrettyPrint.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:708:28: ( ^( '::' i1= identifier i2= identifier ) -> op(pre= $i1.st op= \"::\" post= $i2.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:709:2: ^( '::' i1= identifier i2= identifier )
                {
                	Match(input,208,FOLLOW_208_in_primary_expression_extalias1799); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_primary_expression_extalias1803);
                	i1 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_primary_expression_extalias1807);
                	i2 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 709:38: -> op(pre= $i1.st op= \"::\" post= $i2.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("op",
                	    new STAttrMap().Add("pre",  ((i1 != null) ? i1.ST : null) ).Add("op",  "::" ).Add("post",  ((i2 != null) ? i2.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "primary_expression_extalias"

        public class primary_expression_part_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "primary_expression_part"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:713:1: primary_expression_part : ( access_identifier | brackets_or_arguments | '++' | '--' );
        public JavaPrettyPrint.primary_expression_part_return primary_expression_part() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.primary_expression_part_return retval = new JavaPrettyPrint.primary_expression_part_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:713:24: ( access_identifier | brackets_or_arguments | '++' | '--' )
                int alt38 = 4;
                switch ( input.LA(1) ) 
                {
                case DOT:
                case PTR:
                	{
                    alt38 = 1;
                    }
                    break;
                case OPEN_BRACKET:
                case LPAREN:
                	{
                    alt38 = 2;
                    }
                    break;
                case 209:
                	{
                    alt38 = 3;
                    }
                    break;
                case 210:
                	{
                    alt38 = 4;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d38s0 =
                	        new NoViableAltException("", 38, 0, input);

                	    throw nvae_d38s0;
                }

                switch (alt38) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:714:3: access_identifier
                        {
                        	PushFollow(FOLLOW_access_identifier_in_primary_expression_part1845);
                        	access_identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:715:4: brackets_or_arguments
                        {
                        	PushFollow(FOLLOW_brackets_or_arguments_in_primary_expression_part1850);
                        	brackets_or_arguments();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:716:4: '++'
                        {
                        	Match(input,209,FOLLOW_209_in_primary_expression_part1856); if (state.failed) return retval;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:717:4: '--'
                        {
                        	Match(input,210,FOLLOW_210_in_primary_expression_part1861); if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "primary_expression_part"

        public class access_identifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "access_identifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:718:1: access_identifier : access_operator type_or_generic ;
        public JavaPrettyPrint.access_identifier_return access_identifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.access_identifier_return retval = new JavaPrettyPrint.access_identifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:718:18: ( access_operator type_or_generic )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:719:2: access_operator type_or_generic
                {
                	PushFollow(FOLLOW_access_operator_in_access_identifier1869);
                	access_operator();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_type_or_generic_in_access_identifier1873);
                	type_or_generic();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "access_identifier"

        public class access_operator_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "access_operator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:720:1: access_operator returns [int precedence] : (op= DOT | op= '->' ) -> string(payload= $op.token.Text );
        public JavaPrettyPrint.access_operator_return access_operator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.access_operator_return retval = new JavaPrettyPrint.access_operator_return();
            retval.start = input.LT(1);

            CommonTree op = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:720:41: ( (op= DOT | op= '->' ) -> string(payload= $op.token.Text ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:721:2: (op= DOT | op= '->' )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:721:2: (op= DOT | op= '->' )
                	int alt39 = 2;
                	int LA39_0 = input.LA(1);

                	if ( (LA39_0 == DOT) )
                	{
                	    alt39 = 1;
                	}
                	else if ( (LA39_0 == PTR) )
                	{
                	    alt39 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d39s0 =
                	        new NoViableAltException("", 39, 0, input);

                	    throw nvae_d39s0;
                	}
                	switch (alt39) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:721:3: op= DOT
                	        {
                	        	op=(CommonTree)Match(input,DOT,FOLLOW_DOT_in_access_operator1888); if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:721:14: op= '->'
                	        {
                	        	op=(CommonTree)Match(input,PTR,FOLLOW_PTR_in_access_operator1896); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   retval.precedence =  precedence[op.token.Type]; 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 721:69: -> string(payload= $op.token.Text )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload",  op.token.Text ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "access_operator"

        public class brackets_or_arguments_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "brackets_or_arguments"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:722:1: brackets_or_arguments : ( brackets | arguments );
        public JavaPrettyPrint.brackets_or_arguments_return brackets_or_arguments() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.brackets_or_arguments_return retval = new JavaPrettyPrint.brackets_or_arguments_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:722:22: ( brackets | arguments )
                int alt40 = 2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0 == OPEN_BRACKET) )
                {
                    alt40 = 1;
                }
                else if ( (LA40_0 == LPAREN) )
                {
                    alt40 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d40s0 =
                        new NoViableAltException("", 40, 0, input);

                    throw nvae_d40s0;
                }
                switch (alt40) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:723:2: brackets
                        {
                        	PushFollow(FOLLOW_brackets_in_brackets_or_arguments1918);
                        	brackets();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:723:13: arguments
                        {
                        	PushFollow(FOLLOW_arguments_in_brackets_or_arguments1922);
                        	arguments();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "brackets_or_arguments"

        public class brackets_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "brackets"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:724:1: brackets : '[' ( expression_list )? ']' ;
        public JavaPrettyPrint.brackets_return brackets() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.brackets_return retval = new JavaPrettyPrint.brackets_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:724:9: ( '[' ( expression_list )? ']' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:725:2: '[' ( expression_list )? ']'
                {
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_brackets1930); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:725:8: ( expression_list )?
                	int alt41 = 2;
                	int LA41_0 = input.LA(1);

                	if ( ((LA41_0 >= PARAMS && LA41_0 <= PARAMS_TYPELESS) || (LA41_0 >= MONOPLUS && LA41_0 <= APPLY) || (LA41_0 >= NEW && LA41_0 <= NEW_ANON_OBJECT) || (LA41_0 >= OBJECT && LA41_0 <= THIS) || LA41_0 == NULL_COALESCE || (LA41_0 >= COND_EXPR && LA41_0 <= LEFT_SHIFT) || (LA41_0 >= SUPER && LA41_0 <= LAMBDA) || LA41_0 == CAST_EXPR || LA41_0 == JAVAWRAPPER || (LA41_0 >= BOOL && LA41_0 <= GT) || (LA41_0 >= ELIF && LA41_0 <= UNDEF) || LA41_0 == 195 || LA41_0 == 208 || (LA41_0 >= 214 && LA41_0 <= 219) || LA41_0 == 221 || (LA41_0 >= 224 && LA41_0 <= 239) || (LA41_0 >= 241 && LA41_0 <= 244) || (LA41_0 >= 247 && LA41_0 <= 254) || LA41_0 == 256 || (LA41_0 >= 263 && LA41_0 <= 264) || (LA41_0 >= 274 && LA41_0 <= 277)) )
                	{
                	    alt41 = 1;
                	}
                	switch (alt41) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:725:8: expression_list
                	        {
                	        	PushFollow(FOLLOW_expression_list_in_brackets1934);
                	        	expression_list();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_brackets1939); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "brackets"

        public class paren_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "paren_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:726:1: paren_expression : '(' expression ')' ;
        public JavaPrettyPrint.paren_expression_return paren_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.paren_expression_return retval = new JavaPrettyPrint.paren_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:726:17: ( '(' expression ')' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:727:2: '(' expression ')'
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_paren_expression1949); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_paren_expression1953);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_paren_expression1957); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "paren_expression"

        public class arguments_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "arguments"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:728:1: arguments : '(' ( argument_list )? ')' ;
        public JavaPrettyPrint.arguments_return arguments() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.arguments_return retval = new JavaPrettyPrint.arguments_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:728:10: ( '(' ( argument_list )? ')' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:729:2: '(' ( argument_list )? ')'
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_arguments1966); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:729:8: ( argument_list )?
                	int alt42 = 2;
                	int LA42_0 = input.LA(1);

                	if ( (LA42_0 == ARGS) )
                	{
                	    alt42 = 1;
                	}
                	switch (alt42) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:729:8: argument_list
                	        {
                	        	PushFollow(FOLLOW_argument_list_in_arguments1970);
                	        	argument_list();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_arguments1975); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "arguments"

        public class argument_list_return : TreeRuleReturnScope
        {
            public IList<StringTemplate> ppArgs;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:730:1: argument_list returns [IList<StringTemplate> ppArgs] : ^( ARGS ( argument )+ ) -> list(items=$ppArgssep=\", \");
        public JavaPrettyPrint.argument_list_return argument_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.argument_list_return retval = new JavaPrettyPrint.argument_list_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.argument_return argument59 = default(JavaPrettyPrint.argument_return);



               retval.ppArgs =  new List<StringTemplate>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:734:1: ( ^( ARGS ( argument )+ ) -> list(items=$ppArgssep=\", \"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:735:2: ^( ARGS ( argument )+ )
                {
                	Match(input,ARGS,FOLLOW_ARGS_in_argument_list1995); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:735:9: ( argument )+
                	int cnt43 = 0;
                	do 
                	{
                	    int alt43 = 2;
                	    int LA43_0 = input.LA(1);

                	    if ( ((LA43_0 >= PARAMS && LA43_0 <= PARAMS_TYPELESS) || (LA43_0 >= MONOPLUS && LA43_0 <= APPLY) || (LA43_0 >= NEW && LA43_0 <= NEW_ANON_OBJECT) || (LA43_0 >= OBJECT && LA43_0 <= THIS) || LA43_0 == NULL_COALESCE || (LA43_0 >= COND_EXPR && LA43_0 <= LEFT_SHIFT) || (LA43_0 >= SUPER && LA43_0 <= LAMBDA) || LA43_0 == CAST_EXPR || LA43_0 == JAVAWRAPPER || (LA43_0 >= BOOL && LA43_0 <= GT) || (LA43_0 >= ELIF && LA43_0 <= UNDEF) || LA43_0 == 195 || LA43_0 == 208 || (LA43_0 >= 212 && LA43_0 <= 219) || LA43_0 == 221 || (LA43_0 >= 224 && LA43_0 <= 239) || (LA43_0 >= 241 && LA43_0 <= 244) || (LA43_0 >= 247 && LA43_0 <= 254) || LA43_0 == 256 || (LA43_0 >= 263 && LA43_0 <= 264) || (LA43_0 >= 274 && LA43_0 <= 277)) )
                	    {
                	        alt43 = 1;
                	    }


                	    switch (alt43) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:735:10: argument
                			    {
                			    	PushFollow(FOLLOW_argument_in_argument_list1998);
                			    	argument59 = argument();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   retval.ppArgs.Add(((argument59 != null) ? argument59.ST : null)); 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt43 >= 1 ) goto loop43;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee43 =
                		                new EarlyExitException(43, input);
                		            throw eee43;
                	    }
                	    cnt43++;
                	} while (true);

                	loop43:
                		;	// Stops C# compiler whining that label 'loop43' has no statements


                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 735:53: -> list(items=$ppArgssep=\", \")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("list",
                	    new STAttrMap().Add("items", retval.ppArgs).Add("sep", ", "));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "argument_list"

        public class argument_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "argument"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:737:1: argument : ( argument_name argument_value | argument_value -> { $argument_value.st });
        public JavaPrettyPrint.argument_return argument() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.argument_return retval = new JavaPrettyPrint.argument_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.argument_value_return argument_value60 = default(JavaPrettyPrint.argument_value_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:737:9: ( argument_name argument_value | argument_value -> { $argument_value.st })
                int alt44 = 2;
                alt44 = dfa44.Predict(input);
                switch (alt44) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:738:2: argument_name argument_value
                        {
                        	PushFollow(FOLLOW_argument_name_in_argument2026);
                        	argument_name();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_argument_value_in_argument2030);
                        	argument_value();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:739:4: argument_value
                        {
                        	PushFollow(FOLLOW_argument_value_in_argument2035);
                        	argument_value60 = argument_value();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 739:19: -> { $argument_value.st }
                        	  {
                        	      retval.ST =  ((argument_value60 != null) ? argument_value60.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "argument"

        public class argument_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "argument_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:740:1: argument_name : argument_name_unsupported -> unsupported(reason= \"named parameters are not yet supported\"text= $argument_name_unsupported.st );
        public JavaPrettyPrint.argument_name_return argument_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.argument_name_return retval = new JavaPrettyPrint.argument_name_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.argument_name_unsupported_return argument_name_unsupported61 = default(JavaPrettyPrint.argument_name_unsupported_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:740:14: ( argument_name_unsupported -> unsupported(reason= \"named parameters are not yet supported\"text= $argument_name_unsupported.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:741:2: argument_name_unsupported
                {
                	PushFollow(FOLLOW_argument_name_unsupported_in_argument_name2046);
                	argument_name_unsupported61 = argument_name_unsupported();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 741:28: -> unsupported(reason= \"named parameters are not yet supported\"text= $argument_name_unsupported.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason",  "named parameters are not yet supported").Add("text",  ((argument_name_unsupported61 != null) ? argument_name_unsupported61.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "argument_name"

        public class argument_name_unsupported_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "argument_name_unsupported"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:742:1: argument_name_unsupported : identifier ':' -> op(pre=$identifier.stop=\":\");
        public JavaPrettyPrint.argument_name_unsupported_return argument_name_unsupported() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.argument_name_unsupported_return retval = new JavaPrettyPrint.argument_name_unsupported_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier62 = default(JavaPrettyPrint.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:742:26: ( identifier ':' -> op(pre=$identifier.stop=\":\"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:743:2: identifier ':'
                {
                	PushFollow(FOLLOW_identifier_in_argument_name_unsupported2070);
                	identifier62 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,211,FOLLOW_211_in_argument_name_unsupported2074); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 743:19: -> op(pre=$identifier.stop=\":\")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("op",
                	    new STAttrMap().Add("pre", ((identifier62 != null) ? identifier62.ST : null)).Add("op", ":"));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "argument_name_unsupported"

        public class argument_value_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "argument_value"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:744:1: argument_value returns [int precedence] : ( expression -> { $expression.st } | ref_variable_reference | 'out' variable_reference -> unsupported(reason=\"out arguments are not yet supported\"text= someText ));
        public JavaPrettyPrint.argument_value_return argument_value() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.argument_value_return retval = new JavaPrettyPrint.argument_value_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression63 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.variable_reference_return variable_reference64 = default(JavaPrettyPrint.variable_reference_return);



                StringTemplate someText = null;
                retval.precedence =  int.MaxValue;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:748:2: ( expression -> { $expression.st } | ref_variable_reference | 'out' variable_reference -> unsupported(reason=\"out arguments are not yet supported\"text= someText ))
                int alt45 = 3;
                switch ( input.LA(1) ) 
                {
                case PARAMS:
                case PARAMS_TYPELESS:
                case MONOPLUS:
                case MONOMINUS:
                case MONONOT:
                case MONOTWIDDLE:
                case MONOSTAR:
                case ADDRESSOF:
                case PREINC:
                case PREDEC:
                case POSTINC:
                case POSTDEC:
                case PARENS:
                case INDEX:
                case APPLY:
                case NEW:
                case NEW_ARRAY:
                case NEW_DELEGATE:
                case NEW_ANON_OBJECT:
                case OBJECT:
                case THIS:
                case NULL_COALESCE:
                case COND_EXPR:
                case RIGHT_SHIFT:
                case INSTANCEOF:
                case LOG_OR:
                case LOG_AND:
                case BIT_OR:
                case BIT_XOR:
                case BIT_AND:
                case NOT_EQUAL:
                case EQUAL:
                case LTHAN:
                case LTE:
                case GTE:
                case LEFT_SHIFT:
                case SUPER:
                case LONGNUMBER:
                case PLUS:
                case MINUS:
                case DIV:
                case MOD:
                case STAR:
                case LAMBDA:
                case CAST_EXPR:
                case JAVAWRAPPER:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case IDENTIFIER:
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                case DOT:
                case PTR:
                case GT:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 208:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 251:
                case 252:
                case 253:
                case 254:
                case 256:
                case 263:
                case 264:
                case 274:
                case 275:
                case 276:
                case 277:
                	{
                    alt45 = 1;
                    }
                    break;
                case 213:
                	{
                    alt45 = 2;
                    }
                    break;
                case 212:
                	{
                    alt45 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d45s0 =
                	        new NoViableAltException("", 45, 0, input);

                	    throw nvae_d45s0;
                }

                switch (alt45) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:749:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_argument_value2106);
                        	expression63 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((expression63 != null) ? expression63.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 749:55: -> { $expression.st }
                        	  {
                        	      retval.ST =  ((expression63 != null) ? expression63.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:750:4: ref_variable_reference
                        {
                        	PushFollow(FOLLOW_ref_variable_reference_in_argument_value2117);
                        	ref_variable_reference();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:751:4: 'out' variable_reference
                        {
                        	Match(input,212,FOLLOW_212_in_argument_value2123); if (state.failed) return retval;
                        	PushFollow(FOLLOW_variable_reference_in_argument_value2127);
                        	variable_reference64 = variable_reference();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   someText = templateLib.GetInstanceOf("op"); 
                        	            (someText).SetAttribute("op", "out"); 
                        	            (someText).SetAttribute("post", ((variable_reference64 != null) ? variable_reference64.ST : null)); 
                        	            (someText).SetAttribute("space", " ");
                        	          
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 756:11: -> unsupported(reason=\"out arguments are not yet supported\"text= someText )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("unsupported",
                        	    new STAttrMap().Add("reason", "out arguments are not yet supported").Add("text",  someText ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "argument_value"

        public class ref_variable_reference_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "ref_variable_reference"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:758:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
        public JavaPrettyPrint.ref_variable_reference_return ref_variable_reference() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.ref_variable_reference_return retval = new JavaPrettyPrint.ref_variable_reference_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:758:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:759:2: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
                {
                	Match(input,213,FOLLOW_213_in_ref_variable_reference2171); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
                	int alt47 = 2;
                	int LA47_0 = input.LA(1);

                	if ( (LA47_0 == LPAREN) && (synpred2_JavaPrettyPrint()) )
                	{
                	    alt47 = 1;
                	}
                	else if ( ((LA47_0 >= PARAMS && LA47_0 <= PARAMS_TYPELESS) || (LA47_0 >= MONOPLUS && LA47_0 <= APPLY) || (LA47_0 >= NEW && LA47_0 <= NEW_ANON_OBJECT) || (LA47_0 >= OBJECT && LA47_0 <= THIS) || LA47_0 == NULL_COALESCE || (LA47_0 >= COND_EXPR && LA47_0 <= LEFT_SHIFT) || (LA47_0 >= SUPER && LA47_0 <= LAMBDA) || LA47_0 == CAST_EXPR || LA47_0 == JAVAWRAPPER || (LA47_0 >= BOOL && LA47_0 <= GT) || (LA47_0 >= ELIF && LA47_0 <= UNDEF) || LA47_0 == 195 || LA47_0 == 208 || (LA47_0 >= 214 && LA47_0 <= 219) || LA47_0 == 221 || (LA47_0 >= 224 && LA47_0 <= 239) || (LA47_0 >= 241 && LA47_0 <= 244) || (LA47_0 >= 247 && LA47_0 <= 254) || LA47_0 == 256 || (LA47_0 >= 263 && LA47_0 <= 264) || (LA47_0 >= 274 && LA47_0 <= 277)) )
                	{
                	    alt47 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d47s0 =
                	        new NoViableAltException("", 47, 0, input);

                	    throw nvae_d47s0;
                	}
                	switch (alt47) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:4: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
                	        {
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_ref_variable_reference2193); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_type_in_ref_variable_reference2197);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_ref_variable_reference2201); if (state.failed) return retval;
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:47: ( ref_variable_reference | variable_reference )
                	        	int alt46 = 2;
                	        	int LA46_0 = input.LA(1);

                	        	if ( (LA46_0 == 213) )
                	        	{
                	        	    alt46 = 1;
                	        	}
                	        	else if ( ((LA46_0 >= PARAMS && LA46_0 <= PARAMS_TYPELESS) || (LA46_0 >= MONOPLUS && LA46_0 <= APPLY) || (LA46_0 >= NEW && LA46_0 <= NEW_ANON_OBJECT) || (LA46_0 >= OBJECT && LA46_0 <= THIS) || LA46_0 == NULL_COALESCE || (LA46_0 >= COND_EXPR && LA46_0 <= LEFT_SHIFT) || (LA46_0 >= SUPER && LA46_0 <= LAMBDA) || LA46_0 == CAST_EXPR || LA46_0 == JAVAWRAPPER || (LA46_0 >= BOOL && LA46_0 <= GT) || (LA46_0 >= ELIF && LA46_0 <= UNDEF) || LA46_0 == 195 || LA46_0 == 208 || (LA46_0 >= 214 && LA46_0 <= 219) || LA46_0 == 221 || (LA46_0 >= 224 && LA46_0 <= 239) || (LA46_0 >= 241 && LA46_0 <= 244) || (LA46_0 >= 247 && LA46_0 <= 254) || LA46_0 == 256 || (LA46_0 >= 263 && LA46_0 <= 264) || (LA46_0 >= 274 && LA46_0 <= 277)) )
                	        	{
                	        	    alt46 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	        	    NoViableAltException nvae_d46s0 =
                	        	        new NoViableAltException("", 46, 0, input);

                	        	    throw nvae_d46s0;
                	        	}
                	        	switch (alt46) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:48: ref_variable_reference
                	        	        {
                	        	        	PushFollow(FOLLOW_ref_variable_reference_in_ref_variable_reference2206);
                	        	        	ref_variable_reference();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:73: variable_reference
                	        	        {
                	        	        	PushFollow(FOLLOW_variable_reference_in_ref_variable_reference2210);
                	        	        	variable_reference();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:762:5: variable_reference
                	        {
                	        	PushFollow(FOLLOW_variable_reference_in_ref_variable_reference2246);
                	        	variable_reference();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "ref_variable_reference"

        public class variable_reference_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variable_reference"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:764:1: variable_reference : expression -> { $expression.st };
        public JavaPrettyPrint.variable_reference_return variable_reference() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variable_reference_return retval = new JavaPrettyPrint.variable_reference_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression65 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:764:19: ( expression -> { $expression.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:765:2: expression
                {
                	PushFollow(FOLLOW_expression_in_variable_reference2256);
                	expression65 = expression();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 765:13: -> { $expression.st }
                	  {
                	      retval.ST =  ((expression65 != null) ? expression65.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variable_reference"

        public class rank_specifiers_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "rank_specifiers"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:766:1: rank_specifiers : (rs+= rank_specifier )+ -> rank_specifiers(rs=$rs);
        public JavaPrettyPrint.rank_specifiers_return rank_specifiers() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.rank_specifiers_return retval = new JavaPrettyPrint.rank_specifiers_return();
            retval.start = input.LT(1);

            List list_rs = null;
            RuleReturnScope rs = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:766:16: ( (rs+= rank_specifier )+ -> rank_specifiers(rs=$rs))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:767:2: (rs+= rank_specifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:767:4: (rs+= rank_specifier )+
                	int cnt48 = 0;
                	do 
                	{
                	    int alt48 = 2;
                	    int LA48_0 = input.LA(1);

                	    if ( (LA48_0 == OPEN_BRACKET) )
                	    {
                	        alt48 = 1;
                	    }


                	    switch (alt48) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:767:4: rs+= rank_specifier
                			    {
                			    	PushFollow(FOLLOW_rank_specifier_in_rank_specifiers2270);
                			    	rs = rank_specifier();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_rs == null) list_rs = new ArrayList();
                			    	list_rs.Add(rs.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt48 >= 1 ) goto loop48;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee48 =
                		                new EarlyExitException(48, input);
                		            throw eee48;
                	    }
                	    cnt48++;
                	} while (true);

                	loop48:
                		;	// Stops C# compiler whining that label 'loop48' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 767:22: -> rank_specifiers(rs=$rs)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("rank_specifiers",
                	    new STAttrMap().Add("rs", list_rs));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "rank_specifiers"

        public class rank_specifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "rank_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:768:1: rank_specifier : '[' ']' -> string(payload=\"[]\");
        public JavaPrettyPrint.rank_specifier_return rank_specifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.rank_specifier_return retval = new JavaPrettyPrint.rank_specifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:768:15: ( '[' ']' -> string(payload=\"[]\"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:769:2: '[' ']'
                {
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_rank_specifier2296); if (state.failed) return retval;
                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_rank_specifier2303); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 769:35: -> string(payload=\"[]\")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload", "[]"));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "rank_specifier"

        public class wrapped_return : TreeRuleReturnScope
        {
            public int precedence;
            public IList<StringTemplate> ppArgs;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "wrapped"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:774:1: wrapped returns [int precedence, IList<StringTemplate> ppArgs] : ( ^( JAVAWRAPPEREXPRESSION expression ) -> { $expression.st } | ^( JAVAWRAPPERARGUMENT argument_value ) -> { $argument_value.st } | ^( JAVAWRAPPERARGUMENTLIST ( argument_list )? ) -> { $argument_list.st } | ^( JAVAWRAPPERTYPE type ) -> { $type.st } | ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload=fillTemplate($t.st.ToString(), templateMap)));
        public JavaPrettyPrint.wrapped_return wrapped() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.wrapped_return retval = new JavaPrettyPrint.wrapped_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return t = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.identifier_return k = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.wrapped_return v = default(JavaPrettyPrint.wrapped_return);

            JavaPrettyPrint.expression_return expression66 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.argument_value_return argument_value67 = default(JavaPrettyPrint.argument_value_return);

            JavaPrettyPrint.argument_list_return argument_list68 = default(JavaPrettyPrint.argument_list_return);

            JavaPrettyPrint.type_return type69 = default(JavaPrettyPrint.type_return);



                retval.precedence =  int.MaxValue;
                retval.ppArgs =  new List<StringTemplate>();
                Dictionary<string,ReplacementDescriptor> templateMap = new Dictionary<string,ReplacementDescriptor>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:779:2: ( ^( JAVAWRAPPEREXPRESSION expression ) -> { $expression.st } | ^( JAVAWRAPPERARGUMENT argument_value ) -> { $argument_value.st } | ^( JAVAWRAPPERARGUMENTLIST ( argument_list )? ) -> { $argument_list.st } | ^( JAVAWRAPPERTYPE type ) -> { $type.st } | ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload=fillTemplate($t.st.ToString(), templateMap)))
                int alt51 = 5;
                switch ( input.LA(1) ) 
                {
                case JAVAWRAPPEREXPRESSION:
                	{
                    alt51 = 1;
                    }
                    break;
                case JAVAWRAPPERARGUMENT:
                	{
                    alt51 = 2;
                    }
                    break;
                case JAVAWRAPPERARGUMENTLIST:
                	{
                    alt51 = 3;
                    }
                    break;
                case JAVAWRAPPERTYPE:
                	{
                    alt51 = 4;
                    }
                    break;
                case JAVAWRAPPER:
                	{
                    alt51 = 5;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d51s0 =
                	        new NoViableAltException("", 51, 0, input);

                	    throw nvae_d51s0;
                }

                switch (alt51) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:780:5: ^( JAVAWRAPPEREXPRESSION expression )
                        {
                        	Match(input,JAVAWRAPPEREXPRESSION,FOLLOW_JAVAWRAPPEREXPRESSION_in_wrapped2337); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_wrapped2339);
                        	expression66 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((expression66 != null) ? expression66.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 780:83: -> { $expression.st }
                        	  {
                        	      retval.ST =  ((expression66 != null) ? expression66.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:781:7: ^( JAVAWRAPPERARGUMENT argument_value )
                        {
                        	Match(input,JAVAWRAPPERARGUMENT,FOLLOW_JAVAWRAPPERARGUMENT_in_wrapped2356); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_argument_value_in_wrapped2358);
                        	argument_value67 = argument_value();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((argument_value67 != null) ? argument_value67.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 781:91: -> { $argument_value.st }
                        	  {
                        	      retval.ST =  ((argument_value67 != null) ? argument_value67.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:782:7: ^( JAVAWRAPPERARGUMENTLIST ( argument_list )? )
                        {
                        	Match(input,JAVAWRAPPERARGUMENTLIST,FOLLOW_JAVAWRAPPERARGUMENTLIST_in_wrapped2375); if (state.failed) return retval;

                        	if ( input.LA(1) == Token.DOWN )
                        	{
                        	    Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:782:33: ( argument_list )?
                        	    int alt49 = 2;
                        	    int LA49_0 = input.LA(1);

                        	    if ( (LA49_0 == ARGS) )
                        	    {
                        	        alt49 = 1;
                        	    }
                        	    switch (alt49) 
                        	    {
                        	        case 1 :
                        	            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:782:34: argument_list
                        	            {
                        	            	PushFollow(FOLLOW_argument_list_in_wrapped2378);
                        	            	argument_list68 = argument_list();
                        	            	state._fsp--;
                        	            	if (state.failed) return retval;
                        	            	if ( (state.backtracking==0) )
                        	            	{
                        	            	   retval.ppArgs =  ((argument_list68 != null) ? argument_list68.ppArgs : default(IList<StringTemplate>)); 
                        	            	}

                        	            }
                        	            break;

                        	    }


                        	    Match(input, Token.UP, null); if (state.failed) return retval;
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 782:89: -> { $argument_list.st }
                        	  {
                        	      retval.ST =  ((argument_list68 != null) ? argument_list68.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:783:7: ^( JAVAWRAPPERTYPE type )
                        {
                        	Match(input,JAVAWRAPPERTYPE,FOLLOW_JAVAWRAPPERTYPE_in_wrapped2398); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_in_wrapped2400);
                        	type69 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 783:31: -> { $type.st }
                        	  {
                        	      retval.ST =  ((type69 != null) ? type69.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:784:7: ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* )
                        {
                        	Match(input,JAVAWRAPPER,FOLLOW_JAVAWRAPPER_in_wrapped2415); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_identifier_in_wrapped2419);
                        	t = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:785:10: (k= identifier v= wrapped )*
                        	do 
                        	{
                        	    int alt50 = 2;
                        	    int LA50_0 = input.LA(1);

                        	    if ( (LA50_0 == IDENTIFIER || (LA50_0 >= ELIF && LA50_0 <= UNDEF) || LA50_0 == 195 || LA50_0 == 221 || (LA50_0 >= 224 && LA50_0 <= 239) || (LA50_0 >= 241 && LA50_0 <= 244) || (LA50_0 >= 247 && LA50_0 <= 250) || LA50_0 == 256 || (LA50_0 >= 263 && LA50_0 <= 264) || LA50_0 == 274 || LA50_0 == 277) )
                        	    {
                        	        alt50 = 1;
                        	    }


                        	    switch (alt50) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:785:11: k= identifier v= wrapped
                        			    {
                        			    	PushFollow(FOLLOW_identifier_in_wrapped2434);
                        			    	k = identifier();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	PushFollow(FOLLOW_wrapped_in_wrapped2438);
                        			    	v = wrapped();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if ( (state.backtracking==0) )
                        			    	{

                        			    	                 if (((k != null) ? k.ST : null).ToString() == "*")
                        			    	                    templateMap["*"] = new ReplacementDescriptor(((v != null) ? v.ppArgs : default(IList<StringTemplate>))); 
                        			    	                 else
                        			    	                    templateMap[((k != null) ? k.ST : null).ToString()] = new ReplacementDescriptor(((v != null) ? v.ST : null) != null ? ((v != null) ? v.ST : null).ToString() : "/* CS2J: <sorry, untranslated expression> */", ((v != null) ? v.precedence : default(int))); 
                        			    	              
                        			    	}

                        			    }
                        			    break;

                        			default:
                        			    goto loop50;
                        	    }
                        	} while (true);

                        	loop50:
                        		;	// Stops C# compiler whining that label 'loop50' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 792:15: -> string(payload=fillTemplate($t.st.ToString(), templateMap))
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", fillTemplate(((t != null) ? t.ST : null).ToString(), templateMap)));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "wrapped"

        public class anonymous_object_creation_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "anonymous_object_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:798:1: anonymous_object_creation_expression : anonymous_object_initializer ;
        public JavaPrettyPrint.anonymous_object_creation_expression_return anonymous_object_creation_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.anonymous_object_creation_expression_return retval = new JavaPrettyPrint.anonymous_object_creation_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:798:37: ( anonymous_object_initializer )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:800:2: anonymous_object_initializer
                {
                	PushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression2498);
                	anonymous_object_initializer();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "anonymous_object_creation_expression"

        public class anonymous_object_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "anonymous_object_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:801:1: anonymous_object_initializer : '{' ( member_declarator_list ( ',' )? )? '}' ;
        public JavaPrettyPrint.anonymous_object_initializer_return anonymous_object_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.anonymous_object_initializer_return retval = new JavaPrettyPrint.anonymous_object_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:801:29: ( '{' ( member_declarator_list ( ',' )? )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:802:2: '{' ( member_declarator_list ( ',' )? )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_anonymous_object_initializer2507); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:802:8: ( member_declarator_list ( ',' )? )?
                	int alt53 = 2;
                	int LA53_0 = input.LA(1);

                	if ( (LA53_0 == OBJECT || LA53_0 == LONGNUMBER || (LA53_0 >= BOOL && LA53_0 <= PTR) || (LA53_0 >= ELIF && LA53_0 <= UNDEF) || LA53_0 == 195 || LA53_0 == 221 || (LA53_0 >= 224 && LA53_0 <= 239) || (LA53_0 >= 241 && LA53_0 <= 244) || (LA53_0 >= 247 && LA53_0 <= 254) || LA53_0 == 256 || (LA53_0 >= 263 && LA53_0 <= 264) || (LA53_0 >= 274 && LA53_0 <= 277)) )
                	{
                	    alt53 = 1;
                	}
                	switch (alt53) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:802:9: member_declarator_list ( ',' )?
                	        {
                	        	PushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer2512);
                	        	member_declarator_list();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:802:34: ( ',' )?
                	        	int alt52 = 2;
                	        	int LA52_0 = input.LA(1);

                	        	if ( (LA52_0 == COMMA) )
                	        	{
                	        	    alt52 = 1;
                	        	}
                	        	switch (alt52) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:802:34: ','
                	        	        {
                	        	        	Match(input,COMMA,FOLLOW_COMMA_in_anonymous_object_initializer2516); if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer2523); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "anonymous_object_initializer"

        public class member_declarator_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "member_declarator_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:803:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
        public JavaPrettyPrint.member_declarator_list_return member_declarator_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.member_declarator_list_return retval = new JavaPrettyPrint.member_declarator_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:803:23: ( member_declarator ( ',' member_declarator )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:804:2: member_declarator ( ',' member_declarator )*
                {
                	PushFollow(FOLLOW_member_declarator_in_member_declarator_list2531);
                	member_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:804:21: ( ',' member_declarator )*
                	do 
                	{
                	    int alt54 = 2;
                	    int LA54_0 = input.LA(1);

                	    if ( (LA54_0 == COMMA) )
                	    {
                	        int LA54_1 = input.LA(2);

                	        if ( (LA54_1 == OBJECT || LA54_1 == LONGNUMBER || (LA54_1 >= BOOL && LA54_1 <= PTR) || (LA54_1 >= ELIF && LA54_1 <= UNDEF) || LA54_1 == 195 || LA54_1 == 221 || (LA54_1 >= 224 && LA54_1 <= 239) || (LA54_1 >= 241 && LA54_1 <= 244) || (LA54_1 >= 247 && LA54_1 <= 254) || LA54_1 == 256 || (LA54_1 >= 263 && LA54_1 <= 264) || (LA54_1 >= 274 && LA54_1 <= 277)) )
                	        {
                	            alt54 = 1;
                	        }


                	    }


                	    switch (alt54) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:804:22: ',' member_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_member_declarator_list2535); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_member_declarator_in_member_declarator_list2537);
                			    	member_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop54;
                	    }
                	} while (true);

                	loop54:
                		;	// Stops C# compiler whining that label 'loop54' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "member_declarator_list"

        public class member_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "member_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:805:1: member_declarator : qid ( '=' expression )? ;
        public JavaPrettyPrint.member_declarator_return member_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.member_declarator_return retval = new JavaPrettyPrint.member_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:805:18: ( qid ( '=' expression )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:806:2: qid ( '=' expression )?
                {
                	PushFollow(FOLLOW_qid_in_member_declarator2549);
                	qid();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:806:8: ( '=' expression )?
                	int alt55 = 2;
                	int LA55_0 = input.LA(1);

                	if ( (LA55_0 == ASSIGN) )
                	{
                	    alt55 = 1;
                	}
                	switch (alt55) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:806:9: '=' expression
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_member_declarator2554); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_expression_in_member_declarator2558);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "member_declarator"

        public class primary_or_array_creation_expression_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "primary_or_array_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:807:1: primary_or_array_creation_expression returns [int precedence] : ( ( array_creation_expression )=> array_creation_expression -> { $array_creation_expression.st } | primary_expression -> { $primary_expression.st });
        public JavaPrettyPrint.primary_or_array_creation_expression_return primary_or_array_creation_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.primary_or_array_creation_expression_return retval = new JavaPrettyPrint.primary_or_array_creation_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.array_creation_expression_return array_creation_expression70 = default(JavaPrettyPrint.array_creation_expression_return);

            JavaPrettyPrint.primary_expression_return primary_expression71 = default(JavaPrettyPrint.primary_expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:807:62: ( ( array_creation_expression )=> array_creation_expression -> { $array_creation_expression.st } | primary_expression -> { $primary_expression.st })
                int alt56 = 2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0 == NEW_ARRAY) && (synpred3_JavaPrettyPrint()) )
                {
                    alt56 = 1;
                }
                else if ( ((LA56_0 >= POSTINC && LA56_0 <= POSTDEC) || (LA56_0 >= INDEX && LA56_0 <= APPLY) || LA56_0 == NEW || (LA56_0 >= NEW_DELEGATE && LA56_0 <= NEW_ANON_OBJECT) || (LA56_0 >= OBJECT && LA56_0 <= THIS) || (LA56_0 >= SUPER && LA56_0 <= LONGNUMBER) || LA56_0 == JAVAWRAPPER || (LA56_0 >= BOOL && LA56_0 <= PTR) || (LA56_0 >= ELIF && LA56_0 <= UNDEF) || LA56_0 == 195 || LA56_0 == 208 || (LA56_0 >= 214 && LA56_0 <= 219) || LA56_0 == 221 || (LA56_0 >= 224 && LA56_0 <= 239) || (LA56_0 >= 241 && LA56_0 <= 244) || (LA56_0 >= 247 && LA56_0 <= 254) || LA56_0 == 256 || (LA56_0 >= 263 && LA56_0 <= 264) || (LA56_0 >= 274 && LA56_0 <= 277)) )
                {
                    alt56 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d56s0 =
                        new NoViableAltException("", 56, 0, input);

                    throw nvae_d56s0;
                }
                switch (alt56) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:808:2: ( array_creation_expression )=> array_creation_expression
                        {
                        	PushFollow(FOLLOW_array_creation_expression_in_primary_or_array_creation_expression2578);
                        	array_creation_expression70 = array_creation_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((array_creation_expression70 != null) ? array_creation_expression70.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 808:117: -> { $array_creation_expression.st }
                        	  {
                        	      retval.ST =  ((array_creation_expression70 != null) ? array_creation_expression70.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:809:4: primary_expression
                        {
                        	PushFollow(FOLLOW_primary_expression_in_primary_or_array_creation_expression2591);
                        	primary_expression71 = primary_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((primary_expression71 != null) ? primary_expression71.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 809:73: -> { $primary_expression.st }
                        	  {
                        	      retval.ST =  ((primary_expression71 != null) ? primary_expression71.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "primary_or_array_creation_expression"

        public class array_creation_expression_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "array_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:812:1: array_creation_expression returns [int precedence] : ^( NEW_ARRAY ( type ( '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )? -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st ) | ai2= array_initializer -> array_construct_nobracks(type= $type.st inits= $ai2.st )) | rank_specifier array_initializer ) ) ;
        public JavaPrettyPrint.array_creation_expression_return array_creation_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.array_creation_expression_return retval = new JavaPrettyPrint.array_creation_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.array_initializer_return ai1 = default(JavaPrettyPrint.array_initializer_return);

            JavaPrettyPrint.array_initializer_return ai2 = default(JavaPrettyPrint.array_initializer_return);

            JavaPrettyPrint.type_return type72 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.expression_list_return expression_list73 = default(JavaPrettyPrint.expression_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:812:51: ( ^( NEW_ARRAY ( type ( '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )? -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st ) | ai2= array_initializer -> array_construct_nobracks(type= $type.st inits= $ai2.st )) | rank_specifier array_initializer ) ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:813:2: ^( NEW_ARRAY ( type ( '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )? -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st ) | ai2= array_initializer -> array_construct_nobracks(type= $type.st inits= $ai2.st )) | rank_specifier array_initializer ) )
                {
                	Match(input,NEW_ARRAY,FOLLOW_NEW_ARRAY_in_array_creation_expression2613); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:3: ( type ( '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )? -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st ) | ai2= array_initializer -> array_construct_nobracks(type= $type.st inits= $ai2.st )) | rank_specifier array_initializer )
                	int alt61 = 2;
                	int LA61_0 = input.LA(1);

                	if ( (LA61_0 == TYPE) )
                	{
                	    alt61 = 1;
                	}
                	else if ( (LA61_0 == OPEN_BRACKET) )
                	{
                	    alt61 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d61s0 =
                	        new NoViableAltException("", 61, 0, input);

                	    throw nvae_d61s0;
                	}
                	switch (alt61) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:4: type ( '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )? -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st ) | ai2= array_initializer -> array_construct_nobracks(type= $type.st inits= $ai2.st ))
                	        {
                	        	PushFollow(FOLLOW_type_in_array_creation_expression2621);
                	        	type72 = type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:11: ( '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )? -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st ) | ai2= array_initializer -> array_construct_nobracks(type= $type.st inits= $ai2.st ))
                	        	int alt60 = 2;
                	        	int LA60_0 = input.LA(1);

                	        	if ( (LA60_0 == OPEN_BRACKET) )
                	        	{
                	        	    alt60 = 1;
                	        	}
                	        	else if ( (LA60_0 == OPEN_BRACE) )
                	        	{
                	        	    alt60 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	        	    NoViableAltException nvae_d60s0 =
                	        	        new NoViableAltException("", 60, 0, input);

                	        	    throw nvae_d60s0;
                	        	}
                	        	switch (alt60) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:12: '[' ( expression_list )? ']' ( rank_specifiers )? (ai1= array_initializer )?
                	        	        {
                	        	        	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_array_creation_expression2626); if (state.failed) return retval;
                	        	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:18: ( expression_list )?
                	        	        	int alt57 = 2;
                	        	        	int LA57_0 = input.LA(1);

                	        	        	if ( ((LA57_0 >= PARAMS && LA57_0 <= PARAMS_TYPELESS) || (LA57_0 >= MONOPLUS && LA57_0 <= APPLY) || (LA57_0 >= NEW && LA57_0 <= NEW_ANON_OBJECT) || (LA57_0 >= OBJECT && LA57_0 <= THIS) || LA57_0 == NULL_COALESCE || (LA57_0 >= COND_EXPR && LA57_0 <= LEFT_SHIFT) || (LA57_0 >= SUPER && LA57_0 <= LAMBDA) || LA57_0 == CAST_EXPR || LA57_0 == JAVAWRAPPER || (LA57_0 >= BOOL && LA57_0 <= GT) || (LA57_0 >= ELIF && LA57_0 <= UNDEF) || LA57_0 == 195 || LA57_0 == 208 || (LA57_0 >= 214 && LA57_0 <= 219) || LA57_0 == 221 || (LA57_0 >= 224 && LA57_0 <= 239) || (LA57_0 >= 241 && LA57_0 <= 244) || (LA57_0 >= 247 && LA57_0 <= 254) || LA57_0 == 256 || (LA57_0 >= 263 && LA57_0 <= 264) || (LA57_0 >= 274 && LA57_0 <= 277)) )
                	        	        	{
                	        	        	    alt57 = 1;
                	        	        	}
                	        	        	switch (alt57) 
                	        	        	{
                	        	        	    case 1 :
                	        	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:18: expression_list
                	        	        	        {
                	        	        	        	PushFollow(FOLLOW_expression_list_in_array_creation_expression2630);
                	        	        	        	expression_list73 = expression_list();
                	        	        	        	state._fsp--;
                	        	        	        	if (state.failed) return retval;

                	        	        	        }
                	        	        	        break;

                	        	        	}

                	        	        	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_array_creation_expression2635); if (state.failed) return retval;
                	        	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:43: ( rank_specifiers )?
                	        	        	int alt58 = 2;
                	        	        	int LA58_0 = input.LA(1);

                	        	        	if ( (LA58_0 == OPEN_BRACKET) )
                	        	        	{
                	        	        	    alt58 = 1;
                	        	        	}
                	        	        	switch (alt58) 
                	        	        	{
                	        	        	    case 1 :
                	        	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:43: rank_specifiers
                	        	        	        {
                	        	        	        	PushFollow(FOLLOW_rank_specifiers_in_array_creation_expression2639);
                	        	        	        	rank_specifiers();
                	        	        	        	state._fsp--;
                	        	        	        	if (state.failed) return retval;

                	        	        	        }
                	        	        	        break;

                	        	        	}

                	        	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:65: (ai1= array_initializer )?
                	        	        	int alt59 = 2;
                	        	        	int LA59_0 = input.LA(1);

                	        	        	if ( (LA59_0 == OPEN_BRACE) )
                	        	        	{
                	        	        	    alt59 = 1;
                	        	        	}
                	        	        	switch (alt59) 
                	        	        	{
                	        	        	    case 1 :
                	        	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:814:65: ai1= array_initializer
                	        	        	        {
                	        	        	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression2646);
                	        	        	        	ai1 = array_initializer();
                	        	        	        	state._fsp--;
                	        	        	        	if (state.failed) return retval;

                	        	        	        }
                	        	        	        break;

                	        	        	}



                	        	        	// TEMPLATE REWRITE
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	  // 814:86: -> array_construct(type= $type.st args= $expression_list.st inits= $ai1.st )
                	        	        	  {
                	        	        	      retval.ST = templateLib.GetInstanceOf("array_construct",
                	        	        	    new STAttrMap().Add("type",  ((type72 != null) ? type72.ST : null) ).Add("args",  ((expression_list73 != null) ? expression_list73.ST : null) ).Add("inits",  ((ai1 != null) ? ai1.ST : null) ));
                	        	        	  }

                	        	        	}
                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:815:7: ai2= array_initializer
                	        	        {
                	        	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression2685);
                	        	        	ai2 = array_initializer();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;


                	        	        	// TEMPLATE REWRITE
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	  // 815:29: -> array_construct_nobracks(type= $type.st inits= $ai2.st )
                	        	        	  {
                	        	        	      retval.ST = templateLib.GetInstanceOf("array_construct_nobracks",
                	        	        	    new STAttrMap().Add("type",  ((type72 != null) ? type72.ST : null) ).Add("inits",  ((ai2 != null) ? ai2.ST : null) ));
                	        	        	  }

                	        	        	}
                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:817:5: rank_specifier array_initializer
                	        {
                	        	PushFollow(FOLLOW_rank_specifier_in_array_creation_expression2716);
                	        	rank_specifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression2719);
                	        	array_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.precedence =  precedence[NEW]; 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "array_creation_expression"

        public class array_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "array_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:820:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' -> array_initializer(init= $variable_initializer_list.st );
        public JavaPrettyPrint.array_initializer_return array_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.array_initializer_return retval = new JavaPrettyPrint.array_initializer_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.variable_initializer_list_return variable_initializer_list74 = default(JavaPrettyPrint.variable_initializer_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:820:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' -> array_initializer(init= $variable_initializer_list.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:821:2: '{' ( variable_initializer_list )? ( ',' )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_array_initializer2741); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:821:8: ( variable_initializer_list )?
                	int alt62 = 2;
                	int LA62_0 = input.LA(1);

                	if ( ((LA62_0 >= PARAMS && LA62_0 <= PARAMS_TYPELESS) || (LA62_0 >= MONOPLUS && LA62_0 <= APPLY) || (LA62_0 >= NEW && LA62_0 <= NEW_ANON_OBJECT) || (LA62_0 >= OBJECT && LA62_0 <= THIS) || LA62_0 == OPEN_BRACE || LA62_0 == NULL_COALESCE || (LA62_0 >= COND_EXPR && LA62_0 <= LEFT_SHIFT) || (LA62_0 >= SUPER && LA62_0 <= LAMBDA) || LA62_0 == CAST_EXPR || LA62_0 == JAVAWRAPPER || (LA62_0 >= BOOL && LA62_0 <= GT) || (LA62_0 >= ELIF && LA62_0 <= UNDEF) || LA62_0 == 195 || LA62_0 == 208 || (LA62_0 >= 214 && LA62_0 <= 219) || LA62_0 == 221 || (LA62_0 >= 224 && LA62_0 <= 239) || (LA62_0 >= 241 && LA62_0 <= 244) || (LA62_0 >= 247 && LA62_0 <= 254) || LA62_0 == 256 || (LA62_0 >= 263 && LA62_0 <= 264) || (LA62_0 >= 274 && LA62_0 <= 277)) )
                	{
                	    alt62 = 1;
                	}
                	switch (alt62) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:821:8: variable_initializer_list
                	        {
                	        	PushFollow(FOLLOW_variable_initializer_list_in_array_initializer2745);
                	        	variable_initializer_list74 = variable_initializer_list();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:821:37: ( ',' )?
                	int alt63 = 2;
                	int LA63_0 = input.LA(1);

                	if ( (LA63_0 == COMMA) )
                	{
                	    alt63 = 1;
                	}
                	switch (alt63) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:821:37: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_array_initializer2750); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_array_initializer2755); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 821:48: -> array_initializer(init= $variable_initializer_list.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("array_initializer",
                	    new STAttrMap().Add("init",  ((variable_initializer_list74 != null) ? variable_initializer_list74.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "array_initializer"

        public class variable_initializer_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variable_initializer_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:822:1: variable_initializer_list : vs+= variable_initializer ( ',' vs+= variable_initializer )* -> seplist(items= $vs sep=\", \");
        public JavaPrettyPrint.variable_initializer_list_return variable_initializer_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variable_initializer_list_return retval = new JavaPrettyPrint.variable_initializer_list_return();
            retval.start = input.LT(1);

            List list_vs = null;
            RuleReturnScope vs = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:822:26: (vs+= variable_initializer ( ',' vs+= variable_initializer )* -> seplist(items= $vs sep=\", \"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:823:2: vs+= variable_initializer ( ',' vs+= variable_initializer )*
                {
                	PushFollow(FOLLOW_variable_initializer_in_variable_initializer_list2775);
                	vs = variable_initializer();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_vs == null) list_vs = new ArrayList();
                	list_vs.Add(vs.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:823:27: ( ',' vs+= variable_initializer )*
                	do 
                	{
                	    int alt64 = 2;
                	    int LA64_0 = input.LA(1);

                	    if ( (LA64_0 == COMMA) )
                	    {
                	        int LA64_1 = input.LA(2);

                	        if ( ((LA64_1 >= PARAMS && LA64_1 <= PARAMS_TYPELESS) || (LA64_1 >= MONOPLUS && LA64_1 <= APPLY) || (LA64_1 >= NEW && LA64_1 <= NEW_ANON_OBJECT) || (LA64_1 >= OBJECT && LA64_1 <= THIS) || LA64_1 == OPEN_BRACE || LA64_1 == NULL_COALESCE || (LA64_1 >= COND_EXPR && LA64_1 <= LEFT_SHIFT) || (LA64_1 >= SUPER && LA64_1 <= LAMBDA) || LA64_1 == CAST_EXPR || LA64_1 == JAVAWRAPPER || (LA64_1 >= BOOL && LA64_1 <= GT) || (LA64_1 >= ELIF && LA64_1 <= UNDEF) || LA64_1 == 195 || LA64_1 == 208 || (LA64_1 >= 214 && LA64_1 <= 219) || LA64_1 == 221 || (LA64_1 >= 224 && LA64_1 <= 239) || (LA64_1 >= 241 && LA64_1 <= 244) || (LA64_1 >= 247 && LA64_1 <= 254) || LA64_1 == 256 || (LA64_1 >= 263 && LA64_1 <= 264) || (LA64_1 >= 274 && LA64_1 <= 277)) )
                	        {
                	            alt64 = 1;
                	        }


                	    }


                	    switch (alt64) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:823:28: ',' vs+= variable_initializer
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_variable_initializer_list2778); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_variable_initializer_in_variable_initializer_list2782);
                			    	vs = variable_initializer();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_vs == null) list_vs = new ArrayList();
                			    	list_vs.Add(vs.Template);


                			    }
                			    break;

                			default:
                			    goto loop64;
                	    }
                	} while (true);

                	loop64:
                		;	// Stops C# compiler whining that label 'loop64' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 823:59: -> seplist(items= $vs sep=\", \")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("seplist",
                	    new STAttrMap().Add("items",  list_vs ).Add("sep", ", "));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variable_initializer_list"

        public class variable_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variable_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:824:1: variable_initializer : ( expression -> { $expression.st } | array_initializer -> { $array_initializer.st });
        public JavaPrettyPrint.variable_initializer_return variable_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variable_initializer_return retval = new JavaPrettyPrint.variable_initializer_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression75 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.array_initializer_return array_initializer76 = default(JavaPrettyPrint.array_initializer_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:824:21: ( expression -> { $expression.st } | array_initializer -> { $array_initializer.st })
                int alt65 = 2;
                int LA65_0 = input.LA(1);

                if ( ((LA65_0 >= PARAMS && LA65_0 <= PARAMS_TYPELESS) || (LA65_0 >= MONOPLUS && LA65_0 <= APPLY) || (LA65_0 >= NEW && LA65_0 <= NEW_ANON_OBJECT) || (LA65_0 >= OBJECT && LA65_0 <= THIS) || LA65_0 == NULL_COALESCE || (LA65_0 >= COND_EXPR && LA65_0 <= LEFT_SHIFT) || (LA65_0 >= SUPER && LA65_0 <= LAMBDA) || LA65_0 == CAST_EXPR || LA65_0 == JAVAWRAPPER || (LA65_0 >= BOOL && LA65_0 <= GT) || (LA65_0 >= ELIF && LA65_0 <= UNDEF) || LA65_0 == 195 || LA65_0 == 208 || (LA65_0 >= 214 && LA65_0 <= 219) || LA65_0 == 221 || (LA65_0 >= 224 && LA65_0 <= 239) || (LA65_0 >= 241 && LA65_0 <= 244) || (LA65_0 >= 247 && LA65_0 <= 254) || LA65_0 == 256 || (LA65_0 >= 263 && LA65_0 <= 264) || (LA65_0 >= 274 && LA65_0 <= 277)) )
                {
                    alt65 = 1;
                }
                else if ( (LA65_0 == OPEN_BRACE) )
                {
                    alt65 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d65s0 =
                        new NoViableAltException("", 65, 0, input);

                    throw nvae_d65s0;
                }
                switch (alt65) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:825:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_variable_initializer2809);
                        	expression75 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 825:13: -> { $expression.st }
                        	  {
                        	      retval.ST =  ((expression75 != null) ? expression75.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:825:37: array_initializer
                        {
                        	PushFollow(FOLLOW_array_initializer_in_variable_initializer2817);
                        	array_initializer76 = array_initializer();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 825:55: -> { $array_initializer.st }
                        	  {
                        	      retval.ST =  ((array_initializer76 != null) ? array_initializer76.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variable_initializer"

        public class sizeof_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "sizeof_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:826:1: sizeof_expression : ^( 'sizeof' unmanaged_type ) ;
        public JavaPrettyPrint.sizeof_expression_return sizeof_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.sizeof_expression_return retval = new JavaPrettyPrint.sizeof_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:826:18: ( ^( 'sizeof' unmanaged_type ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:827:2: ^( 'sizeof' unmanaged_type )
                {
                	Match(input,214,FOLLOW_214_in_sizeof_expression2829); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_unmanaged_type_in_sizeof_expression2832);
                	unmanaged_type();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "sizeof_expression"

        public class checked_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "checked_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:828:1: checked_expression : ^( 'checked' expression ) -> unsupported(reason=\"checked expressions are not supported\"text= someText );
        public JavaPrettyPrint.checked_expression_return checked_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.checked_expression_return retval = new JavaPrettyPrint.checked_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression77 = default(JavaPrettyPrint.expression_return);



                StringTemplate someText = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:831:2: ( ^( 'checked' expression ) -> unsupported(reason=\"checked expressions are not supported\"text= someText ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:832:2: ^( 'checked' expression )
                {
                	Match(input,215,FOLLOW_215_in_checked_expression2848); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_checked_expression2850);
                	expression77 = expression();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   someText = templateLib.GetInstanceOf("op"); 
                	            (someText).SetAttribute("op", "checked"); 
                	            (someText).SetAttribute("post", ((expression77 != null) ? expression77.ST : null)); 
                	            (someText).SetAttribute("space", " ");
                	          
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 837:11: -> unsupported(reason=\"checked expressions are not supported\"text= someText )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason", "checked expressions are not supported").Add("text",  someText ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "checked_expression"

        public class unchecked_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unchecked_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:839:1: unchecked_expression : ^( 'unchecked' expression ) -> unsupported(reason=\"unchecked expressions are not supported\"text= someText );
        public JavaPrettyPrint.unchecked_expression_return unchecked_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unchecked_expression_return retval = new JavaPrettyPrint.unchecked_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression78 = default(JavaPrettyPrint.expression_return);



                StringTemplate someText = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:842:2: ( ^( 'unchecked' expression ) -> unsupported(reason=\"unchecked expressions are not supported\"text= someText ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:843:2: ^( 'unchecked' expression )
                {
                	Match(input,216,FOLLOW_216_in_unchecked_expression2898); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_unchecked_expression2900);
                	expression78 = expression();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   someText = templateLib.GetInstanceOf("op"); 
                	            (someText).SetAttribute("op", "unchecked"); 
                	            (someText).SetAttribute("post", ((expression78 != null) ? expression78.ST : null)); 
                	            (someText).SetAttribute("space", " ");
                	          
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 848:11: -> unsupported(reason=\"unchecked expressions are not supported\"text= someText )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason", "unchecked expressions are not supported").Add("text",  someText ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unchecked_expression"

        public class default_value_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "default_value_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:850:1: default_value_expression : ^( 'default' type ) -> unsupported(reason=\"default expressions are not yet supported\"text= someText );
        public JavaPrettyPrint.default_value_expression_return default_value_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.default_value_expression_return retval = new JavaPrettyPrint.default_value_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type79 = default(JavaPrettyPrint.type_return);



                StringTemplate someText = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:853:2: ( ^( 'default' type ) -> unsupported(reason=\"default expressions are not yet supported\"text= someText ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:854:2: ^( 'default' type )
                {
                	Match(input,217,FOLLOW_217_in_default_value_expression2948); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_default_value_expression2950);
                	type79 = type();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   someText = templateLib.GetInstanceOf("op"); 
                	            (someText).SetAttribute("op", "default"); 
                	            (someText).SetAttribute("post", ((type79 != null) ? type79.ST : null)); 
                	            (someText).SetAttribute("space", " ");
                	          
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 859:11: -> unsupported(reason=\"default expressions are not yet supported\"text= someText )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason", "default expressions are not yet supported").Add("text",  someText ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "default_value_expression"

        public class anonymous_method_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "anonymous_method_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:861:1: anonymous_method_expression : ^( 'delegate' ( formal_parameter_list )? block ) ;
        public JavaPrettyPrint.anonymous_method_expression_return anonymous_method_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.anonymous_method_expression_return retval = new JavaPrettyPrint.anonymous_method_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:861:28: ( ^( 'delegate' ( formal_parameter_list )? block ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:862:2: ^( 'delegate' ( formal_parameter_list )? block )
                {
                	Match(input,218,FOLLOW_218_in_anonymous_method_expression2994); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:862:17: ( formal_parameter_list )?
                	int alt66 = 2;
                	int LA66_0 = input.LA(1);

                	if ( (LA66_0 == PARAMS) )
                	{
                	    alt66 = 1;
                	}
                	switch (alt66) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:862:17: formal_parameter_list
                	        {
                	        	PushFollow(FOLLOW_formal_parameter_list_in_anonymous_method_expression2998);
                	        	formal_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_block_in_anonymous_method_expression3003);
                	block();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "anonymous_method_expression"

        public class object_creation_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "object_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:865:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
        public JavaPrettyPrint.object_creation_expression_return object_creation_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.object_creation_expression_return retval = new JavaPrettyPrint.object_creation_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:865:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:867:2: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
                {
                	PushFollow(FOLLOW_type_in_object_creation_expression3016);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:868:3: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
                	int alt69 = 2;
                	int LA69_0 = input.LA(1);

                	if ( (LA69_0 == LPAREN) )
                	{
                	    alt69 = 1;
                	}
                	else if ( (LA69_0 == OPEN_BRACE) )
                	{
                	    alt69 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d69s0 =
                	        new NoViableAltException("", 69, 0, input);

                	    throw nvae_d69s0;
                	}
                	switch (alt69) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:868:5: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
                	        {
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_object_creation_expression3025); if (state.failed) return retval;
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:868:11: ( argument_list )?
                	        	int alt67 = 2;
                	        	int LA67_0 = input.LA(1);

                	        	if ( (LA67_0 == ARGS) )
                	        	{
                	        	    alt67 = 1;
                	        	}
                	        	switch (alt67) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:868:11: argument_list
                	        	        {
                	        	        	PushFollow(FOLLOW_argument_list_in_object_creation_expression3029);
                	        	        	argument_list();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}

                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression3034); if (state.failed) return retval;
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:868:34: ( object_or_collection_initializer )?
                	        	int alt68 = 2;
                	        	int LA68_0 = input.LA(1);

                	        	if ( (LA68_0 == OPEN_BRACE) )
                	        	{
                	        	    alt68 = 1;
                	        	}
                	        	switch (alt68) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:868:34: object_or_collection_initializer
                	        	        {
                	        	        	PushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression3038);
                	        	        	object_or_collection_initializer();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:869:7: object_or_collection_initializer
                	        {
                	        	PushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression3049);
                	        	object_or_collection_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "object_creation_expression"

        public class object_or_collection_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "object_or_collection_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:871:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
        public JavaPrettyPrint.object_or_collection_initializer_return object_or_collection_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.object_or_collection_initializer_return retval = new JavaPrettyPrint.object_or_collection_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:871:33: ( '{' ( object_initializer | collection_initializer ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:872:2: '{' ( object_initializer | collection_initializer )
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_object_or_collection_initializer3061); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:872:7: ( object_initializer | collection_initializer )
                	int alt70 = 2;
                	alt70 = dfa70.Predict(input);
                	switch (alt70) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:872:8: object_initializer
                	        {
                	        	PushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer3065);
                	        	object_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:873:5: collection_initializer
                	        {
                	        	PushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer3072);
                	        	collection_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "object_or_collection_initializer"

        public class collection_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "collection_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:874:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
        public JavaPrettyPrint.collection_initializer_return collection_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.collection_initializer_return retval = new JavaPrettyPrint.collection_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:874:23: ( element_initializer_list ( ',' )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:875:2: element_initializer_list ( ',' )? '}'
                {
                	PushFollow(FOLLOW_element_initializer_list_in_collection_initializer3082);
                	element_initializer_list();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:875:29: ( ',' )?
                	int alt71 = 2;
                	int LA71_0 = input.LA(1);

                	if ( (LA71_0 == COMMA) )
                	{
                	    alt71 = 1;
                	}
                	switch (alt71) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:875:29: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_collection_initializer3086); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_collection_initializer3091); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "collection_initializer"

        public class element_initializer_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "element_initializer_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:876:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
        public JavaPrettyPrint.element_initializer_list_return element_initializer_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.element_initializer_list_return retval = new JavaPrettyPrint.element_initializer_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:876:25: ( element_initializer ( ',' element_initializer )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:877:2: element_initializer ( ',' element_initializer )*
                {
                	PushFollow(FOLLOW_element_initializer_in_element_initializer_list3100);
                	element_initializer();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:877:23: ( ',' element_initializer )*
                	do 
                	{
                	    int alt72 = 2;
                	    int LA72_0 = input.LA(1);

                	    if ( (LA72_0 == COMMA) )
                	    {
                	        int LA72_1 = input.LA(2);

                	        if ( ((LA72_1 >= PARAMS && LA72_1 <= PARAMS_TYPELESS) || (LA72_1 >= MONOPLUS && LA72_1 <= APPLY) || (LA72_1 >= NEW && LA72_1 <= NEW_ANON_OBJECT) || (LA72_1 >= OBJECT && LA72_1 <= THIS) || LA72_1 == OPEN_BRACE || LA72_1 == NULL_COALESCE || (LA72_1 >= COND_EXPR && LA72_1 <= LEFT_SHIFT) || (LA72_1 >= SUPER && LA72_1 <= LAMBDA) || LA72_1 == CAST_EXPR || LA72_1 == JAVAWRAPPER || (LA72_1 >= BOOL && LA72_1 <= GT) || (LA72_1 >= ELIF && LA72_1 <= UNDEF) || LA72_1 == 195 || LA72_1 == 208 || (LA72_1 >= 214 && LA72_1 <= 219) || LA72_1 == 221 || (LA72_1 >= 224 && LA72_1 <= 239) || (LA72_1 >= 241 && LA72_1 <= 244) || (LA72_1 >= 247 && LA72_1 <= 254) || LA72_1 == 256 || (LA72_1 >= 263 && LA72_1 <= 264) || (LA72_1 >= 274 && LA72_1 <= 277)) )
                	        {
                	            alt72 = 1;
                	        }


                	    }


                	    switch (alt72) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:877:24: ',' element_initializer
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_element_initializer_list3104); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_element_initializer_in_element_initializer_list3106);
                			    	element_initializer();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop72;
                	    }
                	} while (true);

                	loop72:
                		;	// Stops C# compiler whining that label 'loop72' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "element_initializer_list"

        public class element_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "element_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:878:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
        public JavaPrettyPrint.element_initializer_return element_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.element_initializer_return retval = new JavaPrettyPrint.element_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:878:20: ( non_assignment_expression | '{' expression_list '}' )
                int alt73 = 2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0 >= PARAMS && LA73_0 <= PARAMS_TYPELESS) || (LA73_0 >= MONOPLUS && LA73_0 <= APPLY) || (LA73_0 >= NEW && LA73_0 <= NEW_ANON_OBJECT) || (LA73_0 >= OBJECT && LA73_0 <= THIS) || LA73_0 == NULL_COALESCE || (LA73_0 >= COND_EXPR && LA73_0 <= LEFT_SHIFT) || (LA73_0 >= SUPER && LA73_0 <= LAMBDA) || LA73_0 == CAST_EXPR || LA73_0 == JAVAWRAPPER || (LA73_0 >= BOOL && LA73_0 <= GT) || (LA73_0 >= ELIF && LA73_0 <= UNDEF) || LA73_0 == 195 || LA73_0 == 208 || (LA73_0 >= 214 && LA73_0 <= 219) || LA73_0 == 221 || (LA73_0 >= 224 && LA73_0 <= 239) || (LA73_0 >= 241 && LA73_0 <= 244) || (LA73_0 >= 247 && LA73_0 <= 254) || LA73_0 == 256 || (LA73_0 >= 263 && LA73_0 <= 264) || (LA73_0 >= 274 && LA73_0 <= 277)) )
                {
                    alt73 = 1;
                }
                else if ( (LA73_0 == OPEN_BRACE) )
                {
                    alt73 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d73s0 =
                        new NoViableAltException("", 73, 0, input);

                    throw nvae_d73s0;
                }
                switch (alt73) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:879:2: non_assignment_expression
                        {
                        	PushFollow(FOLLOW_non_assignment_expression_in_element_initializer3117);
                        	non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:880:4: '{' expression_list '}'
                        {
                        	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_element_initializer3123); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_list_in_element_initializer3127);
                        	expression_list();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_element_initializer3131); if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "element_initializer"

        public class object_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "object_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:887:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
        public JavaPrettyPrint.object_initializer_return object_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.object_initializer_return retval = new JavaPrettyPrint.object_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:887:19: ( ( member_initializer_list )? ( ',' )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:888:2: ( member_initializer_list )? ( ',' )? '}'
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:888:2: ( member_initializer_list )?
                	int alt74 = 2;
                	int LA74_0 = input.LA(1);

                	if ( (LA74_0 == IDENTIFIER || (LA74_0 >= ELIF && LA74_0 <= UNDEF) || LA74_0 == 195 || LA74_0 == 221 || (LA74_0 >= 224 && LA74_0 <= 239) || (LA74_0 >= 241 && LA74_0 <= 244) || (LA74_0 >= 247 && LA74_0 <= 250) || LA74_0 == 256 || (LA74_0 >= 263 && LA74_0 <= 264) || LA74_0 == 274 || LA74_0 == 277) )
                	{
                	    alt74 = 1;
                	}
                	switch (alt74) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:888:2: member_initializer_list
                	        {
                	        	PushFollow(FOLLOW_member_initializer_list_in_object_initializer3146);
                	        	member_initializer_list();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:888:29: ( ',' )?
                	int alt75 = 2;
                	int LA75_0 = input.LA(1);

                	if ( (LA75_0 == COMMA) )
                	{
                	    alt75 = 1;
                	}
                	switch (alt75) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:888:29: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_object_initializer3151); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_object_initializer3156); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "object_initializer"

        public class member_initializer_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "member_initializer_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:889:1: member_initializer_list : member_initializer ( ',' member_initializer )* ;
        public JavaPrettyPrint.member_initializer_list_return member_initializer_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.member_initializer_list_return retval = new JavaPrettyPrint.member_initializer_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:889:24: ( member_initializer ( ',' member_initializer )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:890:2: member_initializer ( ',' member_initializer )*
                {
                	PushFollow(FOLLOW_member_initializer_in_member_initializer_list3165);
                	member_initializer();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:890:22: ( ',' member_initializer )*
                	do 
                	{
                	    int alt76 = 2;
                	    int LA76_0 = input.LA(1);

                	    if ( (LA76_0 == COMMA) )
                	    {
                	        int LA76_1 = input.LA(2);

                	        if ( (LA76_1 == IDENTIFIER || (LA76_1 >= ELIF && LA76_1 <= UNDEF) || LA76_1 == 195 || LA76_1 == 221 || (LA76_1 >= 224 && LA76_1 <= 239) || (LA76_1 >= 241 && LA76_1 <= 244) || (LA76_1 >= 247 && LA76_1 <= 250) || LA76_1 == 256 || (LA76_1 >= 263 && LA76_1 <= 264) || LA76_1 == 274 || LA76_1 == 277) )
                	        {
                	            alt76 = 1;
                	        }


                	    }


                	    switch (alt76) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:890:23: ',' member_initializer
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_member_initializer_list3169); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_member_initializer_in_member_initializer_list3171);
                			    	member_initializer();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop76;
                	    }
                	} while (true);

                	loop76:
                		;	// Stops C# compiler whining that label 'loop76' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "member_initializer_list"

        public class member_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "member_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:891:1: member_initializer : identifier '=' initializer_value ;
        public JavaPrettyPrint.member_initializer_return member_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.member_initializer_return retval = new JavaPrettyPrint.member_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:891:19: ( identifier '=' initializer_value )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:892:2: identifier '=' initializer_value
                {
                	PushFollow(FOLLOW_identifier_in_member_initializer3182);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_member_initializer3186); if (state.failed) return retval;
                	PushFollow(FOLLOW_initializer_value_in_member_initializer3190);
                	initializer_value();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "member_initializer"

        public class initializer_value_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "initializer_value"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:893:1: initializer_value : ( expression | object_or_collection_initializer );
        public JavaPrettyPrint.initializer_value_return initializer_value() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.initializer_value_return retval = new JavaPrettyPrint.initializer_value_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:893:18: ( expression | object_or_collection_initializer )
                int alt77 = 2;
                int LA77_0 = input.LA(1);

                if ( ((LA77_0 >= PARAMS && LA77_0 <= PARAMS_TYPELESS) || (LA77_0 >= MONOPLUS && LA77_0 <= APPLY) || (LA77_0 >= NEW && LA77_0 <= NEW_ANON_OBJECT) || (LA77_0 >= OBJECT && LA77_0 <= THIS) || LA77_0 == NULL_COALESCE || (LA77_0 >= COND_EXPR && LA77_0 <= LEFT_SHIFT) || (LA77_0 >= SUPER && LA77_0 <= LAMBDA) || LA77_0 == CAST_EXPR || LA77_0 == JAVAWRAPPER || (LA77_0 >= BOOL && LA77_0 <= GT) || (LA77_0 >= ELIF && LA77_0 <= UNDEF) || LA77_0 == 195 || LA77_0 == 208 || (LA77_0 >= 214 && LA77_0 <= 219) || LA77_0 == 221 || (LA77_0 >= 224 && LA77_0 <= 239) || (LA77_0 >= 241 && LA77_0 <= 244) || (LA77_0 >= 247 && LA77_0 <= 254) || LA77_0 == 256 || (LA77_0 >= 263 && LA77_0 <= 264) || (LA77_0 >= 274 && LA77_0 <= 277)) )
                {
                    alt77 = 1;
                }
                else if ( (LA77_0 == OPEN_BRACE) )
                {
                    alt77 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d77s0 =
                        new NoViableAltException("", 77, 0, input);

                    throw nvae_d77s0;
                }
                switch (alt77) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:894:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_initializer_value3199);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:895:4: object_or_collection_initializer
                        {
                        	PushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value3205);
                        	object_or_collection_initializer();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "initializer_value"

        public class unbound_type_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unbound_type_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:903:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
        public JavaPrettyPrint.unbound_type_name_return unbound_type_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unbound_type_name_return retval = new JavaPrettyPrint.unbound_type_name_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:903:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:905:2: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
                {
                	PushFollow(FOLLOW_unbound_type_name_start_in_unbound_type_name3223);
                	unbound_type_name_start();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:906:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
                	do 
                	{
                	    int alt78 = 3;
                	    alt78 = dfa78.Predict(input);
                	    switch (alt78) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:906:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:906:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
                			    	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:906:5: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
                			    	{
                			    		PushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name3242);
                			    		generic_dimension_specifier();
                			    		state._fsp--;
                			    		if (state.failed) return retval;
                			    		PushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name3246);
                			    		unbound_type_name_part();
                			    		state._fsp--;
                			    		if (state.failed) return retval;

                			    	}


                			    }
                			    break;
                			case 2 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:907:5: unbound_type_name_part
                			    {
                			    	PushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name3253);
                			    	unbound_type_name_part();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop78;
                	    }
                	} while (true);

                	loop78:
                		;	// Stops C# compiler whining that label 'loop78' has no statements

                	PushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name3263);
                	generic_dimension_specifier();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unbound_type_name"

        public class unbound_type_name_start_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unbound_type_name_start"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:911:1: unbound_type_name_start : identifier ( '::' identifier )? ;
        public JavaPrettyPrint.unbound_type_name_start_return unbound_type_name_start() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unbound_type_name_start_return retval = new JavaPrettyPrint.unbound_type_name_start_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:911:24: ( identifier ( '::' identifier )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:912:2: identifier ( '::' identifier )?
                {
                	PushFollow(FOLLOW_identifier_in_unbound_type_name_start3273);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:912:13: ( '::' identifier )?
                	int alt79 = 2;
                	int LA79_0 = input.LA(1);

                	if ( (LA79_0 == 208) )
                	{
                	    alt79 = 1;
                	}
                	switch (alt79) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:912:14: '::' identifier
                	        {
                	        	Match(input,208,FOLLOW_208_in_unbound_type_name_start3276); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_identifier_in_unbound_type_name_start3278);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unbound_type_name_start"

        public class unbound_type_name_part_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unbound_type_name_part"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:913:1: unbound_type_name_part : '.' identifier ;
        public JavaPrettyPrint.unbound_type_name_part_return unbound_type_name_part() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unbound_type_name_part_return retval = new JavaPrettyPrint.unbound_type_name_part_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:913:23: ( '.' identifier )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:914:2: '.' identifier
                {
                	Match(input,DOT,FOLLOW_DOT_in_unbound_type_name_part3287); if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_unbound_type_name_part3291);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unbound_type_name_part"

        public class generic_dimension_specifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "generic_dimension_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:915:1: generic_dimension_specifier : '<' ( commas )? '>' ;
        public JavaPrettyPrint.generic_dimension_specifier_return generic_dimension_specifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.generic_dimension_specifier_return retval = new JavaPrettyPrint.generic_dimension_specifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:915:28: ( '<' ( commas )? '>' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:916:2: '<' ( commas )? '>'
                {
                	Match(input,LTHAN,FOLLOW_LTHAN_in_generic_dimension_specifier3299); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:916:8: ( commas )?
                	int alt80 = 2;
                	int LA80_0 = input.LA(1);

                	if ( (LA80_0 == COMMA) )
                	{
                	    alt80 = 1;
                	}
                	switch (alt80) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:916:8: commas
                	        {
                	        	PushFollow(FOLLOW_commas_in_generic_dimension_specifier3303);
                	        	commas();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,GT,FOLLOW_GT_in_generic_dimension_specifier3308); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "generic_dimension_specifier"

        public class commas_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "commas"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:917:1: commas : ( ',' )+ ;
        public JavaPrettyPrint.commas_return commas() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.commas_return retval = new JavaPrettyPrint.commas_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:917:7: ( ( ',' )+ )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:918:2: ( ',' )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:918:2: ( ',' )+
                	int cnt81 = 0;
                	do 
                	{
                	    int alt81 = 2;
                	    int LA81_0 = input.LA(1);

                	    if ( (LA81_0 == COMMA) )
                	    {
                	        alt81 = 1;
                	    }


                	    switch (alt81) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:918:2: ','
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_commas3317); if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    if ( cnt81 >= 1 ) goto loop81;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee81 =
                		                new EarlyExitException(81, input);
                		            throw eee81;
                	    }
                	    cnt81++;
                	} while (true);

                	loop81:
                		;	// Stops C# compiler whining that label 'loop81' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "commas"

        public class type_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:924:1: type_name : ( namespace_or_type_name -> { $namespace_or_type_name.st } | ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload=fillTemplate($t.st.ToString(), templateMap)));
        public JavaPrettyPrint.type_name_return type_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_name_return retval = new JavaPrettyPrint.type_name_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return t = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.identifier_return k = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.wrapped_return v = default(JavaPrettyPrint.wrapped_return);

            JavaPrettyPrint.namespace_or_type_name_return namespace_or_type_name80 = default(JavaPrettyPrint.namespace_or_type_name_return);



                Dictionary<string,ReplacementDescriptor> templateMap = new Dictionary<string,ReplacementDescriptor>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:927:2: ( namespace_or_type_name -> { $namespace_or_type_name.st } | ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload=fillTemplate($t.st.ToString(), templateMap)))
                int alt83 = 2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0 == IDENTIFIER || LA83_0 == DOT || (LA83_0 >= ELIF && LA83_0 <= UNDEF) || LA83_0 == 195 || LA83_0 == 208 || LA83_0 == 221 || (LA83_0 >= 224 && LA83_0 <= 239) || (LA83_0 >= 241 && LA83_0 <= 244) || (LA83_0 >= 247 && LA83_0 <= 250) || LA83_0 == 256 || (LA83_0 >= 263 && LA83_0 <= 264) || LA83_0 == 274 || LA83_0 == 277) )
                {
                    alt83 = 1;
                }
                else if ( (LA83_0 == JAVAWRAPPER) )
                {
                    alt83 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d83s0 =
                        new NoViableAltException("", 83, 0, input);

                    throw nvae_d83s0;
                }
                switch (alt83) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:928:2: namespace_or_type_name
                        {
                        	PushFollow(FOLLOW_namespace_or_type_name_in_type_name3338);
                        	namespace_or_type_name80 = namespace_or_type_name();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 928:25: -> { $namespace_or_type_name.st }
                        	  {
                        	      retval.ST =  ((namespace_or_type_name80 != null) ? namespace_or_type_name80.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:929:6: ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* )
                        {
                        	Match(input,JAVAWRAPPER,FOLLOW_JAVAWRAPPER_in_type_name3350); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_identifier_in_type_name3354);
                        	t = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:930:10: (k= identifier v= wrapped )*
                        	do 
                        	{
                        	    int alt82 = 2;
                        	    int LA82_0 = input.LA(1);

                        	    if ( (LA82_0 == IDENTIFIER || (LA82_0 >= ELIF && LA82_0 <= UNDEF) || LA82_0 == 195 || LA82_0 == 221 || (LA82_0 >= 224 && LA82_0 <= 239) || (LA82_0 >= 241 && LA82_0 <= 244) || (LA82_0 >= 247 && LA82_0 <= 250) || LA82_0 == 256 || (LA82_0 >= 263 && LA82_0 <= 264) || LA82_0 == 274 || LA82_0 == 277) )
                        	    {
                        	        alt82 = 1;
                        	    }


                        	    switch (alt82) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:930:11: k= identifier v= wrapped
                        			    {
                        			    	PushFollow(FOLLOW_identifier_in_type_name3369);
                        			    	k = identifier();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	PushFollow(FOLLOW_wrapped_in_type_name3373);
                        			    	v = wrapped();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if ( (state.backtracking==0) )
                        			    	{

                        			    	                 templateMap[((k != null) ? k.ST : null).ToString()] = new ReplacementDescriptor(((v != null) ? v.ST : null) != null ? ((v != null) ? v.ST : null).ToString() : "<sorry, untranslated expression>", ((v != null) ? v.precedence : default(int))); 
                        			    	              
                        			    	}

                        			    }
                        			    break;

                        			default:
                        			    goto loop82;
                        	    }
                        	} while (true);

                        	loop82:
                        		;	// Stops C# compiler whining that label 'loop82' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 934:11: -> string(payload=fillTemplate($t.st.ToString(), templateMap))
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", fillTemplate(((t != null) ? t.ST : null).ToString(), templateMap)));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_name"

        public class namespace_or_type_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "namespace_or_type_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:936:1: namespace_or_type_name : (t1= type_or_generic -> { $t1.st } | ^( '::' n2= type_name t2= type_or_generic ) -> { $t2.st } | ^(op= '.' n3= type_name t3= type_or_generic ) -> op(pre= $n3.st op= \".\" post= $t3.st ));
        public JavaPrettyPrint.namespace_or_type_name_return namespace_or_type_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.namespace_or_type_name_return retval = new JavaPrettyPrint.namespace_or_type_name_return();
            retval.start = input.LT(1);

            CommonTree op = null;
            JavaPrettyPrint.type_or_generic_return t1 = default(JavaPrettyPrint.type_or_generic_return);

            JavaPrettyPrint.type_name_return n2 = default(JavaPrettyPrint.type_name_return);

            JavaPrettyPrint.type_or_generic_return t2 = default(JavaPrettyPrint.type_or_generic_return);

            JavaPrettyPrint.type_name_return n3 = default(JavaPrettyPrint.type_name_return);

            JavaPrettyPrint.type_or_generic_return t3 = default(JavaPrettyPrint.type_or_generic_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:936:23: (t1= type_or_generic -> { $t1.st } | ^( '::' n2= type_name t2= type_or_generic ) -> { $t2.st } | ^(op= '.' n3= type_name t3= type_or_generic ) -> op(pre= $n3.st op= \".\" post= $t3.st ))
                int alt84 = 3;
                switch ( input.LA(1) ) 
                {
                case IDENTIFIER:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 256:
                case 263:
                case 264:
                case 274:
                case 277:
                	{
                    alt84 = 1;
                    }
                    break;
                case 208:
                	{
                    alt84 = 2;
                    }
                    break;
                case DOT:
                	{
                    alt84 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d84s0 =
                	        new NoViableAltException("", 84, 0, input);

                	    throw nvae_d84s0;
                }

                switch (alt84) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:937:3: t1= type_or_generic
                        {
                        	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name3424);
                        	t1 = type_or_generic();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 937:22: -> { $t1.st }
                        	  {
                        	      retval.ST =  ((t1 != null) ? t1.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:939:7: ^( '::' n2= type_name t2= type_or_generic )
                        {
                        	Match(input,208,FOLLOW_208_in_namespace_or_type_name3446); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_name_in_namespace_or_type_name3450);
                        	n2 = type_name();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name3454);
                        	t2 = type_or_generic();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 939:47: -> { $t2.st }
                        	  {
                        	      retval.ST =  ((t2 != null) ? t2.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:940:7: ^(op= '.' n3= type_name t3= type_or_generic )
                        {
                        	op=(CommonTree)Match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name3470); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_name_in_namespace_or_type_name3475);
                        	n3 = type_name();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name3479);
                        	t3 = type_or_generic();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 940:51: -> op(pre= $n3.st op= \".\" post= $t3.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre",  ((n3 != null) ? n3.ST : null) ).Add("op",  "." ).Add("post",  ((t3 != null) ? t3.ST : null) ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "namespace_or_type_name"

        public class type_or_generic_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_or_generic"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:943:1: type_or_generic returns [int precedence] : ( ( identifier generic_argument_list )=>gi= identifier generic_argument_list -> op(pre= $gi.st post= $generic_argument_list.st ) | i= identifier -> { $i.st });
        public JavaPrettyPrint.type_or_generic_return type_or_generic() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_or_generic_return retval = new JavaPrettyPrint.type_or_generic_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return gi = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.identifier_return i = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.generic_argument_list_return generic_argument_list81 = default(JavaPrettyPrint.generic_argument_list_return);



                retval.precedence =  int.MaxValue;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:946:2: ( ( identifier generic_argument_list )=>gi= identifier generic_argument_list -> op(pre= $gi.st post= $generic_argument_list.st ) | i= identifier -> { $i.st })
                int alt85 = 2;
                alt85 = dfa85.Predict(input);
                switch (alt85) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:947:2: ( identifier generic_argument_list )=>gi= identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_type_or_generic3532);
                        	gi = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_generic_argument_list_in_type_or_generic3536);
                        	generic_argument_list81 = generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 947:80: -> op(pre= $gi.st post= $generic_argument_list.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre",  ((gi != null) ? gi.ST : null) ).Add("post",  ((generic_argument_list81 != null) ? generic_argument_list81.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:948:4: i= identifier
                        {
                        	PushFollow(FOLLOW_identifier_in_type_or_generic3557);
                        	i = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 948:17: -> { $i.st }
                        	  {
                        	      retval.ST =  ((i != null) ? i.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_or_generic"

        public class qid_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "qid"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:950:1: qid : ( ^( access_operator qd= qid type_or_generic ) -> op(op= $access_operator.st pre= $qd.stpost= $type_or_generic.st ) | qid_start -> { $qid_start.st });
        public JavaPrettyPrint.qid_return qid() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.qid_return retval = new JavaPrettyPrint.qid_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.qid_return qd = default(JavaPrettyPrint.qid_return);

            JavaPrettyPrint.access_operator_return access_operator82 = default(JavaPrettyPrint.access_operator_return);

            JavaPrettyPrint.type_or_generic_return type_or_generic83 = default(JavaPrettyPrint.type_or_generic_return);

            JavaPrettyPrint.qid_start_return qid_start84 = default(JavaPrettyPrint.qid_start_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:950:4: ( ^( access_operator qd= qid type_or_generic ) -> op(op= $access_operator.st pre= $qd.stpost= $type_or_generic.st ) | qid_start -> { $qid_start.st })
                int alt86 = 2;
                int LA86_0 = input.LA(1);

                if ( ((LA86_0 >= DOT && LA86_0 <= PTR)) )
                {
                    alt86 = 1;
                }
                else if ( (LA86_0 == OBJECT || LA86_0 == LONGNUMBER || (LA86_0 >= BOOL && LA86_0 <= NULL) || (LA86_0 >= ELIF && LA86_0 <= UNDEF) || LA86_0 == 195 || LA86_0 == 221 || (LA86_0 >= 224 && LA86_0 <= 239) || (LA86_0 >= 241 && LA86_0 <= 244) || (LA86_0 >= 247 && LA86_0 <= 254) || LA86_0 == 256 || (LA86_0 >= 263 && LA86_0 <= 264) || (LA86_0 >= 274 && LA86_0 <= 277)) )
                {
                    alt86 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d86s0 =
                        new NoViableAltException("", 86, 0, input);

                    throw nvae_d86s0;
                }
                switch (alt86) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:951:5: ^( access_operator qd= qid type_or_generic )
                        {
                        	PushFollow(FOLLOW_access_operator_in_qid3575);
                        	access_operator82 = access_operator();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_qid_in_qid3579);
                        	qd = qid();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_or_generic_in_qid3581);
                        	type_or_generic83 = type_or_generic();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 951:47: -> op(op= $access_operator.st pre= $qd.stpost= $type_or_generic.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("op",  ((access_operator82 != null) ? access_operator82.ST : null) ).Add("pre",  ((qd != null) ? qd.ST : null)).Add("post",  ((type_or_generic83 != null) ? type_or_generic83.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:952:4: qid_start
                        {
                        	PushFollow(FOLLOW_qid_start_in_qid3610);
                        	qid_start84 = qid_start();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 952:15: -> { $qid_start.st }
                        	  {
                        	      retval.ST =  ((qid_start84 != null) ? qid_start84.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "qid"

        public class qid_start_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "qid_start"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:954:1: qid_start : ( predefined_type -> { $predefined_type.st } | ( identifier generic_argument_list )=> identifier generic_argument_list -> op(pre= $identifier.st post= $generic_argument_list.st ) | i1= identifier ( '::' i2= identifier )? -> identifier(id= $i1.st id2= $i2.st ) | literal -> { $literal.st });
        public JavaPrettyPrint.qid_start_return qid_start() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.qid_start_return retval = new JavaPrettyPrint.qid_start_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return i1 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.identifier_return i2 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.predefined_type_return predefined_type85 = default(JavaPrettyPrint.predefined_type_return);

            JavaPrettyPrint.identifier_return identifier86 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.generic_argument_list_return generic_argument_list87 = default(JavaPrettyPrint.generic_argument_list_return);

            JavaPrettyPrint.literal_return literal88 = default(JavaPrettyPrint.literal_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:954:10: ( predefined_type -> { $predefined_type.st } | ( identifier generic_argument_list )=> identifier generic_argument_list -> op(pre= $identifier.st post= $generic_argument_list.st ) | i1= identifier ( '::' i2= identifier )? -> identifier(id= $i1.st id2= $i2.st ) | literal -> { $literal.st })
                int alt88 = 4;
                alt88 = dfa88.Predict(input);
                switch (alt88) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:955:2: predefined_type
                        {
                        	PushFollow(FOLLOW_predefined_type_in_qid_start3624);
                        	predefined_type85 = predefined_type();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 955:18: -> { $predefined_type.st }
                        	  {
                        	      retval.ST =  ((predefined_type85 != null) ? predefined_type85.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:956:4: ( identifier generic_argument_list )=> identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_qid_start3643);
                        	identifier86 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_generic_argument_list_in_qid_start3647);
                        	generic_argument_list87 = generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 956:79: -> op(pre= $identifier.st post= $generic_argument_list.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre",  ((identifier86 != null) ? identifier86.ST : null) ).Add("post",  ((generic_argument_list87 != null) ? generic_argument_list87.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:959:4: i1= identifier ( '::' i2= identifier )?
                        {
                        	PushFollow(FOLLOW_identifier_in_qid_start3670);
                        	i1 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:959:20: ( '::' i2= identifier )?
                        	int alt87 = 2;
                        	int LA87_0 = input.LA(1);

                        	if ( (LA87_0 == 208) )
                        	{
                        	    alt87 = 1;
                        	}
                        	switch (alt87) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:959:21: '::' i2= identifier
                        	        {
                        	        	Match(input,208,FOLLOW_208_in_qid_start3675); if (state.failed) return retval;
                        	        	PushFollow(FOLLOW_identifier_in_qid_start3681);
                        	        	i2 = identifier();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}



                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 959:45: -> identifier(id= $i1.st id2= $i2.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("identifier",
                        	    new STAttrMap().Add("id",  ((i1 != null) ? i1.ST : null) ).Add("id2",  ((i2 != null) ? i2.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:960:4: literal
                        {
                        	PushFollow(FOLLOW_literal_in_qid_start3703);
                        	literal88 = literal();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 960:12: -> { $literal.st }
                        	  {
                        	      retval.ST =  ((literal88 != null) ? literal88.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "qid_start"

        public class qid_part_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "qid_part"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:964:1: qid_part : access_identifier ;
        public JavaPrettyPrint.qid_part_return qid_part() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.qid_part_return retval = new JavaPrettyPrint.qid_part_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:964:9: ( access_identifier )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:965:2: access_identifier
                {
                	PushFollow(FOLLOW_access_identifier_in_qid_part3720);
                	access_identifier();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "qid_part"

        public class generic_argument_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "generic_argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:967:1: generic_argument_list : '<' type_arguments '>' -> generic_args(args= $type_arguments.st );
        public JavaPrettyPrint.generic_argument_list_return generic_argument_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.generic_argument_list_return retval = new JavaPrettyPrint.generic_argument_list_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_arguments_return type_arguments89 = default(JavaPrettyPrint.type_arguments_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:967:22: ( '<' type_arguments '>' -> generic_args(args= $type_arguments.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:968:2: '<' type_arguments '>'
                {
                	Match(input,LTHAN,FOLLOW_LTHAN_in_generic_argument_list3729); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_arguments_in_generic_argument_list3733);
                	type_arguments89 = type_arguments();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,GT,FOLLOW_GT_in_generic_argument_list3737); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 968:29: -> generic_args(args= $type_arguments.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("generic_args",
                	    new STAttrMap().Add("args",  ((type_arguments89 != null) ? type_arguments89.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "generic_argument_list"

        public class type_arguments_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_arguments"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:969:1: type_arguments : ts+= type_argument ( ',' ts+= type_argument )* -> commalist(items= $ts );
        public JavaPrettyPrint.type_arguments_return type_arguments() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_arguments_return retval = new JavaPrettyPrint.type_arguments_return();
            retval.start = input.LT(1);

            List list_ts = null;
            RuleReturnScope ts = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:969:15: (ts+= type_argument ( ',' ts+= type_argument )* -> commalist(items= $ts ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:970:2: ts+= type_argument ( ',' ts+= type_argument )*
                {
                	PushFollow(FOLLOW_type_argument_in_type_arguments3755);
                	ts = type_argument();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_ts == null) list_ts = new ArrayList();
                	list_ts.Add(ts.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:970:20: ( ',' ts+= type_argument )*
                	do 
                	{
                	    int alt89 = 2;
                	    int LA89_0 = input.LA(1);

                	    if ( (LA89_0 == COMMA) )
                	    {
                	        alt89 = 1;
                	    }


                	    switch (alt89) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:970:21: ',' ts+= type_argument
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_type_arguments3758); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_type_argument_in_type_arguments3762);
                			    	ts = type_argument();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ts == null) list_ts = new ArrayList();
                			    	list_ts.Add(ts.Template);


                			    }
                			    break;

                			default:
                			    goto loop89;
                	    }
                	} while (true);

                	loop89:
                		;	// Stops C# compiler whining that label 'loop89' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 970:45: -> commalist(items= $ts )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("commalist",
                	    new STAttrMap().Add("items",  list_ts ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_arguments"

        public class type_argument_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_argument"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:972:8: public type_argument : ( ( '?' 'extends' )=> '?' 'extends' type -> op(pre=\"?\"op=\" extends \"post=$type.st) | '?' -> string(payload=\"?\") | type -> { $type.st });
        public JavaPrettyPrint.type_argument_return type_argument() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_argument_return retval = new JavaPrettyPrint.type_argument_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type90 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.type_return type91 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:972:21: ( ( '?' 'extends' )=> '?' 'extends' type -> op(pre=\"?\"op=\" extends \"post=$type.st) | '?' -> string(payload=\"?\") | type -> { $type.st })
                int alt90 = 3;
                int LA90_0 = input.LA(1);

                if ( (LA90_0 == 220) )
                {
                    int LA90_1 = input.LA(2);

                    if ( (LA90_1 == 221) && (synpred7_JavaPrettyPrint()) )
                    {
                        alt90 = 1;
                    }
                    else if ( (LA90_1 == COMMA || LA90_1 == GT) )
                    {
                        alt90 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        NoViableAltException nvae_d90s1 =
                            new NoViableAltException("", 90, 1, input);

                        throw nvae_d90s1;
                    }
                }
                else if ( (LA90_0 == TYPE) )
                {
                    alt90 = 3;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d90s0 =
                        new NoViableAltException("", 90, 0, input);

                    throw nvae_d90s0;
                }
                switch (alt90) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:973:5: ( '?' 'extends' )=> '?' 'extends' type
                        {
                        	Match(input,220,FOLLOW_220_in_type_argument3795); if (state.failed) return retval;
                        	Match(input,221,FOLLOW_221_in_type_argument3797); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_in_type_argument3799);
                        	type90 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 973:42: -> op(pre=\"?\"op=\" extends \"post=$type.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre", "?").Add("op", " extends ").Add("post", ((type90 != null) ? type90.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:974:6: '?'
                        {
                        	Match(input,220,FOLLOW_220_in_type_argument3823); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 974:11: -> string(payload=\"?\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", "?"));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:975:6: type
                        {
                        	PushFollow(FOLLOW_type_in_type_argument3840);
                        	type91 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 975:11: -> { $type.st }
                        	  {
                        	      retval.ST =  ((type91 != null) ? type91.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_argument"

        public class type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:977:1: type : ^( TYPE (tp= predefined_type | tn= type_name | tv= 'void' ) ( rank_specifiers )? ( '*' )* ( '?' )? ) -> type(name= nm stars= stars rs= $rank_specifiers.st opt= opt );
        public JavaPrettyPrint.type_return type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_return retval = new JavaPrettyPrint.type_return();
            retval.start = input.LT(1);

            CommonTree tv = null;
            JavaPrettyPrint.predefined_type_return tp = default(JavaPrettyPrint.predefined_type_return);

            JavaPrettyPrint.type_name_return tn = default(JavaPrettyPrint.type_name_return);

            JavaPrettyPrint.rank_specifiers_return rank_specifiers92 = default(JavaPrettyPrint.rank_specifiers_return);



                StringTemplate nm = null;
                List<string> stars = new List<string>();
                string opt = null;
                Dictionary<string,ReplacementDescriptor> templateMap = new Dictionary<string,ReplacementDescriptor>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:983:2: ( ^( TYPE (tp= predefined_type | tn= type_name | tv= 'void' ) ( rank_specifiers )? ( '*' )* ( '?' )? ) -> type(name= nm stars= stars rs= $rank_specifiers.st opt= opt ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:984:4: ^( TYPE (tp= predefined_type | tn= type_name | tv= 'void' ) ( rank_specifiers )? ( '*' )* ( '?' )? )
                {
                	Match(input,TYPE,FOLLOW_TYPE_in_type3860); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:984:11: (tp= predefined_type | tn= type_name | tv= 'void' )
                	int alt91 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case OBJECT:
                	case BOOL:
                	case BYTE:
                	case CHAR:
                	case SHORT:
                	case INT:
                	case LONG:
                	case FLOAT:
                	case DOUBLE:
                	case 251:
                	case 252:
                	case 253:
                	case 254:
                	case 275:
                	case 276:
                		{
                	    alt91 = 1;
                	    }
                	    break;
                	case JAVAWRAPPER:
                	case IDENTIFIER:
                	case DOT:
                	case ELIF:
                	case ENDIF:
                	case DEFINE:
                	case UNDEF:
                	case 195:
                	case 208:
                	case 221:
                	case 224:
                	case 225:
                	case 226:
                	case 227:
                	case 228:
                	case 229:
                	case 230:
                	case 231:
                	case 232:
                	case 233:
                	case 234:
                	case 235:
                	case 236:
                	case 237:
                	case 238:
                	case 239:
                	case 241:
                	case 242:
                	case 243:
                	case 244:
                	case 247:
                	case 248:
                	case 249:
                	case 250:
                	case 256:
                	case 263:
                	case 264:
                	case 274:
                	case 277:
                		{
                	    alt91 = 2;
                	    }
                	    break;
                	case 206:
                		{
                	    alt91 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d91s0 =
                		        new NoViableAltException("", 91, 0, input);

                		    throw nvae_d91s0;
                	}

                	switch (alt91) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:985:13: tp= predefined_type
                	        {
                	        	PushFollow(FOLLOW_predefined_type_in_type3878);
                	        	tp = predefined_type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  nm=((tp != null) ? tp.ST : null);
                	        	}

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:986:15: tn= type_name
                	        {
                	        	PushFollow(FOLLOW_type_name_in_type3899);
                	        	tn = type_name();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  nm=((tn != null) ? tn.ST : null);
                	        	}

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:987:15: tv= 'void'
                	        {
                	        	tv=(CommonTree)Match(input,206,FOLLOW_206_in_type3920); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   nm=templateLib.GetInstanceOf("void");
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:988:16: ( rank_specifiers )?
                	int alt92 = 2;
                	int LA92_0 = input.LA(1);

                	if ( (LA92_0 == OPEN_BRACKET) )
                	{
                	    alt92 = 1;
                	}
                	switch (alt92) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:988:16: rank_specifiers
                	        {
                	        	PushFollow(FOLLOW_rank_specifiers_in_type3939);
                	        	rank_specifiers92 = rank_specifiers();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:988:33: ( '*' )*
                	do 
                	{
                	    int alt93 = 2;
                	    int LA93_0 = input.LA(1);

                	    if ( (LA93_0 == STAR) )
                	    {
                	        alt93 = 1;
                	    }


                	    switch (alt93) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:988:34: '*'
                			    {
                			    	Match(input,STAR,FOLLOW_STAR_in_type3943); if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   stars.Add("*");
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop93;
                	    }
                	} while (true);

                	loop93:
                		;	// Stops C# compiler whining that label 'loop93' has no statements

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:988:59: ( '?' )?
                	int alt94 = 2;
                	int LA94_0 = input.LA(1);

                	if ( (LA94_0 == 220) )
                	{
                	    alt94 = 1;
                	}
                	switch (alt94) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:988:60: '?'
                	        {
                	        	Match(input,220,FOLLOW_220_in_type3950); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   opt = "?";
                	        	}

                	        }
                	        break;

                	}


                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 988:83: -> type(name= nm stars= stars rs= $rank_specifiers.st opt= opt )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("type",
                	    new STAttrMap().Add("name",  nm ).Add("stars",  stars ).Add("rs",  ((rank_specifiers92 != null) ? rank_specifiers92.ST : null) ).Add("opt",  opt ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type"

        public class non_nullable_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "non_nullable_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:990:1: non_nullable_type : type -> { $type.st };
        public JavaPrettyPrint.non_nullable_type_return non_nullable_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.non_nullable_type_return retval = new JavaPrettyPrint.non_nullable_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type93 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:990:18: ( type -> { $type.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:991:2: type
                {
                	PushFollow(FOLLOW_type_in_non_nullable_type3991);
                	type93 = type();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 991:7: -> { $type.st }
                	  {
                	      retval.ST =  ((type93 != null) ? type93.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "non_nullable_type"

        public class non_array_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "non_array_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:993:1: non_array_type : type -> { $type.st };
        public JavaPrettyPrint.non_array_type_return non_array_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.non_array_type_return retval = new JavaPrettyPrint.non_array_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type94 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:993:15: ( type -> { $type.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:994:2: type
                {
                	PushFollow(FOLLOW_type_in_non_array_type4005);
                	type94 = type();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 994:7: -> { $type.st }
                	  {
                	      retval.ST =  ((type94 != null) ? type94.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "non_array_type"

        public class array_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "array_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:995:1: array_type : type -> { $type.st };
        public JavaPrettyPrint.array_type_return array_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.array_type_return retval = new JavaPrettyPrint.array_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type95 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:995:11: ( type -> { $type.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:996:2: type
                {
                	PushFollow(FOLLOW_type_in_array_type4017);
                	type95 = type();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 996:7: -> { $type.st }
                	  {
                	      retval.ST =  ((type95 != null) ? type95.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "array_type"

        public class unmanaged_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unmanaged_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:997:1: unmanaged_type : type -> { $type.st };
        public JavaPrettyPrint.unmanaged_type_return unmanaged_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unmanaged_type_return retval = new JavaPrettyPrint.unmanaged_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type96 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:997:15: ( type -> { $type.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:998:2: type
                {
                	PushFollow(FOLLOW_type_in_unmanaged_type4029);
                	type96 = type();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 998:7: -> { $type.st }
                	  {
                	      retval.ST =  ((type96 != null) ? type96.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unmanaged_type"

        public class pointer_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "pointer_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:999:1: pointer_type : type -> { $type.st };
        public JavaPrettyPrint.pointer_type_return pointer_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.pointer_type_return retval = new JavaPrettyPrint.pointer_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type97 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:999:13: ( type -> { $type.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1000:2: type
                {
                	PushFollow(FOLLOW_type_in_pointer_type4041);
                	type97 = type();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1000:7: -> { $type.st }
                	  {
                	      retval.ST =  ((type97 != null) ? type97.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "pointer_type"

        public class block_return : TreeRuleReturnScope
        {
            public bool isSemi;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "block"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1006:1: block returns [bool isSemi] : ( ';' -> string(payload= \" ;\" ) | '{' (s+= statement )* '}' -> braceblock(statements= $s ));
        public JavaPrettyPrint.block_return block() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.block_return retval = new JavaPrettyPrint.block_return();
            retval.start = input.LT(1);

            List list_s = null;
            RuleReturnScope s = null;

                retval.isSemi =  false;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1009:2: ( ';' -> string(payload= \" ;\" ) | '{' (s+= statement )* '}' -> braceblock(statements= $s ))
                int alt96 = 2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0 == SEMI) )
                {
                    alt96 = 1;
                }
                else if ( (LA96_0 == OPEN_BRACE) )
                {
                    alt96 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d96s0 =
                        new NoViableAltException("", 96, 0, input);

                    throw nvae_d96s0;
                }
                switch (alt96) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1010:2: ';'
                        {
                        	Match(input,SEMI,FOLLOW_SEMI_in_block4067); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.isSemi =  true; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1010:26: -> string(payload= \" ;\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  "    ;" ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1011:4: '{' (s+= statement )* '}'
                        {
                        	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_block4086); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1011:11: (s+= statement )*
                        	do 
                        	{
                        	    int alt95 = 2;
                        	    int LA95_0 = input.LA(1);

                        	    if ( ((LA95_0 >= PARAMS && LA95_0 <= PARAMS_TYPELESS) || (LA95_0 >= YIELD_RETURN && LA95_0 <= UNCHECKED) || (LA95_0 >= MONOPLUS && LA95_0 <= APPLY) || (LA95_0 >= NEW && LA95_0 <= NEW_ANON_OBJECT) || (LA95_0 >= RETURN && LA95_0 <= TRY) || LA95_0 == THROW || (LA95_0 >= BREAK && LA95_0 <= FOREACH) || LA95_0 == OPEN_BRACE || (LA95_0 >= NULL_COALESCE && LA95_0 <= IF) || (LA95_0 >= COND_EXPR && LA95_0 <= LEFT_SHIFT) || (LA95_0 >= SUPER && LA95_0 <= LAMBDA) || (LA95_0 >= TYPE && LA95_0 <= TYPE_DYNAMIC) || LA95_0 == CAST_EXPR || LA95_0 == SYNCHRONIZED || LA95_0 == JAVAWRAPPER || (LA95_0 >= BOOL && LA95_0 <= GT) || (LA95_0 >= ELIF && LA95_0 <= SEMI) || LA95_0 == 195 || LA95_0 == 198 || LA95_0 == 205 || LA95_0 == 208 || (LA95_0 >= 214 && LA95_0 <= 219) || LA95_0 == 221 || (LA95_0 >= 224 && LA95_0 <= 239) || (LA95_0 >= 241 && LA95_0 <= 244) || (LA95_0 >= 247 && LA95_0 <= 254) || LA95_0 == 256 || (LA95_0 >= 262 && LA95_0 <= 264) || LA95_0 == 266 || (LA95_0 >= 268 && LA95_0 <= 272) || (LA95_0 >= 274 && LA95_0 <= 277)) )
                        	    {
                        	        alt95 = 1;
                        	    }


                        	    switch (alt95) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1011:11: s+= statement
                        			    {
                        			    	PushFollow(FOLLOW_statement_in_block4092);
                        			    	s = statement();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if (list_s == null) list_s = new ArrayList();
                        			    	list_s.Add(s.Template);


                        			    }
                        			    break;

                        			default:
                        			    goto loop95;
                        	    }
                        	} while (true);

                        	loop95:
                        		;	// Stops C# compiler whining that label 'loop95' has no statements

                        	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_block4097); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1011:30: -> braceblock(statements= $s )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("braceblock",
                        	    new STAttrMap().Add("statements",  list_s ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "block"

        public class expression_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1016:1: expression returns [int precedence] : ( ( unary_expression assignment_operator )=> assignment -> { $assignment.st } | non_assignment_expression -> { $non_assignment_expression.st });
        public JavaPrettyPrint.expression_return expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.expression_return retval = new JavaPrettyPrint.expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.assignment_return assignment98 = default(JavaPrettyPrint.assignment_return);

            JavaPrettyPrint.non_assignment_expression_return non_assignment_expression99 = default(JavaPrettyPrint.non_assignment_expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1016:36: ( ( unary_expression assignment_operator )=> assignment -> { $assignment.st } | non_assignment_expression -> { $non_assignment_expression.st })
                int alt97 = 2;
                alt97 = dfa97.Predict(input);
                switch (alt97) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1017:2: ( unary_expression assignment_operator )=> assignment
                        {
                        	PushFollow(FOLLOW_assignment_in_expression4134);
                        	assignment98 = assignment();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((assignment98 != null) ? assignment98.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1017:99: -> { $assignment.st }
                        	  {
                        	      retval.ST =  ((assignment98 != null) ? assignment98.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1018:4: non_assignment_expression
                        {
                        	PushFollow(FOLLOW_non_assignment_expression_in_expression4145);
                        	non_assignment_expression99 = non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((non_assignment_expression99 != null) ? non_assignment_expression99.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1018:87: -> { $non_assignment_expression.st }
                        	  {
                        	      retval.ST =  ((non_assignment_expression99 != null) ? non_assignment_expression99.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "expression"

        public class expression_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "expression_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1020:1: expression_list : e+= expression ( ',' e+= expression )* -> list(items= $e sep=\", \");
        public JavaPrettyPrint.expression_list_return expression_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.expression_list_return retval = new JavaPrettyPrint.expression_list_return();
            retval.start = input.LT(1);

            List list_e = null;
            RuleReturnScope e = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1020:16: (e+= expression ( ',' e+= expression )* -> list(items= $e sep=\", \"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1021:2: e+= expression ( ',' e+= expression )*
                {
                	PushFollow(FOLLOW_expression_in_expression_list4162);
                	e = expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_e == null) list_e = new ArrayList();
                	list_e.Add(e.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1021:17: ( ',' e+= expression )*
                	do 
                	{
                	    int alt98 = 2;
                	    int LA98_0 = input.LA(1);

                	    if ( (LA98_0 == COMMA) )
                	    {
                	        alt98 = 1;
                	    }


                	    switch (alt98) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1021:18: ',' e+= expression
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_expression_list4166); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_expression_in_expression_list4172);
                			    	e = expression();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_e == null) list_e = new ArrayList();
                			    	list_e.Add(e.Template);


                			    }
                			    break;

                			default:
                			    goto loop98;
                	    }
                	} while (true);

                	loop98:
                		;	// Stops C# compiler whining that label 'loop98' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1021:40: -> list(items= $e sep=\", \")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("list",
                	    new STAttrMap().Add("items",  list_e ).Add("sep", ", "));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "expression_list"

        public class assignment_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "assignment"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1022:1: assignment returns [int precedence] : unary_expression assignment_operator expression -> assign(lhs= $unary_expression.st assign= $assignment_operator.st rhs= $expression.st lhsparen= comparePrecedence($assignment_operator.precedence, $unary_expression.precedence) <= 0 rhsparen= comparePrecedence($assignment_operator.precedence, $expression.precedence) < 0);
        public JavaPrettyPrint.assignment_return assignment() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.assignment_return retval = new JavaPrettyPrint.assignment_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.assignment_operator_return assignment_operator100 = default(JavaPrettyPrint.assignment_operator_return);

            JavaPrettyPrint.unary_expression_return unary_expression101 = default(JavaPrettyPrint.unary_expression_return);

            JavaPrettyPrint.expression_return expression102 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1022:36: ( unary_expression assignment_operator expression -> assign(lhs= $unary_expression.st assign= $assignment_operator.st rhs= $expression.st lhsparen= comparePrecedence($assignment_operator.precedence, $unary_expression.precedence) <= 0 rhsparen= comparePrecedence($assignment_operator.precedence, $expression.precedence) < 0))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1023:2: unary_expression assignment_operator expression
                {
                	PushFollow(FOLLOW_unary_expression_in_assignment4202);
                	unary_expression101 = unary_expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_assignment_operator_in_assignment4206);
                	assignment_operator100 = assignment_operator();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_assignment4210);
                	expression102 = expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.precedence =  ((assignment_operator100 != null) ? assignment_operator100.precedence : default(int)); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1024:58: -> assign(lhs= $unary_expression.st assign= $assignment_operator.st rhs= $expression.st lhsparen= comparePrecedence($assignment_operator.precedence, $unary_expression.precedence) <= 0 rhsparen= comparePrecedence($assignment_operator.precedence, $expression.precedence) < 0)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("assign",
                	    new STAttrMap().Add("lhs",  ((unary_expression101 != null) ? unary_expression101.ST : null) ).Add("assign",  ((assignment_operator100 != null) ? assignment_operator100.ST : null) ).Add("rhs",  ((expression102 != null) ? expression102.ST : null) ).Add("lhsparen",  comparePrecedence(((assignment_operator100 != null) ? assignment_operator100.precedence : default(int)), ((unary_expression101 != null) ? unary_expression101.precedence : default(int))) <= 0 ).Add("rhsparen",  comparePrecedence(((assignment_operator100 != null) ? assignment_operator100.precedence : default(int)), ((expression102 != null) ? expression102.precedence : default(int))) < 0));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "assignment"

        public class unary_expression_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unary_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1027:1: unary_expression returns [int precedence] : ( ^( CAST_EXPR type u0= expression ) -> cast_expr(type= $type.stexp= $u0.st) | primary_or_array_creation_expression -> { $primary_or_array_creation_expression.st } | ^( (op= MONOPLUS | op= MONOMINUS | op= MONONOT | op= MONOTWIDDLE | op= PREINC | op= PREDEC ) u1= unary_expression ) -> op(postparen= comparePrecedence($op.token, $u1.precedence) <= 0 op= $op.token.Text post=$u1.st) | ^( (op= MONOSTAR | op= ADDRESSOF ) u1= unary_expression ) | ^( PARENS expression ) -> { Cfg.TranslatorKeepParens}? parens(e=$expression.st) -> {$expression.st});
        public JavaPrettyPrint.unary_expression_return unary_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unary_expression_return retval = new JavaPrettyPrint.unary_expression_return();
            retval.start = input.LT(1);

            CommonTree op = null;
            JavaPrettyPrint.expression_return u0 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.unary_expression_return u1 = default(JavaPrettyPrint.unary_expression_return);

            JavaPrettyPrint.type_return type103 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.primary_or_array_creation_expression_return primary_or_array_creation_expression104 = default(JavaPrettyPrint.primary_or_array_creation_expression_return);

            JavaPrettyPrint.expression_return expression105 = default(JavaPrettyPrint.expression_return);



                // By default parens not needed
                retval.precedence =  int.MaxValue;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1031:2: ( ^( CAST_EXPR type u0= expression ) -> cast_expr(type= $type.stexp= $u0.st) | primary_or_array_creation_expression -> { $primary_or_array_creation_expression.st } | ^( (op= MONOPLUS | op= MONOMINUS | op= MONONOT | op= MONOTWIDDLE | op= PREINC | op= PREDEC ) u1= unary_expression ) -> op(postparen= comparePrecedence($op.token, $u1.precedence) <= 0 op= $op.token.Text post=$u1.st) | ^( (op= MONOSTAR | op= ADDRESSOF ) u1= unary_expression ) | ^( PARENS expression ) -> { Cfg.TranslatorKeepParens}? parens(e=$expression.st) -> {$expression.st})
                int alt101 = 5;
                switch ( input.LA(1) ) 
                {
                case CAST_EXPR:
                	{
                    alt101 = 1;
                    }
                    break;
                case POSTINC:
                case POSTDEC:
                case INDEX:
                case APPLY:
                case NEW:
                case NEW_ARRAY:
                case NEW_DELEGATE:
                case NEW_ANON_OBJECT:
                case OBJECT:
                case THIS:
                case SUPER:
                case LONGNUMBER:
                case JAVAWRAPPER:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case IDENTIFIER:
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                case DOT:
                case PTR:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 208:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 251:
                case 252:
                case 253:
                case 254:
                case 256:
                case 263:
                case 264:
                case 274:
                case 275:
                case 276:
                case 277:
                	{
                    alt101 = 2;
                    }
                    break;
                case MONOPLUS:
                case MONOMINUS:
                case MONONOT:
                case MONOTWIDDLE:
                case PREINC:
                case PREDEC:
                	{
                    alt101 = 3;
                    }
                    break;
                case MONOSTAR:
                case ADDRESSOF:
                	{
                    alt101 = 4;
                    }
                    break;
                case PARENS:
                	{
                    alt101 = 5;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d101s0 =
                	        new NoViableAltException("", 101, 0, input);

                	    throw nvae_d101s0;
                }

                switch (alt101) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1034:2: ^( CAST_EXPR type u0= expression )
                        {
                        	Match(input,CAST_EXPR,FOLLOW_CAST_EXPR_in_unary_expression4461); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_type_in_unary_expression4463);
                        	type103 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_unary_expression4467);
                        	u0 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[CAST_EXPR]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1034:76: -> cast_expr(type= $type.stexp= $u0.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("cast_expr",
                        	    new STAttrMap().Add("type",  ((type103 != null) ? type103.ST : null)).Add("exp",  ((u0 != null) ? u0.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1035:4: primary_or_array_creation_expression
                        {
                        	PushFollow(FOLLOW_primary_or_array_creation_expression_in_unary_expression4493);
                        	primary_or_array_creation_expression104 = primary_or_array_creation_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((primary_or_array_creation_expression104 != null) ? primary_or_array_creation_expression104.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1035:109: -> { $primary_or_array_creation_expression.st }
                        	  {
                        	      retval.ST =  ((primary_or_array_creation_expression104 != null) ? primary_or_array_creation_expression104.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:4: ^( (op= MONOPLUS | op= MONOMINUS | op= MONONOT | op= MONOTWIDDLE | op= PREINC | op= PREDEC ) u1= unary_expression )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:6: (op= MONOPLUS | op= MONOMINUS | op= MONONOT | op= MONOTWIDDLE | op= PREINC | op= PREDEC )
                        	int alt99 = 6;
                        	switch ( input.LA(1) ) 
                        	{
                        	case MONOPLUS:
                        		{
                        	    alt99 = 1;
                        	    }
                        	    break;
                        	case MONOMINUS:
                        		{
                        	    alt99 = 2;
                        	    }
                        	    break;
                        	case MONONOT:
                        		{
                        	    alt99 = 3;
                        	    }
                        	    break;
                        	case MONOTWIDDLE:
                        		{
                        	    alt99 = 4;
                        	    }
                        	    break;
                        	case PREINC:
                        		{
                        	    alt99 = 5;
                        	    }
                        	    break;
                        	case PREDEC:
                        		{
                        	    alt99 = 6;
                        	    }
                        	    break;
                        		default:
                        		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        		    NoViableAltException nvae_d99s0 =
                        		        new NoViableAltException("", 99, 0, input);

                        		    throw nvae_d99s0;
                        	}

                        	switch (alt99) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:7: op= MONOPLUS
                        	        {
                        	        	op=(CommonTree)Match(input,MONOPLUS,FOLLOW_MONOPLUS_in_unary_expression4508); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:21: op= MONOMINUS
                        	        {
                        	        	op=(CommonTree)Match(input,MONOMINUS,FOLLOW_MONOMINUS_in_unary_expression4514); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 3 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:36: op= MONONOT
                        	        {
                        	        	op=(CommonTree)Match(input,MONONOT,FOLLOW_MONONOT_in_unary_expression4520); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 4 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:49: op= MONOTWIDDLE
                        	        {
                        	        	op=(CommonTree)Match(input,MONOTWIDDLE,FOLLOW_MONOTWIDDLE_in_unary_expression4526); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 5 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:66: op= PREINC
                        	        {
                        	        	op=(CommonTree)Match(input,PREINC,FOLLOW_PREINC_in_unary_expression4532); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 6 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1036:78: op= PREDEC
                        	        {
                        	        	op=(CommonTree)Match(input,PREDEC,FOLLOW_PREDEC_in_unary_expression4538); if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_unary_expression_in_unary_expression4544);
                        	u1 = unary_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[op.token.Type]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1037:11: -> op(postparen= comparePrecedence($op.token, $u1.precedence) <= 0 op= $op.token.Text post=$u1.st)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("postparen",  comparePrecedence(op.token, ((u1 != null) ? u1.precedence : default(int))) <= 0 ).Add("op",  op.token.Text ).Add("post", ((u1 != null) ? u1.ST : null)));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1038:4: ^( (op= MONOSTAR | op= ADDRESSOF ) u1= unary_expression )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1038:6: (op= MONOSTAR | op= ADDRESSOF )
                        	int alt100 = 2;
                        	int LA100_0 = input.LA(1);

                        	if ( (LA100_0 == MONOSTAR) )
                        	{
                        	    alt100 = 1;
                        	}
                        	else if ( (LA100_0 == ADDRESSOF) )
                        	{
                        	    alt100 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        	    NoViableAltException nvae_d100s0 =
                        	        new NoViableAltException("", 100, 0, input);

                        	    throw nvae_d100s0;
                        	}
                        	switch (alt100) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1038:7: op= MONOSTAR
                        	        {
                        	        	op=(CommonTree)Match(input,MONOSTAR,FOLLOW_MONOSTAR_in_unary_expression4585); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1038:19: op= ADDRESSOF
                        	        {
                        	        	op=(CommonTree)Match(input,ADDRESSOF,FOLLOW_ADDRESSOF_in_unary_expression4589); if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_unary_expression_in_unary_expression4594);
                        	u1 = unary_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   
                        	              StringTemplate opText = templateLib.GetInstanceOf("op");
                        	              (opText).SetAttribute("post", ((u1 != null) ? u1.ST : null));
                        	              (opText).SetAttribute("op", op.token.Text);
                        	              retval.ST =  templateLib.GetInstanceOf("unsupported");
                        	              (retval.ST).SetAttribute("reason", "the " + (op.token.Type == MONOSTAR ? "pointer indirection" : "address of") + " operator is not supported");
                        	              (retval.ST).SetAttribute("text", opText);
                        	          
                        	}

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1050:4: ^( PARENS expression )
                        {
                        	Match(input,PARENS,FOLLOW_PARENS_in_unary_expression4633); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_unary_expression4635);
                        	expression105 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  Cfg.TranslatorKeepParens ? int.MaxValue : ((expression105 != null) ? expression105.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1051:28: -> { Cfg.TranslatorKeepParens}? parens(e=$expression.st)
                        	  if ( Cfg.TranslatorKeepParens) {
                        	      retval.ST = templateLib.GetInstanceOf("parens",
                        	    new STAttrMap().Add("e", ((expression105 != null) ? expression105.ST : null)));
                        	  }
                        	  else // 1052:28: -> {$expression.st}
                        	  {
                        	      retval.ST = ((expression105 != null) ? expression105.ST : null);
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unary_expression"

        public class assignment_operator_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "assignment_operator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1068:2: assignment_operator returns [int precedence] : (op= '=' | op= '+=' | op= '-=' | op= '*=' | op= '/=' | op= '%=' | op= '&=' | op= '|=' | op= '^=' | op= '<<=' | op= RIGHT_SHIFT_ASSIGN ) -> string(payload= $op.token.Text );
        public JavaPrettyPrint.assignment_operator_return assignment_operator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.assignment_operator_return retval = new JavaPrettyPrint.assignment_operator_return();
            retval.start = input.LT(1);

            CommonTree op = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1068:46: ( (op= '=' | op= '+=' | op= '-=' | op= '*=' | op= '/=' | op= '%=' | op= '&=' | op= '|=' | op= '^=' | op= '<<=' | op= RIGHT_SHIFT_ASSIGN ) -> string(payload= $op.token.Text ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:4: (op= '=' | op= '+=' | op= '-=' | op= '*=' | op= '/=' | op= '%=' | op= '&=' | op= '|=' | op= '^=' | op= '<<=' | op= RIGHT_SHIFT_ASSIGN )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:4: (op= '=' | op= '+=' | op= '-=' | op= '*=' | op= '/=' | op= '%=' | op= '&=' | op= '|=' | op= '^=' | op= '<<=' | op= RIGHT_SHIFT_ASSIGN )
                	int alt102 = 11;
                	switch ( input.LA(1) ) 
                	{
                	case ASSIGN:
                		{
                	    alt102 = 1;
                	    }
                	    break;
                	case PLUS_ASSIGN:
                		{
                	    alt102 = 2;
                	    }
                	    break;
                	case MINUS_ASSIGN:
                		{
                	    alt102 = 3;
                	    }
                	    break;
                	case STAR_ASSIGN:
                		{
                	    alt102 = 4;
                	    }
                	    break;
                	case DIV_ASSIGN:
                		{
                	    alt102 = 5;
                	    }
                	    break;
                	case MOD_ASSIGN:
                		{
                	    alt102 = 6;
                	    }
                	    break;
                	case BIT_AND_ASSIGN:
                		{
                	    alt102 = 7;
                	    }
                	    break;
                	case BIT_OR_ASSIGN:
                		{
                	    alt102 = 8;
                	    }
                	    break;
                	case BIT_XOR_ASSIGN:
                		{
                	    alt102 = 9;
                	    }
                	    break;
                	case LEFT_SHIFT_ASSIGN:
                		{
                	    alt102 = 10;
                	    }
                	    break;
                	case RIGHT_SHIFT_ASSIGN:
                		{
                	    alt102 = 11;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d102s0 =
                		        new NoViableAltException("", 102, 0, input);

                		    throw nvae_d102s0;
                	}

                	switch (alt102) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:5: op= '='
                	        {
                	        	op=(CommonTree)Match(input,ASSIGN,FOLLOW_ASSIGN_in_assignment_operator4747); if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:14: op= '+='
                	        {
                	        	op=(CommonTree)Match(input,PLUS_ASSIGN,FOLLOW_PLUS_ASSIGN_in_assignment_operator4753); if (state.failed) return retval;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:24: op= '-='
                	        {
                	        	op=(CommonTree)Match(input,MINUS_ASSIGN,FOLLOW_MINUS_ASSIGN_in_assignment_operator4759); if (state.failed) return retval;

                	        }
                	        break;
                	    case 4 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:34: op= '*='
                	        {
                	        	op=(CommonTree)Match(input,STAR_ASSIGN,FOLLOW_STAR_ASSIGN_in_assignment_operator4765); if (state.failed) return retval;

                	        }
                	        break;
                	    case 5 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:44: op= '/='
                	        {
                	        	op=(CommonTree)Match(input,DIV_ASSIGN,FOLLOW_DIV_ASSIGN_in_assignment_operator4771); if (state.failed) return retval;

                	        }
                	        break;
                	    case 6 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:54: op= '%='
                	        {
                	        	op=(CommonTree)Match(input,MOD_ASSIGN,FOLLOW_MOD_ASSIGN_in_assignment_operator4777); if (state.failed) return retval;

                	        }
                	        break;
                	    case 7 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:64: op= '&='
                	        {
                	        	op=(CommonTree)Match(input,BIT_AND_ASSIGN,FOLLOW_BIT_AND_ASSIGN_in_assignment_operator4783); if (state.failed) return retval;

                	        }
                	        break;
                	    case 8 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:74: op= '|='
                	        {
                	        	op=(CommonTree)Match(input,BIT_OR_ASSIGN,FOLLOW_BIT_OR_ASSIGN_in_assignment_operator4789); if (state.failed) return retval;

                	        }
                	        break;
                	    case 9 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:84: op= '^='
                	        {
                	        	op=(CommonTree)Match(input,BIT_XOR_ASSIGN,FOLLOW_BIT_XOR_ASSIGN_in_assignment_operator4795); if (state.failed) return retval;

                	        }
                	        break;
                	    case 10 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:94: op= '<<='
                	        {
                	        	op=(CommonTree)Match(input,LEFT_SHIFT_ASSIGN,FOLLOW_LEFT_SHIFT_ASSIGN_in_assignment_operator4801); if (state.failed) return retval;

                	        }
                	        break;
                	    case 11 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1069:105: op= RIGHT_SHIFT_ASSIGN
                	        {
                	        	op=(CommonTree)Match(input,RIGHT_SHIFT_ASSIGN,FOLLOW_RIGHT_SHIFT_ASSIGN_in_assignment_operator4807); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   retval.precedence =  precedence[op.token.Type]; 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1070:7: -> string(payload= $op.token.Text )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload",  op.token.Text ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "assignment_operator"

        public class non_assignment_expression_return : TreeRuleReturnScope
        {
            public int precedence;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "non_assignment_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1080:1: non_assignment_expression returns [int precedence] : ( ( ( anonymous_function_signature )? '=>' )=> lambda_expression -> { $lambda_expression.st; } | ( query_expression )=> query_expression | ^(cop= COND_EXPR ce1= non_assignment_expression ce2= expression ce3= expression ) -> cond(condexp= $ce1.st thenexp= $ce2.st elseexp= $ce3.st condparens= comparePrecedence($cop.token, $ce1.precedence) <= 0 thenparens= comparePrecedence($cop.token, $ce2.precedence) <= 0 elseparens= comparePrecedence($cop.token, $ce3.precedence) <= 0 ) | ^( '??' non_assignment_expression non_assignment_expression ) | ^( (op= '==' | op= '!=' | op= '||' | op= '&&' | op= '|' | op= '^' | op= '&' | op= '>' | op= '<' | op= '>=' | op= '<=' | op= '<<' | op= RIGHT_SHIFT | op= '+' | op= '-' | op= '*' | op= '/' | op= '%' ) e1= non_assignment_expression e2= non_assignment_expression ) -> op(pre= $e1.st op= $op.token.Text post= $e2.st space= \" \" preparen= comparePrecedence($op.token, $e1.precedence) < 0 postparen= comparePrecedence($op.token, $e2.precedence) <= 0) | ^(iop= INSTANCEOF ie= non_assignment_expression non_nullable_type ) -> op(pre= $ie.st op= \"instanceof\" space= \" \" post= $non_nullable_type.st preparen= comparePrecedence($iop.token, $ie.precedence) < 0 ) | unary_expression -> { $unary_expression.st });
        public JavaPrettyPrint.non_assignment_expression_return non_assignment_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.non_assignment_expression_return retval = new JavaPrettyPrint.non_assignment_expression_return();
            retval.start = input.LT(1);

            CommonTree cop = null;
            CommonTree op = null;
            CommonTree iop = null;
            JavaPrettyPrint.non_assignment_expression_return ce1 = default(JavaPrettyPrint.non_assignment_expression_return);

            JavaPrettyPrint.expression_return ce2 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.expression_return ce3 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.non_assignment_expression_return e1 = default(JavaPrettyPrint.non_assignment_expression_return);

            JavaPrettyPrint.non_assignment_expression_return e2 = default(JavaPrettyPrint.non_assignment_expression_return);

            JavaPrettyPrint.non_assignment_expression_return ie = default(JavaPrettyPrint.non_assignment_expression_return);

            JavaPrettyPrint.lambda_expression_return lambda_expression106 = default(JavaPrettyPrint.lambda_expression_return);

            JavaPrettyPrint.non_nullable_type_return non_nullable_type107 = default(JavaPrettyPrint.non_nullable_type_return);

            JavaPrettyPrint.unary_expression_return unary_expression108 = default(JavaPrettyPrint.unary_expression_return);



                // By default parens not needed
                retval.precedence =  int.MaxValue;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1084:2: ( ( ( anonymous_function_signature )? '=>' )=> lambda_expression -> { $lambda_expression.st; } | ( query_expression )=> query_expression | ^(cop= COND_EXPR ce1= non_assignment_expression ce2= expression ce3= expression ) -> cond(condexp= $ce1.st thenexp= $ce2.st elseexp= $ce3.st condparens= comparePrecedence($cop.token, $ce1.precedence) <= 0 thenparens= comparePrecedence($cop.token, $ce2.precedence) <= 0 elseparens= comparePrecedence($cop.token, $ce3.precedence) <= 0 ) | ^( '??' non_assignment_expression non_assignment_expression ) | ^( (op= '==' | op= '!=' | op= '||' | op= '&&' | op= '|' | op= '^' | op= '&' | op= '>' | op= '<' | op= '>=' | op= '<=' | op= '<<' | op= RIGHT_SHIFT | op= '+' | op= '-' | op= '*' | op= '/' | op= '%' ) e1= non_assignment_expression e2= non_assignment_expression ) -> op(pre= $e1.st op= $op.token.Text post= $e2.st space= \" \" preparen= comparePrecedence($op.token, $e1.precedence) < 0 postparen= comparePrecedence($op.token, $e2.precedence) <= 0) | ^(iop= INSTANCEOF ie= non_assignment_expression non_nullable_type ) -> op(pre= $ie.st op= \"instanceof\" space= \" \" post= $non_nullable_type.st preparen= comparePrecedence($iop.token, $ie.precedence) < 0 ) | unary_expression -> { $unary_expression.st })
                int alt104 = 7;
                alt104 = dfa104.Predict(input);
                switch (alt104) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1086:2: ( ( anonymous_function_signature )? '=>' )=> lambda_expression
                        {
                        	PushFollow(FOLLOW_lambda_expression_in_non_assignment_expression4866);
                        	lambda_expression106 = lambda_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[LAMBDA]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1086:99: -> { $lambda_expression.st; }
                        	  {
                        	      retval.ST =  ((lambda_expression106 != null) ? lambda_expression106.ST : null); ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1087:4: ( query_expression )=> query_expression
                        {
                        	PushFollow(FOLLOW_query_expression_in_non_assignment_expression4883);
                        	query_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1088:4: ^(cop= COND_EXPR ce1= non_assignment_expression ce2= expression ce3= expression )
                        {
                        	cop=(CommonTree)Match(input,COND_EXPR,FOLLOW_COND_EXPR_in_non_assignment_expression4892); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression4896);
                        	ce1 = non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_non_assignment_expression4900);
                        	ce2 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_non_assignment_expression4904);
                        	ce3 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[cop.token.Type]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1089:11: -> cond(condexp= $ce1.st thenexp= $ce2.st elseexp= $ce3.st condparens= comparePrecedence($cop.token, $ce1.precedence) <= 0 thenparens= comparePrecedence($cop.token, $ce2.precedence) <= 0 elseparens= comparePrecedence($cop.token, $ce3.precedence) <= 0 )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("cond",
                        	    new STAttrMap().Add("condexp",  ((ce1 != null) ? ce1.ST : null) ).Add("thenexp",  ((ce2 != null) ? ce2.ST : null) ).Add("elseexp",  ((ce3 != null) ? ce3.ST : null) ).Add("condparens",  comparePrecedence(cop.token, ((ce1 != null) ? ce1.precedence : default(int))) <= 0 ).Add("thenparens",  comparePrecedence(cop.token, ((ce2 != null) ? ce2.precedence : default(int))) <= 0 ).Add("elseparens",  comparePrecedence(cop.token, ((ce3 != null) ? ce3.precedence : default(int))) <= 0 ));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1093:7: ^( '??' non_assignment_expression non_assignment_expression )
                        {
                        	Match(input,NULL_COALESCE,FOLLOW_NULL_COALESCE_in_non_assignment_expression5037); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression5039);
                        	non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression5041);
                        	non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:7: ^( (op= '==' | op= '!=' | op= '||' | op= '&&' | op= '|' | op= '^' | op= '&' | op= '>' | op= '<' | op= '>=' | op= '<=' | op= '<<' | op= RIGHT_SHIFT | op= '+' | op= '-' | op= '*' | op= '/' | op= '%' ) e1= non_assignment_expression e2= non_assignment_expression )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:9: (op= '==' | op= '!=' | op= '||' | op= '&&' | op= '|' | op= '^' | op= '&' | op= '>' | op= '<' | op= '>=' | op= '<=' | op= '<<' | op= RIGHT_SHIFT | op= '+' | op= '-' | op= '*' | op= '/' | op= '%' )
                        	int alt103 = 18;
                        	switch ( input.LA(1) ) 
                        	{
                        	case EQUAL:
                        		{
                        	    alt103 = 1;
                        	    }
                        	    break;
                        	case NOT_EQUAL:
                        		{
                        	    alt103 = 2;
                        	    }
                        	    break;
                        	case LOG_OR:
                        		{
                        	    alt103 = 3;
                        	    }
                        	    break;
                        	case LOG_AND:
                        		{
                        	    alt103 = 4;
                        	    }
                        	    break;
                        	case BIT_OR:
                        		{
                        	    alt103 = 5;
                        	    }
                        	    break;
                        	case BIT_XOR:
                        		{
                        	    alt103 = 6;
                        	    }
                        	    break;
                        	case BIT_AND:
                        		{
                        	    alt103 = 7;
                        	    }
                        	    break;
                        	case GT:
                        		{
                        	    alt103 = 8;
                        	    }
                        	    break;
                        	case LTHAN:
                        		{
                        	    alt103 = 9;
                        	    }
                        	    break;
                        	case GTE:
                        		{
                        	    alt103 = 10;
                        	    }
                        	    break;
                        	case LTE:
                        		{
                        	    alt103 = 11;
                        	    }
                        	    break;
                        	case LEFT_SHIFT:
                        		{
                        	    alt103 = 12;
                        	    }
                        	    break;
                        	case RIGHT_SHIFT:
                        		{
                        	    alt103 = 13;
                        	    }
                        	    break;
                        	case PLUS:
                        		{
                        	    alt103 = 14;
                        	    }
                        	    break;
                        	case MINUS:
                        		{
                        	    alt103 = 15;
                        	    }
                        	    break;
                        	case STAR:
                        		{
                        	    alt103 = 16;
                        	    }
                        	    break;
                        	case DIV:
                        		{
                        	    alt103 = 17;
                        	    }
                        	    break;
                        	case MOD:
                        		{
                        	    alt103 = 18;
                        	    }
                        	    break;
                        		default:
                        		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        		    NoViableAltException nvae_d103s0 =
                        		        new NoViableAltException("", 103, 0, input);

                        		    throw nvae_d103s0;
                        	}

                        	switch (alt103) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:10: op= '=='
                        	        {
                        	        	op=(CommonTree)Match(input,EQUAL,FOLLOW_EQUAL_in_non_assignment_expression5059); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:18: op= '!='
                        	        {
                        	        	op=(CommonTree)Match(input,NOT_EQUAL,FOLLOW_NOT_EQUAL_in_non_assignment_expression5063); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 3 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:26: op= '||'
                        	        {
                        	        	op=(CommonTree)Match(input,LOG_OR,FOLLOW_LOG_OR_in_non_assignment_expression5067); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 4 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:34: op= '&&'
                        	        {
                        	        	op=(CommonTree)Match(input,LOG_AND,FOLLOW_LOG_AND_in_non_assignment_expression5071); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 5 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:42: op= '|'
                        	        {
                        	        	op=(CommonTree)Match(input,BIT_OR,FOLLOW_BIT_OR_in_non_assignment_expression5075); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 6 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:49: op= '^'
                        	        {
                        	        	op=(CommonTree)Match(input,BIT_XOR,FOLLOW_BIT_XOR_in_non_assignment_expression5079); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 7 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:56: op= '&'
                        	        {
                        	        	op=(CommonTree)Match(input,BIT_AND,FOLLOW_BIT_AND_in_non_assignment_expression5083); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 8 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:63: op= '>'
                        	        {
                        	        	op=(CommonTree)Match(input,GT,FOLLOW_GT_in_non_assignment_expression5087); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 9 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:70: op= '<'
                        	        {
                        	        	op=(CommonTree)Match(input,LTHAN,FOLLOW_LTHAN_in_non_assignment_expression5091); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 10 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:77: op= '>='
                        	        {
                        	        	op=(CommonTree)Match(input,GTE,FOLLOW_GTE_in_non_assignment_expression5095); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 11 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:85: op= '<='
                        	        {
                        	        	op=(CommonTree)Match(input,LTE,FOLLOW_LTE_in_non_assignment_expression5099); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 12 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:93: op= '<<'
                        	        {
                        	        	op=(CommonTree)Match(input,LEFT_SHIFT,FOLLOW_LEFT_SHIFT_in_non_assignment_expression5103); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 13 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:101: op= RIGHT_SHIFT
                        	        {
                        	        	op=(CommonTree)Match(input,RIGHT_SHIFT,FOLLOW_RIGHT_SHIFT_in_non_assignment_expression5107); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 14 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:116: op= '+'
                        	        {
                        	        	op=(CommonTree)Match(input,PLUS,FOLLOW_PLUS_in_non_assignment_expression5111); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 15 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:123: op= '-'
                        	        {
                        	        	op=(CommonTree)Match(input,MINUS,FOLLOW_MINUS_in_non_assignment_expression5115); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 16 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:130: op= '*'
                        	        {
                        	        	op=(CommonTree)Match(input,STAR,FOLLOW_STAR_in_non_assignment_expression5119); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 17 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:137: op= '/'
                        	        {
                        	        	op=(CommonTree)Match(input,DIV,FOLLOW_DIV_in_non_assignment_expression5123); if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 18 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1095:144: op= '%'
                        	        {
                        	        	op=(CommonTree)Match(input,MOD,FOLLOW_MOD_in_non_assignment_expression5127); if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression5141);
                        	e1 = non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression5145);
                        	e2 = non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[op.token.Type]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1097:10: -> op(pre= $e1.st op= $op.token.Text post= $e2.st space= \" \" preparen= comparePrecedence($op.token, $e1.precedence) < 0 postparen= comparePrecedence($op.token, $e2.precedence) <= 0)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre",  ((e1 != null) ? e1.ST : null) ).Add("op",  op.token.Text ).Add("post",  ((e2 != null) ? e2.ST : null) ).Add("space",  " " ).Add("preparen",  comparePrecedence(op.token, ((e1 != null) ? e1.precedence : default(int))) < 0 ).Add("postparen",  comparePrecedence(op.token, ((e2 != null) ? e2.precedence : default(int))) <= 0));
                        	  }

                        	}
                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1100:7: ^(iop= INSTANCEOF ie= non_assignment_expression non_nullable_type )
                        {
                        	iop=(CommonTree)Match(input,INSTANCEOF,FOLLOW_INSTANCEOF_in_non_assignment_expression5240); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression5244);
                        	ie = non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_non_nullable_type_in_non_assignment_expression5246);
                        	non_nullable_type107 = non_nullable_type();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  precedence[iop.token.Type]; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1101:11: -> op(pre= $ie.st op= \"instanceof\" space= \" \" post= $non_nullable_type.st preparen= comparePrecedence($iop.token, $ie.precedence) < 0 )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("pre",  ((ie != null) ? ie.ST : null) ).Add("op",  "instanceof" ).Add("space",  " " ).Add("post",  ((non_nullable_type107 != null) ? non_nullable_type107.ST : null) ).Add("preparen",  comparePrecedence(iop.token, ((ie != null) ? ie.precedence : default(int))) < 0 ));
                        	  }

                        	}
                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1103:7: unary_expression
                        {
                        	PushFollow(FOLLOW_unary_expression_in_non_assignment_expression5323);
                        	unary_expression108 = unary_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.precedence =  ((unary_expression108 != null) ? unary_expression108.precedence : default(int)); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1103:71: -> { $unary_expression.st }
                        	  {
                        	      retval.ST =  ((unary_expression108 != null) ? unary_expression108.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "non_assignment_expression"

        public class lambda_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "lambda_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1109:1: lambda_expression : ( anonymous_function_signature )? '=>' block ;
        public JavaPrettyPrint.lambda_expression_return lambda_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.lambda_expression_return retval = new JavaPrettyPrint.lambda_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.anonymous_function_signature_return anonymous_function_signature109 = default(JavaPrettyPrint.anonymous_function_signature_return);

            JavaPrettyPrint.block_return block110 = default(JavaPrettyPrint.block_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1109:18: ( ( anonymous_function_signature )? '=>' block )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1110:2: ( anonymous_function_signature )? '=>' block
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1110:2: ( anonymous_function_signature )?
                	int alt105 = 2;
                	int LA105_0 = input.LA(1);

                	if ( ((LA105_0 >= PARAMS && LA105_0 <= PARAMS_TYPELESS)) )
                	{
                	    alt105 = 1;
                	}
                	switch (alt105) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1110:2: anonymous_function_signature
                	        {
                	        	PushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression5341);
                	        	anonymous_function_signature109 = anonymous_function_signature();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	Match(input,LAMBDA,FOLLOW_LAMBDA_in_lambda_expression5346); if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_lambda_expression5350);
                	block110 = block();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   
                	              StringTemplate lambdaText = templateLib.GetInstanceOf("lambda");
                	              (lambdaText).SetAttribute("args", ((anonymous_function_signature109 != null) ? anonymous_function_signature109.ST : null));
                	              (lambdaText).SetAttribute("body", ((block110 != null) ? block110.ST : null));
                	              retval.ST =  templateLib.GetInstanceOf("unsupported");
                	              (retval.ST).SetAttribute("reason", "to translate lambda expressions we need an explicit delegate type, try adding a cast");
                	              (retval.ST).SetAttribute("text", lambdaText);
                	          
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "lambda_expression"

        public class anonymous_function_signature_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "anonymous_function_signature"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1120:1: anonymous_function_signature : ( ^( PARAMS (fps+= formal_parameter )+ ) -> list(items=$fpssep=\", \") | ^( PARAMS_TYPELESS (ids+= identifier )+ ) -> list(items=$idssep=\", \"));
        public JavaPrettyPrint.anonymous_function_signature_return anonymous_function_signature() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.anonymous_function_signature_return retval = new JavaPrettyPrint.anonymous_function_signature_return();
            retval.start = input.LT(1);

            List list_fps = null;
            List list_ids = null;
            RuleReturnScope fps = null;
            RuleReturnScope ids = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1120:29: ( ^( PARAMS (fps+= formal_parameter )+ ) -> list(items=$fpssep=\", \") | ^( PARAMS_TYPELESS (ids+= identifier )+ ) -> list(items=$idssep=\", \"))
                int alt108 = 2;
                int LA108_0 = input.LA(1);

                if ( (LA108_0 == PARAMS) )
                {
                    alt108 = 1;
                }
                else if ( (LA108_0 == PARAMS_TYPELESS) )
                {
                    alt108 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d108s0 =
                        new NoViableAltException("", 108, 0, input);

                    throw nvae_d108s0;
                }
                switch (alt108) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1121:2: ^( PARAMS (fps+= formal_parameter )+ )
                        {
                        	Match(input,PARAMS,FOLLOW_PARAMS_in_anonymous_function_signature5373); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1121:14: (fps+= formal_parameter )+
                        	int cnt106 = 0;
                        	do 
                        	{
                        	    int alt106 = 2;
                        	    int LA106_0 = input.LA(1);

                        	    if ( (LA106_0 == ATTRIBUTE || LA106_0 == THIS || LA106_0 == TYPE || (LA106_0 >= 212 && LA106_0 <= 213) || (LA106_0 >= 256 && LA106_0 <= 257)) )
                        	    {
                        	        alt106 = 1;
                        	    }


                        	    switch (alt106) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1121:14: fps+= formal_parameter
                        			    {
                        			    	PushFollow(FOLLOW_formal_parameter_in_anonymous_function_signature5377);
                        			    	fps = formal_parameter();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if (list_fps == null) list_fps = new ArrayList();
                        			    	list_fps.Add(fps.Template);


                        			    }
                        			    break;

                        			default:
                        			    if ( cnt106 >= 1 ) goto loop106;
                        			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        		            EarlyExitException eee106 =
                        		                new EarlyExitException(106, input);
                        		            throw eee106;
                        	    }
                        	    cnt106++;
                        	} while (true);

                        	loop106:
                        		;	// Stops C# compiler whining that label 'loop106' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1121:35: -> list(items=$fpssep=\", \")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("list",
                        	    new STAttrMap().Add("items", list_fps).Add("sep", ", "));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1122:4: ^( PARAMS_TYPELESS (ids+= identifier )+ )
                        {
                        	Match(input,PARAMS_TYPELESS,FOLLOW_PARAMS_TYPELESS_in_anonymous_function_signature5400); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1122:25: (ids+= identifier )+
                        	int cnt107 = 0;
                        	do 
                        	{
                        	    int alt107 = 2;
                        	    int LA107_0 = input.LA(1);

                        	    if ( (LA107_0 == IDENTIFIER || (LA107_0 >= ELIF && LA107_0 <= UNDEF) || LA107_0 == 195 || LA107_0 == 221 || (LA107_0 >= 224 && LA107_0 <= 239) || (LA107_0 >= 241 && LA107_0 <= 244) || (LA107_0 >= 247 && LA107_0 <= 250) || LA107_0 == 256 || (LA107_0 >= 263 && LA107_0 <= 264) || LA107_0 == 274 || LA107_0 == 277) )
                        	    {
                        	        alt107 = 1;
                        	    }


                        	    switch (alt107) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1122:25: ids+= identifier
                        			    {
                        			    	PushFollow(FOLLOW_identifier_in_anonymous_function_signature5404);
                        			    	ids = identifier();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if (list_ids == null) list_ids = new ArrayList();
                        			    	list_ids.Add(ids.Template);


                        			    }
                        			    break;

                        			default:
                        			    if ( cnt107 >= 1 ) goto loop107;
                        			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        		            EarlyExitException eee107 =
                        		                new EarlyExitException(107, input);
                        		            throw eee107;
                        	    }
                        	    cnt107++;
                        	} while (true);

                        	loop107:
                        		;	// Stops C# compiler whining that label 'loop107' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1122:40: -> list(items=$idssep=\", \")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("list",
                        	    new STAttrMap().Add("items", list_ids).Add("sep", ", "));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "anonymous_function_signature"

        public class query_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "query_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1128:1: query_expression : from_clause query_body ;
        public JavaPrettyPrint.query_expression_return query_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.query_expression_return retval = new JavaPrettyPrint.query_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1128:17: ( from_clause query_body )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1129:2: from_clause query_body
                {
                	PushFollow(FOLLOW_from_clause_in_query_expression5434);
                	from_clause();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_query_body_in_query_expression5438);
                	query_body();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "query_expression"

        public class query_body_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "query_body"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1130:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
        public JavaPrettyPrint.query_body_return query_body() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.query_body_return retval = new JavaPrettyPrint.query_body_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1130:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:2: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:2: ( query_body_clauses )?
                	int alt109 = 2;
                	int LA109_0 = input.LA(1);

                	if ( ((LA109_0 >= 225 && LA109_0 <= 226) || (LA109_0 >= 229 && LA109_0 <= 230) || LA109_0 == 236) )
                	{
                	    alt109 = 1;
                	}
                	switch (alt109) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:2: query_body_clauses
                	        {
                	        	PushFollow(FOLLOW_query_body_clauses_in_query_body5448);
                	        	query_body_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_select_or_group_clause_in_query_body5453);
                	select_or_group_clause();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:49: ( ( 'into' )=> query_continuation )?
                	int alt110 = 2;
                	int LA110_0 = input.LA(1);

                	if ( (LA110_0 == 224) )
                	{
                	    int LA110_1 = input.LA(2);

                	    if ( (synpred11_JavaPrettyPrint()) )
                	    {
                	        alt110 = 1;
                	    }
                	}
                	switch (alt110) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:50: ( 'into' )=> query_continuation
                	        {
                	        	PushFollow(FOLLOW_query_continuation_in_query_body5464);
                	        	query_continuation();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "query_body"

        public class query_continuation_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "query_continuation"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1133:1: query_continuation : 'into' identifier query_body ;
        public JavaPrettyPrint.query_continuation_return query_continuation() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.query_continuation_return retval = new JavaPrettyPrint.query_continuation_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1133:19: ( 'into' identifier query_body )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1134:2: 'into' identifier query_body
                {
                	Match(input,224,FOLLOW_224_in_query_continuation5474); if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_query_continuation5478);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_query_body_in_query_continuation5482);
                	query_body();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "query_continuation"

        public class query_body_clauses_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "query_body_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1135:1: query_body_clauses : ( query_body_clause )+ ;
        public JavaPrettyPrint.query_body_clauses_return query_body_clauses() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.query_body_clauses_return retval = new JavaPrettyPrint.query_body_clauses_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1135:19: ( ( query_body_clause )+ )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1136:2: ( query_body_clause )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1136:2: ( query_body_clause )+
                	int cnt111 = 0;
                	do 
                	{
                	    int alt111 = 2;
                	    int LA111_0 = input.LA(1);

                	    if ( ((LA111_0 >= 225 && LA111_0 <= 226) || (LA111_0 >= 229 && LA111_0 <= 230) || LA111_0 == 236) )
                	    {
                	        alt111 = 1;
                	    }


                	    switch (alt111) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1136:2: query_body_clause
                			    {
                			    	PushFollow(FOLLOW_query_body_clause_in_query_body_clauses5489);
                			    	query_body_clause();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    if ( cnt111 >= 1 ) goto loop111;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee111 =
                		                new EarlyExitException(111, input);
                		            throw eee111;
                	    }
                	    cnt111++;
                	} while (true);

                	loop111:
                		;	// Stops C# compiler whining that label 'loop111' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "query_body_clauses"

        public class query_body_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "query_body_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1137:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
        public JavaPrettyPrint.query_body_clause_return query_body_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.query_body_clause_return retval = new JavaPrettyPrint.query_body_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1137:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
                int alt112 = 5;
                switch ( input.LA(1) ) 
                {
                case 225:
                	{
                    alt112 = 1;
                    }
                    break;
                case 229:
                	{
                    alt112 = 2;
                    }
                    break;
                case 236:
                	{
                    alt112 = 3;
                    }
                    break;
                case 226:
                	{
                    alt112 = 4;
                    }
                    break;
                case 230:
                	{
                    alt112 = 5;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d112s0 =
                	        new NoViableAltException("", 112, 0, input);

                	    throw nvae_d112s0;
                }

                switch (alt112) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1138:2: from_clause
                        {
                        	PushFollow(FOLLOW_from_clause_in_query_body_clause5498);
                        	from_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1139:4: let_clause
                        {
                        	PushFollow(FOLLOW_let_clause_in_query_body_clause5503);
                        	let_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1140:4: where_clause
                        {
                        	PushFollow(FOLLOW_where_clause_in_query_body_clause5508);
                        	where_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1141:4: join_clause
                        {
                        	PushFollow(FOLLOW_join_clause_in_query_body_clause5513);
                        	join_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1142:4: orderby_clause
                        {
                        	PushFollow(FOLLOW_orderby_clause_in_query_body_clause5518);
                        	orderby_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "query_body_clause"

        public class from_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "from_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1143:1: from_clause : 'from' ( type )? identifier 'in' expression ;
        public JavaPrettyPrint.from_clause_return from_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.from_clause_return retval = new JavaPrettyPrint.from_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1143:12: ( 'from' ( type )? identifier 'in' expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1144:2: 'from' ( type )? identifier 'in' expression
                {
                	Match(input,225,FOLLOW_225_in_from_clause5525); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1144:11: ( type )?
                	int alt113 = 2;
                	int LA113_0 = input.LA(1);

                	if ( (LA113_0 == TYPE) )
                	{
                	    alt113 = 1;
                	}
                	switch (alt113) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1144:11: type
                	        {
                	        	PushFollow(FOLLOW_type_in_from_clause5529);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_from_clause5534);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,IN,FOLLOW_IN_in_from_clause5538); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_from_clause5542);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "from_clause"

        public class join_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "join_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1145:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
        public JavaPrettyPrint.join_clause_return join_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.join_clause_return retval = new JavaPrettyPrint.join_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1145:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1146:2: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
                {
                	Match(input,226,FOLLOW_226_in_join_clause5550); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1146:11: ( type )?
                	int alt114 = 2;
                	int LA114_0 = input.LA(1);

                	if ( (LA114_0 == TYPE) )
                	{
                	    alt114 = 1;
                	}
                	switch (alt114) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1146:11: type
                	        {
                	        	PushFollow(FOLLOW_type_in_join_clause5554);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_join_clause5559);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,IN,FOLLOW_IN_in_join_clause5563); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_join_clause5567);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,227,FOLLOW_227_in_join_clause5571); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_join_clause5575);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,228,FOLLOW_228_in_join_clause5579); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_join_clause5583);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1146:94: ( 'into' identifier )?
                	int alt115 = 2;
                	int LA115_0 = input.LA(1);

                	if ( (LA115_0 == 224) )
                	{
                	    alt115 = 1;
                	}
                	switch (alt115) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1146:95: 'into' identifier
                	        {
                	        	Match(input,224,FOLLOW_224_in_join_clause5586); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_identifier_in_join_clause5588);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "join_clause"

        public class let_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "let_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1147:1: let_clause : 'let' identifier '=' expression ;
        public JavaPrettyPrint.let_clause_return let_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.let_clause_return retval = new JavaPrettyPrint.let_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1147:11: ( 'let' identifier '=' expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1148:2: 'let' identifier '=' expression
                {
                	Match(input,229,FOLLOW_229_in_let_clause5598); if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_let_clause5602);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_let_clause5606); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_let_clause5610);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "let_clause"

        public class orderby_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "orderby_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1149:1: orderby_clause : 'orderby' ordering_list ;
        public JavaPrettyPrint.orderby_clause_return orderby_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.orderby_clause_return retval = new JavaPrettyPrint.orderby_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1149:15: ( 'orderby' ordering_list )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1150:2: 'orderby' ordering_list
                {
                	Match(input,230,FOLLOW_230_in_orderby_clause5617); if (state.failed) return retval;
                	PushFollow(FOLLOW_ordering_list_in_orderby_clause5621);
                	ordering_list();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "orderby_clause"

        public class ordering_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "ordering_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1151:1: ordering_list : ordering ( ',' ordering )* ;
        public JavaPrettyPrint.ordering_list_return ordering_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.ordering_list_return retval = new JavaPrettyPrint.ordering_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1151:14: ( ordering ( ',' ordering )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1152:2: ordering ( ',' ordering )*
                {
                	PushFollow(FOLLOW_ordering_in_ordering_list5629);
                	ordering();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1152:13: ( ',' ordering )*
                	do 
                	{
                	    int alt116 = 2;
                	    int LA116_0 = input.LA(1);

                	    if ( (LA116_0 == COMMA) )
                	    {
                	        alt116 = 1;
                	    }


                	    switch (alt116) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1152:14: ',' ordering
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_ordering_list5634); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_ordering_in_ordering_list5638);
                			    	ordering();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop116;
                	    }
                	} while (true);

                	loop116:
                		;	// Stops C# compiler whining that label 'loop116' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "ordering_list"

        public class ordering_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "ordering"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1153:1: ordering : expression ( ordering_direction )? ;
        public JavaPrettyPrint.ordering_return ordering() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.ordering_return retval = new JavaPrettyPrint.ordering_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1153:9: ( expression ( ordering_direction )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1154:2: expression ( ordering_direction )?
                {
                	PushFollow(FOLLOW_expression_in_ordering5648);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1154:16: ( ordering_direction )?
                	int alt117 = 2;
                	int LA117_0 = input.LA(1);

                	if ( ((LA117_0 >= 231 && LA117_0 <= 232)) )
                	{
                	    alt117 = 1;
                	}
                	switch (alt117) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1154:16: ordering_direction
                	        {
                	        	PushFollow(FOLLOW_ordering_direction_in_ordering5653);
                	        	ordering_direction();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "ordering"

        public class ordering_direction_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "ordering_direction"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1156:1: ordering_direction : ( 'ascending' | 'descending' );
        public JavaPrettyPrint.ordering_direction_return ordering_direction() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.ordering_direction_return retval = new JavaPrettyPrint.ordering_direction_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1156:19: ( 'ascending' | 'descending' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:
                {
                	if ( (input.LA(1) >= 231 && input.LA(1) <= 232) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "ordering_direction"

        public class select_or_group_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "select_or_group_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1159:1: select_or_group_clause : ( select_clause | group_clause );
        public JavaPrettyPrint.select_or_group_clause_return select_or_group_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.select_or_group_clause_return retval = new JavaPrettyPrint.select_or_group_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1159:23: ( select_clause | group_clause )
                int alt118 = 2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0 == 233) )
                {
                    alt118 = 1;
                }
                else if ( (LA118_0 == 234) )
                {
                    alt118 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d118s0 =
                        new NoViableAltException("", 118, 0, input);

                    throw nvae_d118s0;
                }
                switch (alt118) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1160:2: select_clause
                        {
                        	PushFollow(FOLLOW_select_clause_in_select_or_group_clause5676);
                        	select_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1161:4: group_clause
                        {
                        	PushFollow(FOLLOW_group_clause_in_select_or_group_clause5681);
                        	group_clause();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "select_or_group_clause"

        public class select_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "select_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1162:1: select_clause : 'select' expression ;
        public JavaPrettyPrint.select_clause_return select_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.select_clause_return retval = new JavaPrettyPrint.select_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1162:14: ( 'select' expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1163:2: 'select' expression
                {
                	Match(input,233,FOLLOW_233_in_select_clause5689); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_select_clause5693);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "select_clause"

        public class group_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "group_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1164:1: group_clause : 'group' expression 'by' expression ;
        public JavaPrettyPrint.group_clause_return group_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.group_clause_return retval = new JavaPrettyPrint.group_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1164:13: ( 'group' expression 'by' expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1165:2: 'group' expression 'by' expression
                {
                	Match(input,234,FOLLOW_234_in_group_clause5701); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_group_clause5705);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,235,FOLLOW_235_in_group_clause5709); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_group_clause5713);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "group_clause"

        public class where_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "where_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1166:1: where_clause : 'where' boolean_expression ;
        public JavaPrettyPrint.where_clause_return where_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.where_clause_return retval = new JavaPrettyPrint.where_clause_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1166:13: ( 'where' boolean_expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1167:2: 'where' boolean_expression
                {
                	Match(input,236,FOLLOW_236_in_where_clause5721); if (state.failed) return retval;
                	PushFollow(FOLLOW_boolean_expression_in_where_clause5725);
                	boolean_expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "where_clause"

        public class boolean_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "boolean_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1168:1: boolean_expression : expression -> { $expression.st };
        public JavaPrettyPrint.boolean_expression_return boolean_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.boolean_expression_return retval = new JavaPrettyPrint.boolean_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression111 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1168:19: ( expression -> { $expression.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1169:2: expression
                {
                	PushFollow(FOLLOW_expression_in_boolean_expression5733);
                	expression111 = expression();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1169:13: -> { $expression.st }
                	  {
                	      retval.ST =  ((expression111 != null) ? expression111.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "boolean_expression"

        public class global_attributes_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "global_attributes"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1174:1: global_attributes : ( global_attribute )+ ;
        public JavaPrettyPrint.global_attributes_return global_attributes() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.global_attributes_return retval = new JavaPrettyPrint.global_attributes_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1174:18: ( ( global_attribute )+ )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1175:2: ( global_attribute )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1175:2: ( global_attribute )+
                	int cnt119 = 0;
                	do 
                	{
                	    int alt119 = 2;
                	    int LA119_0 = input.LA(1);

                	    if ( (LA119_0 == GLOBAL_ATTRIBUTE) )
                	    {
                	        alt119 = 1;
                	    }


                	    switch (alt119) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1175:2: global_attribute
                			    {
                			    	PushFollow(FOLLOW_global_attribute_in_global_attributes5749);
                			    	global_attribute();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    if ( cnt119 >= 1 ) goto loop119;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee119 =
                		                new EarlyExitException(119, input);
                		            throw eee119;
                	    }
                	    cnt119++;
                	} while (true);

                	loop119:
                		;	// Stops C# compiler whining that label 'loop119' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "global_attributes"

        public class global_attribute_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "global_attribute"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1176:1: global_attribute : ^( GLOBAL_ATTRIBUTE global_attribute_target_specifier attribute_list ) ;
        public JavaPrettyPrint.global_attribute_return global_attribute() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.global_attribute_return retval = new JavaPrettyPrint.global_attribute_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1176:17: ( ^( GLOBAL_ATTRIBUTE global_attribute_target_specifier attribute_list ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1177:2: ^( GLOBAL_ATTRIBUTE global_attribute_target_specifier attribute_list )
                {
                	Match(input,GLOBAL_ATTRIBUTE,FOLLOW_GLOBAL_ATTRIBUTE_in_global_attribute5760); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute5762);
                	global_attribute_target_specifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_attribute_list_in_global_attribute5766);
                	attribute_list();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "global_attribute"

        public class global_attribute_target_specifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "global_attribute_target_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1178:1: global_attribute_target_specifier : global_attribute_target ':' ;
        public JavaPrettyPrint.global_attribute_target_specifier_return global_attribute_target_specifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.global_attribute_target_specifier_return retval = new JavaPrettyPrint.global_attribute_target_specifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1178:34: ( global_attribute_target ':' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1179:2: global_attribute_target ':'
                {
                	PushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier5776);
                	global_attribute_target();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,211,FOLLOW_211_in_global_attribute_target_specifier5780); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "global_attribute_target_specifier"

        public class global_attribute_target_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "global_attribute_target"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1180:1: global_attribute_target : ( 'assembly' | 'module' );
        public JavaPrettyPrint.global_attribute_target_return global_attribute_target() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.global_attribute_target_return retval = new JavaPrettyPrint.global_attribute_target_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1180:24: ( 'assembly' | 'module' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:
                {
                	if ( (input.LA(1) >= 237 && input.LA(1) <= 238) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "global_attribute_target"

        public class attributes_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attributes"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1182:1: attributes : attribute_sections -> { $attribute_sections.st };
        public JavaPrettyPrint.attributes_return attributes() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attributes_return retval = new JavaPrettyPrint.attributes_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.attribute_sections_return attribute_sections112 = default(JavaPrettyPrint.attribute_sections_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1182:11: ( attribute_sections -> { $attribute_sections.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1183:2: attribute_sections
                {
                	PushFollow(FOLLOW_attribute_sections_in_attributes5802);
                	attribute_sections112 = attribute_sections();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1183:21: -> { $attribute_sections.st }
                	  {
                	      retval.ST =  ((attribute_sections112 != null) ? attribute_sections112.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attributes"

        public class attribute_sections_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_sections"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1184:1: attribute_sections : (ass+= attribute_section )+ ;
        public JavaPrettyPrint.attribute_sections_return attribute_sections() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_sections_return retval = new JavaPrettyPrint.attribute_sections_return();
            retval.start = input.LT(1);

            List list_ass = null;
            RuleReturnScope ass = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1184:19: ( (ass+= attribute_section )+ )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1185:2: (ass+= attribute_section )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1185:5: (ass+= attribute_section )+
                	int cnt120 = 0;
                	do 
                	{
                	    int alt120 = 2;
                	    int LA120_0 = input.LA(1);

                	    if ( (LA120_0 == ATTRIBUTE) )
                	    {
                	        alt120 = 1;
                	    }


                	    switch (alt120) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1185:5: ass+= attribute_section
                			    {
                			    	PushFollow(FOLLOW_attribute_section_in_attribute_sections5817);
                			    	ass = attribute_section();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ass == null) list_ass = new ArrayList();
                			    	list_ass.Add(ass.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt120 >= 1 ) goto loop120;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee120 =
                		                new EarlyExitException(120, input);
                		            throw eee120;
                	    }
                	    cnt120++;
                	} while (true);

                	loop120:
                		;	// Stops C# compiler whining that label 'loop120' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_sections"

        public class attribute_section_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_section"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1186:1: attribute_section : ^( ATTRIBUTE ( attribute_target_specifier )? attribute_list ) ;
        public JavaPrettyPrint.attribute_section_return attribute_section() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_section_return retval = new JavaPrettyPrint.attribute_section_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1186:18: ( ^( ATTRIBUTE ( attribute_target_specifier )? attribute_list ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1187:2: ^( ATTRIBUTE ( attribute_target_specifier )? attribute_list )
                {
                	Match(input,ATTRIBUTE,FOLLOW_ATTRIBUTE_in_attribute_section5828); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1187:14: ( attribute_target_specifier )?
                	int alt121 = 2;
                	switch ( input.LA(1) ) 
                	{
                	    case 239:
                	    	{
                	        int LA121_1 = input.LA(2);

                	        if ( (LA121_1 == 211) )
                	        {
                	            alt121 = 1;
                	        }
                	        }
                	        break;
                	    case 241:
                	    	{
                	        int LA121_3 = input.LA(2);

                	        if ( (LA121_3 == 211) )
                	        {
                	            alt121 = 1;
                	        }
                	        }
                	        break;
                	    case 242:
                	    	{
                	        int LA121_4 = input.LA(2);

                	        if ( (LA121_4 == 211) )
                	        {
                	            alt121 = 1;
                	        }
                	        }
                	        break;
                	    case 243:
                	    	{
                	        int LA121_5 = input.LA(2);

                	        if ( (LA121_5 == 211) )
                	        {
                	            alt121 = 1;
                	        }
                	        }
                	        break;
                	    case 244:
                	    	{
                	        int LA121_6 = input.LA(2);

                	        if ( (LA121_6 == 211) )
                	        {
                	            alt121 = 1;
                	        }
                	        }
                	        break;
                	    case RETURN:
                	    case 240:
                	    	{
                	        alt121 = 1;
                	        }
                	        break;
                	}

                	switch (alt121) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1187:14: attribute_target_specifier
                	        {
                	        	PushFollow(FOLLOW_attribute_target_specifier_in_attribute_section5830);
                	        	attribute_target_specifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_attribute_list_in_attribute_section5835);
                	attribute_list();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_section"

        public class attribute_target_specifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_target_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1188:1: attribute_target_specifier : attribute_target ':' ;
        public JavaPrettyPrint.attribute_target_specifier_return attribute_target_specifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_target_specifier_return retval = new JavaPrettyPrint.attribute_target_specifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1188:27: ( attribute_target ':' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1189:2: attribute_target ':'
                {
                	PushFollow(FOLLOW_attribute_target_in_attribute_target_specifier5845);
                	attribute_target();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,211,FOLLOW_211_in_attribute_target_specifier5849); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_target_specifier"

        public class attribute_target_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_target"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1190:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
        public JavaPrettyPrint.attribute_target_return attribute_target() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_target_return retval = new JavaPrettyPrint.attribute_target_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1190:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:
                {
                	if ( input.LA(1) == RETURN || (input.LA(1) >= 239 && input.LA(1) <= 244) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_target"

        public class attribute_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1192:1: attribute_list : attribute ( ',' attribute )* ;
        public JavaPrettyPrint.attribute_list_return attribute_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_list_return retval = new JavaPrettyPrint.attribute_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1192:15: ( attribute ( ',' attribute )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1193:2: attribute ( ',' attribute )*
                {
                	PushFollow(FOLLOW_attribute_in_attribute_list5891);
                	attribute();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1193:12: ( ',' attribute )*
                	do 
                	{
                	    int alt122 = 2;
                	    int LA122_0 = input.LA(1);

                	    if ( (LA122_0 == COMMA) )
                	    {
                	        alt122 = 1;
                	    }


                	    switch (alt122) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1193:13: ',' attribute
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_attribute_list5894); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_attribute_in_attribute_list5896);
                			    	attribute();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop122;
                	    }
                	} while (true);

                	loop122:
                		;	// Stops C# compiler whining that label 'loop122' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_list"

        public class attribute_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1194:1: attribute : type_name ( attribute_arguments )? ;
        public JavaPrettyPrint.attribute_return attribute() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_return retval = new JavaPrettyPrint.attribute_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1194:10: ( type_name ( attribute_arguments )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1195:2: type_name ( attribute_arguments )?
                {
                	PushFollow(FOLLOW_type_name_in_attribute5908);
                	type_name();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1195:14: ( attribute_arguments )?
                	int alt123 = 2;
                	int LA123_0 = input.LA(1);

                	if ( (LA123_0 == LPAREN) )
                	{
                	    alt123 = 1;
                	}
                	switch (alt123) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1195:14: attribute_arguments
                	        {
                	        	PushFollow(FOLLOW_attribute_arguments_in_attribute5912);
                	        	attribute_arguments();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute"

        public class attribute_arguments_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_arguments"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1197:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
        public JavaPrettyPrint.attribute_arguments_return attribute_arguments() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_arguments_return retval = new JavaPrettyPrint.attribute_arguments_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1197:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1198:2: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_attribute_arguments5923); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1198:8: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
                	int alt125 = 2;
                	int LA125_0 = input.LA(1);

                	if ( (LA125_0 == RPAREN) )
                	{
                	    alt125 = 1;
                	}
                	else if ( ((LA125_0 >= PARAMS && LA125_0 <= PARAMS_TYPELESS) || (LA125_0 >= MONOPLUS && LA125_0 <= APPLY) || (LA125_0 >= NEW && LA125_0 <= NEW_ANON_OBJECT) || (LA125_0 >= OBJECT && LA125_0 <= THIS) || LA125_0 == NULL_COALESCE || (LA125_0 >= COND_EXPR && LA125_0 <= LEFT_SHIFT) || (LA125_0 >= SUPER && LA125_0 <= LAMBDA) || LA125_0 == CAST_EXPR || LA125_0 == JAVAWRAPPER || (LA125_0 >= BOOL && LA125_0 <= GT) || (LA125_0 >= ELIF && LA125_0 <= UNDEF) || LA125_0 == 195 || LA125_0 == 208 || (LA125_0 >= 214 && LA125_0 <= 219) || LA125_0 == 221 || (LA125_0 >= 224 && LA125_0 <= 239) || (LA125_0 >= 241 && LA125_0 <= 244) || (LA125_0 >= 247 && LA125_0 <= 254) || LA125_0 == 256 || (LA125_0 >= 263 && LA125_0 <= 264) || (LA125_0 >= 274 && LA125_0 <= 277)) )
                	{
                	    alt125 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d125s0 =
                	        new NoViableAltException("", 125, 0, input);

                	    throw nvae_d125s0;
                	}
                	switch (alt125) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1198:9: ')'
                	        {
                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments5928); if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:9: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
                	        	{
                	        		PushFollow(FOLLOW_positional_argument_in_attribute_arguments5948);
                	        		positional_argument();
                	        		state._fsp--;
                	        		if (state.failed) return retval;
                	        		// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:31: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
                	        		do 
                	        		{
                	        		    int alt124 = 3;
                	        		    alt124 = dfa124.Predict(input);
                	        		    switch (alt124) 
                	        			{
                	        				case 1 :
                	        				    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:32: ( ',' identifier '=' )=> named_argument
                	        				    {
                	        				    	PushFollow(FOLLOW_named_argument_in_attribute_arguments5967);
                	        				    	named_argument();
                	        				    	state._fsp--;
                	        				    	if (state.failed) return retval;

                	        				    }
                	        				    break;
                	        				case 2 :
                	        				    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1200:15: ',' positional_argument
                	        				    {
                	        				    	Match(input,COMMA,FOLLOW_COMMA_in_attribute_arguments5983); if (state.failed) return retval;
                	        				    	PushFollow(FOLLOW_positional_argument_in_attribute_arguments5985);
                	        				    	positional_argument();
                	        				    	state._fsp--;
                	        				    	if (state.failed) return retval;

                	        				    }
                	        				    break;

                	        				default:
                	        				    goto loop124;
                	        		    }
                	        		} while (true);

                	        		loop124:
                	        			;	// Stops C# compiler whining that label 'loop124' has no statements


                	        	}

                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments5996); if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_arguments"

        public class positional_argument_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "positional_argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1203:1: positional_argument_list : ^( ARGS ( positional_argument )+ ) ;
        public JavaPrettyPrint.positional_argument_list_return positional_argument_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.positional_argument_list_return retval = new JavaPrettyPrint.positional_argument_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1203:25: ( ^( ARGS ( positional_argument )+ ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1204:2: ^( ARGS ( positional_argument )+ )
                {
                	Match(input,ARGS,FOLLOW_ARGS_in_positional_argument_list6011); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1204:9: ( positional_argument )+
                	int cnt126 = 0;
                	do 
                	{
                	    int alt126 = 2;
                	    int LA126_0 = input.LA(1);

                	    if ( ((LA126_0 >= PARAMS && LA126_0 <= PARAMS_TYPELESS) || (LA126_0 >= MONOPLUS && LA126_0 <= APPLY) || (LA126_0 >= NEW && LA126_0 <= NEW_ANON_OBJECT) || (LA126_0 >= OBJECT && LA126_0 <= THIS) || LA126_0 == NULL_COALESCE || (LA126_0 >= COND_EXPR && LA126_0 <= LEFT_SHIFT) || (LA126_0 >= SUPER && LA126_0 <= LAMBDA) || LA126_0 == CAST_EXPR || LA126_0 == JAVAWRAPPER || (LA126_0 >= BOOL && LA126_0 <= GT) || (LA126_0 >= ELIF && LA126_0 <= UNDEF) || LA126_0 == 195 || LA126_0 == 208 || (LA126_0 >= 214 && LA126_0 <= 219) || LA126_0 == 221 || (LA126_0 >= 224 && LA126_0 <= 239) || (LA126_0 >= 241 && LA126_0 <= 244) || (LA126_0 >= 247 && LA126_0 <= 254) || LA126_0 == 256 || (LA126_0 >= 263 && LA126_0 <= 264) || (LA126_0 >= 274 && LA126_0 <= 277)) )
                	    {
                	        alt126 = 1;
                	    }


                	    switch (alt126) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1204:9: positional_argument
                			    {
                			    	PushFollow(FOLLOW_positional_argument_in_positional_argument_list6013);
                			    	positional_argument();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    if ( cnt126 >= 1 ) goto loop126;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee126 =
                		                new EarlyExitException(126, input);
                		            throw eee126;
                	    }
                	    cnt126++;
                	} while (true);

                	loop126:
                		;	// Stops C# compiler whining that label 'loop126' has no statements


                	Match(input, Token.UP, null); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "positional_argument_list"

        public class positional_argument_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "positional_argument"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1205:1: positional_argument : attribute_argument_expression ;
        public JavaPrettyPrint.positional_argument_return positional_argument() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.positional_argument_return retval = new JavaPrettyPrint.positional_argument_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1205:20: ( attribute_argument_expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1206:2: attribute_argument_expression
                {
                	PushFollow(FOLLOW_attribute_argument_expression_in_positional_argument6024);
                	attribute_argument_expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "positional_argument"

        public class named_argument_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "named_argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1207:1: named_argument_list : ^( ARGS ( named_argument )+ ) ;
        public JavaPrettyPrint.named_argument_list_return named_argument_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.named_argument_list_return retval = new JavaPrettyPrint.named_argument_list_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1207:20: ( ^( ARGS ( named_argument )+ ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1208:2: ^( ARGS ( named_argument )+ )
                {
                	Match(input,ARGS,FOLLOW_ARGS_in_named_argument_list6034); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1208:9: ( named_argument )+
                	int cnt127 = 0;
                	do 
                	{
                	    int alt127 = 2;
                	    int LA127_0 = input.LA(1);

                	    if ( (LA127_0 == IDENTIFIER || (LA127_0 >= ELIF && LA127_0 <= UNDEF) || LA127_0 == 195 || LA127_0 == 221 || (LA127_0 >= 224 && LA127_0 <= 239) || (LA127_0 >= 241 && LA127_0 <= 244) || (LA127_0 >= 247 && LA127_0 <= 250) || LA127_0 == 256 || (LA127_0 >= 263 && LA127_0 <= 264) || LA127_0 == 274 || LA127_0 == 277) )
                	    {
                	        alt127 = 1;
                	    }


                	    switch (alt127) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1208:9: named_argument
                			    {
                			    	PushFollow(FOLLOW_named_argument_in_named_argument_list6036);
                			    	named_argument();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    if ( cnt127 >= 1 ) goto loop127;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee127 =
                		                new EarlyExitException(127, input);
                		            throw eee127;
                	    }
                	    cnt127++;
                	} while (true);

                	loop127:
                		;	// Stops C# compiler whining that label 'loop127' has no statements


                	Match(input, Token.UP, null); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "named_argument_list"

        public class named_argument_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "named_argument"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1209:1: named_argument : identifier '=' attribute_argument_expression ;
        public JavaPrettyPrint.named_argument_return named_argument() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.named_argument_return retval = new JavaPrettyPrint.named_argument_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1209:15: ( identifier '=' attribute_argument_expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1210:2: identifier '=' attribute_argument_expression
                {
                	PushFollow(FOLLOW_identifier_in_named_argument6047);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_named_argument6051); if (state.failed) return retval;
                	PushFollow(FOLLOW_attribute_argument_expression_in_named_argument6055);
                	attribute_argument_expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "named_argument"

        public class attribute_argument_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "attribute_argument_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1211:1: attribute_argument_expression : expression ;
        public JavaPrettyPrint.attribute_argument_expression_return attribute_argument_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.attribute_argument_expression_return retval = new JavaPrettyPrint.attribute_argument_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1211:30: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1212:2: expression
                {
                	PushFollow(FOLLOW_expression_in_attribute_argument_expression6064);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "attribute_argument_expression"

        public class class_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1218:1: class_declaration[bool topLevel] : ^(c= CLASS ( 'partial' )? ( PAYLOAD )? ( attributes )? ( modifiers )? identifier ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( class_extends )? ( class_implements )? class_body ) -> {isPartial}? -> class(modifiers= $modifiers.st name= $identifier.st typeparams=$type_parameter_list.stcomments= preComments extends= $class_extends.st imps= $class_implements.st body=$class_body.stpartial_types= emitParts($TypeContext::partialTypes) );
        public JavaPrettyPrint.class_declaration_return class_declaration(bool topLevel) // throws RecognitionException [1]
        {   
            TypeContext_stack.Push(new TypeContext_scope());

            JavaPrettyPrint.class_declaration_return retval = new JavaPrettyPrint.class_declaration_return();
            retval.start = input.LT(1);

            CommonTree c = null;
            CommonTree PAYLOAD115 = null;
            JavaPrettyPrint.identifier_return identifier113 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.type_parameter_constraints_clauses_return type_parameter_constraints_clauses114 = default(JavaPrettyPrint.type_parameter_constraints_clauses_return);

            JavaPrettyPrint.attributes_return attributes116 = default(JavaPrettyPrint.attributes_return);

            JavaPrettyPrint.modifiers_return modifiers117 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.type_parameter_list_return type_parameter_list118 = default(JavaPrettyPrint.type_parameter_list_return);

            JavaPrettyPrint.class_extends_return class_extends119 = default(JavaPrettyPrint.class_extends_return);

            JavaPrettyPrint.class_implements_return class_implements120 = default(JavaPrettyPrint.class_implements_return);

            JavaPrettyPrint.class_body_return class_body121 = default(JavaPrettyPrint.class_body_return);



                List<string> preComments = null;
                String name = "";
                bool isPartial = false;
                ((TypeContext_scope)TypeContext_stack.Peek()).partialTypes =  new Dictionary<string,ClassDescriptorSerialized>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1225:2: ( ^(c= CLASS ( 'partial' )? ( PAYLOAD )? ( attributes )? ( modifiers )? identifier ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( class_extends )? ( class_implements )? class_body ) -> {isPartial}? -> class(modifiers= $modifiers.st name= $identifier.st typeparams=$type_parameter_list.stcomments= preComments extends= $class_extends.st imps= $class_implements.st body=$class_body.stpartial_types= emitParts($TypeContext::partialTypes) ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1226:4: ^(c= CLASS ( 'partial' )? ( PAYLOAD )? ( attributes )? ( modifiers )? identifier ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( class_extends )? ( class_implements )? class_body )
                {
                	c=(CommonTree)Match(input,CLASS,FOLLOW_CLASS_in_class_declaration6093); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1226:14: ( 'partial' )?
                	int alt128 = 2;
                	int LA128_0 = input.LA(1);

                	if ( (LA128_0 == 196) )
                	{
                	    alt128 = 1;
                	}
                	switch (alt128) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1226:15: 'partial'
                	        {
                	        	Match(input,196,FOLLOW_196_in_class_declaration6096); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   isPartial = true; 
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1226:49: ( PAYLOAD )?
                	int alt129 = 2;
                	int LA129_0 = input.LA(1);

                	if ( (LA129_0 == PAYLOAD) )
                	{
                	    alt129 = 1;
                	}
                	switch (alt129) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1226:49: PAYLOAD
                	        {
                	        	PAYLOAD115=(CommonTree)Match(input,PAYLOAD,FOLLOW_PAYLOAD_in_class_declaration6102); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:13: ( attributes )?
                	int alt130 = 2;
                	int LA130_0 = input.LA(1);

                	if ( (LA130_0 == ATTRIBUTE) )
                	{
                	    alt130 = 1;
                	}
                	switch (alt130) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:13: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_class_declaration6117);
                	        	attributes116 = attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:25: ( modifiers )?
                	int alt131 = 2;
                	int LA131_0 = input.LA(1);

                	if ( (LA131_0 == FINAL || (LA131_0 >= PUBLIC && LA131_0 <= PRIVATE) || LA131_0 == STATIC || LA131_0 == 194 || LA131_0 == 197 || (LA131_0 >= 199 && LA131_0 <= 204)) )
                	{
                	    alt131 = 1;
                	}
                	switch (alt131) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:25: modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_class_declaration6120);
                	        	modifiers117 = modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_class_declaration6123);
                	identifier113 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   name = ((identifier113 != null) ? identifier113.ST : null).ToString(); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:85: ( type_parameter_constraints_clauses )?
                	int alt132 = 2;
                	int LA132_0 = input.LA(1);

                	if ( (LA132_0 == TYPE_PARAM_CONSTRAINT) )
                	{
                	    alt132 = 1;
                	}
                	switch (alt132) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:85: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration6127);
                	        	type_parameter_constraints_clauses114 = type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:121: ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )?
                	int alt133 = 2;
                	int LA133_0 = input.LA(1);

                	if ( (LA133_0 == ATTRIBUTE || LA133_0 == IDENTIFIER || (LA133_0 >= ELIF && LA133_0 <= UNDEF) || LA133_0 == 195 || LA133_0 == 221 || (LA133_0 >= 224 && LA133_0 <= 239) || (LA133_0 >= 241 && LA133_0 <= 244) || (LA133_0 >= 247 && LA133_0 <= 250) || LA133_0 == 256 || (LA133_0 >= 263 && LA133_0 <= 264) || LA133_0 == 274 || LA133_0 == 277) )
                	{
                	    alt133 = 1;
                	}
                	switch (alt133) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1227:121: type_parameter_list[$type_parameter_constraints_clauses.tpConstraints]
                	        {
                	        	PushFollow(FOLLOW_type_parameter_list_in_class_declaration6130);
                	        	type_parameter_list118 = type_parameter_list(((type_parameter_constraints_clauses114 != null) ? type_parameter_constraints_clauses114.tpConstraints : default(Dictionary<string,StringTemplate>)));
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1228:10: ( class_extends )?
                	int alt134 = 2;
                	int LA134_0 = input.LA(1);

                	if ( (LA134_0 == EXTENDS) )
                	{
                	    alt134 = 1;
                	}
                	switch (alt134) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1228:10: class_extends
                	        {
                	        	PushFollow(FOLLOW_class_extends_in_class_declaration6143);
                	        	class_extends119 = class_extends();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1228:25: ( class_implements )?
                	int alt135 = 2;
                	int LA135_0 = input.LA(1);

                	if ( (LA135_0 == IMPLEMENTS) )
                	{
                	    alt135 = 1;
                	}
                	switch (alt135) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1228:25: class_implements
                	        {
                	        	PushFollow(FOLLOW_class_implements_in_class_declaration6146);
                	        	class_implements120 = class_implements();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   preComments = CollectedComments; preComments.Add(((PAYLOAD115 != null) ? PAYLOAD115.Text : null)); 
                	}
                	PushFollow(FOLLOW_class_body_in_class_declaration6152);
                	class_body121 = class_body();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{

                	           
                	           if (isPartial) {
                	              // build a serialized descriptor and merge it
                	              ClassDescriptorSerialized part = new ClassDescriptorSerialized(name);

                	              if (preComments != null) { 
                	                 foreach (String comment in preComments) {
                	                    part.Comments += comment ;
                	                 }
                	              }
                	              // Union all attributes
                	              part.Atts += mkString(((attributes116 != null) ? attributes116.ST : null));
                	              // Merge modifiers
                	              if (((modifiers117 != null) ? modifiers117.modList : default(List<string>)) != null && ((modifiers117 != null) ? modifiers117.modList : default(List<string>)).Count > 0) {
                	                 foreach (string m in ((modifiers117 != null) ? modifiers117.modList : default(List<string>))) {
                	                    part.Mods.Add(m);
                	                 }
                	              }
                	              part.TypeParameterList = mkString(((type_parameter_list118 != null) ? type_parameter_list118.ST : null));

                	              if (((class_extends119 != null) ? class_extends119.extendList : default(List<String>)) != null && ((class_extends119 != null) ? class_extends119.extendList : default(List<String>)).Count > 0) {
                	                 foreach (string m in ((class_extends119 != null) ? class_extends119.extendList : default(List<String>))) {
                	                    part.ClassExtends.Add(m);
                	                 }
                	              }
                	              
                	              if (((class_implements120 != null) ? class_implements120.implementList : default(List<String>)) != null && ((class_implements120 != null) ? class_implements120.implementList : default(List<String>)).Count > 0) {
                	                 foreach (string m in ((class_implements120 != null) ? class_implements120.implementList : default(List<String>))) {
                	                    part.ClassImplements.Add(m);
                	                 }
                	              }

                	              part.ClassBody += mkString(((class_body121 != null) ? class_body121.ST : null));
                	              part.PartialTypes = ((TypeContext_scope)TypeContext_stack.Peek()).partialTypes;

                	              // Place this in our parent's scope
                	              Dictionary<string,ClassDescriptorSerialized> parentPartialTypes = ((TypeContext_scope)TypeContext_stack.ToArray()[1]).partialTypes;
                	              if (!parentPartialTypes.ContainsKey(name)) {
                	                 parentPartialTypes[name] = part;
                	              }
                	              else {
                	                 mergeParts(parentPartialTypes[name], part);
                	              }
                	           }
                	        
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1275:5: -> {isPartial}?
                	  if (isPartial) {
                	      retval.ST = null;;
                	  }
                	  else // 1276:5: -> class(modifiers= $modifiers.st name= $identifier.st typeparams=$type_parameter_list.stcomments= preComments extends= $class_extends.st imps= $class_implements.st body=$class_body.stpartial_types= emitParts($TypeContext::partialTypes) )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("class",
                	    new STAttrMap().Add("modifiers",  ((modifiers117 != null) ? modifiers117.ST : null) ).Add("name",  ((identifier113 != null) ? identifier113.ST : null) ).Add("typeparams", ((type_parameter_list118 != null) ? type_parameter_list118.ST : null)).Add("comments",  preComments ).Add("extends",  ((class_extends119 != null) ? class_extends119.ST : null) ).Add("imps",  ((class_implements120 != null) ? class_implements120.ST : null) ).Add("body", ((class_body121 != null) ? class_body121.ST : null)).Add("partial_types",  emitParts(((TypeContext_scope)TypeContext_stack.Peek()).partialTypes) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                TypeContext_stack.Pop();

            }
            return retval;
        }
        // $ANTLR end "class_declaration"

        public class type_parameter_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1279:1: type_parameter_list[Dictionary<string,StringTemplate> tpConstraints] : ( ( attributes )? t+= type_parameter[tpConstraints] )+ -> type_parameter_list(items= $t );
        public JavaPrettyPrint.type_parameter_list_return type_parameter_list(Dictionary<string,StringTemplate> tpConstraints) // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_parameter_list_return retval = new JavaPrettyPrint.type_parameter_list_return();
            retval.start = input.LT(1);

            List list_t = null;
            RuleReturnScope t = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1279:70: ( ( ( attributes )? t+= type_parameter[tpConstraints] )+ -> type_parameter_list(items= $t ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1280:5: ( ( attributes )? t+= type_parameter[tpConstraints] )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1280:5: ( ( attributes )? t+= type_parameter[tpConstraints] )+
                	int cnt137 = 0;
                	do 
                	{
                	    int alt137 = 2;
                	    int LA137_0 = input.LA(1);

                	    if ( (LA137_0 == ATTRIBUTE || LA137_0 == IDENTIFIER || (LA137_0 >= ELIF && LA137_0 <= UNDEF) || LA137_0 == 195 || LA137_0 == 221 || (LA137_0 >= 224 && LA137_0 <= 239) || (LA137_0 >= 241 && LA137_0 <= 244) || (LA137_0 >= 247 && LA137_0 <= 250) || LA137_0 == 256 || (LA137_0 >= 263 && LA137_0 <= 264) || LA137_0 == 274 || LA137_0 == 277) )
                	    {
                	        alt137 = 1;
                	    }


                	    switch (alt137) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1280:6: ( attributes )? t+= type_parameter[tpConstraints]
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1280:6: ( attributes )?
                			    	int alt136 = 2;
                			    	int LA136_0 = input.LA(1);

                			    	if ( (LA136_0 == ATTRIBUTE) )
                			    	{
                			    	    alt136 = 1;
                			    	}
                			    	switch (alt136) 
                			    	{
                			    	    case 1 :
                			    	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1280:6: attributes
                			    	        {
                			    	        	PushFollow(FOLLOW_attributes_in_type_parameter_list6256);
                			    	        	attributes();
                			    	        	state._fsp--;
                			    	        	if (state.failed) return retval;

                			    	        }
                			    	        break;

                			    	}

                			    	PushFollow(FOLLOW_type_parameter_in_type_parameter_list6261);
                			    	t = type_parameter(tpConstraints);
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_t == null) list_t = new ArrayList();
                			    	list_t.Add(t.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt137 >= 1 ) goto loop137;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee137 =
                		                new EarlyExitException(137, input);
                		            throw eee137;
                	    }
                	    cnt137++;
                	} while (true);

                	loop137:
                		;	// Stops C# compiler whining that label 'loop137' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1280:53: -> type_parameter_list(items= $t )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("type_parameter_list",
                	    new STAttrMap().Add("items",  list_t ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_parameter_list"

        public class type_parameter_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1282:1: type_parameter[Dictionary<string,StringTemplate> tpConstraints] : identifier -> { mySt };
        public JavaPrettyPrint.type_parameter_return type_parameter(Dictionary<string,StringTemplate> tpConstraints) // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_parameter_return retval = new JavaPrettyPrint.type_parameter_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier122 = default(JavaPrettyPrint.identifier_return);



                StringTemplate mySt = null; 

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1285:2: ( identifier -> { mySt })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1286:5: identifier
                {
                	PushFollow(FOLLOW_identifier_in_type_parameter6291);
                	identifier122 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	  if (tpConstraints == null || !tpConstraints.TryGetValue(((identifier122 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier122.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier122.Start)) : null), out mySt)) {mySt = ((identifier122 != null) ? identifier122.ST : null);}; 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1286:130: -> { mySt }
                	  {
                	      retval.ST =  mySt ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_parameter"

        public class class_extends_return : TreeRuleReturnScope
        {
            public List<String> extendList;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_extends"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1288:1: class_extends returns [List<String> extendList] : ( class_extend )+ -> extends(types= $extendList );
        public JavaPrettyPrint.class_extends_return class_extends() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_extends_return retval = new JavaPrettyPrint.class_extends_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.class_extend_return class_extend123 = default(JavaPrettyPrint.class_extend_return);



                retval.extendList =  new List<String>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1291:2: ( ( class_extend )+ -> extends(types= $extendList ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1292:7: ( class_extend )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1292:7: ( class_extend )+
                	int cnt138 = 0;
                	do 
                	{
                	    int alt138 = 2;
                	    int LA138_0 = input.LA(1);

                	    if ( (LA138_0 == EXTENDS) )
                	    {
                	        alt138 = 1;
                	    }


                	    switch (alt138) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1292:8: class_extend
                			    {
                			    	PushFollow(FOLLOW_class_extend_in_class_extends6321);
                			    	class_extend123 = class_extend();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   retval.extendList.Add(((class_extend123 != null) ? class_extend123.extend : default(string))); 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt138 >= 1 ) goto loop138;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee138 =
                		                new EarlyExitException(138, input);
                		            throw eee138;
                	    }
                	    cnt138++;
                	} while (true);

                	loop138:
                		;	// Stops C# compiler whining that label 'loop138' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1292:66: -> extends(types= $extendList )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("extends",
                	    new STAttrMap().Add("types",  retval.extendList ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_extends"

        public class class_extend_return : TreeRuleReturnScope
        {
            public string extend;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_extend"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1293:1: class_extend returns [string extend] : ^( EXTENDS ts= type ) -> { $ts.st };
        public JavaPrettyPrint.class_extend_return class_extend() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_extend_return retval = new JavaPrettyPrint.class_extend_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return ts = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1293:37: ( ^( EXTENDS ts= type ) -> { $ts.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1294:2: ^( EXTENDS ts= type )
                {
                	Match(input,EXTENDS,FOLLOW_EXTENDS_in_class_extend6349); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_class_extend6353);
                	ts = type();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.extend =  ((ts != null) ? ts.ST : null).ToString(); 
                	}

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1294:54: -> { $ts.st }
                	  {
                	      retval.ST =  ((ts != null) ? ts.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_extend"

        public class class_implements_return : TreeRuleReturnScope
        {
            public List<String> implementList;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_implements"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1295:1: class_implements returns [List<String> implementList] : ( class_implement )+ -> imps(types= $implementList );
        public JavaPrettyPrint.class_implements_return class_implements() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_implements_return retval = new JavaPrettyPrint.class_implements_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.class_implement_return class_implement124 = default(JavaPrettyPrint.class_implement_return);



                retval.implementList =  new List<String>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1298:2: ( ( class_implement )+ -> imps(types= $implementList ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1299:2: ( class_implement )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1299:2: ( class_implement )+
                	int cnt139 = 0;
                	do 
                	{
                	    int alt139 = 2;
                	    int LA139_0 = input.LA(1);

                	    if ( (LA139_0 == IMPLEMENTS) )
                	    {
                	        alt139 = 1;
                	    }


                	    switch (alt139) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1299:3: class_implement
                			    {
                			    	PushFollow(FOLLOW_class_implement_in_class_implements6378);
                			    	class_implement124 = class_implement();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	  retval.implementList.Add(((class_implement124 != null) ? class_implement124.implement : default(string))); 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt139 >= 1 ) goto loop139;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee139 =
                		                new EarlyExitException(139, input);
                		            throw eee139;
                	    }
                	    cnt139++;
                	} while (true);

                	loop139:
                		;	// Stops C# compiler whining that label 'loop139' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1299:72: -> imps(types= $implementList )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("imps",
                	    new STAttrMap().Add("types",  retval.implementList ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_implements"

        public class class_implement_return : TreeRuleReturnScope
        {
            public string implement;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_implement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1300:1: class_implement returns [string implement] : ^( IMPLEMENTS ts= type ) -> { $ts.st };
        public JavaPrettyPrint.class_implement_return class_implement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_implement_return retval = new JavaPrettyPrint.class_implement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return ts = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1300:43: ( ^( IMPLEMENTS ts= type ) -> { $ts.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1301:2: ^( IMPLEMENTS ts= type )
                {
                	Match(input,IMPLEMENTS,FOLLOW_IMPLEMENTS_in_class_implement6406); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_class_implement6410);
                	ts = type();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.implement =  ((ts != null) ? ts.ST : null).ToString(); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1301:60: -> { $ts.st }
                	  {
                	      retval.ST =  ((ts != null) ? ts.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_implement"

        public class interface_type_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "interface_type_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1303:1: interface_type_list : ts+= type ( ',' ts+= type )* -> commalist(items= $ts );
        public JavaPrettyPrint.interface_type_list_return interface_type_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.interface_type_list_return retval = new JavaPrettyPrint.interface_type_list_return();
            retval.start = input.LT(1);

            List list_ts = null;
            RuleReturnScope ts = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1303:20: (ts+= type ( ',' ts+= type )* -> commalist(items= $ts ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1304:2: ts+= type ( ',' ts+= type )*
                {
                	PushFollow(FOLLOW_type_in_interface_type_list6428);
                	ts = type();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_ts == null) list_ts = new ArrayList();
                	list_ts.Add(ts.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1304:11: ( ',' ts+= type )*
                	do 
                	{
                	    int alt140 = 2;
                	    int LA140_0 = input.LA(1);

                	    if ( (LA140_0 == COMMA) )
                	    {
                	        alt140 = 1;
                	    }


                	    switch (alt140) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1304:12: ',' ts+= type
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_interface_type_list6431); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_type_in_interface_type_list6437);
                			    	ts = type();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ts == null) list_ts = new ArrayList();
                			    	list_ts.Add(ts.Template);


                			    }
                			    break;

                			default:
                			    goto loop140;
                	    }
                	} while (true);

                	loop140:
                		;	// Stops C# compiler whining that label 'loop140' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1304:29: -> commalist(items= $ts )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("commalist",
                	    new STAttrMap().Add("items",  list_ts ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "interface_type_list"

        public class class_body_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_body"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1306:1: class_body : '{' (cs+= class_member_declaration_aux )* '}' -> class_body(entries=$cs);
        public JavaPrettyPrint.class_body_return class_body() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_body_return retval = new JavaPrettyPrint.class_body_return();
            retval.start = input.LT(1);

            List list_cs = null;
            RuleReturnScope cs = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1306:11: ( '{' (cs+= class_member_declaration_aux )* '}' -> class_body(entries=$cs))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1307:2: '{' (cs+= class_member_declaration_aux )* '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_class_body6456); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1307:10: (cs+= class_member_declaration_aux )*
                	do 
                	{
                	    int alt141 = 2;
                	    int LA141_0 = input.LA(1);

                	    if ( (LA141_0 == CLASS || LA141_0 == INTERFACE || LA141_0 == ANNOTATION || (LA141_0 >= CONST && LA141_0 <= METHOD) || (LA141_0 >= FIELD && LA141_0 <= ENUM) || LA141_0 == CONSTRUCTOR || LA141_0 == STATIC_CONSTRUCTOR) )
                	    {
                	        alt141 = 1;
                	    }


                	    switch (alt141) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1307:10: cs+= class_member_declaration_aux
                			    {
                			    	PushFollow(FOLLOW_class_member_declaration_aux_in_class_body6462);
                			    	cs = class_member_declaration_aux();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_cs == null) list_cs = new ArrayList();
                			    	list_cs.Add(cs.Template);


                			    }
                			    break;

                			default:
                			    goto loop141;
                	    }
                	} while (true);

                	loop141:
                		;	// Stops C# compiler whining that label 'loop141' has no statements

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_class_body6467); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1307:48: -> class_body(entries=$cs)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("class_body",
                	    new STAttrMap().Add("entries", list_cs));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_body"

        public class class_member_declaration_aux_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "class_member_declaration_aux"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1308:1: class_member_declaration_aux : member= class_member_declaration -> class_member(comments= $member.preComments member= $member.st );
        public JavaPrettyPrint.class_member_declaration_aux_return class_member_declaration_aux() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.class_member_declaration_aux_return retval = new JavaPrettyPrint.class_member_declaration_aux_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.class_member_declaration_return member = default(JavaPrettyPrint.class_member_declaration_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1308:29: (member= class_member_declaration -> class_member(comments= $member.preComments member= $member.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1309:5: member= class_member_declaration
                {
                	PushFollow(FOLLOW_class_member_declaration_in_class_member_declaration_aux6489);
                	member = class_member_declaration();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1309:37: -> class_member(comments= $member.preComments member= $member.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("class_member",
                	    new STAttrMap().Add("comments",  ((member != null) ? member.preComments : default(List<string>)) ).Add("member",  ((member != null) ? member.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "class_member_declaration_aux"

        public class constant_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "constant_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1313:1: constant_declaration : 'const' type constant_declarators ';' ;
        public JavaPrettyPrint.constant_declaration_return constant_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.constant_declaration_return retval = new JavaPrettyPrint.constant_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1313:21: ( 'const' type constant_declarators ';' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1314:2: 'const' type constant_declarators ';'
                {
                	Match(input,205,FOLLOW_205_in_constant_declaration6514); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_constant_declaration6518);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_constant_declarators_in_constant_declaration6522);
                	constant_declarators();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,SEMI,FOLLOW_SEMI_in_constant_declaration6526); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "constant_declaration"

        public class constant_declarators_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "constant_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1315:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
        public JavaPrettyPrint.constant_declarators_return constant_declarators() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.constant_declarators_return retval = new JavaPrettyPrint.constant_declarators_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1315:21: ( constant_declarator ( ',' constant_declarator )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1316:2: constant_declarator ( ',' constant_declarator )*
                {
                	PushFollow(FOLLOW_constant_declarator_in_constant_declarators6534);
                	constant_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1316:22: ( ',' constant_declarator )*
                	do 
                	{
                	    int alt142 = 2;
                	    int LA142_0 = input.LA(1);

                	    if ( (LA142_0 == COMMA) )
                	    {
                	        alt142 = 1;
                	    }


                	    switch (alt142) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1316:23: ',' constant_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_constant_declarators6537); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_constant_declarator_in_constant_declarators6539);
                			    	constant_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop142;
                	    }
                	} while (true);

                	loop142:
                		;	// Stops C# compiler whining that label 'loop142' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "constant_declarators"

        public class constant_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "constant_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1317:1: constant_declarator : identifier ( '=' constant_expression )? ;
        public JavaPrettyPrint.constant_declarator_return constant_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.constant_declarator_return retval = new JavaPrettyPrint.constant_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1317:20: ( identifier ( '=' constant_expression )? )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1318:2: identifier ( '=' constant_expression )?
                {
                	PushFollow(FOLLOW_identifier_in_constant_declarator6549);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1318:15: ( '=' constant_expression )?
                	int alt143 = 2;
                	int LA143_0 = input.LA(1);

                	if ( (LA143_0 == ASSIGN) )
                	{
                	    alt143 = 1;
                	}
                	switch (alt143) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1318:16: '=' constant_expression
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_constant_declarator6554); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_constant_expression_in_constant_declarator6558);
                	        	constant_expression();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "constant_declarator"

        public class constant_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "constant_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1319:1: constant_expression : expression -> { $expression.st };
        public JavaPrettyPrint.constant_expression_return constant_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.constant_expression_return retval = new JavaPrettyPrint.constant_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression125 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1319:20: ( expression -> { $expression.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1320:2: expression
                {
                	PushFollow(FOLLOW_expression_in_constant_expression6568);
                	expression125 = expression();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1320:13: -> { $expression.st }
                	  {
                	      retval.ST =  ((expression125 != null) ? expression125.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "constant_expression"

        public class field_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "field_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1323:1: field_declaration : variable_declarators -> { $variable_declarators.st };
        public JavaPrettyPrint.field_declaration_return field_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.field_declaration_return retval = new JavaPrettyPrint.field_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.variable_declarators_return variable_declarators126 = default(JavaPrettyPrint.variable_declarators_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1323:18: ( variable_declarators -> { $variable_declarators.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1324:2: variable_declarators
                {
                	PushFollow(FOLLOW_variable_declarators_in_field_declaration6581);
                	variable_declarators126 = variable_declarators();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1324:23: -> { $variable_declarators.st }
                	  {
                	      retval.ST =  ((variable_declarators126 != null) ? variable_declarators126.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "field_declaration"

        public class variable_declarators_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variable_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1325:1: variable_declarators : vs+= variable_declarator ( ',' vs+= variable_declarator )* -> variable_declarators(varinits=$vs);
        public JavaPrettyPrint.variable_declarators_return variable_declarators() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variable_declarators_return retval = new JavaPrettyPrint.variable_declarators_return();
            retval.start = input.LT(1);

            List list_vs = null;
            RuleReturnScope vs = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1325:21: (vs+= variable_declarator ( ',' vs+= variable_declarator )* -> variable_declarators(varinits=$vs))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1326:2: vs+= variable_declarator ( ',' vs+= variable_declarator )*
                {
                	PushFollow(FOLLOW_variable_declarator_in_variable_declarators6594);
                	vs = variable_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_vs == null) list_vs = new ArrayList();
                	list_vs.Add(vs.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1326:26: ( ',' vs+= variable_declarator )*
                	do 
                	{
                	    int alt144 = 2;
                	    int LA144_0 = input.LA(1);

                	    if ( (LA144_0 == COMMA) )
                	    {
                	        alt144 = 1;
                	    }


                	    switch (alt144) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1326:27: ',' vs+= variable_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_variable_declarators6597); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_variable_declarator_in_variable_declarators6603);
                			    	vs = variable_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_vs == null) list_vs = new ArrayList();
                			    	list_vs.Add(vs.Template);


                			    }
                			    break;

                			default:
                			    goto loop144;
                	    }
                	} while (true);

                	loop144:
                		;	// Stops C# compiler whining that label 'loop144' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1326:59: -> variable_declarators(varinits=$vs)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("variable_declarators",
                	    new STAttrMap().Add("varinits", list_vs));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variable_declarators"

        public class variable_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variable_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1327:1: variable_declarator : type_name ( '=' variable_initializer )? -> variable_declarator(typename= $type_name.st init= $variable_initializer.st);
        public JavaPrettyPrint.variable_declarator_return variable_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variable_declarator_return retval = new JavaPrettyPrint.variable_declarator_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_name_return type_name127 = default(JavaPrettyPrint.type_name_return);

            JavaPrettyPrint.variable_initializer_return variable_initializer128 = default(JavaPrettyPrint.variable_initializer_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1327:20: ( type_name ( '=' variable_initializer )? -> variable_declarator(typename= $type_name.st init= $variable_initializer.st))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1328:2: type_name ( '=' variable_initializer )?
                {
                	PushFollow(FOLLOW_type_name_in_variable_declarator6623);
                	type_name127 = type_name();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1328:12: ( '=' variable_initializer )?
                	int alt145 = 2;
                	int LA145_0 = input.LA(1);

                	if ( (LA145_0 == ASSIGN) )
                	{
                	    alt145 = 1;
                	}
                	switch (alt145) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1328:13: '=' variable_initializer
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_variable_declarator6626); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_variable_initializer_in_variable_declarator6630);
                	        	variable_initializer128 = variable_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1328:42: -> variable_declarator(typename= $type_name.st init= $variable_initializer.st)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("variable_declarator",
                	    new STAttrMap().Add("typename",  ((type_name127 != null) ? type_name127.ST : null) ).Add("init",  ((variable_initializer128 != null) ? variable_initializer128.ST : null)));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variable_declarator"

        public class method_body_return : TreeRuleReturnScope
        {
            public bool isSemi;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "method_body"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1332:1: method_body returns [bool isSemi] : block -> { $block.st };
        public JavaPrettyPrint.method_body_return method_body() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.method_body_return retval = new JavaPrettyPrint.method_body_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.block_return block129 = default(JavaPrettyPrint.block_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1332:34: ( block -> { $block.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1333:2: block
                {
                	PushFollow(FOLLOW_block_in_method_body6667);
                	block129 = block();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.isSemi =  ((block129 != null) ? block129.isSemi : default(bool)); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1333:37: -> { $block.st }
                	  {
                	      retval.ST =  ((block129 != null) ? block129.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "method_body"

        public class member_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "member_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1335:1: member_name : ( ( type_or_generic '.' )=>t1= type_or_generic (op= '.' tn= type_or_generic )* | type_or_generic -> { $type_or_generic.st });
        public JavaPrettyPrint.member_name_return member_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.member_name_return retval = new JavaPrettyPrint.member_name_return();
            retval.start = input.LT(1);

            CommonTree op = null;
            JavaPrettyPrint.type_or_generic_return t1 = default(JavaPrettyPrint.type_or_generic_return);

            JavaPrettyPrint.type_or_generic_return tn = default(JavaPrettyPrint.type_or_generic_return);

            JavaPrettyPrint.type_or_generic_return type_or_generic130 = default(JavaPrettyPrint.type_or_generic_return);



                StringTemplate last_t = null;
                ArrayList pre_ts = new ArrayList();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1340:1: ( ( type_or_generic '.' )=>t1= type_or_generic (op= '.' tn= type_or_generic )* | type_or_generic -> { $type_or_generic.st })
                int alt147 = 2;
                alt147 = dfa147.Predict(input);
                switch (alt147) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1341:5: ( type_or_generic '.' )=>t1= type_or_generic (op= '.' tn= type_or_generic )*
                        {
                        	PushFollow(FOLLOW_type_or_generic_in_member_name6700);
                        	t1 = type_or_generic();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   last_t = ((t1 != null) ? t1.ST : null); 
                        	}
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1341:70: (op= '.' tn= type_or_generic )*
                        	do 
                        	{
                        	    int alt146 = 2;
                        	    int LA146_0 = input.LA(1);

                        	    if ( (LA146_0 == DOT) )
                        	    {
                        	        alt146 = 1;
                        	    }


                        	    switch (alt146) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1341:71: op= '.' tn= type_or_generic
                        			    {
                        			    	op=(CommonTree)Match(input,DOT,FOLLOW_DOT_in_member_name6707); if (state.failed) return retval;
                        			    	PushFollow(FOLLOW_type_or_generic_in_member_name6711);
                        			    	tn = type_or_generic();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if ( (state.backtracking==0) )
                        			    	{
                        			    	   pre_ts.Add(last_t); last_t = ((tn != null) ? tn.ST : null); 
                        			    	}

                        			    }
                        			    break;

                        			default:
                        			    goto loop146;
                        	    }
                        	} while (true);

                        	loop146:
                        		;	// Stops C# compiler whining that label 'loop146' has no statements

                        	if ( (state.backtracking==0) )
                        	{
                        	   
                        	              StringTemplate interfaceText = templateLib.GetInstanceOf("dotlist");
                        	              (interfaceText).SetAttribute("items", pre_ts);
                        	              StringTemplate opText = templateLib.GetInstanceOf("op");
                        	              (opText).SetAttribute("pre", interfaceText);
                        	              (opText).SetAttribute("op", op.token.Text);
                        	              StringTemplate unsupportedText = templateLib.GetInstanceOf("unsupported");
                        	              (unsupportedText).SetAttribute("reason", "explicit interface implementation is not supported");
                        	              (unsupportedText).SetAttribute("text", opText);
                        	              retval.ST =  templateLib.GetInstanceOf("op");
                        	              (retval.ST).SetAttribute("pre", unsupportedText);
                        	              (retval.ST).SetAttribute("post", last_t);
                        	              (retval.ST).SetAttribute("op", " ");
                        	          
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1356:7: type_or_generic
                        {
                        	PushFollow(FOLLOW_type_or_generic_in_member_name6734);
                        	type_or_generic130 = type_or_generic();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1356:23: -> { $type_or_generic.st }
                        	  {
                        	      retval.ST =  ((type_or_generic130 != null) ? type_or_generic130.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "member_name"

        public class event_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "event_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1364:1: event_declaration : type member_name '{' event_accessor_declarations '}' ;
        public JavaPrettyPrint.event_declaration_return event_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.event_declaration_return retval = new JavaPrettyPrint.event_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1364:18: ( type member_name '{' event_accessor_declarations '}' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1365:2: type member_name '{' event_accessor_declarations '}'
                {
                	PushFollow(FOLLOW_type_in_event_declaration6760);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_member_name_in_event_declaration6762);
                	member_name();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_event_declaration6766); if (state.failed) return retval;
                	PushFollow(FOLLOW_event_accessor_declarations_in_event_declaration6770);
                	event_accessor_declarations();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_event_declaration6774); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "event_declaration"

        public class event_modifiers_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "event_modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1367:1: event_modifiers : ( modifier )+ ;
        public JavaPrettyPrint.event_modifiers_return event_modifiers() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.event_modifiers_return retval = new JavaPrettyPrint.event_modifiers_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1367:16: ( ( modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1368:2: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1368:2: ( modifier )+
                	int cnt148 = 0;
                	do 
                	{
                	    int alt148 = 2;
                	    int LA148_0 = input.LA(1);

                	    if ( (LA148_0 == FINAL || (LA148_0 >= PUBLIC && LA148_0 <= PRIVATE) || LA148_0 == STATIC || LA148_0 == 194 || LA148_0 == 197 || (LA148_0 >= 199 && LA148_0 <= 204)) )
                	    {
                	        alt148 = 1;
                	    }


                	    switch (alt148) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1368:2: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_event_modifiers6784);
                			    	modifier();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    if ( cnt148 >= 1 ) goto loop148;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee148 =
                		                new EarlyExitException(148, input);
                		            throw eee148;
                	    }
                	    cnt148++;
                	} while (true);

                	loop148:
                		;	// Stops C# compiler whining that label 'loop148' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "event_modifiers"

        public class event_accessor_declarations_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "event_accessor_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1369:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
        public JavaPrettyPrint.event_accessor_declarations_return event_accessor_declarations() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.event_accessor_declarations_return retval = new JavaPrettyPrint.event_accessor_declarations_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1369:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:2: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:2: ( attributes )?
                	int alt149 = 2;
                	int LA149_0 = input.LA(1);

                	if ( (LA149_0 == ATTRIBUTE) )
                	{
                	    alt149 = 1;
                	}
                	switch (alt149) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations6793);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:16: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
                	int alt152 = 2;
                	int LA152_0 = input.LA(1);

                	if ( (LA152_0 == 249) )
                	{
                	    alt152 = 1;
                	}
                	else if ( (LA152_0 == 250) )
                	{
                	    alt152 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d152s0 =
                	        new NoViableAltException("", 152, 0, input);

                	    throw nvae_d152s0;
                	}
                	switch (alt152) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:18: add_accessor_declaration ( attributes )? remove_accessor_declaration
                	        	{
                	        		PushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations6800);
                	        		add_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return retval;
                	        		// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:45: ( attributes )?
                	        		int alt150 = 2;
                	        		int LA150_0 = input.LA(1);

                	        		if ( (LA150_0 == ATTRIBUTE) )
                	        		{
                	        		    alt150 = 1;
                	        		}
                	        		switch (alt150) 
                	        		{
                	        		    case 1 :
                	        		        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1370:45: attributes
                	        		        {
                	        		        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations6804);
                	        		        	attributes();
                	        		        	state._fsp--;
                	        		        	if (state.failed) return retval;

                	        		        }
                	        		        break;

                	        		}

                	        		PushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations6809);
                	        		remove_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return retval;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1371:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1371:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1371:19: remove_accessor_declaration ( attributes )? add_accessor_declaration
                	        	{
                	        		PushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations6830);
                	        		remove_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return retval;
                	        		// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1371:49: ( attributes )?
                	        		int alt151 = 2;
                	        		int LA151_0 = input.LA(1);

                	        		if ( (LA151_0 == ATTRIBUTE) )
                	        		{
                	        		    alt151 = 1;
                	        		}
                	        		switch (alt151) 
                	        		{
                	        		    case 1 :
                	        		        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1371:49: attributes
                	        		        {
                	        		        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations6834);
                	        		        	attributes();
                	        		        	state._fsp--;
                	        		        	if (state.failed) return retval;

                	        		        }
                	        		        break;

                	        		}

                	        		PushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations6839);
                	        		add_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return retval;

                	        	}


                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "event_accessor_declarations"

        public class add_accessor_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "add_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1372:1: add_accessor_declaration : 'add' block ;
        public JavaPrettyPrint.add_accessor_declaration_return add_accessor_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.add_accessor_declaration_return retval = new JavaPrettyPrint.add_accessor_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1372:25: ( 'add' block )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1373:2: 'add' block
                {
                	Match(input,249,FOLLOW_249_in_add_accessor_declaration6849); if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_add_accessor_declaration6853);
                	block();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "add_accessor_declaration"

        public class remove_accessor_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "remove_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1374:1: remove_accessor_declaration : 'remove' block ;
        public JavaPrettyPrint.remove_accessor_declaration_return remove_accessor_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.remove_accessor_declaration_return retval = new JavaPrettyPrint.remove_accessor_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1374:28: ( 'remove' block )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1375:2: 'remove' block
                {
                	Match(input,250,FOLLOW_250_in_remove_accessor_declaration6861); if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_remove_accessor_declaration6865);
                	block();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "remove_accessor_declaration"

        public class annotation_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "annotation_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1381:1: annotation_declaration : ^( ANNOTATION ( attributes )? ( modifiers )? identifier ( class_body )? ) -> annotation(comments= preCommentsmodifiers= $modifiers.st name=$identifier.textbody=$class_body.st);
        public JavaPrettyPrint.annotation_declaration_return annotation_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.annotation_declaration_return retval = new JavaPrettyPrint.annotation_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.modifiers_return modifiers131 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.identifier_return identifier132 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.class_body_return class_body133 = default(JavaPrettyPrint.class_body_return);



                List<string> preComments = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1384:2: ( ^( ANNOTATION ( attributes )? ( modifiers )? identifier ( class_body )? ) -> annotation(comments= preCommentsmodifiers= $modifiers.st name=$identifier.textbody=$class_body.st))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:2: ^( ANNOTATION ( attributes )? ( modifiers )? identifier ( class_body )? )
                {
                	Match(input,ANNOTATION,FOLLOW_ANNOTATION_in_annotation_declaration6884); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:15: ( attributes )?
                	int alt153 = 2;
                	int LA153_0 = input.LA(1);

                	if ( (LA153_0 == ATTRIBUTE) )
                	{
                	    alt153 = 1;
                	}
                	switch (alt153) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:15: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_annotation_declaration6886);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:27: ( modifiers )?
                	int alt154 = 2;
                	int LA154_0 = input.LA(1);

                	if ( (LA154_0 == FINAL || (LA154_0 >= PUBLIC && LA154_0 <= PRIVATE) || LA154_0 == STATIC || LA154_0 == 194 || LA154_0 == 197 || (LA154_0 >= 199 && LA154_0 <= 204)) )
                	{
                	    alt154 = 1;
                	}
                	switch (alt154) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:27: modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_annotation_declaration6889);
                	        	modifiers131 = modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_annotation_declaration6892);
                	identifier132 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   preComments = CollectedComments; 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:87: ( class_body )?
                	int alt155 = 2;
                	int LA155_0 = input.LA(1);

                	if ( (LA155_0 == OPEN_BRACE) )
                	{
                	    alt155 = 1;
                	}
                	switch (alt155) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1385:87: class_body
                	        {
                	        	PushFollow(FOLLOW_class_body_in_annotation_declaration6897);
                	        	class_body133 = class_body();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1386:5: -> annotation(comments= preCommentsmodifiers= $modifiers.st name=$identifier.textbody=$class_body.st)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("annotation",
                	    new STAttrMap().Add("comments",  preComments).Add("modifiers",  ((modifiers131 != null) ? modifiers131.ST : null) ).Add("name", ((identifier132 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier132.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier132.Start)) : null)).Add("body", ((class_body133 != null) ? class_body133.ST : null)));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "annotation_declaration"

        public class enum_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "enum_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1391:1: enum_declaration : ^( ENUM ( attributes )? ( modifiers )? identifier ( enum_base )? enum_body ) -> enum(comments= preCommentsmodifiers= $modifiers.st name=$identifier.textbody=$enum_body.st);
        public JavaPrettyPrint.enum_declaration_return enum_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.enum_declaration_return retval = new JavaPrettyPrint.enum_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.modifiers_return modifiers134 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.identifier_return identifier135 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.enum_body_return enum_body136 = default(JavaPrettyPrint.enum_body_return);



                List<string> preComments = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1394:2: ( ^( ENUM ( attributes )? ( modifiers )? identifier ( enum_base )? enum_body ) -> enum(comments= preCommentsmodifiers= $modifiers.st name=$identifier.textbody=$enum_body.st))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:2: ^( ENUM ( attributes )? ( modifiers )? identifier ( enum_base )? enum_body )
                {
                	Match(input,ENUM,FOLLOW_ENUM_in_enum_declaration6950); if (state.failed) return retval;

                	if ( (state.backtracking==0) )
                	{
                	   preComments = CollectedComments; 
                	}

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:46: ( attributes )?
                	int alt156 = 2;
                	int LA156_0 = input.LA(1);

                	if ( (LA156_0 == ATTRIBUTE) )
                	{
                	    alt156 = 1;
                	}
                	switch (alt156) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:46: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_enum_declaration6954);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:58: ( modifiers )?
                	int alt157 = 2;
                	int LA157_0 = input.LA(1);

                	if ( (LA157_0 == FINAL || (LA157_0 >= PUBLIC && LA157_0 <= PRIVATE) || LA157_0 == STATIC || LA157_0 == 194 || LA157_0 == 197 || (LA157_0 >= 199 && LA157_0 <= 204)) )
                	{
                	    alt157 = 1;
                	}
                	switch (alt157) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:58: modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_enum_declaration6957);
                	        	modifiers134 = modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_enum_declaration6960);
                	identifier135 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:82: ( enum_base )?
                	int alt158 = 2;
                	int LA158_0 = input.LA(1);

                	if ( (LA158_0 == TYPE) )
                	{
                	    alt158 = 1;
                	}
                	switch (alt158) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1395:82: enum_base
                	        {
                	        	PushFollow(FOLLOW_enum_base_in_enum_declaration6964);
                	        	enum_base();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_enum_body_in_enum_declaration6969);
                	enum_body136 = enum_body();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1396:5: -> enum(comments= preCommentsmodifiers= $modifiers.st name=$identifier.textbody=$enum_body.st)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("enum",
                	    new STAttrMap().Add("comments",  preComments).Add("modifiers",  ((modifiers134 != null) ? modifiers134.ST : null) ).Add("name", ((identifier135 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier135.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier135.Start)) : null)).Add("body", ((enum_body136 != null) ? enum_body136.ST : null)));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "enum_declaration"

        public class enum_base_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "enum_base"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1397:1: enum_base : type ;
        public JavaPrettyPrint.enum_base_return enum_base() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.enum_base_return retval = new JavaPrettyPrint.enum_base_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1397:10: ( type )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1398:2: type
                {
                	PushFollow(FOLLOW_type_in_enum_base7011);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "enum_base"

        public class enum_body_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "enum_body"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1399:1: enum_body : ^( ENUM_BODY (es+= enum_member_declaration )* ) -> enum_body(values=$es);
        public JavaPrettyPrint.enum_body_return enum_body() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.enum_body_return retval = new JavaPrettyPrint.enum_body_return();
            retval.start = input.LT(1);

            List list_es = null;
            RuleReturnScope es = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1399:10: ( ^( ENUM_BODY (es+= enum_member_declaration )* ) -> enum_body(values=$es))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1400:2: ^( ENUM_BODY (es+= enum_member_declaration )* )
                {
                	Match(input,ENUM_BODY,FOLLOW_ENUM_BODY_in_enum_body7020); if (state.failed) return retval;

                	if ( input.LA(1) == Token.DOWN )
                	{
                	    Match(input, Token.DOWN, null); if (state.failed) return retval;
                	    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1400:16: (es+= enum_member_declaration )*
                	    do 
                	    {
                	        int alt159 = 2;
                	        int LA159_0 = input.LA(1);

                	        if ( (LA159_0 == ATTRIBUTE || LA159_0 == IDENTIFIER || (LA159_0 >= ELIF && LA159_0 <= UNDEF) || LA159_0 == 195 || LA159_0 == 221 || (LA159_0 >= 224 && LA159_0 <= 239) || (LA159_0 >= 241 && LA159_0 <= 244) || (LA159_0 >= 247 && LA159_0 <= 250) || LA159_0 == 256 || (LA159_0 >= 263 && LA159_0 <= 264) || LA159_0 == 274 || LA159_0 == 277) )
                	        {
                	            alt159 = 1;
                	        }


                	        switch (alt159) 
                	    	{
                	    		case 1 :
                	    		    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1400:16: es+= enum_member_declaration
                	    		    {
                	    		    	PushFollow(FOLLOW_enum_member_declaration_in_enum_body7024);
                	    		    	es = enum_member_declaration();
                	    		    	state._fsp--;
                	    		    	if (state.failed) return retval;
                	    		    	if (list_es == null) list_es = new ArrayList();
                	    		    	list_es.Add(es.Template);


                	    		    }
                	    		    break;

                	    		default:
                	    		    goto loop159;
                	        }
                	    } while (true);

                	    loop159:
                	    	;	// Stops C# compiler whining that label 'loop159' has no statements


                	    Match(input, Token.UP, null); if (state.failed) return retval;
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1400:44: -> enum_body(values=$es)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("enum_body",
                	    new STAttrMap().Add("values", list_es));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "enum_body"

        public class enum_member_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "enum_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1401:1: enum_member_declaration : ( attributes )? identifier -> enum_member(comments= CollectedComments value= $identifier.st );
        public JavaPrettyPrint.enum_member_declaration_return enum_member_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.enum_member_declaration_return retval = new JavaPrettyPrint.enum_member_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier137 = default(JavaPrettyPrint.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1401:24: ( ( attributes )? identifier -> enum_member(comments= CollectedComments value= $identifier.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1402:2: ( attributes )? identifier
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1402:2: ( attributes )?
                	int alt160 = 2;
                	int LA160_0 = input.LA(1);

                	if ( (LA160_0 == ATTRIBUTE) )
                	{
                	    alt160 = 1;
                	}
                	switch (alt160) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1402:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_enum_member_declaration7042);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_enum_member_declaration7047);
                	identifier137 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1402:27: -> enum_member(comments= CollectedComments value= $identifier.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("enum_member",
                	    new STAttrMap().Add("comments",  CollectedComments ).Add("value",  ((identifier137 != null) ? identifier137.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "enum_member_declaration"

        public class integral_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "integral_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1407:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
        public JavaPrettyPrint.integral_type_return integral_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.integral_type_return retval = new JavaPrettyPrint.integral_type_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1407:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:
                {
                	if ( (input.LA(1) >= BYTE && input.LA(1) <= LONG) || (input.LA(1) >= 251 && input.LA(1) <= 254) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "integral_type"

        public class variant_generic_parameter_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variant_generic_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1411:1: variant_generic_parameter_list[Dictionary<string,StringTemplate> tpConstraints] : (ps+= variant_generic_parameter[$tpConstraints] )+ -> type_parameter_list(items=$ps);
        public JavaPrettyPrint.variant_generic_parameter_list_return variant_generic_parameter_list(Dictionary<string,StringTemplate> tpConstraints) // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variant_generic_parameter_list_return retval = new JavaPrettyPrint.variant_generic_parameter_list_return();
            retval.start = input.LT(1);

            List list_ps = null;
            RuleReturnScope ps = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1411:81: ( (ps+= variant_generic_parameter[$tpConstraints] )+ -> type_parameter_list(items=$ps))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1412:2: (ps+= variant_generic_parameter[$tpConstraints] )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1412:2: (ps+= variant_generic_parameter[$tpConstraints] )+
                	int cnt161 = 0;
                	do 
                	{
                	    int alt161 = 2;
                	    int LA161_0 = input.LA(1);

                	    if ( (LA161_0 == OUT || LA161_0 == ATTRIBUTE || LA161_0 == IN || LA161_0 == IDENTIFIER || (LA161_0 >= ELIF && LA161_0 <= UNDEF) || LA161_0 == 195 || LA161_0 == 221 || (LA161_0 >= 224 && LA161_0 <= 239) || (LA161_0 >= 241 && LA161_0 <= 244) || (LA161_0 >= 247 && LA161_0 <= 250) || LA161_0 == 256 || (LA161_0 >= 263 && LA161_0 <= 264) || LA161_0 == 274 || LA161_0 == 277) )
                	    {
                	        alt161 = 1;
                	    }


                	    switch (alt161) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1412:3: ps+= variant_generic_parameter[$tpConstraints]
                			    {
                			    	PushFollow(FOLLOW_variant_generic_parameter_in_variant_generic_parameter_list7122);
                			    	ps = variant_generic_parameter(tpConstraints);
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ps == null) list_ps = new ArrayList();
                			    	list_ps.Add(ps.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt161 >= 1 ) goto loop161;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee161 =
                		                new EarlyExitException(161, input);
                		            throw eee161;
                	    }
                	    cnt161++;
                	} while (true);

                	loop161:
                		;	// Stops C# compiler whining that label 'loop161' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1412:51: -> type_parameter_list(items=$ps)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("type_parameter_list",
                	    new STAttrMap().Add("items", list_ps));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variant_generic_parameter_list"

        public class variant_generic_parameter_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variant_generic_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1413:1: variant_generic_parameter[Dictionary<string,StringTemplate> tpConstraints] : ( attributes )? ( variance_annotation )? t= type_parameter[$tpConstraints] -> { $t.st };
        public JavaPrettyPrint.variant_generic_parameter_return variant_generic_parameter(Dictionary<string,StringTemplate> tpConstraints) // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variant_generic_parameter_return retval = new JavaPrettyPrint.variant_generic_parameter_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_parameter_return t = default(JavaPrettyPrint.type_parameter_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1413:76: ( ( attributes )? ( variance_annotation )? t= type_parameter[$tpConstraints] -> { $t.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1414:5: ( attributes )? ( variance_annotation )? t= type_parameter[$tpConstraints]
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1414:5: ( attributes )?
                	int alt162 = 2;
                	int LA162_0 = input.LA(1);

                	if ( (LA162_0 == ATTRIBUTE) )
                	{
                	    alt162 = 1;
                	}
                	switch (alt162) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1414:5: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_variant_generic_parameter7146);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1414:19: ( variance_annotation )?
                	int alt163 = 2;
                	int LA163_0 = input.LA(1);

                	if ( (LA163_0 == OUT || LA163_0 == IN) )
                	{
                	    alt163 = 1;
                	}
                	switch (alt163) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1414:19: variance_annotation
                	        {
                	        	PushFollow(FOLLOW_variance_annotation_in_variant_generic_parameter7151);
                	        	variance_annotation();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_type_parameter_in_variant_generic_parameter7157);
                	t = type_parameter(tpConstraints);
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1414:74: -> { $t.st }
                	  {
                	      retval.ST =  ((t != null) ? t.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variant_generic_parameter"

        public class variance_annotation_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "variance_annotation"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1415:1: variance_annotation : ( IN -> string(payload= \"in\" ) | OUT -> string(payload= \"out\" ));
        public JavaPrettyPrint.variance_annotation_return variance_annotation() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.variance_annotation_return retval = new JavaPrettyPrint.variance_annotation_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1415:20: ( IN -> string(payload= \"in\" ) | OUT -> string(payload= \"out\" ))
                int alt164 = 2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0 == IN) )
                {
                    alt164 = 1;
                }
                else if ( (LA164_0 == OUT) )
                {
                    alt164 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d164s0 =
                        new NoViableAltException("", 164, 0, input);

                    throw nvae_d164s0;
                }
                switch (alt164) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1416:2: IN
                        {
                        	Match(input,IN,FOLLOW_IN_in_variance_annotation7169); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1416:5: -> string(payload= \"in\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  "in" ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1416:35: OUT
                        {
                        	Match(input,OUT,FOLLOW_OUT_in_variance_annotation7182); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1416:39: -> string(payload= \"out\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  "out" ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variance_annotation"

        public class type_parameter_constraints_clauses_return : TreeRuleReturnScope
        {
            public Dictionary<string,StringTemplate> tpConstraints;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_parameter_constraints_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1419:1: type_parameter_constraints_clauses returns [Dictionary<string,StringTemplate> tpConstraints] : (ts+= type_parameter_constraints_clause[$tpConstraints] )+ ->;
        public JavaPrettyPrint.type_parameter_constraints_clauses_return type_parameter_constraints_clauses() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_parameter_constraints_clauses_return retval = new JavaPrettyPrint.type_parameter_constraints_clauses_return();
            retval.start = input.LT(1);

            List list_ts = null;
            RuleReturnScope ts = null;

                retval.tpConstraints =  new Dictionary<string,StringTemplate>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1423:1: ( (ts+= type_parameter_constraints_clause[$tpConstraints] )+ ->)
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1424:2: (ts+= type_parameter_constraints_clause[$tpConstraints] )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1424:4: (ts+= type_parameter_constraints_clause[$tpConstraints] )+
                	int cnt165 = 0;
                	do 
                	{
                	    int alt165 = 2;
                	    int LA165_0 = input.LA(1);

                	    if ( (LA165_0 == TYPE_PARAM_CONSTRAINT) )
                	    {
                	        alt165 = 1;
                	    }


                	    switch (alt165) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1424:4: ts+= type_parameter_constraints_clause[$tpConstraints]
                			    {
                			    	PushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses7213);
                			    	ts = type_parameter_constraints_clause(retval.tpConstraints);
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ts == null) list_ts = new ArrayList();
                			    	list_ts.Add(ts.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt165 >= 1 ) goto loop165;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee165 =
                		                new EarlyExitException(165, input);
                		            throw eee165;
                	    }
                	    cnt165++;
                	} while (true);

                	loop165:
                		;	// Stops C# compiler whining that label 'loop165' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1424:57: ->
                	  {
                	      retval.ST = null;;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_parameter_constraints_clauses"

        public class type_parameter_constraints_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_parameter_constraints_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1425:1: type_parameter_constraints_clause[Dictionary<string,StringTemplate> tpConstraints] : ^( TYPE_PARAM_CONSTRAINT t= type_variable_name (ts+= type_name )+ ) -> type_param_constraint(param= $type_variable_name.st constraints= $ts );
        public JavaPrettyPrint.type_parameter_constraints_clause_return type_parameter_constraints_clause(Dictionary<string,StringTemplate> tpConstraints) // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_parameter_constraints_clause_return retval = new JavaPrettyPrint.type_parameter_constraints_clause_return();
            retval.start = input.LT(1);

            List list_ts = null;
            JavaPrettyPrint.type_variable_name_return t = default(JavaPrettyPrint.type_variable_name_return);

            RuleReturnScope ts = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1428:2: ( ^( TYPE_PARAM_CONSTRAINT t= type_variable_name (ts+= type_name )+ ) -> type_param_constraint(param= $type_variable_name.st constraints= $ts ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1429:5: ^( TYPE_PARAM_CONSTRAINT t= type_variable_name (ts+= type_name )+ )
                {
                	Match(input,TYPE_PARAM_CONSTRAINT,FOLLOW_TYPE_PARAM_CONSTRAINT_in_type_parameter_constraints_clause7235); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_variable_name_in_type_parameter_constraints_clause7239);
                	t = type_variable_name();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1429:52: (ts+= type_name )+
                	int cnt166 = 0;
                	do 
                	{
                	    int alt166 = 2;
                	    int LA166_0 = input.LA(1);

                	    if ( (LA166_0 == JAVAWRAPPER || LA166_0 == IDENTIFIER || LA166_0 == DOT || (LA166_0 >= ELIF && LA166_0 <= UNDEF) || LA166_0 == 195 || LA166_0 == 208 || LA166_0 == 221 || (LA166_0 >= 224 && LA166_0 <= 239) || (LA166_0 >= 241 && LA166_0 <= 244) || (LA166_0 >= 247 && LA166_0 <= 250) || LA166_0 == 256 || (LA166_0 >= 263 && LA166_0 <= 264) || LA166_0 == 274 || LA166_0 == 277) )
                	    {
                	        alt166 = 1;
                	    }


                	    switch (alt166) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1429:52: ts+= type_name
                			    {
                			    	PushFollow(FOLLOW_type_name_in_type_parameter_constraints_clause7243);
                			    	ts = type_name();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ts == null) list_ts = new ArrayList();
                			    	list_ts.Add(ts.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt166 >= 1 ) goto loop166;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee166 =
                		                new EarlyExitException(166, input);
                		            throw eee166;
                	    }
                	    cnt166++;
                	} while (true);

                	loop166:
                		;	// Stops C# compiler whining that label 'loop166' has no statements


                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1429:66: -> type_param_constraint(param= $type_variable_name.st constraints= $ts )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("type_param_constraint",
                	    new STAttrMap().Add("param",  ((t != null) ? t.ST : null) ).Add("constraints",  list_ts ));
                	  }

                	}
                }

                if ( (state.backtracking==0) )
                {

                      tpConstraints[((t != null) ? input.TokenStream.ToString(
                    input.TreeAdaptor.GetTokenStartIndex(t.Start),
                    input.TreeAdaptor.GetTokenStopIndex(t.Start)) : null)] = retval.ST;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_parameter_constraints_clause"

        public class type_variable_name_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "type_variable_name"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1430:1: type_variable_name : identifier -> { $identifier.st };
        public JavaPrettyPrint.type_variable_name_return type_variable_name() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.type_variable_name_return retval = new JavaPrettyPrint.type_variable_name_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier138 = default(JavaPrettyPrint.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1430:19: ( identifier -> { $identifier.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1431:2: identifier
                {
                	PushFollow(FOLLOW_identifier_in_type_variable_name7271);
                	identifier138 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1431:13: -> { $identifier.st }
                	  {
                	      retval.ST =  ((identifier138 != null) ? identifier138.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_variable_name"

        public class return_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "return_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1435:1: return_type : type -> { $type.st };
        public JavaPrettyPrint.return_type_return return_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.return_type_return retval = new JavaPrettyPrint.return_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type139 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1435:12: ( type -> { $type.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1436:2: type
                {
                	PushFollow(FOLLOW_type_in_return_type7286);
                	type139 = type();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1436:7: -> { $type.st }
                	  {
                	      retval.ST =  ((type139 != null) ? type139.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "return_type"

        public class formal_parameter_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "formal_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1437:1: formal_parameter_list : ^( PARAMS (fps+= formal_parameter )+ ) -> list(items=$fpssep=\", \");
        public JavaPrettyPrint.formal_parameter_list_return formal_parameter_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.formal_parameter_list_return retval = new JavaPrettyPrint.formal_parameter_list_return();
            retval.start = input.LT(1);

            List list_fps = null;
            RuleReturnScope fps = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1437:22: ( ^( PARAMS (fps+= formal_parameter )+ ) -> list(items=$fpssep=\", \"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1438:5: ^( PARAMS (fps+= formal_parameter )+ )
                {
                	Match(input,PARAMS,FOLLOW_PARAMS_in_formal_parameter_list7302); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1438:17: (fps+= formal_parameter )+
                	int cnt167 = 0;
                	do 
                	{
                	    int alt167 = 2;
                	    int LA167_0 = input.LA(1);

                	    if ( (LA167_0 == ATTRIBUTE || LA167_0 == THIS || LA167_0 == TYPE || (LA167_0 >= 212 && LA167_0 <= 213) || (LA167_0 >= 256 && LA167_0 <= 257)) )
                	    {
                	        alt167 = 1;
                	    }


                	    switch (alt167) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1438:17: fps+= formal_parameter
                			    {
                			    	PushFollow(FOLLOW_formal_parameter_in_formal_parameter_list7306);
                			    	fps = formal_parameter();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_fps == null) list_fps = new ArrayList();
                			    	list_fps.Add(fps.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt167 >= 1 ) goto loop167;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee167 =
                		                new EarlyExitException(167, input);
                		            throw eee167;
                	    }
                	    cnt167++;
                	} while (true);

                	loop167:
                		;	// Stops C# compiler whining that label 'loop167' has no statements


                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1438:38: -> list(items=$fpssep=\", \")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("list",
                	    new STAttrMap().Add("items", list_fps).Add("sep", ", "));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "formal_parameter_list"

        public class formal_parameter_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "formal_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1439:1: formal_parameter : ( ( attributes )? ( fixed_parameter -> { $fixed_parameter.st } | parameter_array -> { $parameter_array.st }) | '__arglist' );
        public JavaPrettyPrint.formal_parameter_return formal_parameter() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.formal_parameter_return retval = new JavaPrettyPrint.formal_parameter_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.fixed_parameter_return fixed_parameter140 = default(JavaPrettyPrint.fixed_parameter_return);

            JavaPrettyPrint.parameter_array_return parameter_array141 = default(JavaPrettyPrint.parameter_array_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1439:17: ( ( attributes )? ( fixed_parameter -> { $fixed_parameter.st } | parameter_array -> { $parameter_array.st }) | '__arglist' )
                int alt170 = 2;
                int LA170_0 = input.LA(1);

                if ( (LA170_0 == ATTRIBUTE || LA170_0 == THIS || LA170_0 == TYPE || (LA170_0 >= 212 && LA170_0 <= 213) || LA170_0 == 257) )
                {
                    alt170 = 1;
                }
                else if ( (LA170_0 == 256) )
                {
                    alt170 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d170s0 =
                        new NoViableAltException("", 170, 0, input);

                    throw nvae_d170s0;
                }
                switch (alt170) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1440:2: ( attributes )? ( fixed_parameter -> { $fixed_parameter.st } | parameter_array -> { $parameter_array.st })
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1440:2: ( attributes )?
                        	int alt168 = 2;
                        	int LA168_0 = input.LA(1);

                        	if ( (LA168_0 == ATTRIBUTE) )
                        	{
                        	    alt168 = 1;
                        	}
                        	switch (alt168) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1440:2: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_formal_parameter7330);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1440:16: ( fixed_parameter -> { $fixed_parameter.st } | parameter_array -> { $parameter_array.st })
                        	int alt169 = 2;
                        	int LA169_0 = input.LA(1);

                        	if ( (LA169_0 == THIS || LA169_0 == TYPE || (LA169_0 >= 212 && LA169_0 <= 213)) )
                        	{
                        	    alt169 = 1;
                        	}
                        	else if ( (LA169_0 == 257) )
                        	{
                        	    alt169 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        	    NoViableAltException nvae_d169s0 =
                        	        new NoViableAltException("", 169, 0, input);

                        	    throw nvae_d169s0;
                        	}
                        	switch (alt169) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1440:17: fixed_parameter
                        	        {
                        	        	PushFollow(FOLLOW_fixed_parameter_in_formal_parameter7336);
                        	        	fixed_parameter140 = fixed_parameter();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;


                        	        	// TEMPLATE REWRITE
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	  // 1440:33: -> { $fixed_parameter.st }
                        	        	  {
                        	        	      retval.ST =  ((fixed_parameter140 != null) ? fixed_parameter140.ST : null) ;
                        	        	  }

                        	        	}
                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1440:61: parameter_array
                        	        {
                        	        	PushFollow(FOLLOW_parameter_array_in_formal_parameter7343);
                        	        	parameter_array141 = parameter_array();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;


                        	        	// TEMPLATE REWRITE
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	  // 1440:77: -> { $parameter_array.st }
                        	        	  {
                        	        	      retval.ST =  ((parameter_array141 != null) ? parameter_array141.ST : null) ;
                        	        	  }

                        	        	}
                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1441:4: '__arglist'
                        {
                        	Match(input,256,FOLLOW_256_in_formal_parameter7354); if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "formal_parameter"

        public class fixed_parameter_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "fixed_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1445:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? -> fixed_parameter(mod= $parameter_modifier.st type= $type.st name= $identifier.st default= $default_argument.st );
        public JavaPrettyPrint.fixed_parameter_return fixed_parameter() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.fixed_parameter_return retval = new JavaPrettyPrint.fixed_parameter_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.parameter_modifier_return parameter_modifier142 = default(JavaPrettyPrint.parameter_modifier_return);

            JavaPrettyPrint.type_return type143 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.identifier_return identifier144 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.default_argument_return default_argument145 = default(JavaPrettyPrint.default_argument_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1445:16: ( ( parameter_modifier )? type identifier ( default_argument )? -> fixed_parameter(mod= $parameter_modifier.st type= $type.st name= $identifier.st default= $default_argument.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1446:2: ( parameter_modifier )? type identifier ( default_argument )?
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1446:2: ( parameter_modifier )?
                	int alt171 = 2;
                	int LA171_0 = input.LA(1);

                	if ( (LA171_0 == THIS || (LA171_0 >= 212 && LA171_0 <= 213)) )
                	{
                	    alt171 = 1;
                	}
                	switch (alt171) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1446:2: parameter_modifier
                	        {
                	        	PushFollow(FOLLOW_parameter_modifier_in_fixed_parameter7365);
                	        	parameter_modifier142 = parameter_modifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_type_in_fixed_parameter7370);
                	type143 = type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_fixed_parameter7374);
                	identifier144 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1446:44: ( default_argument )?
                	int alt172 = 2;
                	int LA172_0 = input.LA(1);

                	if ( (LA172_0 == ASSIGN) )
                	{
                	    alt172 = 1;
                	}
                	switch (alt172) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1446:44: default_argument
                	        {
                	        	PushFollow(FOLLOW_default_argument_in_fixed_parameter7378);
                	        	default_argument145 = default_argument();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1446:62: -> fixed_parameter(mod= $parameter_modifier.st type= $type.st name= $identifier.st default= $default_argument.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("fixed_parameter",
                	    new STAttrMap().Add("mod",  ((parameter_modifier142 != null) ? parameter_modifier142.ST : null) ).Add("type",  ((type143 != null) ? type143.ST : null) ).Add("name",  ((identifier144 != null) ? identifier144.ST : null) ).Add("default",  ((default_argument145 != null) ? default_argument145.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "fixed_parameter"

        public class default_argument_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "default_argument"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1448:1: default_argument : '=' expression -> { $expression.st };
        public JavaPrettyPrint.default_argument_return default_argument() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.default_argument_return retval = new JavaPrettyPrint.default_argument_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression146 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1448:17: ( '=' expression -> { $expression.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1449:2: '=' expression
                {
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_default_argument7417); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_default_argument7419);
                	expression146 = expression();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1449:17: -> { $expression.st }
                	  {
                	      retval.ST =  ((expression146 != null) ? expression146.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "default_argument"

        public class parameter_modifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "parameter_modifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1450:1: parameter_modifier : (m= 'ref' | m= 'out' | m= 'this' ) -> inline_comment(payload= $m.text explanation= \"parameter modifiers are not yet supported\" );
        public JavaPrettyPrint.parameter_modifier_return parameter_modifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.parameter_modifier_return retval = new JavaPrettyPrint.parameter_modifier_return();
            retval.start = input.LT(1);

            CommonTree m = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1450:19: ( (m= 'ref' | m= 'out' | m= 'this' ) -> inline_comment(payload= $m.text explanation= \"parameter modifiers are not yet supported\" ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1451:2: (m= 'ref' | m= 'out' | m= 'this' )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1451:2: (m= 'ref' | m= 'out' | m= 'this' )
                	int alt173 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case 213:
                		{
                	    alt173 = 1;
                	    }
                	    break;
                	case 212:
                		{
                	    alt173 = 2;
                	    }
                	    break;
                	case THIS:
                		{
                	    alt173 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d173s0 =
                		        new NoViableAltException("", 173, 0, input);

                		    throw nvae_d173s0;
                	}

                	switch (alt173) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1451:3: m= 'ref'
                	        {
                	        	m=(CommonTree)Match(input,213,FOLLOW_213_in_parameter_modifier7433); if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1451:13: m= 'out'
                	        {
                	        	m=(CommonTree)Match(input,212,FOLLOW_212_in_parameter_modifier7439); if (state.failed) return retval;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1451:23: m= 'this'
                	        {
                	        	m=(CommonTree)Match(input,THIS,FOLLOW_THIS_in_parameter_modifier7445); if (state.failed) return retval;

                	        }
                	        break;

                	}



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1451:33: -> inline_comment(payload= $m.text explanation= \"parameter modifiers are not yet supported\" )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("inline_comment",
                	    new STAttrMap().Add("payload",  ((m != null) ? m.Text : null) ).Add("explanation",  "parameter modifiers are not yet supported" ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "parameter_modifier"

        public class parameter_array_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "parameter_array"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1452:1: parameter_array : ^( 'params' type identifier ) -> varargs(type= $type.st name= $identifier.st );
        public JavaPrettyPrint.parameter_array_return parameter_array() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.parameter_array_return retval = new JavaPrettyPrint.parameter_array_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type147 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.identifier_return identifier148 = default(JavaPrettyPrint.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1452:16: ( ^( 'params' type identifier ) -> varargs(type= $type.st name= $identifier.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1453:2: ^( 'params' type identifier )
                {
                	Match(input,257,FOLLOW_257_in_parameter_array7469); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_parameter_array7473);
                	type147 = type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_parameter_array7477);
                	identifier148 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1453:34: -> varargs(type= $type.st name= $identifier.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("varargs",
                	    new STAttrMap().Add("type",  ((type147 != null) ? type147.ST : null) ).Add("name",  ((identifier148 != null) ? identifier148.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "parameter_array"

        public class interface_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "interface_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1456:1: interface_declaration : ^(c= INTERFACE ( 'partial' )? ( attributes )? ( modifiers )? identifier ( type_parameter_constraints_clauses )? ( variant_generic_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( class_extends )? interface_body ) -> {isPartial}? -> class(type= \"interface\" modifiers= $modifiers.st name= $identifier.st typeparams=$variant_generic_parameter_list.stcomments= preComments imps= $class_extends.st body= $interface_body.st );
        public JavaPrettyPrint.interface_declaration_return interface_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.interface_declaration_return retval = new JavaPrettyPrint.interface_declaration_return();
            retval.start = input.LT(1);

            CommonTree c = null;
            JavaPrettyPrint.identifier_return identifier149 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.type_parameter_constraints_clauses_return type_parameter_constraints_clauses150 = default(JavaPrettyPrint.type_parameter_constraints_clauses_return);

            JavaPrettyPrint.attributes_return attributes151 = default(JavaPrettyPrint.attributes_return);

            JavaPrettyPrint.modifiers_return modifiers152 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.variant_generic_parameter_list_return variant_generic_parameter_list153 = default(JavaPrettyPrint.variant_generic_parameter_list_return);

            JavaPrettyPrint.class_extends_return class_extends154 = default(JavaPrettyPrint.class_extends_return);

            JavaPrettyPrint.interface_body_return interface_body155 = default(JavaPrettyPrint.interface_body_return);



                List<string> preComments = null;
                String name = "";
                bool isPartial = false;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1461:2: ( ^(c= INTERFACE ( 'partial' )? ( attributes )? ( modifiers )? identifier ( type_parameter_constraints_clauses )? ( variant_generic_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( class_extends )? interface_body ) -> {isPartial}? -> class(type= \"interface\" modifiers= $modifiers.st name= $identifier.st typeparams=$variant_generic_parameter_list.stcomments= preComments imps= $class_extends.st body= $interface_body.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:4: ^(c= INTERFACE ( 'partial' )? ( attributes )? ( modifiers )? identifier ( type_parameter_constraints_clauses )? ( variant_generic_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( class_extends )? interface_body )
                {
                	c=(CommonTree)Match(input,INTERFACE,FOLLOW_INTERFACE_in_interface_declaration7514); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:18: ( 'partial' )?
                	int alt174 = 2;
                	int LA174_0 = input.LA(1);

                	if ( (LA174_0 == 196) )
                	{
                	    alt174 = 1;
                	}
                	switch (alt174) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:19: 'partial'
                	        {
                	        	Match(input,196,FOLLOW_196_in_interface_declaration7517); if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   isPartial = true; 
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:53: ( attributes )?
                	int alt175 = 2;
                	int LA175_0 = input.LA(1);

                	if ( (LA175_0 == ATTRIBUTE) )
                	{
                	    alt175 = 1;
                	}
                	switch (alt175) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:53: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_interface_declaration7523);
                	        	attributes151 = attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:65: ( modifiers )?
                	int alt176 = 2;
                	int LA176_0 = input.LA(1);

                	if ( (LA176_0 == FINAL || (LA176_0 >= PUBLIC && LA176_0 <= PRIVATE) || LA176_0 == STATIC || LA176_0 == 194 || LA176_0 == 197 || (LA176_0 >= 199 && LA176_0 <= 204)) )
                	{
                	    alt176 = 1;
                	}
                	switch (alt176) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1462:65: modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_interface_declaration7526);
                	        	modifiers152 = modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_interface_declaration7541);
                	identifier149 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   name = ((identifier149 != null) ? identifier149.ST : null).ToString(); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1463:62: ( type_parameter_constraints_clauses )?
                	int alt177 = 2;
                	int LA177_0 = input.LA(1);

                	if ( (LA177_0 == TYPE_PARAM_CONSTRAINT) )
                	{
                	    alt177 = 1;
                	}
                	switch (alt177) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1463:62: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration7545);
                	        	type_parameter_constraints_clauses150 = type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1463:99: ( variant_generic_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )?
                	int alt178 = 2;
                	int LA178_0 = input.LA(1);

                	if ( (LA178_0 == OUT || LA178_0 == ATTRIBUTE || LA178_0 == IN || LA178_0 == IDENTIFIER || (LA178_0 >= ELIF && LA178_0 <= UNDEF) || LA178_0 == 195 || LA178_0 == 221 || (LA178_0 >= 224 && LA178_0 <= 239) || (LA178_0 >= 241 && LA178_0 <= 244) || (LA178_0 >= 247 && LA178_0 <= 250) || LA178_0 == 256 || (LA178_0 >= 263 && LA178_0 <= 264) || LA178_0 == 274 || LA178_0 == 277) )
                	{
                	    alt178 = 1;
                	}
                	switch (alt178) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1463:99: variant_generic_parameter_list[$type_parameter_constraints_clauses.tpConstraints]
                	        {
                	        	PushFollow(FOLLOW_variant_generic_parameter_list_in_interface_declaration7549);
                	        	variant_generic_parameter_list153 = variant_generic_parameter_list(((type_parameter_constraints_clauses150 != null) ? type_parameter_constraints_clauses150.tpConstraints : default(Dictionary<string,StringTemplate>)));
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1464:10: ( class_extends )?
                	int alt179 = 2;
                	int LA179_0 = input.LA(1);

                	if ( (LA179_0 == EXTENDS) )
                	{
                	    alt179 = 1;
                	}
                	switch (alt179) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1464:10: class_extends
                	        {
                	        	PushFollow(FOLLOW_class_extends_in_interface_declaration7562);
                	        	class_extends154 = class_extends();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   preComments = CollectedComments; 
                	}
                	PushFollow(FOLLOW_interface_body_in_interface_declaration7569);
                	interface_body155 = interface_body();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{

                	           
                	           if (isPartial) {
                	              // build a serialized descriptor and merge it
                	              ClassDescriptorSerialized part = new ClassDescriptorSerialized(name);

                	              if (preComments != null) { 
                	                 foreach (String comment in preComments) {
                	                    part.Comments += comment ;
                	                 }
                	              }
                	              part.Type = "interface";
                	              // Union all attributes
                	              part.Atts += mkString(((attributes151 != null) ? attributes151.ST : null));
                	              // Merge modifiers
                	              if (((modifiers152 != null) ? modifiers152.modList : default(List<string>)) != null && ((modifiers152 != null) ? modifiers152.modList : default(List<string>)).Count > 0) {
                	                 foreach (string m in ((modifiers152 != null) ? modifiers152.modList : default(List<string>))) {
                	                    part.Mods.Add(m);
                	                 }
                	              }
                	              part.TypeParameterList = mkString(((variant_generic_parameter_list153 != null) ? variant_generic_parameter_list153.ST : null));

                	              if (((class_extends154 != null) ? class_extends154.extendList : default(List<String>)) != null && ((class_extends154 != null) ? class_extends154.extendList : default(List<String>)).Count > 0) {
                	                 foreach (string m in ((class_extends154 != null) ? class_extends154.extendList : default(List<String>))) {
                	                    part.ClassExtends.Add(m);
                	                 }
                	              }

                	              part.ClassBody += mkString(((interface_body155 != null) ? interface_body155.ST : null));

                	              // Place this in our parent's scope (We don't declare a TypeContext scope because interfaces don't have nested types)
                	              if (!((TypeContext_scope)TypeContext_stack.Peek()).partialTypes.ContainsKey(name)) {
                	                 ((TypeContext_scope)TypeContext_stack.Peek()).partialTypes[name] = part;
                	              }
                	              else {
                	                 mergeParts(((TypeContext_scope)TypeContext_stack.Peek()).partialTypes[name], part);
                	              }
                	           }
                	        
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1504:5: -> {isPartial}?
                	  if (isPartial) {
                	      retval.ST = null;;
                	  }
                	  else // 1505:5: -> class(type= \"interface\" modifiers= $modifiers.st name= $identifier.st typeparams=$variant_generic_parameter_list.stcomments= preComments imps= $class_extends.st body= $interface_body.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("class",
                	    new STAttrMap().Add("type",  "interface" ).Add("modifiers",  ((modifiers152 != null) ? modifiers152.ST : null) ).Add("name",  ((identifier149 != null) ? identifier149.ST : null) ).Add("typeparams", ((variant_generic_parameter_list153 != null) ? variant_generic_parameter_list153.ST : null)).Add("comments",  preComments ).Add("imps",  ((class_extends154 != null) ? class_extends154.ST : null) ).Add("body",  ((interface_body155 != null) ? interface_body155.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "interface_declaration"

        public class interface_body_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "interface_body"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1509:1: interface_body : '{' (ms+= interface_member_declaration_aux )* '}' -> class_body(entries= $ms );
        public JavaPrettyPrint.interface_body_return interface_body() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.interface_body_return retval = new JavaPrettyPrint.interface_body_return();
            retval.start = input.LT(1);

            List list_ms = null;
            RuleReturnScope ms = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1509:15: ( '{' (ms+= interface_member_declaration_aux )* '}' -> class_body(entries= $ms ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1510:2: '{' (ms+= interface_member_declaration_aux )* '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_body7660); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1510:10: (ms+= interface_member_declaration_aux )*
                	do 
                	{
                	    int alt180 = 2;
                	    int LA180_0 = input.LA(1);

                	    if ( ((LA180_0 >= EVENT && LA180_0 <= METHOD)) )
                	    {
                	        alt180 = 1;
                	    }


                	    switch (alt180) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1510:10: ms+= interface_member_declaration_aux
                			    {
                			    	PushFollow(FOLLOW_interface_member_declaration_aux_in_interface_body7666);
                			    	ms = interface_member_declaration_aux();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_ms == null) list_ms = new ArrayList();
                			    	list_ms.Add(ms.Template);


                			    }
                			    break;

                			default:
                			    goto loop180;
                	    }
                	} while (true);

                	loop180:
                		;	// Stops C# compiler whining that label 'loop180' has no statements

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_body7671); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1510:52: -> class_body(entries= $ms )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("class_body",
                	    new STAttrMap().Add("entries",  list_ms ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "interface_body"

        public class interface_member_declaration_aux_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "interface_member_declaration_aux"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1511:1: interface_member_declaration_aux : member= interface_member_declaration -> class_member(comments= $member.preComments member= $member.st );
        public JavaPrettyPrint.interface_member_declaration_aux_return interface_member_declaration_aux() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.interface_member_declaration_aux_return retval = new JavaPrettyPrint.interface_member_declaration_aux_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.interface_member_declaration_return member = default(JavaPrettyPrint.interface_member_declaration_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1511:33: (member= interface_member_declaration -> class_member(comments= $member.preComments member= $member.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1512:2: member= interface_member_declaration
                {
                	PushFollow(FOLLOW_interface_member_declaration_in_interface_member_declaration_aux7691);
                	member = interface_member_declaration();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1512:38: -> class_member(comments= $member.preComments member= $member.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("class_member",
                	    new STAttrMap().Add("comments",  ((member != null) ? member.preComments : default(List<string>)) ).Add("member",  ((member != null) ? member.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "interface_member_declaration_aux"

        public class interface_member_declaration_return : TreeRuleReturnScope
        {
            public List<string> preComments;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "interface_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1514:1: interface_member_declaration returns [List<string> preComments] : ( ^( EVENT ( attributes )? ( modifiers )? event_declaration ) | ^( METHOD ( attributes )? ( modifiers )? type identifier ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( formal_parameter_list )? ( exception )* ) -> method(modifiers=$modifiers.sttype=$type.stname= $identifier.st typeparams= $type_parameter_list.st params= $formal_parameter_list.st exceptions= $exception.st bodyIsSemi= true ));
        public JavaPrettyPrint.interface_member_declaration_return interface_member_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.interface_member_declaration_return retval = new JavaPrettyPrint.interface_member_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_parameter_constraints_clauses_return type_parameter_constraints_clauses156 = default(JavaPrettyPrint.type_parameter_constraints_clauses_return);

            JavaPrettyPrint.modifiers_return modifiers157 = default(JavaPrettyPrint.modifiers_return);

            JavaPrettyPrint.type_return type158 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.identifier_return identifier159 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.type_parameter_list_return type_parameter_list160 = default(JavaPrettyPrint.type_parameter_list_return);

            JavaPrettyPrint.formal_parameter_list_return formal_parameter_list161 = default(JavaPrettyPrint.formal_parameter_list_return);

            JavaPrettyPrint.exception_return exception162 = default(JavaPrettyPrint.exception_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1514:64: ( ^( EVENT ( attributes )? ( modifiers )? event_declaration ) | ^( METHOD ( attributes )? ( modifiers )? type identifier ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( formal_parameter_list )? ( exception )* ) -> method(modifiers=$modifiers.sttype=$type.stname= $identifier.st typeparams= $type_parameter_list.st params= $formal_parameter_list.st exceptions= $exception.st bodyIsSemi= true ))
                int alt189 = 2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0 == EVENT) )
                {
                    alt189 = 1;
                }
                else if ( (LA189_0 == METHOD) )
                {
                    alt189 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d189s0 =
                        new NoViableAltException("", 189, 0, input);

                    throw nvae_d189s0;
                }
                switch (alt189) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1515:5: ^( EVENT ( attributes )? ( modifiers )? event_declaration )
                        {
                        	Match(input,EVENT,FOLLOW_EVENT_in_interface_member_declaration7725); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1515:13: ( attributes )?
                        	int alt181 = 2;
                        	int LA181_0 = input.LA(1);

                        	if ( (LA181_0 == ATTRIBUTE) )
                        	{
                        	    alt181 = 1;
                        	}
                        	switch (alt181) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1515:13: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_interface_member_declaration7727);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1515:25: ( modifiers )?
                        	int alt182 = 2;
                        	int LA182_0 = input.LA(1);

                        	if ( (LA182_0 == FINAL || (LA182_0 >= PUBLIC && LA182_0 <= PRIVATE) || LA182_0 == STATIC || LA182_0 == 194 || LA182_0 == 197 || (LA182_0 >= 199 && LA182_0 <= 204)) )
                        	{
                        	    alt182 = 1;
                        	}
                        	switch (alt182) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1515:25: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_interface_member_declaration7730);
                        	        	modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_event_declaration_in_interface_member_declaration7733);
                        	event_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:7: ^( METHOD ( attributes )? ( modifiers )? type identifier ( type_parameter_constraints_clauses )? ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )? ( formal_parameter_list )? ( exception )* )
                        {
                        	Match(input,METHOD,FOLLOW_METHOD_in_interface_member_declaration7743); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:16: ( attributes )?
                        	int alt183 = 2;
                        	int LA183_0 = input.LA(1);

                        	if ( (LA183_0 == ATTRIBUTE) )
                        	{
                        	    alt183 = 1;
                        	}
                        	switch (alt183) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:16: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_interface_member_declaration7745);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:28: ( modifiers )?
                        	int alt184 = 2;
                        	int LA184_0 = input.LA(1);

                        	if ( (LA184_0 == FINAL || (LA184_0 >= PUBLIC && LA184_0 <= PRIVATE) || LA184_0 == STATIC || LA184_0 == 194 || LA184_0 == 197 || (LA184_0 >= 199 && LA184_0 <= 204)) )
                        	{
                        	    alt184 = 1;
                        	}
                        	switch (alt184) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:28: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_interface_member_declaration7748);
                        	        	modifiers157 = modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_type_in_interface_member_declaration7751);
                        	type158 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_identifier_in_interface_member_declaration7753);
                        	identifier159 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:55: ( type_parameter_constraints_clauses )?
                        	int alt185 = 2;
                        	int LA185_0 = input.LA(1);

                        	if ( (LA185_0 == TYPE_PARAM_CONSTRAINT) )
                        	{
                        	    alt185 = 1;
                        	}
                        	switch (alt185) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:55: type_parameter_constraints_clauses
                        	        {
                        	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_member_declaration7755);
                        	        	type_parameter_constraints_clauses156 = type_parameter_constraints_clauses();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:91: ( type_parameter_list[$type_parameter_constraints_clauses.tpConstraints] )?
                        	int alt186 = 2;
                        	int LA186_0 = input.LA(1);

                        	if ( (LA186_0 == ATTRIBUTE || LA186_0 == IDENTIFIER || (LA186_0 >= ELIF && LA186_0 <= UNDEF) || LA186_0 == 195 || LA186_0 == 221 || (LA186_0 >= 224 && LA186_0 <= 239) || (LA186_0 >= 241 && LA186_0 <= 244) || (LA186_0 >= 247 && LA186_0 <= 250) || LA186_0 == 256 || (LA186_0 >= 263 && LA186_0 <= 264) || LA186_0 == 274 || LA186_0 == 277) )
                        	{
                        	    alt186 = 1;
                        	}
                        	switch (alt186) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:91: type_parameter_list[$type_parameter_constraints_clauses.tpConstraints]
                        	        {
                        	        	PushFollow(FOLLOW_type_parameter_list_in_interface_member_declaration7758);
                        	        	type_parameter_list160 = type_parameter_list(((type_parameter_constraints_clauses156 != null) ? type_parameter_constraints_clauses156.tpConstraints : default(Dictionary<string,StringTemplate>)));
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:163: ( formal_parameter_list )?
                        	int alt187 = 2;
                        	int LA187_0 = input.LA(1);

                        	if ( (LA187_0 == PARAMS) )
                        	{
                        	    alt187 = 1;
                        	}
                        	switch (alt187) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:163: formal_parameter_list
                        	        {
                        	        	PushFollow(FOLLOW_formal_parameter_list_in_interface_member_declaration7762);
                        	        	formal_parameter_list161 = formal_parameter_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:186: ( exception )*
                        	do 
                        	{
                        	    int alt188 = 2;
                        	    int LA188_0 = input.LA(1);

                        	    if ( (LA188_0 == EXCEPTION) )
                        	    {
                        	        alt188 = 1;
                        	    }


                        	    switch (alt188) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1516:186: exception
                        			    {
                        			    	PushFollow(FOLLOW_exception_in_interface_member_declaration7765);
                        			    	exception162 = exception();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;

                        			    }
                        			    break;

                        			default:
                        			    goto loop188;
                        	    }
                        	} while (true);

                        	loop188:
                        		;	// Stops C# compiler whining that label 'loop188' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.preComments =  CollectedComments; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1518:7: -> method(modifiers=$modifiers.sttype=$type.stname= $identifier.st typeparams= $type_parameter_list.st params= $formal_parameter_list.st exceptions= $exception.st bodyIsSemi= true )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("method",
                        	    new STAttrMap().Add("modifiers", ((modifiers157 != null) ? modifiers157.ST : null)).Add("type", ((type158 != null) ? type158.ST : null)).Add("name",  ((identifier159 != null) ? identifier159.ST : null) ).Add("typeparams",  ((type_parameter_list160 != null) ? type_parameter_list160.ST : null) ).Add("params",  ((formal_parameter_list161 != null) ? formal_parameter_list161.ST : null) ).Add("exceptions",  ((exception162 != null) ? exception162.ST : null) ).Add("bodyIsSemi",  true ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "interface_member_declaration"

        public class operator_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "operator_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1522:1: operator_declaration : operator_declarator operator_body ;
        public JavaPrettyPrint.operator_declaration_return operator_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.operator_declaration_return retval = new JavaPrettyPrint.operator_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1522:21: ( operator_declarator operator_body )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1523:2: operator_declarator operator_body
                {
                	PushFollow(FOLLOW_operator_declarator_in_operator_declaration7840);
                	operator_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_operator_body_in_operator_declaration7844);
                	operator_body();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "operator_declaration"

        public class operator_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1524:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator '(' type identifier unary_operator_declarator | overloadable_binary_operator '(' type identifier binary_operator_declarator ) ;
        public JavaPrettyPrint.operator_declarator_return operator_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.operator_declarator_return retval = new JavaPrettyPrint.operator_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1524:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator '(' type identifier unary_operator_declarator | overloadable_binary_operator '(' type identifier binary_operator_declarator ) )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1525:2: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator '(' type identifier unary_operator_declarator | overloadable_binary_operator '(' type identifier binary_operator_declarator )
                {
                	Match(input,259,FOLLOW_259_in_operator_declarator7852); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1526:2: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator '(' type identifier unary_operator_declarator | overloadable_binary_operator '(' type identifier binary_operator_declarator )
                	int alt191 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case PLUS:
                	case MINUS:
                		{
                	    alt191 = 1;
                	    }
                	    break;
                	case MONONOT:
                	case MONOTWIDDLE:
                	case TRUE:
                	case FALSE:
                	case 209:
                	case 210:
                		{
                	    alt191 = 2;
                	    }
                	    break;
                	case BIT_OR:
                	case BIT_XOR:
                	case BIT_AND:
                	case NOT_EQUAL:
                	case EQUAL:
                	case LTHAN:
                	case LTE:
                	case GTE:
                	case LEFT_SHIFT:
                	case DIV:
                	case MOD:
                	case STAR:
                	case GT:
                		{
                	    alt191 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d191s0 =
                		        new NoViableAltException("", 191, 0, input);

                		    throw nvae_d191s0;
                	}

                	switch (alt191) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1526:3: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
                	        {
                	        	if ( (input.LA(1) >= PLUS && input.LA(1) <= MINUS) ) 
                	        	{
                	        	    input.Consume();
                	        	    state.errorRecovery = false;state.failed = false;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	        	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	        	    throw mse;
                	        	}

                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_operator_declarator7867); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_type_in_operator_declarator7871);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	PushFollow(FOLLOW_identifier_in_operator_declarator7875);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1526:43: ( binary_operator_declarator | unary_operator_declarator )
                	        	int alt190 = 2;
                	        	int LA190_0 = input.LA(1);

                	        	if ( (LA190_0 == COMMA) )
                	        	{
                	        	    alt190 = 1;
                	        	}
                	        	else if ( (LA190_0 == RPAREN) )
                	        	{
                	        	    alt190 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	        	    NoViableAltException nvae_d190s0 =
                	        	        new NoViableAltException("", 190, 0, input);

                	        	    throw nvae_d190s0;
                	        	}
                	        	switch (alt190) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1526:44: binary_operator_declarator
                	        	        {
                	        	        	PushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator7880);
                	        	        	binary_operator_declarator();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1526:73: unary_operator_declarator
                	        	        {
                	        	        	PushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator7884);
                	        	        	unary_operator_declarator();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1527:5: overloadable_unary_operator '(' type identifier unary_operator_declarator
                	        {
                	        	PushFollow(FOLLOW_overloadable_unary_operator_in_operator_declarator7891);
                	        	overloadable_unary_operator();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_operator_declarator7895); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_type_in_operator_declarator7899);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	PushFollow(FOLLOW_identifier_in_operator_declarator7901);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	PushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator7905);
                	        	unary_operator_declarator();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1528:5: overloadable_binary_operator '(' type identifier binary_operator_declarator
                	        {
                	        	PushFollow(FOLLOW_overloadable_binary_operator_in_operator_declarator7911);
                	        	overloadable_binary_operator();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_operator_declarator7915); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_type_in_operator_declarator7919);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	PushFollow(FOLLOW_identifier_in_operator_declarator7921);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	PushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator7925);
                	        	binary_operator_declarator();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "operator_declarator"

        public class unary_operator_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unary_operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1529:1: unary_operator_declarator : ')' ;
        public JavaPrettyPrint.unary_operator_declarator_return unary_operator_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unary_operator_declarator_return retval = new JavaPrettyPrint.unary_operator_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1529:26: ( ')' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1530:5: ')'
                {
                	Match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator_declarator7937); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unary_operator_declarator"

        public class overloadable_unary_operator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "overloadable_unary_operator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1531:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
        public JavaPrettyPrint.overloadable_unary_operator_return overloadable_unary_operator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.overloadable_unary_operator_return retval = new JavaPrettyPrint.overloadable_unary_operator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1531:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:
                {
                	if ( (input.LA(1) >= MONONOT && input.LA(1) <= MONOTWIDDLE) || (input.LA(1) >= TRUE && input.LA(1) <= FALSE) || (input.LA(1) >= 209 && input.LA(1) <= 210) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "overloadable_unary_operator"

        public class binary_operator_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "binary_operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1533:1: binary_operator_declarator : ',' type identifier ')' ;
        public JavaPrettyPrint.binary_operator_declarator_return binary_operator_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.binary_operator_declarator_return retval = new JavaPrettyPrint.binary_operator_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1533:27: ( ',' type identifier ')' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1534:2: ',' type identifier ')'
                {
                	Match(input,COMMA,FOLLOW_COMMA_in_binary_operator_declarator7980); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_binary_operator_declarator7984);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_binary_operator_declarator7988);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_binary_operator_declarator7992); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "binary_operator_declarator"

        public class overloadable_binary_operator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "overloadable_binary_operator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1536:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
        public JavaPrettyPrint.overloadable_binary_operator_return overloadable_binary_operator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.overloadable_binary_operator_return retval = new JavaPrettyPrint.overloadable_binary_operator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1536:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
                int alt192 = 14;
                alt192 = dfa192.Predict(input);
                switch (alt192) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:19: '*'
                        {
                        	Match(input,STAR,FOLLOW_STAR_in_overloadable_binary_operator8003); if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:25: '/'
                        {
                        	Match(input,DIV,FOLLOW_DIV_in_overloadable_binary_operator8007); if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:31: '%'
                        {
                        	Match(input,MOD,FOLLOW_MOD_in_overloadable_binary_operator8011); if (state.failed) return retval;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:37: '&'
                        {
                        	Match(input,BIT_AND,FOLLOW_BIT_AND_in_overloadable_binary_operator8015); if (state.failed) return retval;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:43: '|'
                        {
                        	Match(input,BIT_OR,FOLLOW_BIT_OR_in_overloadable_binary_operator8019); if (state.failed) return retval;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:49: '^'
                        {
                        	Match(input,BIT_XOR,FOLLOW_BIT_XOR_in_overloadable_binary_operator8023); if (state.failed) return retval;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:55: '<<'
                        {
                        	Match(input,LEFT_SHIFT,FOLLOW_LEFT_SHIFT_in_overloadable_binary_operator8027); if (state.failed) return retval;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:62: '>' '>'
                        {
                        	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator8031); if (state.failed) return retval;
                        	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator8033); if (state.failed) return retval;

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:72: '=='
                        {
                        	Match(input,EQUAL,FOLLOW_EQUAL_in_overloadable_binary_operator8037); if (state.failed) return retval;

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:79: '!='
                        {
                        	Match(input,NOT_EQUAL,FOLLOW_NOT_EQUAL_in_overloadable_binary_operator8041); if (state.failed) return retval;

                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:86: '>'
                        {
                        	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator8045); if (state.failed) return retval;

                        }
                        break;
                    case 12 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:92: '<'
                        {
                        	Match(input,LTHAN,FOLLOW_LTHAN_in_overloadable_binary_operator8049); if (state.failed) return retval;

                        }
                        break;
                    case 13 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:98: '>='
                        {
                        	Match(input,GTE,FOLLOW_GTE_in_overloadable_binary_operator8053); if (state.failed) return retval;

                        }
                        break;
                    case 14 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1537:105: '<='
                        {
                        	Match(input,LTE,FOLLOW_LTE_in_overloadable_binary_operator8057); if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "overloadable_binary_operator"

        public class conversion_operator_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "conversion_operator_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1539:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
        public JavaPrettyPrint.conversion_operator_declaration_return conversion_operator_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.conversion_operator_declaration_return retval = new JavaPrettyPrint.conversion_operator_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1539:32: ( conversion_operator_declarator operator_body )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1540:2: conversion_operator_declarator operator_body
                {
                	PushFollow(FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration8067);
                	conversion_operator_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_operator_body_in_conversion_operator_declaration8071);
                	operator_body();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "conversion_operator_declaration"

        public class conversion_operator_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "conversion_operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1541:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
        public JavaPrettyPrint.conversion_operator_declarator_return conversion_operator_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.conversion_operator_declarator_return retval = new JavaPrettyPrint.conversion_operator_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1541:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1542:2: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
                {
                	if ( (input.LA(1) >= 260 && input.LA(1) <= 261) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}

                	Match(input,259,FOLLOW_259_in_conversion_operator_declarator8088); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_conversion_operator_declarator8092);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_conversion_operator_declarator8096); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_conversion_operator_declarator8100);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_conversion_operator_declarator8104);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_conversion_operator_declarator8108); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "conversion_operator_declarator"

        public class operator_body_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "operator_body"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1543:1: operator_body : block ;
        public JavaPrettyPrint.operator_body_return operator_body() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.operator_body_return retval = new JavaPrettyPrint.operator_body_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1543:14: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1544:2: block
                {
                	PushFollow(FOLLOW_block_in_operator_body8116);
                	block();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "operator_body"

        public class invocation_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "invocation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1547:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
        public JavaPrettyPrint.invocation_expression_return invocation_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.invocation_expression_return retval = new JavaPrettyPrint.invocation_expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1547:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:2: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
                {
                	PushFollow(FOLLOW_invocation_start_in_invocation_expression8126);
                	invocation_start();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:21: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
                	do 
                	{
                	    int alt193 = 3;
                	    int LA193_0 = input.LA(1);

                	    if ( (LA193_0 == LPAREN) )
                	    {
                	        int LA193_1 = input.LA(2);

                	        if ( (synpred14_JavaPrettyPrint()) )
                	        {
                	            alt193 = 1;
                	        }


                	    }
                	    else if ( (LA193_0 == OPEN_BRACKET || (LA193_0 >= DOT && LA193_0 <= PTR)) )
                	    {
                	        alt193 = 2;
                	    }


                	    switch (alt193) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                			    	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:23: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
                			    	{
                			    		PushFollow(FOLLOW_arguments_in_invocation_expression8148);
                			    		arguments();
                			    		state._fsp--;
                			    		if (state.failed) return retval;
                			    		PushFollow(FOLLOW_invocation_part_in_invocation_expression8152);
                			    		invocation_part();
                			    		state._fsp--;
                			    		if (state.failed) return retval;

                			    	}


                			    }
                			    break;
                			case 2 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1549:9: invocation_part
                			    {
                			    	PushFollow(FOLLOW_invocation_part_in_invocation_expression8163);
                			    	invocation_part();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop193;
                	    }
                	} while (true);

                	loop193:
                		;	// Stops C# compiler whining that label 'loop193' has no statements

                	PushFollow(FOLLOW_arguments_in_invocation_expression8169);
                	arguments();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "invocation_expression"

        public class invocation_start_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "invocation_start"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1550:1: invocation_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | ^( 'typeof' ( unbound_type_name | type ) ) );
        public JavaPrettyPrint.invocation_start_return invocation_start() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.invocation_start_return retval = new JavaPrettyPrint.invocation_start_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1550:17: ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | ^( 'typeof' ( unbound_type_name | type ) ) )
                int alt196 = 6;
                alt196 = dfa196.Predict(input);
                switch (alt196) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1551:2: predefined_type
                        {
                        	PushFollow(FOLLOW_predefined_type_in_invocation_start8177);
                        	predefined_type();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1552:4: ( identifier generic_argument_list )=> identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_invocation_start8194);
                        	identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_generic_argument_list_in_invocation_start8198);
                        	generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1553:4: 'this'
                        {
                        	Match(input,THIS,FOLLOW_THIS_in_invocation_start8203); if (state.failed) return retval;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1554:4: 'base'
                        {
                        	Match(input,207,FOLLOW_207_in_invocation_start8209); if (state.failed) return retval;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1555:4: identifier ( '::' identifier )?
                        {
                        	PushFollow(FOLLOW_identifier_in_invocation_start8214);
                        	identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1555:17: ( '::' identifier )?
                        	int alt194 = 2;
                        	int LA194_0 = input.LA(1);

                        	if ( (LA194_0 == 208) )
                        	{
                        	    alt194 = 1;
                        	}
                        	switch (alt194) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1555:18: '::' identifier
                        	        {
                        	        	Match(input,208,FOLLOW_208_in_invocation_start8219); if (state.failed) return retval;
                        	        	PushFollow(FOLLOW_identifier_in_invocation_start8223);
                        	        	identifier();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1556:4: ^( 'typeof' ( unbound_type_name | type ) )
                        {
                        	Match(input,219,FOLLOW_219_in_invocation_start8231); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1556:16: ( unbound_type_name | type )
                        	int alt195 = 2;
                        	int LA195_0 = input.LA(1);

                        	if ( (LA195_0 == IDENTIFIER || (LA195_0 >= ELIF && LA195_0 <= UNDEF) || LA195_0 == 195 || LA195_0 == 221 || (LA195_0 >= 224 && LA195_0 <= 239) || (LA195_0 >= 241 && LA195_0 <= 244) || (LA195_0 >= 247 && LA195_0 <= 250) || LA195_0 == 256 || (LA195_0 >= 263 && LA195_0 <= 264) || LA195_0 == 274 || LA195_0 == 277) )
                        	{
                        	    alt195 = 1;
                        	}
                        	else if ( (LA195_0 == TYPE) )
                        	{
                        	    alt195 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        	    NoViableAltException nvae_d195s0 =
                        	        new NoViableAltException("", 195, 0, input);

                        	    throw nvae_d195s0;
                        	}
                        	switch (alt195) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1556:17: unbound_type_name
                        	        {
                        	        	PushFollow(FOLLOW_unbound_type_name_in_invocation_start8235);
                        	        	unbound_type_name();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1556:37: type
                        	        {
                        	        	PushFollow(FOLLOW_type_in_invocation_start8239);
                        	        	type();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "invocation_start"

        public class invocation_part_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "invocation_part"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1558:1: invocation_part : ( access_identifier | brackets );
        public JavaPrettyPrint.invocation_part_return invocation_part() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.invocation_part_return retval = new JavaPrettyPrint.invocation_part_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1558:16: ( access_identifier | brackets )
                int alt197 = 2;
                int LA197_0 = input.LA(1);

                if ( ((LA197_0 >= DOT && LA197_0 <= PTR)) )
                {
                    alt197 = 1;
                }
                else if ( (LA197_0 == OPEN_BRACKET) )
                {
                    alt197 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d197s0 =
                        new NoViableAltException("", 197, 0, input);

                    throw nvae_d197s0;
                }
                switch (alt197) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1559:3: access_identifier
                        {
                        	PushFollow(FOLLOW_access_identifier_in_invocation_part8266);
                        	access_identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1560:4: brackets
                        {
                        	PushFollow(FOLLOW_brackets_in_invocation_part8271);
                        	brackets();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "invocation_part"

        public class statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1566:1: statement : ( ( declaration_statement )=> declaration_statement -> statement(statement= $declaration_statement.st ) | statement_plus -> statement(statement= $statement_plus.st ));
        public JavaPrettyPrint.statement_return statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.statement_return retval = new JavaPrettyPrint.statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.declaration_statement_return declaration_statement163 = default(JavaPrettyPrint.declaration_statement_return);

            JavaPrettyPrint.statement_plus_return statement_plus164 = default(JavaPrettyPrint.statement_plus_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1566:10: ( ( declaration_statement )=> declaration_statement -> statement(statement= $declaration_statement.st ) | statement_plus -> statement(statement= $statement_plus.st ))
                int alt198 = 2;
                int LA198_0 = input.LA(1);

                if ( (LA198_0 == TYPE_VAR) && (synpred16_JavaPrettyPrint()) )
                {
                    alt198 = 1;
                }
                else if ( (LA198_0 == TYPE_DYNAMIC) && (synpred16_JavaPrettyPrint()) )
                {
                    alt198 = 1;
                }
                else if ( (LA198_0 == TYPE) && (synpred16_JavaPrettyPrint()) )
                {
                    alt198 = 1;
                }
                else if ( (LA198_0 == 205) && (synpred16_JavaPrettyPrint()) )
                {
                    alt198 = 1;
                }
                else if ( ((LA198_0 >= PARAMS && LA198_0 <= PARAMS_TYPELESS) || (LA198_0 >= YIELD_RETURN && LA198_0 <= UNCHECKED) || (LA198_0 >= MONOPLUS && LA198_0 <= APPLY) || (LA198_0 >= NEW && LA198_0 <= NEW_ANON_OBJECT) || (LA198_0 >= RETURN && LA198_0 <= TRY) || LA198_0 == THROW || (LA198_0 >= BREAK && LA198_0 <= FOREACH) || LA198_0 == OPEN_BRACE || (LA198_0 >= NULL_COALESCE && LA198_0 <= IF) || (LA198_0 >= COND_EXPR && LA198_0 <= LEFT_SHIFT) || (LA198_0 >= SUPER && LA198_0 <= LAMBDA) || LA198_0 == CAST_EXPR || LA198_0 == SYNCHRONIZED || LA198_0 == JAVAWRAPPER || (LA198_0 >= BOOL && LA198_0 <= GT) || (LA198_0 >= ELIF && LA198_0 <= SEMI) || LA198_0 == 195 || LA198_0 == 198 || LA198_0 == 208 || (LA198_0 >= 214 && LA198_0 <= 219) || LA198_0 == 221 || (LA198_0 >= 224 && LA198_0 <= 239) || (LA198_0 >= 241 && LA198_0 <= 244) || (LA198_0 >= 247 && LA198_0 <= 254) || LA198_0 == 256 || (LA198_0 >= 262 && LA198_0 <= 264) || LA198_0 == 266 || (LA198_0 >= 268 && LA198_0 <= 272) || (LA198_0 >= 274 && LA198_0 <= 277)) )
                {
                    alt198 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d198s0 =
                        new NoViableAltException("", 198, 0, input);

                    throw nvae_d198s0;
                }
                switch (alt198) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1567:2: ( declaration_statement )=> declaration_statement
                        {
                        	PushFollow(FOLLOW_declaration_statement_in_statement8290);
                        	declaration_statement163 = declaration_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1567:51: -> statement(statement= $declaration_statement.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("statement",
                        	    new STAttrMap().Add("statement",  ((declaration_statement163 != null) ? declaration_statement163.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1568:4: statement_plus
                        {
                        	PushFollow(FOLLOW_statement_plus_in_statement8306);
                        	statement_plus164 = statement_plus();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1568:19: -> statement(statement= $statement_plus.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("statement",
                        	    new STAttrMap().Add("statement",  ((statement_plus164 != null) ? statement_plus164.ST : null) ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "statement"

        public class statement_plus_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "statement_plus"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1570:1: statement_plus : ( labeled_statement -> statement(statement= $labeled_statement.st ) | embedded_statement -> statement(statement= $embedded_statement.st ));
        public JavaPrettyPrint.statement_plus_return statement_plus() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.statement_plus_return retval = new JavaPrettyPrint.statement_plus_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.labeled_statement_return labeled_statement165 = default(JavaPrettyPrint.labeled_statement_return);

            JavaPrettyPrint.embedded_statement_return embedded_statement166 = default(JavaPrettyPrint.embedded_statement_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1570:15: ( labeled_statement -> statement(statement= $labeled_statement.st ) | embedded_statement -> statement(statement= $embedded_statement.st ))
                int alt199 = 2;
                alt199 = dfa199.Predict(input);
                switch (alt199) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1571:2: labeled_statement
                        {
                        	PushFollow(FOLLOW_labeled_statement_in_statement_plus8326);
                        	labeled_statement165 = labeled_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1571:20: -> statement(statement= $labeled_statement.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("statement",
                        	    new STAttrMap().Add("statement",  ((labeled_statement165 != null) ? labeled_statement165.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1572:4: embedded_statement
                        {
                        	PushFollow(FOLLOW_embedded_statement_in_statement_plus8342);
                        	embedded_statement166 = embedded_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1572:24: -> statement(statement= $embedded_statement.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("statement",
                        	    new STAttrMap().Add("statement",  ((embedded_statement166 != null) ? embedded_statement166.ST : null) ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "statement_plus"

        public class embedded_statement_return : TreeRuleReturnScope
        {
            public bool isSemi;
            public bool isIf;
            public bool indent;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "embedded_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1574:1: embedded_statement returns [bool isSemi, bool isIf, bool indent] : ( block -> { $block.st } | ^( IF boolean_expression SEP t= embedded_statement (e= else_statement )? ) -> if_template(comments= preComments cond= $boolean_expression.st then= $t.st thenindent= $t.indent else= $e.st elseisif= $e.isIf elseindent= $e.indent) | ^( 'switch' expression (s+= switch_section )* ) -> switch(comments= preComments scrutinee= $expression.st sections= $s ) | iteration_statement -> { $iteration_statement.st } | jump_statement -> { $jump_statement.st } | ^( 'try' b= block ( catch_clauses )? ( finally_clause )? ) -> try(comments= preComments block=$b.stblockindent= $b.isSemi catches= $catch_clauses.st fin= $finally_clause.st ) | checked_statement -> { $checked_statement.st } | unchecked_statement -> { $unchecked_statement.st } | synchronized_statement -> { $synchronized_statement.st } | yield_statement -> { $yield_statement.st } | ^( 'unsafe' block ) -> unsupported(comments= preComments reason=\"unsafe blocks are not supported\"text= someText ) | fixed_statement | expression_statement -> op(comments= preComments pre= $expression_statement.st op= ($expression_statement.st.ToString() == \"\" ? \"\" : \";\") ));
        public JavaPrettyPrint.embedded_statement_return embedded_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.embedded_statement_return retval = new JavaPrettyPrint.embedded_statement_return();
            retval.start = input.LT(1);

            List list_s = null;
            JavaPrettyPrint.embedded_statement_return t = default(JavaPrettyPrint.embedded_statement_return);

            JavaPrettyPrint.else_statement_return e = default(JavaPrettyPrint.else_statement_return);

            JavaPrettyPrint.block_return b = default(JavaPrettyPrint.block_return);

            JavaPrettyPrint.block_return block167 = default(JavaPrettyPrint.block_return);

            JavaPrettyPrint.boolean_expression_return boolean_expression168 = default(JavaPrettyPrint.boolean_expression_return);

            JavaPrettyPrint.expression_return expression169 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.iteration_statement_return iteration_statement170 = default(JavaPrettyPrint.iteration_statement_return);

            JavaPrettyPrint.jump_statement_return jump_statement171 = default(JavaPrettyPrint.jump_statement_return);

            JavaPrettyPrint.catch_clauses_return catch_clauses172 = default(JavaPrettyPrint.catch_clauses_return);

            JavaPrettyPrint.finally_clause_return finally_clause173 = default(JavaPrettyPrint.finally_clause_return);

            JavaPrettyPrint.checked_statement_return checked_statement174 = default(JavaPrettyPrint.checked_statement_return);

            JavaPrettyPrint.unchecked_statement_return unchecked_statement175 = default(JavaPrettyPrint.unchecked_statement_return);

            JavaPrettyPrint.synchronized_statement_return synchronized_statement176 = default(JavaPrettyPrint.synchronized_statement_return);

            JavaPrettyPrint.yield_statement_return yield_statement177 = default(JavaPrettyPrint.yield_statement_return);

            JavaPrettyPrint.block_return block178 = default(JavaPrettyPrint.block_return);

            JavaPrettyPrint.expression_statement_return expression_statement179 = default(JavaPrettyPrint.expression_statement_return);

            RuleReturnScope s = null;

                StringTemplate someText = null;
                retval.isSemi =  false;
                retval.isIf =  false;
                retval.indent =  true;
                List<string> preComments = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1581:2: ( block -> { $block.st } | ^( IF boolean_expression SEP t= embedded_statement (e= else_statement )? ) -> if_template(comments= preComments cond= $boolean_expression.st then= $t.st thenindent= $t.indent else= $e.st elseisif= $e.isIf elseindent= $e.indent) | ^( 'switch' expression (s+= switch_section )* ) -> switch(comments= preComments scrutinee= $expression.st sections= $s ) | iteration_statement -> { $iteration_statement.st } | jump_statement -> { $jump_statement.st } | ^( 'try' b= block ( catch_clauses )? ( finally_clause )? ) -> try(comments= preComments block=$b.stblockindent= $b.isSemi catches= $catch_clauses.st fin= $finally_clause.st ) | checked_statement -> { $checked_statement.st } | unchecked_statement -> { $unchecked_statement.st } | synchronized_statement -> { $synchronized_statement.st } | yield_statement -> { $yield_statement.st } | ^( 'unsafe' block ) -> unsupported(comments= preComments reason=\"unsafe blocks are not supported\"text= someText ) | fixed_statement | expression_statement -> op(comments= preComments pre= $expression_statement.st op= ($expression_statement.st.ToString() == \"\" ? \"\" : \";\") ))
                int alt204 = 13;
                alt204 = dfa204.Predict(input);
                switch (alt204) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1582:2: block
                        {
                        	PushFollow(FOLLOW_block_in_embedded_statement8372);
                        	block167 = block();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.isSemi =  ((block167 != null) ? block167.isSemi : default(bool)); retval.indent =  false; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1582:54: -> { $block.st }
                        	  {
                        	      retval.ST =  ((block167 != null) ? block167.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1583:4: ^( IF boolean_expression SEP t= embedded_statement (e= else_statement )? )
                        {
                        	Match(input,IF,FOLLOW_IF_in_embedded_statement8384); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_boolean_expression_in_embedded_statement8386);
                        	boolean_expression168 = boolean_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   preComments = CollectedComments; 
                        	}
                        	Match(input,SEP,FOLLOW_SEP_in_embedded_statement8390); if (state.failed) return retval;
                        	PushFollow(FOLLOW_embedded_statement_in_embedded_statement8395);
                        	t = embedded_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1583:92: (e= else_statement )?
                        	int alt200 = 2;
                        	int LA200_0 = input.LA(1);

                        	if ( (LA200_0 == ELSE) )
                        	{
                        	    alt200 = 1;
                        	}
                        	switch (alt200) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1583:92: e= else_statement
                        	        {
                        	        	PushFollow(FOLLOW_else_statement_in_embedded_statement8399);
                        	        	e = else_statement();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.isIf =  true; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1584:9: -> if_template(comments= preComments cond= $boolean_expression.st then= $t.st thenindent= $t.indent else= $e.st elseisif= $e.isIf elseindent= $e.indent)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("if_template",
                        	    new STAttrMap().Add("comments",  preComments ).Add("cond",  ((boolean_expression168 != null) ? boolean_expression168.ST : null) ).Add("then",  ((t != null) ? t.ST : null) ).Add("thenindent",  ((t != null) ? t.indent : default(bool)) ).Add("else",  ((e != null) ? e.ST : null) ).Add("elseisif",  ((e != null) ? e.isIf : default(bool)) ).Add("elseindent",  ((e != null) ? e.indent : default(bool))));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1587:7: ^( 'switch' expression (s+= switch_section )* )
                        {
                        	Match(input,266,FOLLOW_266_in_embedded_statement8502); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_embedded_statement8504);
                        	expression169 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   preComments = CollectedComments; 
                        	}
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1587:68: (s+= switch_section )*
                        	do 
                        	{
                        	    int alt201 = 2;
                        	    int LA201_0 = input.LA(1);

                        	    if ( (LA201_0 == SWITCH_SECTION) )
                        	    {
                        	        alt201 = 1;
                        	    }


                        	    switch (alt201) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1587:68: s+= switch_section
                        			    {
                        			    	PushFollow(FOLLOW_switch_section_in_embedded_statement8511);
                        			    	s = switch_section();
                        			    	state._fsp--;
                        			    	if (state.failed) return retval;
                        			    	if (list_s == null) list_s = new ArrayList();
                        			    	list_s.Add(s.Template);


                        			    }
                        			    break;

                        			default:
                        			    goto loop201;
                        	    }
                        	} while (true);

                        	loop201:
                        		;	// Stops C# compiler whining that label 'loop201' has no statements


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1587:87: -> switch(comments= preComments scrutinee= $expression.st sections= $s )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("switch",
                        	    new STAttrMap().Add("comments",  preComments ).Add("scrutinee",  ((expression169 != null) ? expression169.ST : null) ).Add("sections",  list_s ));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1588:4: iteration_statement
                        {
                        	PushFollow(FOLLOW_iteration_statement_in_embedded_statement8544);
                        	iteration_statement170 = iteration_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1588:24: -> { $iteration_statement.st }
                        	  {
                        	      retval.ST =  ((iteration_statement170 != null) ? iteration_statement170.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1589:4: jump_statement
                        {
                        	PushFollow(FOLLOW_jump_statement_in_embedded_statement8554);
                        	jump_statement171 = jump_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1589:19: -> { $jump_statement.st }
                        	  {
                        	      retval.ST =  ((jump_statement171 != null) ? jump_statement171.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1590:4: ^( 'try' b= block ( catch_clauses )? ( finally_clause )? )
                        {
                        	Match(input,TRY,FOLLOW_TRY_in_embedded_statement8565); if (state.failed) return retval;

                        	if ( (state.backtracking==0) )
                        	{
                        	   preComments = CollectedComments; 
                        	}

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_block_in_embedded_statement8572);
                        	b = block();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1590:58: ( catch_clauses )?
                        	int alt202 = 2;
                        	int LA202_0 = input.LA(1);

                        	if ( (LA202_0 == CATCH) )
                        	{
                        	    alt202 = 1;
                        	}
                        	switch (alt202) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1590:58: catch_clauses
                        	        {
                        	        	PushFollow(FOLLOW_catch_clauses_in_embedded_statement8574);
                        	        	catch_clauses172 = catch_clauses();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1590:73: ( finally_clause )?
                        	int alt203 = 2;
                        	int LA203_0 = input.LA(1);

                        	if ( (LA203_0 == FINALLY) )
                        	{
                        	    alt203 = 1;
                        	}
                        	switch (alt203) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1590:73: finally_clause
                        	        {
                        	        	PushFollow(FOLLOW_finally_clause_in_embedded_statement8577);
                        	        	finally_clause173 = finally_clause();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}


                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1591:9: -> try(comments= preComments block=$b.stblockindent= $b.isSemi catches= $catch_clauses.st fin= $finally_clause.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("try",
                        	    new STAttrMap().Add("comments",  preComments ).Add("block", ((b != null) ? b.ST : null)).Add("blockindent",  ((b != null) ? b.isSemi : default(bool)) ).Add("catches",  ((catch_clauses172 != null) ? catch_clauses172.ST : null) ).Add("fin",  ((finally_clause173 != null) ? finally_clause173.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1593:4: checked_statement
                        {
                        	PushFollow(FOLLOW_checked_statement_in_embedded_statement8649);
                        	checked_statement174 = checked_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1593:22: -> { $checked_statement.st }
                        	  {
                        	      retval.ST =  ((checked_statement174 != null) ? checked_statement174.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1594:4: unchecked_statement
                        {
                        	PushFollow(FOLLOW_unchecked_statement_in_embedded_statement8658);
                        	unchecked_statement175 = unchecked_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1594:24: -> { $unchecked_statement.st }
                        	  {
                        	      retval.ST =  ((unchecked_statement175 != null) ? unchecked_statement175.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1595:7: synchronized_statement
                        {
                        	PushFollow(FOLLOW_synchronized_statement_in_embedded_statement8670);
                        	synchronized_statement176 = synchronized_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1595:30: -> { $synchronized_statement.st }
                        	  {
                        	      retval.ST =  ((synchronized_statement176 != null) ? synchronized_statement176.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1596:4: yield_statement
                        {
                        	PushFollow(FOLLOW_yield_statement_in_embedded_statement8679);
                        	yield_statement177 = yield_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1596:20: -> { $yield_statement.st }
                        	  {
                        	      retval.ST =  ((yield_statement177 != null) ? yield_statement177.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1597:7: ^( 'unsafe' block )
                        {
                        	Match(input,198,FOLLOW_198_in_embedded_statement8693); if (state.failed) return retval;

                        	if ( (state.backtracking==0) )
                        	{
                        	   preComments = CollectedComments; 
                        	}

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_block_in_embedded_statement8700);
                        	block178 = block();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   someText = templateLib.GetInstanceOf("op"); (someText).SetAttribute("op","unsafe"); (someText).SetAttribute("post", ((block178 != null) ? block178.ST : null)); 
                        	}

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1598:7: -> unsupported(comments= preComments reason=\"unsafe blocks are not supported\"text= someText )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("unsupported",
                        	    new STAttrMap().Add("comments",  preComments ).Add("reason", "unsafe blocks are not supported").Add("text",  someText ));
                        	  }

                        	}
                        }
                        break;
                    case 12 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1599:4: fixed_statement
                        {
                        	PushFollow(FOLLOW_fixed_statement_in_embedded_statement8740);
                        	fixed_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 13 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1600:4: expression_statement
                        {
                        	PushFollow(FOLLOW_expression_statement_in_embedded_statement8745);
                        	expression_statement179 = expression_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   preComments = CollectedComments; 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1601:10: -> op(comments= preComments pre= $expression_statement.st op= ($expression_statement.st.ToString() == \"\" ? \"\" : \";\") )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("op",
                        	    new STAttrMap().Add("comments",  preComments ).Add("pre",  ((expression_statement179 != null) ? expression_statement179.ST : null) ).Add("op",  (((expression_statement179 != null) ? expression_statement179.ST : null).ToString() == "" ? "" : ";") ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "embedded_statement"

        public class fixed_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "fixed_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1603:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
        public JavaPrettyPrint.fixed_statement_return fixed_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.fixed_statement_return retval = new JavaPrettyPrint.fixed_statement_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1603:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1604:2: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
                {
                	Match(input,262,FOLLOW_262_in_fixed_statement8790); if (state.failed) return retval;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_fixed_statement8794); if (state.failed) return retval;
                	PushFollow(FOLLOW_pointer_type_in_fixed_statement8798);
                	pointer_type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement8800);
                	fixed_pointer_declarators();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_fixed_statement8804); if (state.failed) return retval;
                	PushFollow(FOLLOW_embedded_statement_in_fixed_statement8808);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "fixed_statement"

        public class fixed_pointer_declarators_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "fixed_pointer_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1605:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
        public JavaPrettyPrint.fixed_pointer_declarators_return fixed_pointer_declarators() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.fixed_pointer_declarators_return retval = new JavaPrettyPrint.fixed_pointer_declarators_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1605:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1606:2: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
                {
                	PushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators8816);
                	fixed_pointer_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1606:29: ( ',' fixed_pointer_declarator )*
                	do 
                	{
                	    int alt205 = 2;
                	    int LA205_0 = input.LA(1);

                	    if ( (LA205_0 == COMMA) )
                	    {
                	        alt205 = 1;
                	    }


                	    switch (alt205) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1606:30: ',' fixed_pointer_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_fixed_pointer_declarators8821); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators8825);
                			    	fixed_pointer_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop205;
                	    }
                	} while (true);

                	loop205:
                		;	// Stops C# compiler whining that label 'loop205' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "fixed_pointer_declarators"

        public class fixed_pointer_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "fixed_pointer_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1607:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
        public JavaPrettyPrint.fixed_pointer_declarator_return fixed_pointer_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.fixed_pointer_declarator_return retval = new JavaPrettyPrint.fixed_pointer_declarator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1607:25: ( identifier '=' fixed_pointer_initializer )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1608:2: identifier '=' fixed_pointer_initializer
                {
                	PushFollow(FOLLOW_identifier_in_fixed_pointer_declarator8835);
                	identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_fixed_pointer_declarator8839); if (state.failed) return retval;
                	PushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator8843);
                	fixed_pointer_initializer();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "fixed_pointer_declarator"

        public class fixed_pointer_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "fixed_pointer_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1609:1: fixed_pointer_initializer : expression ;
        public JavaPrettyPrint.fixed_pointer_initializer_return fixed_pointer_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.fixed_pointer_initializer_return retval = new JavaPrettyPrint.fixed_pointer_initializer_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1609:26: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1611:2: expression
                {
                	PushFollow(FOLLOW_expression_in_fixed_pointer_initializer8853);
                	expression();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "fixed_pointer_initializer"

        public class labeled_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "labeled_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1612:1: labeled_statement : identifier ':' statement -> op(pre= $identifier.st op= \":\" post= $statement.st);
        public JavaPrettyPrint.labeled_statement_return labeled_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.labeled_statement_return retval = new JavaPrettyPrint.labeled_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier180 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.statement_return statement181 = default(JavaPrettyPrint.statement_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1612:18: ( identifier ':' statement -> op(pre= $identifier.st op= \":\" post= $statement.st))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1613:2: identifier ':' statement
                {
                	PushFollow(FOLLOW_identifier_in_labeled_statement8860);
                	identifier180 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,211,FOLLOW_211_in_labeled_statement8862); if (state.failed) return retval;
                	PushFollow(FOLLOW_statement_in_labeled_statement8864);
                	statement181 = statement();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1613:27: -> op(pre= $identifier.st op= \":\" post= $statement.st)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("op",
                	    new STAttrMap().Add("pre",  ((identifier180 != null) ? identifier180.ST : null) ).Add("op",  ":" ).Add("post",  ((statement181 != null) ? statement181.ST : null)));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "labeled_statement"

        public class declaration_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "declaration_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1614:1: declaration_statement : ( local_variable_declaration -> op(comments= preComments pre= $local_variable_declaration.st op= \";\" ) | local_constant_declaration -> op(comments= preComments pre= $local_constant_declaration.st op= \";\" )) ';' ;
        public JavaPrettyPrint.declaration_statement_return declaration_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.declaration_statement_return retval = new JavaPrettyPrint.declaration_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.local_variable_declaration_return local_variable_declaration182 = default(JavaPrettyPrint.local_variable_declaration_return);

            JavaPrettyPrint.local_constant_declaration_return local_constant_declaration183 = default(JavaPrettyPrint.local_constant_declaration_return);



                List<string> preComments = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1617:2: ( ( local_variable_declaration -> op(comments= preComments pre= $local_variable_declaration.st op= \";\" ) | local_constant_declaration -> op(comments= preComments pre= $local_constant_declaration.st op= \";\" )) ';' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1618:2: ( local_variable_declaration -> op(comments= preComments pre= $local_variable_declaration.st op= \";\" ) | local_constant_declaration -> op(comments= preComments pre= $local_constant_declaration.st op= \";\" )) ';'
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1618:2: ( local_variable_declaration -> op(comments= preComments pre= $local_variable_declaration.st op= \";\" ) | local_constant_declaration -> op(comments= preComments pre= $local_constant_declaration.st op= \";\" ))
                	int alt206 = 2;
                	int LA206_0 = input.LA(1);

                	if ( ((LA206_0 >= TYPE && LA206_0 <= TYPE_DYNAMIC)) )
                	{
                	    alt206 = 1;
                	}
                	else if ( (LA206_0 == 205) )
                	{
                	    alt206 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d206s0 =
                	        new NoViableAltException("", 206, 0, input);

                	    throw nvae_d206s0;
                	}
                	switch (alt206) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1618:3: local_variable_declaration
                	        {
                	        	PushFollow(FOLLOW_local_variable_declaration_in_declaration_statement8899);
                	        	local_variable_declaration182 = local_variable_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   preComments = CollectedComments; 
                	        	}


                	        	// TEMPLATE REWRITE
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  // 1618:67: -> op(comments= preComments pre= $local_variable_declaration.st op= \";\" )
                	        	  {
                	        	      retval.ST = templateLib.GetInstanceOf("op",
                	        	    new STAttrMap().Add("comments",  preComments ).Add("pre",  ((local_variable_declaration182 != null) ? local_variable_declaration182.ST : null) ).Add("op",  ";" ));
                	        	  }

                	        	}
                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1619:4: local_constant_declaration
                	        {
                	        	PushFollow(FOLLOW_local_constant_declaration_in_declaration_statement8931);
                	        	local_constant_declaration183 = local_constant_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   preComments = CollectedComments; 
                	        	}


                	        	// TEMPLATE REWRITE
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  // 1619:68: -> op(comments= preComments pre= $local_constant_declaration.st op= \";\" )
                	        	  {
                	        	      retval.ST = templateLib.GetInstanceOf("op",
                	        	    new STAttrMap().Add("comments",  preComments ).Add("pre",  ((local_constant_declaration183 != null) ? local_constant_declaration183.ST : null) ).Add("op",  ";" ));
                	        	  }

                	        	}
                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_declaration_statement8962); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "declaration_statement"

        public class local_variable_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "local_variable_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1620:1: local_variable_declaration : local_variable_type local_variable_declarators -> local_variable_declaration(type= $local_variable_type.st decs= $local_variable_declarators.st );
        public JavaPrettyPrint.local_variable_declaration_return local_variable_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.local_variable_declaration_return retval = new JavaPrettyPrint.local_variable_declaration_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.local_variable_type_return local_variable_type184 = default(JavaPrettyPrint.local_variable_type_return);

            JavaPrettyPrint.local_variable_declarators_return local_variable_declarators185 = default(JavaPrettyPrint.local_variable_declarators_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1620:27: ( local_variable_type local_variable_declarators -> local_variable_declaration(type= $local_variable_type.st decs= $local_variable_declarators.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1621:2: local_variable_type local_variable_declarators
                {
                	PushFollow(FOLLOW_local_variable_type_in_local_variable_declaration8970);
                	local_variable_type184 = local_variable_type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration8974);
                	local_variable_declarators185 = local_variable_declarators();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1621:51: -> local_variable_declaration(type= $local_variable_type.st decs= $local_variable_declarators.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("local_variable_declaration",
                	    new STAttrMap().Add("type",  ((local_variable_type184 != null) ? local_variable_type184.ST : null) ).Add("decs",  ((local_variable_declarators185 != null) ? local_variable_declarators185.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "local_variable_declaration"

        public class local_variable_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "local_variable_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1622:1: local_variable_type : ( TYPE_VAR -> unsupported(reason=\"'var' as type is unsupported\"text= \"var\" ) | TYPE_DYNAMIC -> unsupported(reason=\"'dynamic' as type is unsupported\"text= \"dynamic\" ) | type -> { $type.st });
        public JavaPrettyPrint.local_variable_type_return local_variable_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.local_variable_type_return retval = new JavaPrettyPrint.local_variable_type_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type186 = default(JavaPrettyPrint.type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1622:20: ( TYPE_VAR -> unsupported(reason=\"'var' as type is unsupported\"text= \"var\" ) | TYPE_DYNAMIC -> unsupported(reason=\"'dynamic' as type is unsupported\"text= \"dynamic\" ) | type -> { $type.st })
                int alt207 = 3;
                switch ( input.LA(1) ) 
                {
                case TYPE_VAR:
                	{
                    alt207 = 1;
                    }
                    break;
                case TYPE_DYNAMIC:
                	{
                    alt207 = 2;
                    }
                    break;
                case TYPE:
                	{
                    alt207 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d207s0 =
                	        new NoViableAltException("", 207, 0, input);

                	    throw nvae_d207s0;
                }

                switch (alt207) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1623:2: TYPE_VAR
                        {
                        	Match(input,TYPE_VAR,FOLLOW_TYPE_VAR_in_local_variable_type8998); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1623:11: -> unsupported(reason=\"'var' as type is unsupported\"text= \"var\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("unsupported",
                        	    new STAttrMap().Add("reason", "'var' as type is unsupported").Add("text",  "var" ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1624:4: TYPE_DYNAMIC
                        {
                        	Match(input,TYPE_DYNAMIC,FOLLOW_TYPE_DYNAMIC_in_local_variable_type9022); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1624:17: -> unsupported(reason=\"'dynamic' as type is unsupported\"text= \"dynamic\" )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("unsupported",
                        	    new STAttrMap().Add("reason", "'dynamic' as type is unsupported").Add("text",  "dynamic" ));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1625:4: type
                        {
                        	PushFollow(FOLLOW_type_in_local_variable_type9046);
                        	type186 = type();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1625:10: -> { $type.st }
                        	  {
                        	      retval.ST =  ((type186 != null) ? type186.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "local_variable_type"

        public class local_variable_declarators_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "local_variable_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1626:1: local_variable_declarators : vs+= local_variable_declarator ( ',' vs+= local_variable_declarator )* -> list(items=$vssep=\", \");
        public JavaPrettyPrint.local_variable_declarators_return local_variable_declarators() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.local_variable_declarators_return retval = new JavaPrettyPrint.local_variable_declarators_return();
            retval.start = input.LT(1);

            List list_vs = null;
            RuleReturnScope vs = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1626:27: (vs+= local_variable_declarator ( ',' vs+= local_variable_declarator )* -> list(items=$vssep=\", \"))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1627:2: vs+= local_variable_declarator ( ',' vs+= local_variable_declarator )*
                {
                	PushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators9061);
                	vs = local_variable_declarator();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_vs == null) list_vs = new ArrayList();
                	list_vs.Add(vs.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1627:32: ( ',' vs+= local_variable_declarator )*
                	do 
                	{
                	    int alt208 = 2;
                	    int LA208_0 = input.LA(1);

                	    if ( (LA208_0 == COMMA) )
                	    {
                	        alt208 = 1;
                	    }


                	    switch (alt208) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1627:33: ',' vs+= local_variable_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_local_variable_declarators9064); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators9068);
                			    	vs = local_variable_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_vs == null) list_vs = new ArrayList();
                			    	list_vs.Add(vs.Template);


                			    }
                			    break;

                			default:
                			    goto loop208;
                	    }
                	} while (true);

                	loop208:
                		;	// Stops C# compiler whining that label 'loop208' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1627:69: -> list(items=$vssep=\", \")
                	  {
                	      retval.ST = templateLib.GetInstanceOf("list",
                	    new STAttrMap().Add("items", list_vs).Add("sep", ", "));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "local_variable_declarators"

        public class local_variable_declarator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "local_variable_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1628:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? -> local_variable_declarator(name= $identifier.st init= $local_variable_initializer.st );
        public JavaPrettyPrint.local_variable_declarator_return local_variable_declarator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.local_variable_declarator_return retval = new JavaPrettyPrint.local_variable_declarator_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier187 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.local_variable_initializer_return local_variable_initializer188 = default(JavaPrettyPrint.local_variable_initializer_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1628:26: ( identifier ( '=' local_variable_initializer )? -> local_variable_declarator(name= $identifier.st init= $local_variable_initializer.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1629:2: identifier ( '=' local_variable_initializer )?
                {
                	PushFollow(FOLLOW_identifier_in_local_variable_declarator9091);
                	identifier187 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1629:13: ( '=' local_variable_initializer )?
                	int alt209 = 2;
                	int LA209_0 = input.LA(1);

                	if ( (LA209_0 == ASSIGN) )
                	{
                	    alt209 = 1;
                	}
                	switch (alt209) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1629:14: '=' local_variable_initializer
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_local_variable_declarator9094); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator9098);
                	        	local_variable_initializer188 = local_variable_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1629:49: -> local_variable_declarator(name= $identifier.st init= $local_variable_initializer.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("local_variable_declarator",
                	    new STAttrMap().Add("name",  ((identifier187 != null) ? identifier187.ST : null) ).Add("init",  ((local_variable_initializer188 != null) ? local_variable_initializer188.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "local_variable_declarator"

        public class local_variable_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "local_variable_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1630:1: local_variable_initializer : ( expression -> { $expression.st } | array_initializer | stackalloc_initializer );
        public JavaPrettyPrint.local_variable_initializer_return local_variable_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.local_variable_initializer_return retval = new JavaPrettyPrint.local_variable_initializer_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression189 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1630:27: ( expression -> { $expression.st } | array_initializer | stackalloc_initializer )
                int alt210 = 3;
                switch ( input.LA(1) ) 
                {
                case PARAMS:
                case PARAMS_TYPELESS:
                case MONOPLUS:
                case MONOMINUS:
                case MONONOT:
                case MONOTWIDDLE:
                case MONOSTAR:
                case ADDRESSOF:
                case PREINC:
                case PREDEC:
                case POSTINC:
                case POSTDEC:
                case PARENS:
                case INDEX:
                case APPLY:
                case NEW:
                case NEW_ARRAY:
                case NEW_DELEGATE:
                case NEW_ANON_OBJECT:
                case OBJECT:
                case THIS:
                case NULL_COALESCE:
                case COND_EXPR:
                case RIGHT_SHIFT:
                case INSTANCEOF:
                case LOG_OR:
                case LOG_AND:
                case BIT_OR:
                case BIT_XOR:
                case BIT_AND:
                case NOT_EQUAL:
                case EQUAL:
                case LTHAN:
                case LTE:
                case GTE:
                case LEFT_SHIFT:
                case SUPER:
                case LONGNUMBER:
                case PLUS:
                case MINUS:
                case DIV:
                case MOD:
                case STAR:
                case LAMBDA:
                case CAST_EXPR:
                case JAVAWRAPPER:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case IDENTIFIER:
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                case DOT:
                case PTR:
                case GT:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 208:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 251:
                case 252:
                case 253:
                case 254:
                case 256:
                case 263:
                case 264:
                case 274:
                case 275:
                case 276:
                case 277:
                	{
                    alt210 = 1;
                    }
                    break;
                case OPEN_BRACE:
                	{
                    alt210 = 2;
                    }
                    break;
                case 265:
                	{
                    alt210 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d210s0 =
                	        new NoViableAltException("", 210, 0, input);

                	    throw nvae_d210s0;
                }

                switch (alt210) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1631:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_local_variable_initializer9125);
                        	expression189 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1631:13: -> { $expression.st }
                        	  {
                        	      retval.ST =  ((expression189 != null) ? expression189.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1632:4: array_initializer
                        {
                        	PushFollow(FOLLOW_array_initializer_in_local_variable_initializer9134);
                        	array_initializer();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1633:4: stackalloc_initializer
                        {
                        	PushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer9140);
                        	stackalloc_initializer();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "local_variable_initializer"

        public class stackalloc_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "stackalloc_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1634:1: stackalloc_initializer : stackalloc_initializer_unsupported -> unsupported(reason=\"'stackalloc' is unsupported\"text= $stackalloc_initializer_unsupported.st );
        public JavaPrettyPrint.stackalloc_initializer_return stackalloc_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.stackalloc_initializer_return retval = new JavaPrettyPrint.stackalloc_initializer_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.stackalloc_initializer_unsupported_return stackalloc_initializer_unsupported190 = default(JavaPrettyPrint.stackalloc_initializer_unsupported_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1634:23: ( stackalloc_initializer_unsupported -> unsupported(reason=\"'stackalloc' is unsupported\"text= $stackalloc_initializer_unsupported.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1635:3: stackalloc_initializer_unsupported
                {
                	PushFollow(FOLLOW_stackalloc_initializer_unsupported_in_stackalloc_initializer9148);
                	stackalloc_initializer_unsupported190 = stackalloc_initializer_unsupported();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1635:38: -> unsupported(reason=\"'stackalloc' is unsupported\"text= $stackalloc_initializer_unsupported.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason", "'stackalloc' is unsupported").Add("text",  ((stackalloc_initializer_unsupported190 != null) ? stackalloc_initializer_unsupported190.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "stackalloc_initializer"

        public class stackalloc_initializer_unsupported_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "stackalloc_initializer_unsupported"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1636:1: stackalloc_initializer_unsupported : 'stackalloc' unmanaged_type '[' expression ']' -> stackalloc(type=$unmanaged_type.stexp= $expression.st );
        public JavaPrettyPrint.stackalloc_initializer_unsupported_return stackalloc_initializer_unsupported() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.stackalloc_initializer_unsupported_return retval = new JavaPrettyPrint.stackalloc_initializer_unsupported_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.unmanaged_type_return unmanaged_type191 = default(JavaPrettyPrint.unmanaged_type_return);

            JavaPrettyPrint.expression_return expression192 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1636:35: ( 'stackalloc' unmanaged_type '[' expression ']' -> stackalloc(type=$unmanaged_type.stexp= $expression.st ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1637:2: 'stackalloc' unmanaged_type '[' expression ']'
                {
                	Match(input,265,FOLLOW_265_in_stackalloc_initializer_unsupported9169); if (state.failed) return retval;
                	PushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer_unsupported9173);
                	unmanaged_type191 = unmanaged_type();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_stackalloc_initializer_unsupported9177); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_stackalloc_initializer_unsupported9181);
                	expression192 = expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_stackalloc_initializer_unsupported9185); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1637:57: -> stackalloc(type=$unmanaged_type.stexp= $expression.st )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("stackalloc",
                	    new STAttrMap().Add("type", ((unmanaged_type191 != null) ? unmanaged_type191.ST : null)).Add("exp",  ((expression192 != null) ? expression192.ST : null) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "stackalloc_initializer_unsupported"

        public class local_constant_declaration_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "local_constant_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1638:1: local_constant_declaration : 'const' type constant_declarators ;
        public JavaPrettyPrint.local_constant_declaration_return local_constant_declaration() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.local_constant_declaration_return retval = new JavaPrettyPrint.local_constant_declaration_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1638:27: ( 'const' type constant_declarators )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1639:2: 'const' type constant_declarators
                {
                	Match(input,205,FOLLOW_205_in_local_constant_declaration9208); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_local_constant_declaration9212);
                	type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_constant_declarators_in_local_constant_declaration9216);
                	constant_declarators();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "local_constant_declaration"

        public class expression_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "expression_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1640:1: expression_statement : expression ';' -> { $expression.st };
        public JavaPrettyPrint.expression_statement_return expression_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.expression_statement_return retval = new JavaPrettyPrint.expression_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression193 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1640:21: ( expression ';' -> { $expression.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1641:2: expression ';'
                {
                	PushFollow(FOLLOW_expression_in_expression_statement9224);
                	expression193 = expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,SEMI,FOLLOW_SEMI_in_expression_statement9228); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1641:20: -> { $expression.st }
                	  {
                	      retval.ST =  ((expression193 != null) ? expression193.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "expression_statement"

        public class statement_expression_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "statement_expression"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1644:1: statement_expression : expression -> { $expression.st };
        public JavaPrettyPrint.statement_expression_return statement_expression() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.statement_expression_return retval = new JavaPrettyPrint.statement_expression_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression194 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1644:21: ( expression -> { $expression.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1645:2: expression
                {
                	PushFollow(FOLLOW_expression_in_statement_expression9242);
                	expression194 = expression();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1645:13: -> { $expression.st }
                	  {
                	      retval.ST =  ((expression194 != null) ? expression194.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "statement_expression"

        public class if_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "if_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1647:1: if_statement : ;
        public JavaPrettyPrint.if_statement_return if_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.if_statement_return retval = new JavaPrettyPrint.if_statement_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1647:13: ()
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1650:2: 
                {
                }

            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "if_statement"

        public class else_statement_return : TreeRuleReturnScope
        {
            public bool isSemi;
            public bool isIf;
            public bool indent;
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "else_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1651:1: else_statement returns [bool isSemi, bool isIf, bool indent] : 'else' s= embedded_statement -> { $embedded_statement.st };
        public JavaPrettyPrint.else_statement_return else_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.else_statement_return retval = new JavaPrettyPrint.else_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.embedded_statement_return s = default(JavaPrettyPrint.embedded_statement_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1651:61: ( 'else' s= embedded_statement -> { $embedded_statement.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1652:2: 'else' s= embedded_statement
                {
                	Match(input,ELSE,FOLLOW_ELSE_in_else_statement9269); if (state.failed) return retval;
                	PushFollow(FOLLOW_embedded_statement_in_else_statement9275);
                	s = embedded_statement();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.isSemi =  ((s != null) ? s.isSemi : default(bool)); retval.isIf =  ((s != null) ? s.isIf : default(bool)); retval.indent =  ((s != null) ? s.indent : default(bool)); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1652:95: -> { $embedded_statement.st }
                	  {
                	      retval.ST =  ((s != null) ? s.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "else_statement"

        public class switch_section_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "switch_section"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1653:1: switch_section : ^( SWITCH_SECTION (lab+= switch_label )+ (stat+= statement )+ ) -> switch_section(labels= $lab statements= $stat );
        public JavaPrettyPrint.switch_section_return switch_section() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.switch_section_return retval = new JavaPrettyPrint.switch_section_return();
            retval.start = input.LT(1);

            List list_lab = null;
            List list_stat = null;
            RuleReturnScope lab = null;
            RuleReturnScope stat = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1653:15: ( ^( SWITCH_SECTION (lab+= switch_label )+ (stat+= statement )+ ) -> switch_section(labels= $lab statements= $stat ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1654:5: ^( SWITCH_SECTION (lab+= switch_label )+ (stat+= statement )+ )
                {
                	Match(input,SWITCH_SECTION,FOLLOW_SWITCH_SECTION_in_switch_section9293); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1654:25: (lab+= switch_label )+
                	int cnt211 = 0;
                	do 
                	{
                	    int alt211 = 2;
                	    int LA211_0 = input.LA(1);

                	    if ( (LA211_0 == 217) )
                	    {
                	        int LA211_2 = input.LA(2);

                	        if ( ((LA211_2 >= PARAMS && LA211_2 <= PARAMS_TYPELESS) || (LA211_2 >= YIELD_RETURN && LA211_2 <= UNCHECKED) || (LA211_2 >= MONOPLUS && LA211_2 <= APPLY) || (LA211_2 >= NEW && LA211_2 <= NEW_ANON_OBJECT) || (LA211_2 >= RETURN && LA211_2 <= TRY) || LA211_2 == THROW || (LA211_2 >= BREAK && LA211_2 <= FOREACH) || LA211_2 == OPEN_BRACE || (LA211_2 >= NULL_COALESCE && LA211_2 <= IF) || (LA211_2 >= COND_EXPR && LA211_2 <= LEFT_SHIFT) || (LA211_2 >= SUPER && LA211_2 <= LAMBDA) || (LA211_2 >= TYPE && LA211_2 <= TYPE_DYNAMIC) || LA211_2 == CAST_EXPR || LA211_2 == SYNCHRONIZED || LA211_2 == JAVAWRAPPER || (LA211_2 >= BOOL && LA211_2 <= GT) || (LA211_2 >= ELIF && LA211_2 <= SEMI) || LA211_2 == 195 || LA211_2 == 198 || LA211_2 == 205 || LA211_2 == 208 || (LA211_2 >= 214 && LA211_2 <= 219) || LA211_2 == 221 || (LA211_2 >= 224 && LA211_2 <= 239) || (LA211_2 >= 241 && LA211_2 <= 244) || (LA211_2 >= 247 && LA211_2 <= 254) || LA211_2 == 256 || (LA211_2 >= 262 && LA211_2 <= 264) || (LA211_2 >= 266 && LA211_2 <= 272) || (LA211_2 >= 274 && LA211_2 <= 277)) )
                	        {
                	            alt211 = 1;
                	        }


                	    }
                	    else if ( (LA211_0 == 267) )
                	    {
                	        alt211 = 1;
                	    }


                	    switch (alt211) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1654:25: lab+= switch_label
                			    {
                			    	PushFollow(FOLLOW_switch_label_in_switch_section9297);
                			    	lab = switch_label();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_lab == null) list_lab = new ArrayList();
                			    	list_lab.Add(lab.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt211 >= 1 ) goto loop211;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee211 =
                		                new EarlyExitException(211, input);
                		            throw eee211;
                	    }
                	    cnt211++;
                	} while (true);

                	loop211:
                		;	// Stops C# compiler whining that label 'loop211' has no statements

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1654:45: (stat+= statement )+
                	int cnt212 = 0;
                	do 
                	{
                	    int alt212 = 2;
                	    int LA212_0 = input.LA(1);

                	    if ( ((LA212_0 >= PARAMS && LA212_0 <= PARAMS_TYPELESS) || (LA212_0 >= YIELD_RETURN && LA212_0 <= UNCHECKED) || (LA212_0 >= MONOPLUS && LA212_0 <= APPLY) || (LA212_0 >= NEW && LA212_0 <= NEW_ANON_OBJECT) || (LA212_0 >= RETURN && LA212_0 <= TRY) || LA212_0 == THROW || (LA212_0 >= BREAK && LA212_0 <= FOREACH) || LA212_0 == OPEN_BRACE || (LA212_0 >= NULL_COALESCE && LA212_0 <= IF) || (LA212_0 >= COND_EXPR && LA212_0 <= LEFT_SHIFT) || (LA212_0 >= SUPER && LA212_0 <= LAMBDA) || (LA212_0 >= TYPE && LA212_0 <= TYPE_DYNAMIC) || LA212_0 == CAST_EXPR || LA212_0 == SYNCHRONIZED || LA212_0 == JAVAWRAPPER || (LA212_0 >= BOOL && LA212_0 <= GT) || (LA212_0 >= ELIF && LA212_0 <= SEMI) || LA212_0 == 195 || LA212_0 == 198 || LA212_0 == 205 || LA212_0 == 208 || (LA212_0 >= 214 && LA212_0 <= 219) || LA212_0 == 221 || (LA212_0 >= 224 && LA212_0 <= 239) || (LA212_0 >= 241 && LA212_0 <= 244) || (LA212_0 >= 247 && LA212_0 <= 254) || LA212_0 == 256 || (LA212_0 >= 262 && LA212_0 <= 264) || LA212_0 == 266 || (LA212_0 >= 268 && LA212_0 <= 272) || (LA212_0 >= 274 && LA212_0 <= 277)) )
                	    {
                	        alt212 = 1;
                	    }


                	    switch (alt212) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1654:45: stat+= statement
                			    {
                			    	PushFollow(FOLLOW_statement_in_switch_section9302);
                			    	stat = statement();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_stat == null) list_stat = new ArrayList();
                			    	list_stat.Add(stat.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt212 >= 1 ) goto loop212;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee212 =
                		                new EarlyExitException(212, input);
                		            throw eee212;
                	    }
                	    cnt212++;
                	} while (true);

                	loop212:
                		;	// Stops C# compiler whining that label 'loop212' has no statements


                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1654:59: -> switch_section(labels= $lab statements= $stat )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("switch_section",
                	    new STAttrMap().Add("labels",  list_lab ).Add("statements",  list_stat ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "switch_section"

        public class switch_label_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "switch_label"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1655:1: switch_label : ( ^( 'case' constant_expression ) -> case(what= $constant_expression.st ) | 'default' -> default_template());
        public JavaPrettyPrint.switch_label_return switch_label() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.switch_label_return retval = new JavaPrettyPrint.switch_label_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.constant_expression_return constant_expression195 = default(JavaPrettyPrint.constant_expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1655:13: ( ^( 'case' constant_expression ) -> case(what= $constant_expression.st ) | 'default' -> default_template())
                int alt213 = 2;
                int LA213_0 = input.LA(1);

                if ( (LA213_0 == 267) )
                {
                    alt213 = 1;
                }
                else if ( (LA213_0 == 217) )
                {
                    alt213 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d213s0 =
                        new NoViableAltException("", 213, 0, input);

                    throw nvae_d213s0;
                }
                switch (alt213) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1656:2: ^( 'case' constant_expression )
                        {
                        	Match(input,267,FOLLOW_267_in_switch_label9330); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_constant_expression_in_switch_label9334);
                        	constant_expression195 = constant_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1656:34: -> case(what= $constant_expression.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("case",
                        	    new STAttrMap().Add("what",  ((constant_expression195 != null) ? constant_expression195.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1657:4: 'default'
                        {
                        	Match(input,217,FOLLOW_217_in_switch_label9351); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1657:14: -> default_template()
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("default_template");
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "switch_label"

        public class iteration_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "iteration_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1658:1: iteration_statement : ( ^( 'while' boolean_expression SEP embedded_statement ) -> while(cond= $boolean_expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent ) | do_statement -> { $do_statement.st } | ^( 'for' ( for_initializer )? SEP ( expression )? SEP ( for_iterator )? SEP embedded_statement ) -> for(init= $for_initializer.st cond= $expression.st iter= $for_iterator.st block= $embedded_statement.st blockindent= $embedded_statement.indent ) | ^( 'foreach' local_variable_type identifier expression SEP embedded_statement ) -> foreach(type= $local_variable_type.st loopid= $identifier.st fromexp= $expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent ));
        public JavaPrettyPrint.iteration_statement_return iteration_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.iteration_statement_return retval = new JavaPrettyPrint.iteration_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.boolean_expression_return boolean_expression196 = default(JavaPrettyPrint.boolean_expression_return);

            JavaPrettyPrint.embedded_statement_return embedded_statement197 = default(JavaPrettyPrint.embedded_statement_return);

            JavaPrettyPrint.do_statement_return do_statement198 = default(JavaPrettyPrint.do_statement_return);

            JavaPrettyPrint.for_initializer_return for_initializer199 = default(JavaPrettyPrint.for_initializer_return);

            JavaPrettyPrint.expression_return expression200 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.for_iterator_return for_iterator201 = default(JavaPrettyPrint.for_iterator_return);

            JavaPrettyPrint.embedded_statement_return embedded_statement202 = default(JavaPrettyPrint.embedded_statement_return);

            JavaPrettyPrint.local_variable_type_return local_variable_type203 = default(JavaPrettyPrint.local_variable_type_return);

            JavaPrettyPrint.identifier_return identifier204 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.expression_return expression205 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.embedded_statement_return embedded_statement206 = default(JavaPrettyPrint.embedded_statement_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1658:20: ( ^( 'while' boolean_expression SEP embedded_statement ) -> while(cond= $boolean_expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent ) | do_statement -> { $do_statement.st } | ^( 'for' ( for_initializer )? SEP ( expression )? SEP ( for_iterator )? SEP embedded_statement ) -> for(init= $for_initializer.st cond= $expression.st iter= $for_iterator.st block= $embedded_statement.st blockindent= $embedded_statement.indent ) | ^( 'foreach' local_variable_type identifier expression SEP embedded_statement ) -> foreach(type= $local_variable_type.st loopid= $identifier.st fromexp= $expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent ))
                int alt217 = 4;
                switch ( input.LA(1) ) 
                {
                case 268:
                	{
                    alt217 = 1;
                    }
                    break;
                case 269:
                	{
                    alt217 = 2;
                    }
                    break;
                case 270:
                	{
                    alt217 = 3;
                    }
                    break;
                case FOREACH:
                	{
                    alt217 = 4;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d217s0 =
                	        new NoViableAltException("", 217, 0, input);

                	    throw nvae_d217s0;
                }

                switch (alt217) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1659:2: ^( 'while' boolean_expression SEP embedded_statement )
                        {
                        	Match(input,268,FOLLOW_268_in_iteration_statement9366); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_boolean_expression_in_iteration_statement9368);
                        	boolean_expression196 = boolean_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	Match(input,SEP,FOLLOW_SEP_in_iteration_statement9371); if (state.failed) return retval;
                        	PushFollow(FOLLOW_embedded_statement_in_iteration_statement9373);
                        	embedded_statement197 = embedded_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1660:11: -> while(cond= $boolean_expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("while",
                        	    new STAttrMap().Add("cond",  ((boolean_expression196 != null) ? boolean_expression196.ST : null) ).Add("block",  ((embedded_statement197 != null) ? embedded_statement197.ST : null) ).Add("blockindent",  ((embedded_statement197 != null) ? embedded_statement197.indent : default(bool)) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1661:4: do_statement
                        {
                        	PushFollow(FOLLOW_do_statement_in_iteration_statement9415);
                        	do_statement198 = do_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1661:17: -> { $do_statement.st }
                        	  {
                        	      retval.ST =  ((do_statement198 != null) ? do_statement198.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:4: ^( 'for' ( for_initializer )? SEP ( expression )? SEP ( for_iterator )? SEP embedded_statement )
                        {
                        	Match(input,270,FOLLOW_270_in_iteration_statement9425); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:12: ( for_initializer )?
                        	int alt214 = 2;
                        	int LA214_0 = input.LA(1);

                        	if ( ((LA214_0 >= PARAMS && LA214_0 <= PARAMS_TYPELESS) || (LA214_0 >= MONOPLUS && LA214_0 <= APPLY) || (LA214_0 >= NEW && LA214_0 <= NEW_ANON_OBJECT) || (LA214_0 >= OBJECT && LA214_0 <= THIS) || LA214_0 == NULL_COALESCE || (LA214_0 >= COND_EXPR && LA214_0 <= LEFT_SHIFT) || (LA214_0 >= SUPER && LA214_0 <= LAMBDA) || (LA214_0 >= TYPE && LA214_0 <= TYPE_DYNAMIC) || LA214_0 == CAST_EXPR || LA214_0 == JAVAWRAPPER || (LA214_0 >= BOOL && LA214_0 <= GT) || (LA214_0 >= ELIF && LA214_0 <= UNDEF) || LA214_0 == 195 || LA214_0 == 208 || (LA214_0 >= 214 && LA214_0 <= 219) || LA214_0 == 221 || (LA214_0 >= 224 && LA214_0 <= 239) || (LA214_0 >= 241 && LA214_0 <= 244) || (LA214_0 >= 247 && LA214_0 <= 254) || LA214_0 == 256 || (LA214_0 >= 263 && LA214_0 <= 264) || (LA214_0 >= 274 && LA214_0 <= 277)) )
                        	{
                        	    alt214 = 1;
                        	}
                        	switch (alt214) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:12: for_initializer
                        	        {
                        	        	PushFollow(FOLLOW_for_initializer_in_iteration_statement9427);
                        	        	for_initializer199 = for_initializer();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	Match(input,SEP,FOLLOW_SEP_in_iteration_statement9430); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:33: ( expression )?
                        	int alt215 = 2;
                        	int LA215_0 = input.LA(1);

                        	if ( ((LA215_0 >= PARAMS && LA215_0 <= PARAMS_TYPELESS) || (LA215_0 >= MONOPLUS && LA215_0 <= APPLY) || (LA215_0 >= NEW && LA215_0 <= NEW_ANON_OBJECT) || (LA215_0 >= OBJECT && LA215_0 <= THIS) || LA215_0 == NULL_COALESCE || (LA215_0 >= COND_EXPR && LA215_0 <= LEFT_SHIFT) || (LA215_0 >= SUPER && LA215_0 <= LAMBDA) || LA215_0 == CAST_EXPR || LA215_0 == JAVAWRAPPER || (LA215_0 >= BOOL && LA215_0 <= GT) || (LA215_0 >= ELIF && LA215_0 <= UNDEF) || LA215_0 == 195 || LA215_0 == 208 || (LA215_0 >= 214 && LA215_0 <= 219) || LA215_0 == 221 || (LA215_0 >= 224 && LA215_0 <= 239) || (LA215_0 >= 241 && LA215_0 <= 244) || (LA215_0 >= 247 && LA215_0 <= 254) || LA215_0 == 256 || (LA215_0 >= 263 && LA215_0 <= 264) || (LA215_0 >= 274 && LA215_0 <= 277)) )
                        	{
                        	    alt215 = 1;
                        	}
                        	switch (alt215) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:33: expression
                        	        {
                        	        	PushFollow(FOLLOW_expression_in_iteration_statement9432);
                        	        	expression200 = expression();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	Match(input,SEP,FOLLOW_SEP_in_iteration_statement9435); if (state.failed) return retval;
                        	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:49: ( for_iterator )?
                        	int alt216 = 2;
                        	int LA216_0 = input.LA(1);

                        	if ( ((LA216_0 >= PARAMS && LA216_0 <= PARAMS_TYPELESS) || (LA216_0 >= MONOPLUS && LA216_0 <= APPLY) || (LA216_0 >= NEW && LA216_0 <= NEW_ANON_OBJECT) || (LA216_0 >= OBJECT && LA216_0 <= THIS) || LA216_0 == NULL_COALESCE || (LA216_0 >= COND_EXPR && LA216_0 <= LEFT_SHIFT) || (LA216_0 >= SUPER && LA216_0 <= LAMBDA) || LA216_0 == CAST_EXPR || LA216_0 == JAVAWRAPPER || (LA216_0 >= BOOL && LA216_0 <= GT) || (LA216_0 >= ELIF && LA216_0 <= UNDEF) || LA216_0 == 195 || LA216_0 == 208 || (LA216_0 >= 214 && LA216_0 <= 219) || LA216_0 == 221 || (LA216_0 >= 224 && LA216_0 <= 239) || (LA216_0 >= 241 && LA216_0 <= 244) || (LA216_0 >= 247 && LA216_0 <= 254) || LA216_0 == 256 || (LA216_0 >= 263 && LA216_0 <= 264) || (LA216_0 >= 274 && LA216_0 <= 277)) )
                        	{
                        	    alt216 = 1;
                        	}
                        	switch (alt216) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1662:49: for_iterator
                        	        {
                        	        	PushFollow(FOLLOW_for_iterator_in_iteration_statement9437);
                        	        	for_iterator201 = for_iterator();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	Match(input,SEP,FOLLOW_SEP_in_iteration_statement9440); if (state.failed) return retval;
                        	PushFollow(FOLLOW_embedded_statement_in_iteration_statement9442);
                        	embedded_statement202 = embedded_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1663:10: -> for(init= $for_initializer.st cond= $expression.st iter= $for_iterator.st block= $embedded_statement.st blockindent= $embedded_statement.indent )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("for",
                        	    new STAttrMap().Add("init",  ((for_initializer199 != null) ? for_initializer199.ST : null) ).Add("cond",  ((expression200 != null) ? expression200.ST : null) ).Add("iter",  ((for_iterator201 != null) ? for_iterator201.ST : null) ).Add("block",  ((embedded_statement202 != null) ? embedded_statement202.ST : null) ).Add("blockindent",  ((embedded_statement202 != null) ? embedded_statement202.indent : default(bool)) ));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1665:4: ^( 'foreach' local_variable_type identifier expression SEP embedded_statement )
                        {
                        	Match(input,FOREACH,FOLLOW_FOREACH_in_iteration_statement9519); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_local_variable_type_in_iteration_statement9521);
                        	local_variable_type203 = local_variable_type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_identifier_in_iteration_statement9525);
                        	identifier204 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_iteration_statement9528);
                        	expression205 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	Match(input,SEP,FOLLOW_SEP_in_iteration_statement9530); if (state.failed) return retval;
                        	PushFollow(FOLLOW_embedded_statement_in_iteration_statement9533);
                        	embedded_statement206 = embedded_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        	Match(input, Token.UP, null); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1666:11: -> foreach(type= $local_variable_type.st loopid= $identifier.st fromexp= $expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("foreach",
                        	    new STAttrMap().Add("type",  ((local_variable_type203 != null) ? local_variable_type203.ST : null) ).Add("loopid",  ((identifier204 != null) ? identifier204.ST : null) ).Add("fromexp",  ((expression205 != null) ? expression205.ST : null) ).Add("block",  ((embedded_statement206 != null) ? embedded_statement206.ST : null) ).Add("blockindent",  ((embedded_statement206 != null) ? embedded_statement206.indent : default(bool)) ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "iteration_statement"

        public class do_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "do_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1668:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' -> do(cond= $boolean_expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent );
        public JavaPrettyPrint.do_statement_return do_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.do_statement_return retval = new JavaPrettyPrint.do_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.boolean_expression_return boolean_expression207 = default(JavaPrettyPrint.boolean_expression_return);

            JavaPrettyPrint.embedded_statement_return embedded_statement208 = default(JavaPrettyPrint.embedded_statement_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1668:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' -> do(cond= $boolean_expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1669:2: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
                {
                	Match(input,269,FOLLOW_269_in_do_statement9613); if (state.failed) return retval;
                	PushFollow(FOLLOW_embedded_statement_in_do_statement9617);
                	embedded_statement208 = embedded_statement();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,268,FOLLOW_268_in_do_statement9621); if (state.failed) return retval;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_do_statement9625); if (state.failed) return retval;
                	PushFollow(FOLLOW_boolean_expression_in_do_statement9629);
                	boolean_expression207 = boolean_expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_do_statement9633); if (state.failed) return retval;
                	Match(input,SEMI,FOLLOW_SEMI_in_do_statement9637); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1669:77: -> do(cond= $boolean_expression.st block= $embedded_statement.st blockindent= $embedded_statement.indent )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("do",
                	    new STAttrMap().Add("cond",  ((boolean_expression207 != null) ? boolean_expression207.ST : null) ).Add("block",  ((embedded_statement208 != null) ? embedded_statement208.ST : null) ).Add("blockindent",  ((embedded_statement208 != null) ? embedded_statement208.indent : default(bool)) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "do_statement"

        public class for_initializer_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "for_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1670:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration -> { $local_variable_declaration.st } | statement_expression_list -> { $statement_expression_list.st });
        public JavaPrettyPrint.for_initializer_return for_initializer() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.for_initializer_return retval = new JavaPrettyPrint.for_initializer_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.local_variable_declaration_return local_variable_declaration209 = default(JavaPrettyPrint.local_variable_declaration_return);

            JavaPrettyPrint.statement_expression_list_return statement_expression_list210 = default(JavaPrettyPrint.statement_expression_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1670:16: ( ( local_variable_declaration )=> local_variable_declaration -> { $local_variable_declaration.st } | statement_expression_list -> { $statement_expression_list.st })
                int alt218 = 2;
                int LA218_0 = input.LA(1);

                if ( (LA218_0 == TYPE_VAR) && (synpred17_JavaPrettyPrint()) )
                {
                    alt218 = 1;
                }
                else if ( (LA218_0 == TYPE_DYNAMIC) && (synpred17_JavaPrettyPrint()) )
                {
                    alt218 = 1;
                }
                else if ( (LA218_0 == TYPE) && (synpred17_JavaPrettyPrint()) )
                {
                    alt218 = 1;
                }
                else if ( ((LA218_0 >= PARAMS && LA218_0 <= PARAMS_TYPELESS) || (LA218_0 >= MONOPLUS && LA218_0 <= APPLY) || (LA218_0 >= NEW && LA218_0 <= NEW_ANON_OBJECT) || (LA218_0 >= OBJECT && LA218_0 <= THIS) || LA218_0 == NULL_COALESCE || (LA218_0 >= COND_EXPR && LA218_0 <= LEFT_SHIFT) || (LA218_0 >= SUPER && LA218_0 <= LAMBDA) || LA218_0 == CAST_EXPR || LA218_0 == JAVAWRAPPER || (LA218_0 >= BOOL && LA218_0 <= GT) || (LA218_0 >= ELIF && LA218_0 <= UNDEF) || LA218_0 == 195 || LA218_0 == 208 || (LA218_0 >= 214 && LA218_0 <= 219) || LA218_0 == 221 || (LA218_0 >= 224 && LA218_0 <= 239) || (LA218_0 >= 241 && LA218_0 <= 244) || (LA218_0 >= 247 && LA218_0 <= 254) || LA218_0 == 256 || (LA218_0 >= 263 && LA218_0 <= 264) || (LA218_0 >= 274 && LA218_0 <= 277)) )
                {
                    alt218 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d218s0 =
                        new NoViableAltException("", 218, 0, input);

                    throw nvae_d218s0;
                }
                switch (alt218) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1671:2: ( local_variable_declaration )=> local_variable_declaration
                        {
                        	PushFollow(FOLLOW_local_variable_declaration_in_for_initializer9675);
                        	local_variable_declaration209 = local_variable_declaration();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1671:61: -> { $local_variable_declaration.st }
                        	  {
                        	      retval.ST =  ((local_variable_declaration209 != null) ? local_variable_declaration209.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1672:4: statement_expression_list
                        {
                        	PushFollow(FOLLOW_statement_expression_list_in_for_initializer9684);
                        	statement_expression_list210 = statement_expression_list();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1672:30: -> { $statement_expression_list.st }
                        	  {
                        	      retval.ST =  ((statement_expression_list210 != null) ? statement_expression_list210.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "for_initializer"

        public class for_iterator_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "for_iterator"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1674:1: for_iterator : statement_expression_list -> { $statement_expression_list.st };
        public JavaPrettyPrint.for_iterator_return for_iterator() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.for_iterator_return retval = new JavaPrettyPrint.for_iterator_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.statement_expression_list_return statement_expression_list211 = default(JavaPrettyPrint.statement_expression_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1674:13: ( statement_expression_list -> { $statement_expression_list.st })
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1675:2: statement_expression_list
                {
                	PushFollow(FOLLOW_statement_expression_list_in_for_iterator9697);
                	statement_expression_list211 = statement_expression_list();
                	state._fsp--;
                	if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1675:28: -> { $statement_expression_list.st }
                	  {
                	      retval.ST =  ((statement_expression_list211 != null) ? statement_expression_list211.ST : null) ;
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "for_iterator"

        public class statement_expression_list_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "statement_expression_list"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1676:1: statement_expression_list : s+= statement_expression ( ',' s+= statement_expression )* -> list(items= $s sep= \", \" );
        public JavaPrettyPrint.statement_expression_list_return statement_expression_list() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.statement_expression_list_return retval = new JavaPrettyPrint.statement_expression_list_return();
            retval.start = input.LT(1);

            List list_s = null;
            RuleReturnScope s = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1676:26: (s+= statement_expression ( ',' s+= statement_expression )* -> list(items= $s sep= \", \" ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1677:2: s+= statement_expression ( ',' s+= statement_expression )*
                {
                	PushFollow(FOLLOW_statement_expression_in_statement_expression_list9710);
                	s = statement_expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	if (list_s == null) list_s = new ArrayList();
                	list_s.Add(s.Template);

                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1677:26: ( ',' s+= statement_expression )*
                	do 
                	{
                	    int alt219 = 2;
                	    int LA219_0 = input.LA(1);

                	    if ( (LA219_0 == COMMA) )
                	    {
                	        alt219 = 1;
                	    }


                	    switch (alt219) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1677:27: ',' s+= statement_expression
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_statement_expression_list9713); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_statement_expression_in_statement_expression_list9717);
                			    	s = statement_expression();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_s == null) list_s = new ArrayList();
                			    	list_s.Add(s.Template);


                			    }
                			    break;

                			default:
                			    goto loop219;
                	    }
                	} while (true);

                	loop219:
                		;	// Stops C# compiler whining that label 'loop219' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1677:57: -> list(items= $s sep= \", \" )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("list",
                	    new STAttrMap().Add("items",  list_s ).Add("sep",  ", " ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "statement_expression_list"

        public class jump_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "jump_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1678:1: jump_statement : ( 'break' ';' -> string(payload=\"break;\") | 'continue' ';' -> string(payload=\"continue;\") | goto_statement -> { $goto_statement.st } | ^( 'return' ( expression )? ) -> return(exp= $expression.st ) | ^( 'throw' ( expression )? ) -> throw(exp= $expression.st ));
        public JavaPrettyPrint.jump_statement_return jump_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.jump_statement_return retval = new JavaPrettyPrint.jump_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.goto_statement_return goto_statement212 = default(JavaPrettyPrint.goto_statement_return);

            JavaPrettyPrint.expression_return expression213 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.expression_return expression214 = default(JavaPrettyPrint.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1678:15: ( 'break' ';' -> string(payload=\"break;\") | 'continue' ';' -> string(payload=\"continue;\") | goto_statement -> { $goto_statement.st } | ^( 'return' ( expression )? ) -> return(exp= $expression.st ) | ^( 'throw' ( expression )? ) -> throw(exp= $expression.st ))
                int alt222 = 5;
                switch ( input.LA(1) ) 
                {
                case BREAK:
                	{
                    alt222 = 1;
                    }
                    break;
                case 271:
                	{
                    alt222 = 2;
                    }
                    break;
                case 272:
                	{
                    alt222 = 3;
                    }
                    break;
                case RETURN:
                	{
                    alt222 = 4;
                    }
                    break;
                case THROW:
                	{
                    alt222 = 5;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d222s0 =
                	        new NoViableAltException("", 222, 0, input);

                	    throw nvae_d222s0;
                }

                switch (alt222) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1679:2: 'break' ';'
                        {
                        	Match(input,BREAK,FOLLOW_BREAK_in_jump_statement9744); if (state.failed) return retval;
                        	Match(input,SEMI,FOLLOW_SEMI_in_jump_statement9748); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1679:17: -> string(payload=\"break;\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", "break;"));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1680:4: 'continue' ';'
                        {
                        	Match(input,271,FOLLOW_271_in_jump_statement9763); if (state.failed) return retval;
                        	Match(input,SEMI,FOLLOW_SEMI_in_jump_statement9767); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1680:21: -> string(payload=\"continue;\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", "continue;"));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1681:4: goto_statement
                        {
                        	PushFollow(FOLLOW_goto_statement_in_jump_statement9781);
                        	goto_statement212 = goto_statement();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1681:18: -> { $goto_statement.st }
                        	  {
                        	      retval.ST =  ((goto_statement212 != null) ? goto_statement212.ST : null) ;
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1682:4: ^( 'return' ( expression )? )
                        {
                        	Match(input,RETURN,FOLLOW_RETURN_in_jump_statement9790); if (state.failed) return retval;

                        	if ( input.LA(1) == Token.DOWN )
                        	{
                        	    Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1682:17: ( expression )?
                        	    int alt220 = 2;
                        	    int LA220_0 = input.LA(1);

                        	    if ( ((LA220_0 >= PARAMS && LA220_0 <= PARAMS_TYPELESS) || (LA220_0 >= MONOPLUS && LA220_0 <= APPLY) || (LA220_0 >= NEW && LA220_0 <= NEW_ANON_OBJECT) || (LA220_0 >= OBJECT && LA220_0 <= THIS) || LA220_0 == NULL_COALESCE || (LA220_0 >= COND_EXPR && LA220_0 <= LEFT_SHIFT) || (LA220_0 >= SUPER && LA220_0 <= LAMBDA) || LA220_0 == CAST_EXPR || LA220_0 == JAVAWRAPPER || (LA220_0 >= BOOL && LA220_0 <= GT) || (LA220_0 >= ELIF && LA220_0 <= UNDEF) || LA220_0 == 195 || LA220_0 == 208 || (LA220_0 >= 214 && LA220_0 <= 219) || LA220_0 == 221 || (LA220_0 >= 224 && LA220_0 <= 239) || (LA220_0 >= 241 && LA220_0 <= 244) || (LA220_0 >= 247 && LA220_0 <= 254) || LA220_0 == 256 || (LA220_0 >= 263 && LA220_0 <= 264) || (LA220_0 >= 274 && LA220_0 <= 277)) )
                        	    {
                        	        alt220 = 1;
                        	    }
                        	    switch (alt220) 
                        	    {
                        	        case 1 :
                        	            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1682:17: expression
                        	            {
                        	            	PushFollow(FOLLOW_expression_in_jump_statement9794);
                        	            	expression213 = expression();
                        	            	state._fsp--;
                        	            	if (state.failed) return retval;

                        	            }
                        	            break;

                        	    }


                        	    Match(input, Token.UP, null); if (state.failed) return retval;
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1682:30: -> return(exp= $expression.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("return",
                        	    new STAttrMap().Add("exp",  ((expression213 != null) ? expression213.ST : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1683:4: ^( 'throw' ( expression )? )
                        {
                        	Match(input,THROW,FOLLOW_THROW_in_jump_statement9813); if (state.failed) return retval;

                        	if ( input.LA(1) == Token.DOWN )
                        	{
                        	    Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1683:16: ( expression )?
                        	    int alt221 = 2;
                        	    int LA221_0 = input.LA(1);

                        	    if ( ((LA221_0 >= PARAMS && LA221_0 <= PARAMS_TYPELESS) || (LA221_0 >= MONOPLUS && LA221_0 <= APPLY) || (LA221_0 >= NEW && LA221_0 <= NEW_ANON_OBJECT) || (LA221_0 >= OBJECT && LA221_0 <= THIS) || LA221_0 == NULL_COALESCE || (LA221_0 >= COND_EXPR && LA221_0 <= LEFT_SHIFT) || (LA221_0 >= SUPER && LA221_0 <= LAMBDA) || LA221_0 == CAST_EXPR || LA221_0 == JAVAWRAPPER || (LA221_0 >= BOOL && LA221_0 <= GT) || (LA221_0 >= ELIF && LA221_0 <= UNDEF) || LA221_0 == 195 || LA221_0 == 208 || (LA221_0 >= 214 && LA221_0 <= 219) || LA221_0 == 221 || (LA221_0 >= 224 && LA221_0 <= 239) || (LA221_0 >= 241 && LA221_0 <= 244) || (LA221_0 >= 247 && LA221_0 <= 254) || LA221_0 == 256 || (LA221_0 >= 263 && LA221_0 <= 264) || (LA221_0 >= 274 && LA221_0 <= 277)) )
                        	    {
                        	        alt221 = 1;
                        	    }
                        	    switch (alt221) 
                        	    {
                        	        case 1 :
                        	            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1683:16: expression
                        	            {
                        	            	PushFollow(FOLLOW_expression_in_jump_statement9817);
                        	            	expression214 = expression();
                        	            	state._fsp--;
                        	            	if (state.failed) return retval;

                        	            }
                        	            break;

                        	    }


                        	    Match(input, Token.UP, null); if (state.failed) return retval;
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1683:29: -> throw(exp= $expression.st )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("throw",
                        	    new STAttrMap().Add("exp",  ((expression214 != null) ? expression214.ST : null) ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "jump_statement"

        public class goto_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "goto_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1684:1: goto_statement : 'goto' ( identifier -> op(op=\"goto\"post=$identifier.stspace=\" \") | 'case' constant_expression -> op(op=\"goto case\"post=$constant_expression.st) | 'default' -> string(payload=\"goto default\")) ';' ;
        public JavaPrettyPrint.goto_statement_return goto_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.goto_statement_return retval = new JavaPrettyPrint.goto_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.identifier_return identifier215 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.constant_expression_return constant_expression216 = default(JavaPrettyPrint.constant_expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1684:15: ( 'goto' ( identifier -> op(op=\"goto\"post=$identifier.stspace=\" \") | 'case' constant_expression -> op(op=\"goto case\"post=$constant_expression.st) | 'default' -> string(payload=\"goto default\")) ';' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1685:2: 'goto' ( identifier -> op(op=\"goto\"post=$identifier.stspace=\" \") | 'case' constant_expression -> op(op=\"goto case\"post=$constant_expression.st) | 'default' -> string(payload=\"goto default\")) ';'
                {
                	Match(input,272,FOLLOW_272_in_goto_statement9837); if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1685:11: ( identifier -> op(op=\"goto\"post=$identifier.stspace=\" \") | 'case' constant_expression -> op(op=\"goto case\"post=$constant_expression.st) | 'default' -> string(payload=\"goto default\"))
                	int alt223 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case IDENTIFIER:
                	case ELIF:
                	case ENDIF:
                	case DEFINE:
                	case UNDEF:
                	case 195:
                	case 221:
                	case 224:
                	case 225:
                	case 226:
                	case 227:
                	case 228:
                	case 229:
                	case 230:
                	case 231:
                	case 232:
                	case 233:
                	case 234:
                	case 235:
                	case 236:
                	case 237:
                	case 238:
                	case 239:
                	case 241:
                	case 242:
                	case 243:
                	case 244:
                	case 247:
                	case 248:
                	case 249:
                	case 250:
                	case 256:
                	case 263:
                	case 264:
                	case 274:
                	case 277:
                		{
                	    alt223 = 1;
                	    }
                	    break;
                	case 267:
                		{
                	    alt223 = 2;
                	    }
                	    break;
                	case 217:
                		{
                	    alt223 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d223s0 =
                		        new NoViableAltException("", 223, 0, input);

                		    throw nvae_d223s0;
                	}

                	switch (alt223) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1685:13: identifier
                	        {
                	        	PushFollow(FOLLOW_identifier_in_goto_statement9843);
                	        	identifier215 = identifier();
                	        	state._fsp--;
                	        	if (state.failed) return retval;


                	        	// TEMPLATE REWRITE
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  // 1685:24: -> op(op=\"goto\"post=$identifier.stspace=\" \")
                	        	  {
                	        	      retval.ST = templateLib.GetInstanceOf("op",
                	        	    new STAttrMap().Add("op", "goto").Add("post", ((identifier215 != null) ? identifier215.ST : null)).Add("space", " "));
                	        	  }

                	        	}
                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1686:7: 'case' constant_expression
                	        {
                	        	Match(input,267,FOLLOW_267_in_goto_statement9870); if (state.failed) return retval;
                	        	PushFollow(FOLLOW_constant_expression_in_goto_statement9874);
                	        	constant_expression216 = constant_expression();
                	        	state._fsp--;
                	        	if (state.failed) return retval;


                	        	// TEMPLATE REWRITE
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  // 1686:37: -> op(op=\"goto case\"post=$constant_expression.st)
                	        	  {
                	        	      retval.ST = templateLib.GetInstanceOf("op",
                	        	    new STAttrMap().Add("op", "goto case").Add("post", ((constant_expression216 != null) ? constant_expression216.ST : null)));
                	        	  }

                	        	}
                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1687:7: 'default'
                	        {
                	        	Match(input,217,FOLLOW_217_in_goto_statement9897); if (state.failed) return retval;


                	        	// TEMPLATE REWRITE
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	  // 1687:17: -> string(payload=\"goto default\")
                	        	  {
                	        	      retval.ST = templateLib.GetInstanceOf("string",
                	        	    new STAttrMap().Add("payload", "goto default"));
                	        	  }

                	        	}
                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_goto_statement9912); if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "goto_statement"

        public class catch_clauses_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "catch_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1688:1: catch_clauses : (c+= catch_clause )+ -> seplist(items= $c sep= \"\\n\" );
        public JavaPrettyPrint.catch_clauses_return catch_clauses() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.catch_clauses_return retval = new JavaPrettyPrint.catch_clauses_return();
            retval.start = input.LT(1);

            List list_c = null;
            RuleReturnScope c = null;
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1688:14: ( (c+= catch_clause )+ -> seplist(items= $c sep= \"\\n\" ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1689:5: (c+= catch_clause )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1689:6: (c+= catch_clause )+
                	int cnt224 = 0;
                	do 
                	{
                	    int alt224 = 2;
                	    int LA224_0 = input.LA(1);

                	    if ( (LA224_0 == CATCH) )
                	    {
                	        alt224 = 1;
                	    }


                	    switch (alt224) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1689:6: c+= catch_clause
                			    {
                			    	PushFollow(FOLLOW_catch_clause_in_catch_clauses9925);
                			    	c = catch_clause();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if (list_c == null) list_c = new ArrayList();
                			    	list_c.Add(c.Template);


                			    }
                			    break;

                			default:
                			    if ( cnt224 >= 1 ) goto loop224;
                			    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		            EarlyExitException eee224 =
                		                new EarlyExitException(224, input);
                		            throw eee224;
                	    }
                	    cnt224++;
                	} while (true);

                	loop224:
                		;	// Stops C# compiler whining that label 'loop224' has no statements



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1689:22: -> seplist(items= $c sep= \"\\n\" )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("seplist",
                	    new STAttrMap().Add("items",  list_c ).Add("sep",  "\n" ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "catch_clauses"

        public class catch_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "catch_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1690:1: catch_clause : ^( 'catch' type identifier block ) -> catch_template(type= $type.st id= $identifier.st block=$block.stblockindent= $block.isSemi );
        public JavaPrettyPrint.catch_clause_return catch_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.catch_clause_return retval = new JavaPrettyPrint.catch_clause_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.type_return type217 = default(JavaPrettyPrint.type_return);

            JavaPrettyPrint.identifier_return identifier218 = default(JavaPrettyPrint.identifier_return);

            JavaPrettyPrint.block_return block219 = default(JavaPrettyPrint.block_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1690:13: ( ^( 'catch' type identifier block ) -> catch_template(type= $type.st id= $identifier.st block=$block.stblockindent= $block.isSemi ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1691:2: ^( 'catch' type identifier block )
                {
                	Match(input,CATCH,FOLLOW_CATCH_in_catch_clause9951); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_type_in_catch_clause9953);
                	type217 = type();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_identifier_in_catch_clause9955);
                	identifier218 = identifier();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_catch_clause9957);
                	block219 = block();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1691:35: -> catch_template(type= $type.st id= $identifier.st block=$block.stblockindent= $block.isSemi )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("catch_template",
                	    new STAttrMap().Add("type",  ((type217 != null) ? type217.ST : null) ).Add("id",  ((identifier218 != null) ? identifier218.ST : null) ).Add("block", ((block219 != null) ? block219.ST : null)).Add("blockindent",  ((block219 != null) ? block219.isSemi : default(bool)) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "catch_clause"

        public class finally_clause_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "finally_clause"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1692:1: finally_clause : ^( 'finally' block ) -> fin(block=$block.stblockindent= $block.isSemi );
        public JavaPrettyPrint.finally_clause_return finally_clause() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.finally_clause_return retval = new JavaPrettyPrint.finally_clause_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.block_return block220 = default(JavaPrettyPrint.block_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1692:15: ( ^( 'finally' block ) -> fin(block=$block.stblockindent= $block.isSemi ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1693:2: ^( 'finally' block )
                {
                	Match(input,FINALLY,FOLLOW_FINALLY_in_finally_clause9999); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_finally_clause10003);
                	block220 = block();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1693:23: -> fin(block=$block.stblockindent= $block.isSemi )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("fin",
                	    new STAttrMap().Add("block", ((block220 != null) ? block220.ST : null)).Add("blockindent",  ((block220 != null) ? block220.isSemi : default(bool)) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "finally_clause"

        public class synchronized_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "synchronized_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1695:1: synchronized_statement : ^( SYNCHRONIZED expression embedded_statement ) -> synchstat(exp= $expression.st stat= $embedded_statement.st indent= $embedded_statement.indent );
        public JavaPrettyPrint.synchronized_statement_return synchronized_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.synchronized_statement_return retval = new JavaPrettyPrint.synchronized_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression221 = default(JavaPrettyPrint.expression_return);

            JavaPrettyPrint.embedded_statement_return embedded_statement222 = default(JavaPrettyPrint.embedded_statement_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1695:23: ( ^( SYNCHRONIZED expression embedded_statement ) -> synchstat(exp= $expression.st stat= $embedded_statement.st indent= $embedded_statement.indent ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1696:2: ^( SYNCHRONIZED expression embedded_statement )
                {
                	Match(input,SYNCHRONIZED,FOLLOW_SYNCHRONIZED_in_synchronized_statement10032); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_expression_in_synchronized_statement10034);
                	expression221 = expression();
                	state._fsp--;
                	if (state.failed) return retval;
                	PushFollow(FOLLOW_embedded_statement_in_synchronized_statement10036);
                	embedded_statement222 = embedded_statement();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1696:48: -> synchstat(exp= $expression.st stat= $embedded_statement.st indent= $embedded_statement.indent )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("synchstat",
                	    new STAttrMap().Add("exp",  ((expression221 != null) ? expression221.ST : null) ).Add("stat",  ((embedded_statement222 != null) ? embedded_statement222.ST : null) ).Add("indent",  ((embedded_statement222 != null) ? embedded_statement222.indent : default(bool)) ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "synchronized_statement"

        public class checked_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "checked_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1698:1: checked_statement : 'checked' block -> unsupported(reason=\"checked statements are not supported\"text= someText );
        public JavaPrettyPrint.checked_statement_return checked_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.checked_statement_return retval = new JavaPrettyPrint.checked_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.block_return block223 = default(JavaPrettyPrint.block_return);



                StringTemplate someText = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1701:2: ( 'checked' block -> unsupported(reason=\"checked statements are not supported\"text= someText ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1702:2: 'checked' block
                {
                	Match(input,215,FOLLOW_215_in_checked_statement10073); if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_checked_statement10077);
                	block223 = block();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   someText = templateLib.GetInstanceOf("keyword_block"); 
                	            (someText).SetAttribute("keyword", "checked"); 
                	            (someText).SetAttribute("block", ((block223 != null) ? block223.ST : null));
                	            (someText).SetAttribute("indent", ((block223 != null) ? block223.isSemi : default(bool))); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1706:49: -> unsupported(reason=\"checked statements are not supported\"text= someText )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason", "checked statements are not supported").Add("text",  someText ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "checked_statement"

        public class unchecked_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "unchecked_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1708:1: unchecked_statement : ^( UNCHECKED block ) -> unsupported(reason=\"checked statements are not supported\"text= someText );
        public JavaPrettyPrint.unchecked_statement_return unchecked_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.unchecked_statement_return retval = new JavaPrettyPrint.unchecked_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.block_return block224 = default(JavaPrettyPrint.block_return);



                StringTemplate someText = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1711:2: ( ^( UNCHECKED block ) -> unsupported(reason=\"checked statements are not supported\"text= someText ))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1712:2: ^( UNCHECKED block )
                {
                	Match(input,UNCHECKED,FOLLOW_UNCHECKED_in_unchecked_statement10122); if (state.failed) return retval;

                	Match(input, Token.DOWN, null); if (state.failed) return retval;
                	PushFollow(FOLLOW_block_in_unchecked_statement10126);
                	block224 = block();
                	state._fsp--;
                	if (state.failed) return retval;

                	Match(input, Token.UP, null); if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   someText = templateLib.GetInstanceOf("keyword_block"); 
                	            (someText).SetAttribute("keyword", "unchecked"); 
                	            (someText).SetAttribute("block", ((block224 != null) ? block224.ST : null));
                	            (someText).SetAttribute("indent", ((block224 != null) ? block224.isSemi : default(bool))); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1716:49: -> unsupported(reason=\"checked statements are not supported\"text= someText )
                	  {
                	      retval.ST = templateLib.GetInstanceOf("unsupported",
                	    new STAttrMap().Add("reason", "checked statements are not supported").Add("text",  someText ));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "unchecked_statement"

        public class yield_statement_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "yield_statement"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1718:1: yield_statement : ( ^( YIELD_RETURN expression ) | YIELD_BREAK -> unsupported(reason=\"yield statements are not supported\"text= someText ));
        public JavaPrettyPrint.yield_statement_return yield_statement() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.yield_statement_return retval = new JavaPrettyPrint.yield_statement_return();
            retval.start = input.LT(1);

            JavaPrettyPrint.expression_return expression225 = default(JavaPrettyPrint.expression_return);



                StringTemplate someText = null;
                someText = templateLib.GetInstanceOf("yield"); 

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1722:2: ( ^( YIELD_RETURN expression ) | YIELD_BREAK -> unsupported(reason=\"yield statements are not supported\"text= someText ))
                int alt225 = 2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0 == YIELD_RETURN) )
                {
                    alt225 = 1;
                }
                else if ( (LA225_0 == YIELD_BREAK) )
                {
                    alt225 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d225s0 =
                        new NoViableAltException("", 225, 0, input);

                    throw nvae_d225s0;
                }
                switch (alt225) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1723:5: ^( YIELD_RETURN expression )
                        {
                        	Match(input,YIELD_RETURN,FOLLOW_YIELD_RETURN_in_yield_statement10175); if (state.failed) return retval;

                        	Match(input, Token.DOWN, null); if (state.failed) return retval;
                        	PushFollow(FOLLOW_expression_in_yield_statement10177);
                        	expression225 = expression();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   (someText).SetAttribute("exp", ((expression225 != null) ? expression225.ST : null)); 
                        	}

                        	Match(input, Token.UP, null); if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1724:7: YIELD_BREAK
                        {
                        	Match(input,YIELD_BREAK,FOLLOW_YIELD_BREAK_in_yield_statement10188); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	  (someText).SetAttribute("exp", "break"); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1725:10: -> unsupported(reason=\"yield statements are not supported\"text= someText )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("unsupported",
                        	    new STAttrMap().Add("reason", "yield statements are not supported").Add("text",  someText ));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "yield_statement"

        public class predefined_type_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "predefined_type"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1732:1: predefined_type : (t= 'bool' | t= 'byte' | t= 'char' | t= 'decimal' | t= 'double' | t= 'float' | t= 'int' | t= 'long' | t= 'object' | t= 'sbyte' | t= 'short' | t= 'string' | t= 'uint' | t= 'ulong' | t= 'ushort' ) -> string(payload=$t.text);
        public JavaPrettyPrint.predefined_type_return predefined_type() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.predefined_type_return retval = new JavaPrettyPrint.predefined_type_return();
            retval.start = input.LT(1);

            CommonTree t = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1732:16: ( (t= 'bool' | t= 'byte' | t= 'char' | t= 'decimal' | t= 'double' | t= 'float' | t= 'int' | t= 'long' | t= 'object' | t= 'sbyte' | t= 'short' | t= 'string' | t= 'uint' | t= 'ulong' | t= 'ushort' ) -> string(payload=$t.text))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:4: (t= 'bool' | t= 'byte' | t= 'char' | t= 'decimal' | t= 'double' | t= 'float' | t= 'int' | t= 'long' | t= 'object' | t= 'sbyte' | t= 'short' | t= 'string' | t= 'uint' | t= 'ulong' | t= 'ushort' )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:4: (t= 'bool' | t= 'byte' | t= 'char' | t= 'decimal' | t= 'double' | t= 'float' | t= 'int' | t= 'long' | t= 'object' | t= 'sbyte' | t= 'short' | t= 'string' | t= 'uint' | t= 'ulong' | t= 'ushort' )
                	int alt226 = 15;
                	switch ( input.LA(1) ) 
                	{
                	case BOOL:
                		{
                	    alt226 = 1;
                	    }
                	    break;
                	case BYTE:
                		{
                	    alt226 = 2;
                	    }
                	    break;
                	case CHAR:
                		{
                	    alt226 = 3;
                	    }
                	    break;
                	case 275:
                		{
                	    alt226 = 4;
                	    }
                	    break;
                	case DOUBLE:
                		{
                	    alt226 = 5;
                	    }
                	    break;
                	case FLOAT:
                		{
                	    alt226 = 6;
                	    }
                	    break;
                	case INT:
                		{
                	    alt226 = 7;
                	    }
                	    break;
                	case LONG:
                		{
                	    alt226 = 8;
                	    }
                	    break;
                	case OBJECT:
                		{
                	    alt226 = 9;
                	    }
                	    break;
                	case 251:
                		{
                	    alt226 = 10;
                	    }
                	    break;
                	case SHORT:
                		{
                	    alt226 = 11;
                	    }
                	    break;
                	case 276:
                		{
                	    alt226 = 12;
                	    }
                	    break;
                	case 253:
                		{
                	    alt226 = 13;
                	    }
                	    break;
                	case 254:
                		{
                	    alt226 = 14;
                	    }
                	    break;
                	case 252:
                		{
                	    alt226 = 15;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d226s0 =
                		        new NoViableAltException("", 226, 0, input);

                		    throw nvae_d226s0;
                	}

                	switch (alt226) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:5: t= 'bool'
                	        {
                	        	t=(CommonTree)Match(input,BOOL,FOLLOW_BOOL_in_predefined_type10238); if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:16: t= 'byte'
                	        {
                	        	t=(CommonTree)Match(input,BYTE,FOLLOW_BYTE_in_predefined_type10244); if (state.failed) return retval;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:29: t= 'char'
                	        {
                	        	t=(CommonTree)Match(input,CHAR,FOLLOW_CHAR_in_predefined_type10252); if (state.failed) return retval;

                	        }
                	        break;
                	    case 4 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:42: t= 'decimal'
                	        {
                	        	t=(CommonTree)Match(input,275,FOLLOW_275_in_predefined_type10260); if (state.failed) return retval;

                	        }
                	        break;
                	    case 5 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:56: t= 'double'
                	        {
                	        	t=(CommonTree)Match(input,DOUBLE,FOLLOW_DOUBLE_in_predefined_type10266); if (state.failed) return retval;

                	        }
                	        break;
                	    case 6 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:69: t= 'float'
                	        {
                	        	t=(CommonTree)Match(input,FLOAT,FOLLOW_FLOAT_in_predefined_type10272); if (state.failed) return retval;

                	        }
                	        break;
                	    case 7 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:82: t= 'int'
                	        {
                	        	t=(CommonTree)Match(input,INT,FOLLOW_INT_in_predefined_type10279); if (state.failed) return retval;

                	        }
                	        break;
                	    case 8 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:95: t= 'long'
                	        {
                	        	t=(CommonTree)Match(input,LONG,FOLLOW_LONG_in_predefined_type10288); if (state.failed) return retval;

                	        }
                	        break;
                	    case 9 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:108: t= 'object'
                	        {
                	        	t=(CommonTree)Match(input,OBJECT,FOLLOW_OBJECT_in_predefined_type10296); if (state.failed) return retval;

                	        }
                	        break;
                	    case 10 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1733:121: t= 'sbyte'
                	        {
                	        	t=(CommonTree)Match(input,251,FOLLOW_251_in_predefined_type10302); if (state.failed) return retval;

                	        }
                	        break;
                	    case 11 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1734:4: t= 'short'
                	        {
                	        	t=(CommonTree)Match(input,SHORT,FOLLOW_SHORT_in_predefined_type10311); if (state.failed) return retval;

                	        }
                	        break;
                	    case 12 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1734:17: t= 'string'
                	        {
                	        	t=(CommonTree)Match(input,276,FOLLOW_276_in_predefined_type10318); if (state.failed) return retval;

                	        }
                	        break;
                	    case 13 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1734:30: t= 'uint'
                	        {
                	        	t=(CommonTree)Match(input,253,FOLLOW_253_in_predefined_type10324); if (state.failed) return retval;

                	        }
                	        break;
                	    case 14 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1734:43: t= 'ulong'
                	        {
                	        	t=(CommonTree)Match(input,254,FOLLOW_254_in_predefined_type10332); if (state.failed) return retval;

                	        }
                	        break;
                	    case 15 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1734:56: t= 'ushort'
                	        {
                	        	t=(CommonTree)Match(input,252,FOLLOW_252_in_predefined_type10339); if (state.failed) return retval;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   collectComments(t.TokenStartIndex); 
                	}


                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1734:109: -> string(payload=$t.text)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload", ((t != null) ? t.Text : null)));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "predefined_type"

        public class identifier_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "identifier"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1736:1: identifier : (i= IDENTIFIER -> string(payload= $IDENTIFIER.text ) | also_keyword -> { $also_keyword.st });
        public JavaPrettyPrint.identifier_return identifier() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.identifier_return retval = new JavaPrettyPrint.identifier_return();
            retval.start = input.LT(1);

            CommonTree i = null;
            JavaPrettyPrint.also_keyword_return also_keyword226 = default(JavaPrettyPrint.also_keyword_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1736:11: (i= IDENTIFIER -> string(payload= $IDENTIFIER.text ) | also_keyword -> { $also_keyword.st })
                int alt227 = 2;
                int LA227_0 = input.LA(1);

                if ( (LA227_0 == IDENTIFIER) )
                {
                    alt227 = 1;
                }
                else if ( ((LA227_0 >= ELIF && LA227_0 <= UNDEF) || LA227_0 == 195 || LA227_0 == 221 || (LA227_0 >= 224 && LA227_0 <= 239) || (LA227_0 >= 241 && LA227_0 <= 244) || (LA227_0 >= 247 && LA227_0 <= 250) || LA227_0 == 256 || (LA227_0 >= 263 && LA227_0 <= 264) || LA227_0 == 274 || LA227_0 == 277) )
                {
                    alt227 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d227s0 =
                        new NoViableAltException("", 227, 0, input);

                    throw nvae_d227s0;
                }
                switch (alt227) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1737:3: i= IDENTIFIER
                        {
                        	i=(CommonTree)Match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_identifier10363); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   collectComments(i.TokenStartIndex); 
                        	}


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1737:57: -> string(payload= $IDENTIFIER.text )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  ((i != null) ? i.Text : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1737:100: also_keyword
                        {
                        	PushFollow(FOLLOW_also_keyword_in_identifier10379);
                        	also_keyword226 = also_keyword();
                        	state._fsp--;
                        	if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1737:113: -> { $also_keyword.st }
                        	  {
                        	      retval.ST =  ((also_keyword226 != null) ? also_keyword226.ST : null) ;
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "identifier"

        public class keyword_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "keyword"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1739:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
        public JavaPrettyPrint.keyword_return keyword() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.keyword_return retval = new JavaPrettyPrint.keyword_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1739:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:
                {
                	if ( input.LA(1) == ENUM || (input.LA(1) >= PUBLIC && input.LA(1) <= IN) || input.LA(1) == IF || (input.LA(1) >= BOOL && input.LA(1) <= DOUBLE) || (input.LA(1) >= TRUE && input.LA(1) <= NULL) || input.LA(1) == USING || (input.LA(1) >= 193 && input.LA(1) <= 194) || (input.LA(1) >= 197 && input.LA(1) <= 207) || (input.LA(1) >= 212 && input.LA(1) <= 219) || (input.LA(1) >= 222 && input.LA(1) <= 223) || input.LA(1) == 240 || input.LA(1) == 245 || (input.LA(1) >= 251 && input.LA(1) <= 255) || (input.LA(1) >= 257 && input.LA(1) <= 262) || (input.LA(1) >= 265 && input.LA(1) <= 267) || (input.LA(1) >= 269 && input.LA(1) <= 273) || (input.LA(1) >= 275 && input.LA(1) <= 276) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "keyword"

        public class also_keyword_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "also_keyword"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1742:1: also_keyword : (t= 'add' | t= 'alias' | t= 'assembly' | t= 'module' | t= 'field' | t= 'method' | t= 'param' | t= 'property' | t= 'type' | t= 'yield' | t= 'from' | t= 'into' | t= 'join' | t= 'on' | t= 'where' | t= 'orderby' | t= 'group' | t= 'by' | t= 'ascending' | t= 'descending' | t= 'equals' | t= 'select' | t= 'pragma' | t= 'let' | t= 'remove' | t= 'get' | t= 'set' | t= 'var' | t= '__arglist' | t= 'dynamic' | t= 'elif' | t= 'endif' | t= 'define' | t= 'undef' | t= 'extends' ) -> string(payload=$t.text);
        public JavaPrettyPrint.also_keyword_return also_keyword() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.also_keyword_return retval = new JavaPrettyPrint.also_keyword_return();
            retval.start = input.LT(1);

            CommonTree t = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1742:13: ( (t= 'add' | t= 'alias' | t= 'assembly' | t= 'module' | t= 'field' | t= 'method' | t= 'param' | t= 'property' | t= 'type' | t= 'yield' | t= 'from' | t= 'into' | t= 'join' | t= 'on' | t= 'where' | t= 'orderby' | t= 'group' | t= 'by' | t= 'ascending' | t= 'descending' | t= 'equals' | t= 'select' | t= 'pragma' | t= 'let' | t= 'remove' | t= 'get' | t= 'set' | t= 'var' | t= '__arglist' | t= 'dynamic' | t= 'elif' | t= 'endif' | t= 'define' | t= 'undef' | t= 'extends' ) -> string(payload=$t.text))
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1743:4: (t= 'add' | t= 'alias' | t= 'assembly' | t= 'module' | t= 'field' | t= 'method' | t= 'param' | t= 'property' | t= 'type' | t= 'yield' | t= 'from' | t= 'into' | t= 'join' | t= 'on' | t= 'where' | t= 'orderby' | t= 'group' | t= 'by' | t= 'ascending' | t= 'descending' | t= 'equals' | t= 'select' | t= 'pragma' | t= 'let' | t= 'remove' | t= 'get' | t= 'set' | t= 'var' | t= '__arglist' | t= 'dynamic' | t= 'elif' | t= 'endif' | t= 'define' | t= 'undef' | t= 'extends' )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1743:4: (t= 'add' | t= 'alias' | t= 'assembly' | t= 'module' | t= 'field' | t= 'method' | t= 'param' | t= 'property' | t= 'type' | t= 'yield' | t= 'from' | t= 'into' | t= 'join' | t= 'on' | t= 'where' | t= 'orderby' | t= 'group' | t= 'by' | t= 'ascending' | t= 'descending' | t= 'equals' | t= 'select' | t= 'pragma' | t= 'let' | t= 'remove' | t= 'get' | t= 'set' | t= 'var' | t= '__arglist' | t= 'dynamic' | t= 'elif' | t= 'endif' | t= 'define' | t= 'undef' | t= 'extends' )
                	int alt228 = 35;
                	switch ( input.LA(1) ) 
                	{
                	case 249:
                		{
                	    alt228 = 1;
                	    }
                	    break;
                	case 195:
                		{
                	    alt228 = 2;
                	    }
                	    break;
                	case 237:
                		{
                	    alt228 = 3;
                	    }
                	    break;
                	case 238:
                		{
                	    alt228 = 4;
                	    }
                	    break;
                	case 239:
                		{
                	    alt228 = 5;
                	    }
                	    break;
                	case 241:
                		{
                	    alt228 = 6;
                	    }
                	    break;
                	case 242:
                		{
                	    alt228 = 7;
                	    }
                	    break;
                	case 243:
                		{
                	    alt228 = 8;
                	    }
                	    break;
                	case 244:
                		{
                	    alt228 = 9;
                	    }
                	    break;
                	case 274:
                		{
                	    alt228 = 10;
                	    }
                	    break;
                	case 225:
                		{
                	    alt228 = 11;
                	    }
                	    break;
                	case 224:
                		{
                	    alt228 = 12;
                	    }
                	    break;
                	case 226:
                		{
                	    alt228 = 13;
                	    }
                	    break;
                	case 227:
                		{
                	    alt228 = 14;
                	    }
                	    break;
                	case 236:
                		{
                	    alt228 = 15;
                	    }
                	    break;
                	case 230:
                		{
                	    alt228 = 16;
                	    }
                	    break;
                	case 234:
                		{
                	    alt228 = 17;
                	    }
                	    break;
                	case 235:
                		{
                	    alt228 = 18;
                	    }
                	    break;
                	case 231:
                		{
                	    alt228 = 19;
                	    }
                	    break;
                	case 232:
                		{
                	    alt228 = 20;
                	    }
                	    break;
                	case 228:
                		{
                	    alt228 = 21;
                	    }
                	    break;
                	case 233:
                		{
                	    alt228 = 22;
                	    }
                	    break;
                	case 277:
                		{
                	    alt228 = 23;
                	    }
                	    break;
                	case 229:
                		{
                	    alt228 = 24;
                	    }
                	    break;
                	case 250:
                		{
                	    alt228 = 25;
                	    }
                	    break;
                	case 247:
                		{
                	    alt228 = 26;
                	    }
                	    break;
                	case 248:
                		{
                	    alt228 = 27;
                	    }
                	    break;
                	case 263:
                		{
                	    alt228 = 28;
                	    }
                	    break;
                	case 256:
                		{
                	    alt228 = 29;
                	    }
                	    break;
                	case 264:
                		{
                	    alt228 = 30;
                	    }
                	    break;
                	case ELIF:
                		{
                	    alt228 = 31;
                	    }
                	    break;
                	case ENDIF:
                		{
                	    alt228 = 32;
                	    }
                	    break;
                	case DEFINE:
                		{
                	    alt228 = 33;
                	    }
                	    break;
                	case UNDEF:
                		{
                	    alt228 = 34;
                	    }
                	    break;
                	case 221:
                		{
                	    alt228 = 35;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d228s0 =
                		        new NoViableAltException("", 228, 0, input);

                		    throw nvae_d228s0;
                	}

                	switch (alt228) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:2: t= 'add'
                	        {
                	        	t=(CommonTree)Match(input,249,FOLLOW_249_in_also_keyword10710); if (state.failed) return retval;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:12: t= 'alias'
                	        {
                	        	t=(CommonTree)Match(input,195,FOLLOW_195_in_also_keyword10716); if (state.failed) return retval;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:24: t= 'assembly'
                	        {
                	        	t=(CommonTree)Match(input,237,FOLLOW_237_in_also_keyword10722); if (state.failed) return retval;

                	        }
                	        break;
                	    case 4 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:39: t= 'module'
                	        {
                	        	t=(CommonTree)Match(input,238,FOLLOW_238_in_also_keyword10728); if (state.failed) return retval;

                	        }
                	        break;
                	    case 5 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:52: t= 'field'
                	        {
                	        	t=(CommonTree)Match(input,239,FOLLOW_239_in_also_keyword10734); if (state.failed) return retval;

                	        }
                	        break;
                	    case 6 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:64: t= 'method'
                	        {
                	        	t=(CommonTree)Match(input,241,FOLLOW_241_in_also_keyword10740); if (state.failed) return retval;

                	        }
                	        break;
                	    case 7 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:77: t= 'param'
                	        {
                	        	t=(CommonTree)Match(input,242,FOLLOW_242_in_also_keyword10746); if (state.failed) return retval;

                	        }
                	        break;
                	    case 8 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:89: t= 'property'
                	        {
                	        	t=(CommonTree)Match(input,243,FOLLOW_243_in_also_keyword10752); if (state.failed) return retval;

                	        }
                	        break;
                	    case 9 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:104: t= 'type'
                	        {
                	        	t=(CommonTree)Match(input,244,FOLLOW_244_in_also_keyword10758); if (state.failed) return retval;

                	        }
                	        break;
                	    case 10 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1744:115: t= 'yield'
                	        {
                	        	t=(CommonTree)Match(input,274,FOLLOW_274_in_also_keyword10764); if (state.failed) return retval;

                	        }
                	        break;
                	    case 11 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:4: t= 'from'
                	        {
                	        	t=(CommonTree)Match(input,225,FOLLOW_225_in_also_keyword10771); if (state.failed) return retval;

                	        }
                	        break;
                	    case 12 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:15: t= 'into'
                	        {
                	        	t=(CommonTree)Match(input,224,FOLLOW_224_in_also_keyword10777); if (state.failed) return retval;

                	        }
                	        break;
                	    case 13 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:26: t= 'join'
                	        {
                	        	t=(CommonTree)Match(input,226,FOLLOW_226_in_also_keyword10783); if (state.failed) return retval;

                	        }
                	        break;
                	    case 14 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:37: t= 'on'
                	        {
                	        	t=(CommonTree)Match(input,227,FOLLOW_227_in_also_keyword10789); if (state.failed) return retval;

                	        }
                	        break;
                	    case 15 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:46: t= 'where'
                	        {
                	        	t=(CommonTree)Match(input,236,FOLLOW_236_in_also_keyword10795); if (state.failed) return retval;

                	        }
                	        break;
                	    case 16 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:58: t= 'orderby'
                	        {
                	        	t=(CommonTree)Match(input,230,FOLLOW_230_in_also_keyword10801); if (state.failed) return retval;

                	        }
                	        break;
                	    case 17 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:72: t= 'group'
                	        {
                	        	t=(CommonTree)Match(input,234,FOLLOW_234_in_also_keyword10807); if (state.failed) return retval;

                	        }
                	        break;
                	    case 18 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:84: t= 'by'
                	        {
                	        	t=(CommonTree)Match(input,235,FOLLOW_235_in_also_keyword10813); if (state.failed) return retval;

                	        }
                	        break;
                	    case 19 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:93: t= 'ascending'
                	        {
                	        	t=(CommonTree)Match(input,231,FOLLOW_231_in_also_keyword10819); if (state.failed) return retval;

                	        }
                	        break;
                	    case 20 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1745:109: t= 'descending'
                	        {
                	        	t=(CommonTree)Match(input,232,FOLLOW_232_in_also_keyword10825); if (state.failed) return retval;

                	        }
                	        break;
                	    case 21 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:4: t= 'equals'
                	        {
                	        	t=(CommonTree)Match(input,228,FOLLOW_228_in_also_keyword10833); if (state.failed) return retval;

                	        }
                	        break;
                	    case 22 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:17: t= 'select'
                	        {
                	        	t=(CommonTree)Match(input,233,FOLLOW_233_in_also_keyword10839); if (state.failed) return retval;

                	        }
                	        break;
                	    case 23 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:30: t= 'pragma'
                	        {
                	        	t=(CommonTree)Match(input,277,FOLLOW_277_in_also_keyword10845); if (state.failed) return retval;

                	        }
                	        break;
                	    case 24 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:43: t= 'let'
                	        {
                	        	t=(CommonTree)Match(input,229,FOLLOW_229_in_also_keyword10851); if (state.failed) return retval;

                	        }
                	        break;
                	    case 25 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:53: t= 'remove'
                	        {
                	        	t=(CommonTree)Match(input,250,FOLLOW_250_in_also_keyword10857); if (state.failed) return retval;

                	        }
                	        break;
                	    case 26 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:66: t= 'get'
                	        {
                	        	t=(CommonTree)Match(input,247,FOLLOW_247_in_also_keyword10863); if (state.failed) return retval;

                	        }
                	        break;
                	    case 27 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:76: t= 'set'
                	        {
                	        	t=(CommonTree)Match(input,248,FOLLOW_248_in_also_keyword10869); if (state.failed) return retval;

                	        }
                	        break;
                	    case 28 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:86: t= 'var'
                	        {
                	        	t=(CommonTree)Match(input,263,FOLLOW_263_in_also_keyword10875); if (state.failed) return retval;

                	        }
                	        break;
                	    case 29 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:96: t= '__arglist'
                	        {
                	        	t=(CommonTree)Match(input,256,FOLLOW_256_in_also_keyword10881); if (state.failed) return retval;

                	        }
                	        break;
                	    case 30 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:112: t= 'dynamic'
                	        {
                	        	t=(CommonTree)Match(input,264,FOLLOW_264_in_also_keyword10887); if (state.failed) return retval;

                	        }
                	        break;
                	    case 31 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1746:126: t= 'elif'
                	        {
                	        	t=(CommonTree)Match(input,ELIF,FOLLOW_ELIF_in_also_keyword10893); if (state.failed) return retval;

                	        }
                	        break;
                	    case 32 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1747:4: t= 'endif'
                	        {
                	        	t=(CommonTree)Match(input,ENDIF,FOLLOW_ENDIF_in_also_keyword10901); if (state.failed) return retval;

                	        }
                	        break;
                	    case 33 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1747:16: t= 'define'
                	        {
                	        	t=(CommonTree)Match(input,DEFINE,FOLLOW_DEFINE_in_also_keyword10907); if (state.failed) return retval;

                	        }
                	        break;
                	    case 34 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1747:29: t= 'undef'
                	        {
                	        	t=(CommonTree)Match(input,UNDEF,FOLLOW_UNDEF_in_also_keyword10913); if (state.failed) return retval;

                	        }
                	        break;
                	    case 35 :
                	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1747:41: t= 'extends'
                	        {
                	        	t=(CommonTree)Match(input,221,FOLLOW_221_in_also_keyword10919); if (state.failed) return retval;

                	        }
                	        break;

                	}



                	// TEMPLATE REWRITE
                	if ( (state.backtracking==0) )
                	{
                	  // 1748:6: -> string(payload=$t.text)
                	  {
                	      retval.ST = templateLib.GetInstanceOf("string",
                	    new STAttrMap().Add("payload", ((t != null) ? t.Text : null)));
                	  }

                	}
                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "also_keyword"

        public class literal_return : TreeRuleReturnScope
        {
            private StringTemplate st;
            public StringTemplate ST    { get { return st; } set { st = value; } }
            public override object Template 		{ get { return st; } }
            public override string ToString() 		{ return (st == null) ? null : st.ToString(); }
        };

        // $ANTLR start "literal"
        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1751:1: literal : ( Real_literal -> string(payload=$Real_literal.text) | NUMBER -> string(payload=$NUMBER.text) | LONGNUMBER -> string(payload=$LONGNUMBER.text + \"L\") | Hex_number -> string(payload=$Hex_number.text) | Character_literal -> string(payload=$Character_literal.text) | STRINGLITERAL -> string(payload= $STRINGLITERAL.text ) | Verbatim_string_literal -> verbatim_string(payload= escapeJavaString($Verbatim_string_literal.text.Substring(1)) ) | TRUE -> string(payload=\"true\") | FALSE -> string(payload=\"false\") | NULL -> string(payload=\"null\"));
        public JavaPrettyPrint.literal_return literal() // throws RecognitionException [1]
        {   
            JavaPrettyPrint.literal_return retval = new JavaPrettyPrint.literal_return();
            retval.start = input.LT(1);

            CommonTree Real_literal227 = null;
            CommonTree NUMBER228 = null;
            CommonTree LONGNUMBER229 = null;
            CommonTree Hex_number230 = null;
            CommonTree Character_literal231 = null;
            CommonTree STRINGLITERAL232 = null;
            CommonTree Verbatim_string_literal233 = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1751:8: ( Real_literal -> string(payload=$Real_literal.text) | NUMBER -> string(payload=$NUMBER.text) | LONGNUMBER -> string(payload=$LONGNUMBER.text + \"L\") | Hex_number -> string(payload=$Hex_number.text) | Character_literal -> string(payload=$Character_literal.text) | STRINGLITERAL -> string(payload= $STRINGLITERAL.text ) | Verbatim_string_literal -> verbatim_string(payload= escapeJavaString($Verbatim_string_literal.text.Substring(1)) ) | TRUE -> string(payload=\"true\") | FALSE -> string(payload=\"false\") | NULL -> string(payload=\"null\"))
                int alt229 = 10;
                switch ( input.LA(1) ) 
                {
                case Real_literal:
                	{
                    alt229 = 1;
                    }
                    break;
                case NUMBER:
                	{
                    alt229 = 2;
                    }
                    break;
                case LONGNUMBER:
                	{
                    alt229 = 3;
                    }
                    break;
                case Hex_number:
                	{
                    alt229 = 4;
                    }
                    break;
                case Character_literal:
                	{
                    alt229 = 5;
                    }
                    break;
                case STRINGLITERAL:
                	{
                    alt229 = 6;
                    }
                    break;
                case Verbatim_string_literal:
                	{
                    alt229 = 7;
                    }
                    break;
                case TRUE:
                	{
                    alt229 = 8;
                    }
                    break;
                case FALSE:
                	{
                    alt229 = 9;
                    }
                    break;
                case NULL:
                	{
                    alt229 = 10;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d229s0 =
                	        new NoViableAltException("", 229, 0, input);

                	    throw nvae_d229s0;
                }

                switch (alt229) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1752:2: Real_literal
                        {
                        	Real_literal227=(CommonTree)Match(input,Real_literal,FOLLOW_Real_literal_in_literal10942); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1752:15: -> string(payload=$Real_literal.text)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", ((Real_literal227 != null) ? Real_literal227.Text : null)));
                        	  }

                        	}
                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1753:4: NUMBER
                        {
                        	NUMBER228=(CommonTree)Match(input,NUMBER,FOLLOW_NUMBER_in_literal10957); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1753:11: -> string(payload=$NUMBER.text)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", ((NUMBER228 != null) ? NUMBER228.Text : null)));
                        	  }

                        	}
                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1754:4: LONGNUMBER
                        {
                        	LONGNUMBER229=(CommonTree)Match(input,LONGNUMBER,FOLLOW_LONGNUMBER_in_literal10972); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1754:15: -> string(payload=$LONGNUMBER.text + \"L\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", ((LONGNUMBER229 != null) ? LONGNUMBER229.Text : null) + "L"));
                        	  }

                        	}
                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1755:4: Hex_number
                        {
                        	Hex_number230=(CommonTree)Match(input,Hex_number,FOLLOW_Hex_number_in_literal10987); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1755:15: -> string(payload=$Hex_number.text)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", ((Hex_number230 != null) ? Hex_number230.Text : null)));
                        	  }

                        	}
                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1756:4: Character_literal
                        {
                        	Character_literal231=(CommonTree)Match(input,Character_literal,FOLLOW_Character_literal_in_literal11002); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1756:22: -> string(payload=$Character_literal.text)
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", ((Character_literal231 != null) ? Character_literal231.Text : null)));
                        	  }

                        	}
                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1757:4: STRINGLITERAL
                        {
                        	STRINGLITERAL232=(CommonTree)Match(input,STRINGLITERAL,FOLLOW_STRINGLITERAL_in_literal11017); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1757:18: -> string(payload= $STRINGLITERAL.text )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload",  ((STRINGLITERAL232 != null) ? STRINGLITERAL232.Text : null) ));
                        	  }

                        	}
                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1758:4: Verbatim_string_literal
                        {
                        	Verbatim_string_literal233=(CommonTree)Match(input,Verbatim_string_literal,FOLLOW_Verbatim_string_literal_in_literal11032); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1758:28: -> verbatim_string(payload= escapeJavaString($Verbatim_string_literal.text.Substring(1)) )
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("verbatim_string",
                        	    new STAttrMap().Add("payload",  escapeJavaString(((Verbatim_string_literal233 != null) ? Verbatim_string_literal233.Text : null).Substring(1)) ));
                        	  }

                        	}
                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1759:4: TRUE
                        {
                        	Match(input,TRUE,FOLLOW_TRUE_in_literal11047); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1759:9: -> string(payload=\"true\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", "true"));
                        	  }

                        	}
                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1760:4: FALSE
                        {
                        	Match(input,FALSE,FOLLOW_FALSE_in_literal11062); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1760:10: -> string(payload=\"false\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", "false"));
                        	  }

                        	}
                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1761:4: NULL
                        {
                        	Match(input,NULL,FOLLOW_NULL_in_literal11077); if (state.failed) return retval;


                        	// TEMPLATE REWRITE
                        	if ( (state.backtracking==0) )
                        	{
                        	  // 1761:9: -> string(payload=\"null\")
                        	  {
                        	      retval.ST = templateLib.GetInstanceOf("string",
                        	    new STAttrMap().Add("payload", "null"));
                        	  }

                        	}
                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "literal"

        // $ANTLR start "synpred1_JavaPrettyPrint"
        public void synpred1_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:697:4: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:697:5: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred1_JavaPrettyPrint1635);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred1_JavaPrettyPrint1640);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred1_JavaPrettyPrint"

        // $ANTLR start "synpred2_JavaPrettyPrint"
        public void synpred2_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:4: ( '(' type ')' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:760:5: '(' type ')'
            {
            	Match(input,LPAREN,FOLLOW_LPAREN_in_synpred2_JavaPrettyPrint2178); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_synpred2_JavaPrettyPrint2182);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_synpred2_JavaPrettyPrint2186); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred2_JavaPrettyPrint"

        // $ANTLR start "synpred3_JavaPrettyPrint"
        public void synpred3_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:808:2: ( array_creation_expression )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:808:3: array_creation_expression
            {
            	PushFollow(FOLLOW_array_creation_expression_in_synpred3_JavaPrettyPrint2573);
            	array_creation_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred3_JavaPrettyPrint"

        // $ANTLR start "synpred4_JavaPrettyPrint"
        public void synpred4_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:906:5: ( generic_dimension_specifier '.' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:906:6: generic_dimension_specifier '.'
            {
            	PushFollow(FOLLOW_generic_dimension_specifier_in_synpred4_JavaPrettyPrint3233);
            	generic_dimension_specifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,DOT,FOLLOW_DOT_in_synpred4_JavaPrettyPrint3237); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred4_JavaPrettyPrint"

        // $ANTLR start "synpred5_JavaPrettyPrint"
        public void synpred5_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:947:2: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:947:3: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred5_JavaPrettyPrint3521);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred5_JavaPrettyPrint3525);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred5_JavaPrettyPrint"

        // $ANTLR start "synpred6_JavaPrettyPrint"
        public void synpred6_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:956:4: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:956:5: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred6_JavaPrettyPrint3634);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred6_JavaPrettyPrint3638);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred6_JavaPrettyPrint"

        // $ANTLR start "synpred7_JavaPrettyPrint"
        public void synpred7_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:973:5: ( '?' 'extends' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:973:6: '?' 'extends'
            {
            	Match(input,220,FOLLOW_220_in_synpred7_JavaPrettyPrint3789); if (state.failed) return ;
            	Match(input,221,FOLLOW_221_in_synpred7_JavaPrettyPrint3791); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred7_JavaPrettyPrint"

        // $ANTLR start "synpred8_JavaPrettyPrint"
        public void synpred8_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1017:2: ( unary_expression assignment_operator )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1017:3: unary_expression assignment_operator
            {
            	PushFollow(FOLLOW_unary_expression_in_synpred8_JavaPrettyPrint4125);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_assignment_operator_in_synpred8_JavaPrettyPrint4129);
            	assignment_operator();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred8_JavaPrettyPrint"

        // $ANTLR start "synpred9_JavaPrettyPrint"
        public void synpred9_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1086:2: ( ( anonymous_function_signature )? '=>' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1086:3: ( anonymous_function_signature )? '=>'
            {
            	// /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1086:3: ( anonymous_function_signature )?
            	int alt230 = 2;
            	int LA230_0 = input.LA(1);

            	if ( ((LA230_0 >= PARAMS && LA230_0 <= PARAMS_TYPELESS)) )
            	{
            	    alt230 = 1;
            	}
            	switch (alt230) 
            	{
            	    case 1 :
            	        // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1086:3: anonymous_function_signature
            	        {
            	        	PushFollow(FOLLOW_anonymous_function_signature_in_synpred9_JavaPrettyPrint4857);
            	        	anonymous_function_signature();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	Match(input,LAMBDA,FOLLOW_LAMBDA_in_synpred9_JavaPrettyPrint4861); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred9_JavaPrettyPrint"

        // $ANTLR start "synpred10_JavaPrettyPrint"
        public void synpred10_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1087:4: ( query_expression )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1087:5: query_expression
            {
            	PushFollow(FOLLOW_query_expression_in_synpred10_JavaPrettyPrint4878);
            	query_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred10_JavaPrettyPrint"

        // $ANTLR start "synpred11_JavaPrettyPrint"
        public void synpred11_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:50: ( 'into' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1132:51: 'into'
            {
            	Match(input,224,FOLLOW_224_in_synpred11_JavaPrettyPrint5459); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred11_JavaPrettyPrint"

        // $ANTLR start "synpred12_JavaPrettyPrint"
        public void synpred12_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:32: ( ',' identifier '=' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1199:33: ',' identifier '='
            {
            	Match(input,COMMA,FOLLOW_COMMA_in_synpred12_JavaPrettyPrint5954); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_synpred12_JavaPrettyPrint5958);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,ASSIGN,FOLLOW_ASSIGN_in_synpred12_JavaPrettyPrint5962); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred12_JavaPrettyPrint"

        // $ANTLR start "synpred13_JavaPrettyPrint"
        public void synpred13_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1341:5: ( type_or_generic '.' )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1341:6: type_or_generic '.'
            {
            	PushFollow(FOLLOW_type_or_generic_in_synpred13_JavaPrettyPrint6691);
            	type_or_generic();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,DOT,FOLLOW_DOT_in_synpred13_JavaPrettyPrint6693); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred13_JavaPrettyPrint"

        // $ANTLR start "synpred14_JavaPrettyPrint"
        public void synpred14_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:23: ( arguments ( '[' | '.' | '->' ) )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1548:24: arguments ( '[' | '.' | '->' )
            {
            	PushFollow(FOLLOW_arguments_in_synpred14_JavaPrettyPrint8133);
            	arguments();
            	state._fsp--;
            	if (state.failed) return ;
            	if ( input.LA(1) == OPEN_BRACKET || (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }
        }
        // $ANTLR end "synpred14_JavaPrettyPrint"

        // $ANTLR start "synpred15_JavaPrettyPrint"
        public void synpred15_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1552:4: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1552:5: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred15_JavaPrettyPrint8184);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred15_JavaPrettyPrint8189);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred15_JavaPrettyPrint"

        // $ANTLR start "synpred16_JavaPrettyPrint"
        public void synpred16_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1567:2: ( declaration_statement )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1567:3: declaration_statement
            {
            	PushFollow(FOLLOW_declaration_statement_in_synpred16_JavaPrettyPrint8285);
            	declaration_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred16_JavaPrettyPrint"

        // $ANTLR start "synpred17_JavaPrettyPrint"
        public void synpred17_JavaPrettyPrint_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1671:2: ( local_variable_declaration )
            // /project/src/CS2JTranslator/CS2JTransform/JavaPrettyPrint.g:1671:3: local_variable_declaration
            {
            	PushFollow(FOLLOW_local_variable_declaration_in_synpred17_JavaPrettyPrint9670);
            	local_variable_declaration();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred17_JavaPrettyPrint"

        // Delegated rules

       	public bool synpred2_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred2_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred11_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred11_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred4_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred4_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred6_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred6_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred3_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred3_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred5_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred5_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred16_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred16_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred1_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred1_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred8_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred8_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred9_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred9_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred12_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred12_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred15_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred15_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred10_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred10_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred13_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred13_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred14_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred14_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred17_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred17_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred7_JavaPrettyPrint() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred7_JavaPrettyPrint_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}


       	protected DFA36 dfa36;
       	protected DFA37 dfa37;
       	protected DFA44 dfa44;
       	protected DFA70 dfa70;
       	protected DFA78 dfa78;
       	protected DFA85 dfa85;
       	protected DFA88 dfa88;
       	protected DFA97 dfa97;
       	protected DFA104 dfa104;
       	protected DFA124 dfa124;
       	protected DFA147 dfa147;
       	protected DFA192 dfa192;
       	protected DFA196 dfa196;
       	protected DFA199 dfa199;
       	protected DFA204 dfa204;
    	private void InitializeCyclicDFAs()
    	{
        	this.dfa36 = new DFA36(this);
        	this.dfa37 = new DFA37(this);
        	this.dfa44 = new DFA44(this);
        	this.dfa70 = new DFA70(this);
        	this.dfa78 = new DFA78(this);
        	this.dfa85 = new DFA85(this);
        	this.dfa88 = new DFA88(this);
        	this.dfa97 = new DFA97(this);
        	this.dfa104 = new DFA104(this);
        	this.dfa124 = new DFA124(this);
        	this.dfa147 = new DFA147(this);
        	this.dfa192 = new DFA192(this);
        	this.dfa196 = new DFA196(this);
        	this.dfa199 = new DFA199(this);
        	this.dfa204 = new DFA204(this);
    	    this.dfa37.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA37_SpecialStateTransition);
    	    this.dfa78.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA78_SpecialStateTransition);
    	    this.dfa85.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA85_SpecialStateTransition);
    	    this.dfa88.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA88_SpecialStateTransition);
    	    this.dfa97.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA97_SpecialStateTransition);
    	    this.dfa104.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA104_SpecialStateTransition);
    	    this.dfa124.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA124_SpecialStateTransition);
    	    this.dfa147.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA147_SpecialStateTransition);
    	    this.dfa196.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA196_SpecialStateTransition);
    	}

        const string DFA36_eotS =
            "\x0f\uffff";
        const string DFA36_eofS =
            "\x0f\uffff";
        const string DFA36_minS =
            "\x01\x2a\x0e\uffff";
        const string DFA36_maxS =
            "\x01\u0115\x0e\uffff";
        const string DFA36_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x0e";
        const string DFA36_specialS =
            "\x0f\uffff}>";
        static readonly string[] DFA36_transitionS = {
                "\x02\x04\x01\uffff\x01\x02\x01\x03\x01\uffff\x01\x07\x01"+
                "\uffff\x01\x08\x01\x09\x0d\uffff\x02\x05\x24\uffff\x02\x05"+
                "\x12\uffff\x01\x01\x06\uffff\x12\x05\x02\x06\x02\uffff\x04"+
                "\x05\x27\uffff\x01\x05\x0c\uffff\x01\x05\x05\uffff\x01\x0a"+
                "\x01\x0b\x01\x0c\x01\x0d\x01\x0e\x01\x05\x01\uffff\x01\x05"+
                "\x02\uffff\x10\x05\x01\uffff\x04\x05\x02\uffff\x08\x05\x01"+
                "\uffff\x01\x05\x06\uffff\x02\x05\x09\uffff\x04\x05",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA36_eot = DFA.UnpackEncodedString(DFA36_eotS);
        static readonly short[] DFA36_eof = DFA.UnpackEncodedString(DFA36_eofS);
        static readonly char[] DFA36_min = DFA.UnpackEncodedStringToUnsignedChars(DFA36_minS);
        static readonly char[] DFA36_max = DFA.UnpackEncodedStringToUnsignedChars(DFA36_maxS);
        static readonly short[] DFA36_accept = DFA.UnpackEncodedString(DFA36_acceptS);
        static readonly short[] DFA36_special = DFA.UnpackEncodedString(DFA36_specialS);
        static readonly short[][] DFA36_transition = DFA.UnpackEncodedStringArray(DFA36_transitionS);

        protected class DFA36 : DFA
        {
            public DFA36(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 36;
                this.eot = DFA36_eot;
                this.eof = DFA36_eof;
                this.min = DFA36_min;
                this.max = DFA36_max;
                this.accept = DFA36_accept;
                this.special = DFA36_special;
                this.transition = DFA36_transition;

            }

            override public string Description
            {
                get { return "639:1: primary_expression returns [int precedence] : ( ^( JAVAWRAPPER t= identifier (k= identifier v= wrapped )* ) -> string(payload= fillTemplate($t.st.ToString(), templateMap) ) | ^( INDEX expression ( expression_list )? ) -> index(func= $expression.st funcparens= comparePrecedence(precedence[INDEX], $expression.precedence) < 0 args= $expression_list.st ) | ^( APPLY expression ( argument_list )? ) -> application(func= $expression.st funcparens= comparePrecedence(precedence[APPLY], $expression.precedence) < 0 args= $argument_list.st ) | ^( (op= POSTINC | op= POSTDEC ) expression ) -> op(pre=$expression.stop= $op.token.Text preparens= comparePrecedence($op.token, $expression.precedence) <= 0 ) | primary_expression_start -> { $primary_expression_start.st } | ^( access_operator expression identifier ( generic_argument_list )? ) -> member_access(pre= $expression.st op= $access_operator.st access= $identifier.st access_tyargs= $generic_argument_list.st preparen= comparePrecedence($access_operator.precedence, $expression.precedence) < 0 ) | ^( NEW type ( argument_list )? ( object_or_collection_initializer )? ) -> construct(type=$type.stargs=$argument_list.stinits=$object_or_collection_initializer.st) | ^( NEW_DELEGATE type ( argument_list )? class_body ) -> delegate(type=$type.stargs=$argument_list.stbody=$class_body.st) | ^( NEW_ANON_OBJECT anonymous_object_creation_expression ) | sizeof_expression | checked_expression -> { $checked_expression.st } | unchecked_expression -> { $unchecked_expression.st } | default_value_expression -> { $default_value_expression.st } | anonymous_method_expression );"; }
            }

        }

        const string DFA37_eotS =
            "\x32\uffff";
        const string DFA37_eofS =
            "\x02\uffff\x24\x2c\x0c\uffff";
        const string DFA37_minS =
            "\x01\x41\x01\uffff\x24\x03\x03\uffff\x01\x02\x01\uffff\x01\x02"+
            "\x01\uffff\x01\x70\x04\uffff";
        const string DFA37_maxS =
            "\x01\u0115\x01\uffff\x24\u0115\x03\uffff\x01\x02\x01\uffff\x01"+
            "\u00dc\x01\uffff\x01\u0115\x04\uffff";
        const string DFA37_acceptS =
            "\x01\uffff\x01\x01\x24\uffff\x01\x04\x01\x05\x01\x06\x01\uffff"+
            "\x01\x09\x01\uffff\x01\x03\x01\uffff\x02\x02\x01\x07\x01\x08";
        const string DFA37_specialS =
            "\x2b\uffff\x01\x00\x06\uffff}>";
        static readonly string[] DFA37_transitionS = {
                "\x01\x01\x01\x27\x24\uffff\x01\x28\x01\x2a\x19\uffff\x08"+
                "\x01\x01\x02\x09\x2a\x04\uffff\x01\x21\x01\x22\x01\x23\x01"+
                "\x24\x27\uffff\x01\x04\x0c\uffff\x01\x26\x0a\uffff\x01\x29"+
                "\x01\uffff\x01\x25\x02\uffff\x01\x0e\x01\x0d\x01\x0f\x01"+
                "\x10\x01\x17\x01\x1a\x01\x12\x01\x15\x01\x16\x01\x18\x01"+
                "\x13\x01\x14\x01\x11\x01\x05\x01\x06\x01\x07\x01\uffff\x01"+
                "\x08\x01\x09\x01\x0a\x01\x0b\x02\uffff\x01\x1c\x01\x1d\x01"+
                "\x03\x01\x1b\x04\x01\x01\uffff\x01\x1f\x06\uffff\x01\x1e"+
                "\x01\x20\x09\uffff\x01\x0c\x02\x01\x01\x19",
                "",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "\x01\x2c\x16\uffff\x06\x2c\x01\uffff\x13\x2c\x06\uffff"+
                "\x02\x2c\x02\uffff\x01\x2c\x01\uffff\x04\x2c\x02\uffff\x03"+
                "\x2c\x01\uffff\x0d\x2c\x01\uffff\x0a\x2c\x01\x2b\x03\x2c"+
                "\x01\uffff\x0a\x2c\x05\uffff\x01\x2c\x01\uffff\x01\x2c\x02"+
                "\uffff\x01\x2c\x04\uffff\x01\x2c\x01\uffff\x15\x2c\x01\uffff"+
                "\x06\x2c\x25\uffff\x01\x2c\x02\uffff\x01\x2c\x09\uffff\x01"+
                "\x2c\x03\uffff\x08\x2c\x01\uffff\x01\x2c\x02\uffff\x10\x2c"+
                "\x01\uffff\x04\x2c\x02\uffff\x08\x2c\x01\uffff\x02\x2c\x04"+
                "\uffff\x03\x2c\x01\uffff\x01\x2c\x01\uffff\x05\x2c\x01\uffff"+
                "\x04\x2c",
                "",
                "",
                "",
                "\x01\x2d",
                "",
                "\x01\x2c\x6d\uffff\x01\x2f\x6b\uffff\x01\x2e",
                "",
                "\x01\x31\x19\uffff\x01\x30\x0d\uffff\x04\x30\x27\uffff"+
                "\x01\x30\x19\uffff\x01\x30\x02\uffff\x10\x30\x01\uffff\x04"+
                "\x30\x02\uffff\x04\x30\x05\uffff\x01\x30\x06\uffff\x02\x30"+
                "\x09\uffff\x01\x30\x02\uffff\x01\x30",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA37_eot = DFA.UnpackEncodedString(DFA37_eotS);
        static readonly short[] DFA37_eof = DFA.UnpackEncodedString(DFA37_eofS);
        static readonly char[] DFA37_min = DFA.UnpackEncodedStringToUnsignedChars(DFA37_minS);
        static readonly char[] DFA37_max = DFA.UnpackEncodedStringToUnsignedChars(DFA37_maxS);
        static readonly short[] DFA37_accept = DFA.UnpackEncodedString(DFA37_acceptS);
        static readonly short[] DFA37_special = DFA.UnpackEncodedString(DFA37_specialS);
        static readonly short[][] DFA37_transition = DFA.UnpackEncodedStringArray(DFA37_transitionS);

        protected class DFA37 : DFA
        {
            public DFA37(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 37;
                this.eot = DFA37_eot;
                this.eof = DFA37_eof;
                this.min = DFA37_min;
                this.max = DFA37_max;
                this.accept = DFA37_accept;
                this.special = DFA37_special;
                this.transition = DFA37_transition;

            }

            override public string Description
            {
                get { return "695:1: primary_expression_start : ( predefined_type -> { $predefined_type.st } | ( identifier generic_argument_list )=> identifier generic_argument_list -> op(pre= $identifier.st post= $generic_argument_list.st) | i1= identifier -> { $i1.st } | primary_expression_extalias -> unsupported(reason=\"external aliases are not yet supported\"text= $primary_expression_extalias.st ) | 'this' -> string(payload= \"this\" ) | SUPER -> string(payload= \"super\" ) | ^( 'typeof' unbound_type_name ) -> typeof(type= $unbound_type_name.st ) | ^( 'typeof' type ) -> typeof(type= $type.st ) | literal -> { $literal.st });"; }
            }

        }


        protected internal int DFA37_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA37_43 = input.LA(1);

                       	 
                       	int index37_43 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA37_43 == DOWN) ) { s = 44; }

                       	else if ( (LA37_43 == 220) && (synpred1_JavaPrettyPrint()) ) { s = 46; }

                       	else if ( (LA37_43 == TYPE) && (synpred1_JavaPrettyPrint()) ) { s = 47; }

                       	 
                       	input.Seek(index37_43);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae37 =
                new NoViableAltException(dfa.Description, 37, _s, input);
            dfa.Error(nvae37);
            throw nvae37;
        }
        const string DFA44_eotS =
            "\x27\uffff";
        const string DFA44_eofS =
            "\x27\uffff";
        const string DFA44_minS =
            "\x01\x1a\x24\x03\x02\uffff";
        const string DFA44_maxS =
            "\x25\u0115\x02\uffff";
        const string DFA44_acceptS =
            "\x25\uffff\x01\x02\x01\x01";
        const string DFA44_specialS =
            "\x27\uffff}>";
        static readonly string[] DFA44_transitionS = {
                "\x02\x25\x06\uffff\x0d\x25\x01\uffff\x04\x25\x0d\uffff\x02"+
                "\x25\x07\uffff\x01\x25\x0d\uffff\x0e\x25\x01\uffff\x08\x25"+
                "\x07\uffff\x01\x25\x04\uffff\x01\x25\x06\uffff\x08\x25\x01"+
                "\x01\x0c\x25\x01\uffff\x01\x20\x01\x21\x01\x22\x01\x23\x27"+
                "\uffff\x01\x03\x0c\uffff\x01\x25\x03\uffff\x08\x25\x01\uffff"+
                "\x01\x24\x02\uffff\x01\x0d\x01\x0c\x01\x0e\x01\x0f\x01\x16"+
                "\x01\x19\x01\x11\x01\x14\x01\x15\x01\x17\x01\x12\x01\x13"+
                "\x01\x10\x01\x04\x01\x05\x01\x06\x01\uffff\x01\x07\x01\x08"+
                "\x01\x09\x01\x0a\x02\uffff\x01\x1b\x01\x1c\x01\x02\x01\x1a"+
                "\x04\x25\x01\uffff\x01\x1e\x06\uffff\x01\x1d\x01\x1f\x09"+
                "\uffff\x01\x0b\x02\x25\x01\x18",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x01\uffff\x01\x25"+
                "\x05\uffff\x01\x25\x04\uffff\x01\x25\x06\uffff\x15\x25\x01"+
                "\uffff\x04\x25\x27\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff"+
                "\x01\x26\x08\x25\x01\uffff\x01\x25\x02\uffff\x10\x25\x01"+
                "\uffff\x04\x25\x02\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff"+
                "\x02\x25\x09\uffff\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "\x01\x25\x16\uffff\x02\x25\x06\uffff\x0d\x25\x01\uffff"+
                "\x04\x25\x0d\uffff\x02\x25\x07\uffff\x01\x25\x01\uffff\x0b"+
                "\x25\x01\uffff\x0e\x25\x01\uffff\x08\x25\x07\uffff\x01\x25"+
                "\x04\uffff\x01\x25\x06\uffff\x15\x25\x01\uffff\x04\x25\x27"+
                "\uffff\x01\x25\x0c\uffff\x01\x25\x02\uffff\x01\x26\x08\x25"+
                "\x01\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25\x02"+
                "\uffff\x08\x25\x01\uffff\x01\x25\x06\uffff\x02\x25\x09\uffff"+
                "\x04\x25",
                "",
                ""
        };

        static readonly short[] DFA44_eot = DFA.UnpackEncodedString(DFA44_eotS);
        static readonly short[] DFA44_eof = DFA.UnpackEncodedString(DFA44_eofS);
        static readonly char[] DFA44_min = DFA.UnpackEncodedStringToUnsignedChars(DFA44_minS);
        static readonly char[] DFA44_max = DFA.UnpackEncodedStringToUnsignedChars(DFA44_maxS);
        static readonly short[] DFA44_accept = DFA.UnpackEncodedString(DFA44_acceptS);
        static readonly short[] DFA44_special = DFA.UnpackEncodedString(DFA44_specialS);
        static readonly short[][] DFA44_transition = DFA.UnpackEncodedStringArray(DFA44_transitionS);

        protected class DFA44 : DFA
        {
            public DFA44(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 44;
                this.eot = DFA44_eot;
                this.eof = DFA44_eof;
                this.min = DFA44_min;
                this.max = DFA44_max;
                this.accept = DFA44_accept;
                this.special = DFA44_special;
                this.transition = DFA44_transition;

            }

            override public string Description
            {
                get { return "737:1: argument : ( argument_name argument_value | argument_value -> { $argument_value.st });"; }
            }

        }

        const string DFA70_eotS =
            "\x27\uffff";
        const string DFA70_eofS =
            "\x27\uffff";
        const string DFA70_minS =
            "\x01\x1a\x24\x48\x02\uffff";
        const string DFA70_maxS =
            "\x01\u0115\x0b\x6f\x01\u0115\x18\x6f\x02\uffff";
        const string DFA70_acceptS =
            "\x25\uffff\x01\x01\x01\x02";
        const string DFA70_specialS =
            "\x27\uffff}>";
        static readonly string[] DFA70_transitionS = {
                "\x02\x26\x06\uffff\x0d\x26\x01\uffff\x04\x26\x0d\uffff\x02"+
                "\x26\x04\uffff\x01\x26\x01\x25\x01\uffff\x01\x26\x0d\uffff"+
                "\x0e\x26\x01\uffff\x08\x26\x01\x25\x06\uffff\x01\x26\x04"+
                "\uffff\x01\x26\x06\uffff\x08\x26\x01\x01\x0c\x26\x01\uffff"+
                "\x01\x20\x01\x21\x01\x22\x01\x23\x27\uffff\x01\x03\x0c\uffff"+
                "\x01\x26\x05\uffff\x06\x26\x01\uffff\x01\x24\x02\uffff\x01"+
                "\x0d\x01\x0c\x01\x0e\x01\x0f\x01\x16\x01\x19\x01\x11\x01"+
                "\x14\x01\x15\x01\x17\x01\x12\x01\x13\x01\x10\x01\x04\x01"+
                "\x05\x01\x06\x01\uffff\x01\x07\x01\x08\x01\x09\x01\x0a\x02"+
                "\uffff\x01\x1b\x01\x1c\x01\x02\x01\x1a\x04\x26\x01\uffff"+
                "\x01\x1e\x06\uffff\x01\x1d\x01\x1f\x09\uffff\x01\x0b\x02"+
                "\x26\x01\x18",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x02\x26\x19\uffff\x01\x26\x0d\uffff\x04\x26\x27\uffff\x01"+
                "\x26\x19\uffff\x01\x26\x02\uffff\x10\x26\x01\uffff\x04\x26"+
                "\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26\x09"+
                "\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "\x01\x26\x03\uffff\x01\x25\x15\uffff\x01\x26\x0c\uffff"+
                "\x01\x26",
                "",
                ""
        };

        static readonly short[] DFA70_eot = DFA.UnpackEncodedString(DFA70_eotS);
        static readonly short[] DFA70_eof = DFA.UnpackEncodedString(DFA70_eofS);
        static readonly char[] DFA70_min = DFA.UnpackEncodedStringToUnsignedChars(DFA70_minS);
        static readonly char[] DFA70_max = DFA.UnpackEncodedStringToUnsignedChars(DFA70_maxS);
        static readonly short[] DFA70_accept = DFA.UnpackEncodedString(DFA70_acceptS);
        static readonly short[] DFA70_special = DFA.UnpackEncodedString(DFA70_specialS);
        static readonly short[][] DFA70_transition = DFA.UnpackEncodedStringArray(DFA70_transitionS);

        protected class DFA70 : DFA
        {
            public DFA70(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 70;
                this.eot = DFA70_eot;
                this.eof = DFA70_eof;
                this.min = DFA70_min;
                this.max = DFA70_max;
                this.accept = DFA70_accept;
                this.special = DFA70_special;
                this.transition = DFA70_transition;

            }

            override public string Description
            {
                get { return "872:7: ( object_initializer | collection_initializer )"; }
            }

        }

        const string DFA78_eotS =
            "\x07\uffff";
        const string DFA78_eofS =
            "\x07\uffff";
        const string DFA78_minS =
            "\x01\x62\x01\x6f\x01\uffff\x01\x6f\x01\x03\x02\uffff";
        const string DFA78_maxS =
            "\x01\u0094\x01\u0096\x01\uffff\x01\u0096\x01\u0094\x02\uffff";
        const string DFA78_acceptS =
            "\x02\uffff\x01\x02\x02\uffff\x01\x03\x01\x01";
        const string DFA78_specialS =
            "\x04\uffff\x01\x00\x02\uffff}>";
        static readonly string[] DFA78_transitionS = {
                "\x01\x01\x31\uffff\x01\x02",
                "\x01\x03\x26\uffff\x01\x04",
                "",
                "\x01\x03\x26\uffff\x01\x04",
                "\x01\x05\u0090\uffff\x01\x06",
                "",
                ""
        };

        static readonly short[] DFA78_eot = DFA.UnpackEncodedString(DFA78_eotS);
        static readonly short[] DFA78_eof = DFA.UnpackEncodedString(DFA78_eofS);
        static readonly char[] DFA78_min = DFA.UnpackEncodedStringToUnsignedChars(DFA78_minS);
        static readonly char[] DFA78_max = DFA.UnpackEncodedStringToUnsignedChars(DFA78_maxS);
        static readonly short[] DFA78_accept = DFA.UnpackEncodedString(DFA78_acceptS);
        static readonly short[] DFA78_special = DFA.UnpackEncodedString(DFA78_specialS);
        static readonly short[][] DFA78_transition = DFA.UnpackEncodedStringArray(DFA78_transitionS);

        protected class DFA78 : DFA
        {
            public DFA78(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 78;
                this.eot = DFA78_eot;
                this.eof = DFA78_eof;
                this.min = DFA78_min;
                this.max = DFA78_max;
                this.accept = DFA78_accept;
                this.special = DFA78_special;
                this.transition = DFA78_transition;

            }

            override public string Description
            {
                get { return "()* loopback of 906:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*"; }
            }

        }


        protected internal int DFA78_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA78_4 = input.LA(1);

                       	 
                       	int index78_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA78_4 == UP) ) { s = 5; }

                       	else if ( (LA78_4 == DOT) && (synpred4_JavaPrettyPrint()) ) { s = 6; }

                       	 
                       	input.Seek(index78_4);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae78 =
                new NoViableAltException(dfa.Description, 78, _s, input);
            dfa.Error(nvae78);
            throw nvae78;
        }
        const string DFA85_eotS =
            "\x27\uffff";
        const string DFA85_eofS =
            "\x01\uffff\x24\x26\x02\uffff";
        const string DFA85_minS =
            "\x01\u008a\x24\x03\x02\uffff";
        const string DFA85_maxS =
            "\x25\u0115\x02\uffff";
        const string DFA85_acceptS =
            "\x25\uffff\x01\x01\x01\x02";
        const string DFA85_specialS =
            "\x01\uffff\x01\x0c\x01\x1d\x01\x04\x01\x06\x01\x00\x01\x02\x01"+
            "\x0d\x01\x0f\x01\x09\x01\x0b\x01\x16\x01\x18\x01\x12\x01\x14"+
            "\x01\x20\x01\x23\x01\x1a\x01\x1c\x01\x07\x01\x05\x01\x03\x01"+
            "\x01\x01\x10\x01\x0e\x01\x0a\x01\x08\x01\x17\x01\x15\x01\x13"+
            "\x01\x11\x01\x22\x01\x1f\x01\x1b\x01\x19\x01\x21\x01\x1e\x02"+
            "\uffff}>";
        static readonly string[] DFA85_transitionS = {
                "\x01\x01\x0d\uffff\x01\x20\x01\x21\x01\x22\x01\x23\x27\uffff"+
                "\x01\x03\x19\uffff\x01\x24\x02\uffff\x01\x0d\x01\x0c\x01"+
                "\x0e\x01\x0f\x01\x16\x01\x19\x01\x11\x01\x14\x01\x15\x01"+
                "\x17\x01\x12\x01\x13\x01\x10\x01\x04\x01\x05\x01\x06\x01"+
                "\uffff\x01\x07\x01\x08\x01\x09\x01\x0a\x02\uffff\x01\x1b"+
                "\x01\x1c\x01\x02\x01\x1a\x05\uffff\x01\x1e\x06\uffff\x01"+
                "\x1d\x01\x1f\x09\uffff\x01\x0b\x02\uffff\x01\x18",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "\x01\x26\x16\uffff\x01\x26\x06\uffff\x01\x26\x23\uffff"+
                "\x01\x26\x01\uffff\x01\x26\x01\uffff\x01\x26\x02\uffff\x01"+
                "\x26\x15\uffff\x01\x25\x0a\uffff\x01\x26\x01\uffff\x01\x26"+
                "\x04\uffff\x01\x26\x06\uffff\x01\x26\x0e\uffff\x01\x26\x09"+
                "\uffff\x02\x26\x02\uffff\x05\x26\x26\uffff\x01\x26\x0c\uffff"+
                "\x01\x26\x0b\uffff\x02\x26\x02\uffff\x10\x26\x01\uffff\x04"+
                "\x26\x02\uffff\x04\x26\x05\uffff\x01\x26\x06\uffff\x02\x26"+
                "\x09\uffff\x01\x26\x02\uffff\x01\x26",
                "",
                ""
        };

        static readonly short[] DFA85_eot = DFA.UnpackEncodedString(DFA85_eotS);
        static readonly short[] DFA85_eof = DFA.UnpackEncodedString(DFA85_eofS);
        static readonly char[] DFA85_min = DFA.UnpackEncodedStringToUnsignedChars(DFA85_minS);
        static readonly char[] DFA85_max = DFA.UnpackEncodedStringToUnsignedChars(DFA85_maxS);
        static readonly short[] DFA85_accept = DFA.UnpackEncodedString(DFA85_acceptS);
        static readonly short[] DFA85_special = DFA.UnpackEncodedString(DFA85_specialS);
        static readonly short[][] DFA85_transition = DFA.UnpackEncodedStringArray(DFA85_transitionS);

        protected class DFA85 : DFA
        {
            public DFA85(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 85;
                this.eot = DFA85_eot;
                this.eof = DFA85_eof;
                this.min = DFA85_min;
                this.max = DFA85_max;
                this.accept = DFA85_accept;
                this.special = DFA85_special;
                this.transition = DFA85_transition;

            }

            override public string Description
            {
                get { return "943:1: type_or_generic returns [int precedence] : ( ( identifier generic_argument_list )=>gi= identifier generic_argument_list -> op(pre= $gi.st post= $generic_argument_list.st ) | i= identifier -> { $i.st });"; }
            }

        }


        protected internal int DFA85_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA85_5 = input.LA(1);

                       	 
                       	int index85_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_5 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_5 == EOF || LA85_5 == UP || LA85_5 == PARAMS || LA85_5 == ATTRIBUTE || LA85_5 == OPEN_BRACKET || LA85_5 == OPEN_BRACE || LA85_5 == LPAREN || LA85_5 == ASSIGN || LA85_5 == STAR || LA85_5 == COMMA || LA85_5 == TYPE_PARAM_CONSTRAINT || LA85_5 == JAVAWRAPPER || LA85_5 == IDENTIFIER || (LA85_5 >= DOT && LA85_5 <= PTR) || (LA85_5 >= ELIF && LA85_5 <= SEMI) || LA85_5 == 195 || LA85_5 == 208 || (LA85_5 >= 220 && LA85_5 <= 221) || (LA85_5 >= 224 && LA85_5 <= 239) || (LA85_5 >= 241 && LA85_5 <= 244) || (LA85_5 >= 247 && LA85_5 <= 250) || LA85_5 == 256 || (LA85_5 >= 263 && LA85_5 <= 264) || LA85_5 == 274 || LA85_5 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA85_22 = input.LA(1);

                       	 
                       	int index85_22 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_22 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_22 == EOF || LA85_22 == UP || LA85_22 == PARAMS || LA85_22 == ATTRIBUTE || LA85_22 == OPEN_BRACKET || LA85_22 == OPEN_BRACE || LA85_22 == LPAREN || LA85_22 == ASSIGN || LA85_22 == STAR || LA85_22 == COMMA || LA85_22 == TYPE_PARAM_CONSTRAINT || LA85_22 == JAVAWRAPPER || LA85_22 == IDENTIFIER || (LA85_22 >= DOT && LA85_22 <= PTR) || (LA85_22 >= ELIF && LA85_22 <= SEMI) || LA85_22 == 195 || LA85_22 == 208 || (LA85_22 >= 220 && LA85_22 <= 221) || (LA85_22 >= 224 && LA85_22 <= 239) || (LA85_22 >= 241 && LA85_22 <= 244) || (LA85_22 >= 247 && LA85_22 <= 250) || LA85_22 == 256 || (LA85_22 >= 263 && LA85_22 <= 264) || LA85_22 == 274 || LA85_22 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_22);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA85_6 = input.LA(1);

                       	 
                       	int index85_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_6 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_6 == EOF || LA85_6 == UP || LA85_6 == PARAMS || LA85_6 == ATTRIBUTE || LA85_6 == OPEN_BRACKET || LA85_6 == OPEN_BRACE || LA85_6 == LPAREN || LA85_6 == ASSIGN || LA85_6 == STAR || LA85_6 == COMMA || LA85_6 == TYPE_PARAM_CONSTRAINT || LA85_6 == JAVAWRAPPER || LA85_6 == IDENTIFIER || (LA85_6 >= DOT && LA85_6 <= PTR) || (LA85_6 >= ELIF && LA85_6 <= SEMI) || LA85_6 == 195 || LA85_6 == 208 || (LA85_6 >= 220 && LA85_6 <= 221) || (LA85_6 >= 224 && LA85_6 <= 239) || (LA85_6 >= 241 && LA85_6 <= 244) || (LA85_6 >= 247 && LA85_6 <= 250) || LA85_6 == 256 || (LA85_6 >= 263 && LA85_6 <= 264) || LA85_6 == 274 || LA85_6 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA85_21 = input.LA(1);

                       	 
                       	int index85_21 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_21 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_21 == EOF || LA85_21 == UP || LA85_21 == PARAMS || LA85_21 == ATTRIBUTE || LA85_21 == OPEN_BRACKET || LA85_21 == OPEN_BRACE || LA85_21 == LPAREN || LA85_21 == ASSIGN || LA85_21 == STAR || LA85_21 == COMMA || LA85_21 == TYPE_PARAM_CONSTRAINT || LA85_21 == JAVAWRAPPER || LA85_21 == IDENTIFIER || (LA85_21 >= DOT && LA85_21 <= PTR) || (LA85_21 >= ELIF && LA85_21 <= SEMI) || LA85_21 == 195 || LA85_21 == 208 || (LA85_21 >= 220 && LA85_21 <= 221) || (LA85_21 >= 224 && LA85_21 <= 239) || (LA85_21 >= 241 && LA85_21 <= 244) || (LA85_21 >= 247 && LA85_21 <= 250) || LA85_21 == 256 || (LA85_21 >= 263 && LA85_21 <= 264) || LA85_21 == 274 || LA85_21 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_21);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA85_3 = input.LA(1);

                       	 
                       	int index85_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_3 == EOF || LA85_3 == UP || LA85_3 == PARAMS || LA85_3 == ATTRIBUTE || LA85_3 == OPEN_BRACKET || LA85_3 == OPEN_BRACE || LA85_3 == LPAREN || LA85_3 == ASSIGN || LA85_3 == STAR || LA85_3 == COMMA || LA85_3 == TYPE_PARAM_CONSTRAINT || LA85_3 == JAVAWRAPPER || LA85_3 == IDENTIFIER || (LA85_3 >= DOT && LA85_3 <= PTR) || (LA85_3 >= ELIF && LA85_3 <= SEMI) || LA85_3 == 195 || LA85_3 == 208 || (LA85_3 >= 220 && LA85_3 <= 221) || (LA85_3 >= 224 && LA85_3 <= 239) || (LA85_3 >= 241 && LA85_3 <= 244) || (LA85_3 >= 247 && LA85_3 <= 250) || LA85_3 == 256 || (LA85_3 >= 263 && LA85_3 <= 264) || LA85_3 == 274 || LA85_3 == 277) ) { s = 38; }

                       	else if ( (LA85_3 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA85_20 = input.LA(1);

                       	 
                       	int index85_20 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_20 == EOF || LA85_20 == UP || LA85_20 == PARAMS || LA85_20 == ATTRIBUTE || LA85_20 == OPEN_BRACKET || LA85_20 == OPEN_BRACE || LA85_20 == LPAREN || LA85_20 == ASSIGN || LA85_20 == STAR || LA85_20 == COMMA || LA85_20 == TYPE_PARAM_CONSTRAINT || LA85_20 == JAVAWRAPPER || LA85_20 == IDENTIFIER || (LA85_20 >= DOT && LA85_20 <= PTR) || (LA85_20 >= ELIF && LA85_20 <= SEMI) || LA85_20 == 195 || LA85_20 == 208 || (LA85_20 >= 220 && LA85_20 <= 221) || (LA85_20 >= 224 && LA85_20 <= 239) || (LA85_20 >= 241 && LA85_20 <= 244) || (LA85_20 >= 247 && LA85_20 <= 250) || LA85_20 == 256 || (LA85_20 >= 263 && LA85_20 <= 264) || LA85_20 == 274 || LA85_20 == 277) ) { s = 38; }

                       	else if ( (LA85_20 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_20);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA85_4 = input.LA(1);

                       	 
                       	int index85_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_4 == EOF || LA85_4 == UP || LA85_4 == PARAMS || LA85_4 == ATTRIBUTE || LA85_4 == OPEN_BRACKET || LA85_4 == OPEN_BRACE || LA85_4 == LPAREN || LA85_4 == ASSIGN || LA85_4 == STAR || LA85_4 == COMMA || LA85_4 == TYPE_PARAM_CONSTRAINT || LA85_4 == JAVAWRAPPER || LA85_4 == IDENTIFIER || (LA85_4 >= DOT && LA85_4 <= PTR) || (LA85_4 >= ELIF && LA85_4 <= SEMI) || LA85_4 == 195 || LA85_4 == 208 || (LA85_4 >= 220 && LA85_4 <= 221) || (LA85_4 >= 224 && LA85_4 <= 239) || (LA85_4 >= 241 && LA85_4 <= 244) || (LA85_4 >= 247 && LA85_4 <= 250) || LA85_4 == 256 || (LA85_4 >= 263 && LA85_4 <= 264) || LA85_4 == 274 || LA85_4 == 277) ) { s = 38; }

                       	else if ( (LA85_4 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA85_19 = input.LA(1);

                       	 
                       	int index85_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_19 == EOF || LA85_19 == UP || LA85_19 == PARAMS || LA85_19 == ATTRIBUTE || LA85_19 == OPEN_BRACKET || LA85_19 == OPEN_BRACE || LA85_19 == LPAREN || LA85_19 == ASSIGN || LA85_19 == STAR || LA85_19 == COMMA || LA85_19 == TYPE_PARAM_CONSTRAINT || LA85_19 == JAVAWRAPPER || LA85_19 == IDENTIFIER || (LA85_19 >= DOT && LA85_19 <= PTR) || (LA85_19 >= ELIF && LA85_19 <= SEMI) || LA85_19 == 195 || LA85_19 == 208 || (LA85_19 >= 220 && LA85_19 <= 221) || (LA85_19 >= 224 && LA85_19 <= 239) || (LA85_19 >= 241 && LA85_19 <= 244) || (LA85_19 >= 247 && LA85_19 <= 250) || LA85_19 == 256 || (LA85_19 >= 263 && LA85_19 <= 264) || LA85_19 == 274 || LA85_19 == 277) ) { s = 38; }

                       	else if ( (LA85_19 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA85_26 = input.LA(1);

                       	 
                       	int index85_26 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_26 == EOF || LA85_26 == UP || LA85_26 == PARAMS || LA85_26 == ATTRIBUTE || LA85_26 == OPEN_BRACKET || LA85_26 == OPEN_BRACE || LA85_26 == LPAREN || LA85_26 == ASSIGN || LA85_26 == STAR || LA85_26 == COMMA || LA85_26 == TYPE_PARAM_CONSTRAINT || LA85_26 == JAVAWRAPPER || LA85_26 == IDENTIFIER || (LA85_26 >= DOT && LA85_26 <= PTR) || (LA85_26 >= ELIF && LA85_26 <= SEMI) || LA85_26 == 195 || LA85_26 == 208 || (LA85_26 >= 220 && LA85_26 <= 221) || (LA85_26 >= 224 && LA85_26 <= 239) || (LA85_26 >= 241 && LA85_26 <= 244) || (LA85_26 >= 247 && LA85_26 <= 250) || LA85_26 == 256 || (LA85_26 >= 263 && LA85_26 <= 264) || LA85_26 == 274 || LA85_26 == 277) ) { s = 38; }

                       	else if ( (LA85_26 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_26);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA85_9 = input.LA(1);

                       	 
                       	int index85_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_9 == EOF || LA85_9 == UP || LA85_9 == PARAMS || LA85_9 == ATTRIBUTE || LA85_9 == OPEN_BRACKET || LA85_9 == OPEN_BRACE || LA85_9 == LPAREN || LA85_9 == ASSIGN || LA85_9 == STAR || LA85_9 == COMMA || LA85_9 == TYPE_PARAM_CONSTRAINT || LA85_9 == JAVAWRAPPER || LA85_9 == IDENTIFIER || (LA85_9 >= DOT && LA85_9 <= PTR) || (LA85_9 >= ELIF && LA85_9 <= SEMI) || LA85_9 == 195 || LA85_9 == 208 || (LA85_9 >= 220 && LA85_9 <= 221) || (LA85_9 >= 224 && LA85_9 <= 239) || (LA85_9 >= 241 && LA85_9 <= 244) || (LA85_9 >= 247 && LA85_9 <= 250) || LA85_9 == 256 || (LA85_9 >= 263 && LA85_9 <= 264) || LA85_9 == 274 || LA85_9 == 277) ) { s = 38; }

                       	else if ( (LA85_9 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA85_25 = input.LA(1);

                       	 
                       	int index85_25 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_25 == EOF || LA85_25 == UP || LA85_25 == PARAMS || LA85_25 == ATTRIBUTE || LA85_25 == OPEN_BRACKET || LA85_25 == OPEN_BRACE || LA85_25 == LPAREN || LA85_25 == ASSIGN || LA85_25 == STAR || LA85_25 == COMMA || LA85_25 == TYPE_PARAM_CONSTRAINT || LA85_25 == JAVAWRAPPER || LA85_25 == IDENTIFIER || (LA85_25 >= DOT && LA85_25 <= PTR) || (LA85_25 >= ELIF && LA85_25 <= SEMI) || LA85_25 == 195 || LA85_25 == 208 || (LA85_25 >= 220 && LA85_25 <= 221) || (LA85_25 >= 224 && LA85_25 <= 239) || (LA85_25 >= 241 && LA85_25 <= 244) || (LA85_25 >= 247 && LA85_25 <= 250) || LA85_25 == 256 || (LA85_25 >= 263 && LA85_25 <= 264) || LA85_25 == 274 || LA85_25 == 277) ) { s = 38; }

                       	else if ( (LA85_25 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_25);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA85_10 = input.LA(1);

                       	 
                       	int index85_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_10 == EOF || LA85_10 == UP || LA85_10 == PARAMS || LA85_10 == ATTRIBUTE || LA85_10 == OPEN_BRACKET || LA85_10 == OPEN_BRACE || LA85_10 == LPAREN || LA85_10 == ASSIGN || LA85_10 == STAR || LA85_10 == COMMA || LA85_10 == TYPE_PARAM_CONSTRAINT || LA85_10 == JAVAWRAPPER || LA85_10 == IDENTIFIER || (LA85_10 >= DOT && LA85_10 <= PTR) || (LA85_10 >= ELIF && LA85_10 <= SEMI) || LA85_10 == 195 || LA85_10 == 208 || (LA85_10 >= 220 && LA85_10 <= 221) || (LA85_10 >= 224 && LA85_10 <= 239) || (LA85_10 >= 241 && LA85_10 <= 244) || (LA85_10 >= 247 && LA85_10 <= 250) || LA85_10 == 256 || (LA85_10 >= 263 && LA85_10 <= 264) || LA85_10 == 274 || LA85_10 == 277) ) { s = 38; }

                       	else if ( (LA85_10 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA85_1 = input.LA(1);

                       	 
                       	int index85_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_1 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_1 == EOF || LA85_1 == UP || LA85_1 == PARAMS || LA85_1 == ATTRIBUTE || LA85_1 == OPEN_BRACKET || LA85_1 == OPEN_BRACE || LA85_1 == LPAREN || LA85_1 == ASSIGN || LA85_1 == STAR || LA85_1 == COMMA || LA85_1 == TYPE_PARAM_CONSTRAINT || LA85_1 == JAVAWRAPPER || LA85_1 == IDENTIFIER || (LA85_1 >= DOT && LA85_1 <= PTR) || (LA85_1 >= ELIF && LA85_1 <= SEMI) || LA85_1 == 195 || LA85_1 == 208 || (LA85_1 >= 220 && LA85_1 <= 221) || (LA85_1 >= 224 && LA85_1 <= 239) || (LA85_1 >= 241 && LA85_1 <= 244) || (LA85_1 >= 247 && LA85_1 <= 250) || LA85_1 == 256 || (LA85_1 >= 263 && LA85_1 <= 264) || LA85_1 == 274 || LA85_1 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA85_7 = input.LA(1);

                       	 
                       	int index85_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_7 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_7 == EOF || LA85_7 == UP || LA85_7 == PARAMS || LA85_7 == ATTRIBUTE || LA85_7 == OPEN_BRACKET || LA85_7 == OPEN_BRACE || LA85_7 == LPAREN || LA85_7 == ASSIGN || LA85_7 == STAR || LA85_7 == COMMA || LA85_7 == TYPE_PARAM_CONSTRAINT || LA85_7 == JAVAWRAPPER || LA85_7 == IDENTIFIER || (LA85_7 >= DOT && LA85_7 <= PTR) || (LA85_7 >= ELIF && LA85_7 <= SEMI) || LA85_7 == 195 || LA85_7 == 208 || (LA85_7 >= 220 && LA85_7 <= 221) || (LA85_7 >= 224 && LA85_7 <= 239) || (LA85_7 >= 241 && LA85_7 <= 244) || (LA85_7 >= 247 && LA85_7 <= 250) || LA85_7 == 256 || (LA85_7 >= 263 && LA85_7 <= 264) || LA85_7 == 274 || LA85_7 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA85_24 = input.LA(1);

                       	 
                       	int index85_24 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_24 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_24 == EOF || LA85_24 == UP || LA85_24 == PARAMS || LA85_24 == ATTRIBUTE || LA85_24 == OPEN_BRACKET || LA85_24 == OPEN_BRACE || LA85_24 == LPAREN || LA85_24 == ASSIGN || LA85_24 == STAR || LA85_24 == COMMA || LA85_24 == TYPE_PARAM_CONSTRAINT || LA85_24 == JAVAWRAPPER || LA85_24 == IDENTIFIER || (LA85_24 >= DOT && LA85_24 <= PTR) || (LA85_24 >= ELIF && LA85_24 <= SEMI) || LA85_24 == 195 || LA85_24 == 208 || (LA85_24 >= 220 && LA85_24 <= 221) || (LA85_24 >= 224 && LA85_24 <= 239) || (LA85_24 >= 241 && LA85_24 <= 244) || (LA85_24 >= 247 && LA85_24 <= 250) || LA85_24 == 256 || (LA85_24 >= 263 && LA85_24 <= 264) || LA85_24 == 274 || LA85_24 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_24);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA85_8 = input.LA(1);

                       	 
                       	int index85_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_8 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_8 == EOF || LA85_8 == UP || LA85_8 == PARAMS || LA85_8 == ATTRIBUTE || LA85_8 == OPEN_BRACKET || LA85_8 == OPEN_BRACE || LA85_8 == LPAREN || LA85_8 == ASSIGN || LA85_8 == STAR || LA85_8 == COMMA || LA85_8 == TYPE_PARAM_CONSTRAINT || LA85_8 == JAVAWRAPPER || LA85_8 == IDENTIFIER || (LA85_8 >= DOT && LA85_8 <= PTR) || (LA85_8 >= ELIF && LA85_8 <= SEMI) || LA85_8 == 195 || LA85_8 == 208 || (LA85_8 >= 220 && LA85_8 <= 221) || (LA85_8 >= 224 && LA85_8 <= 239) || (LA85_8 >= 241 && LA85_8 <= 244) || (LA85_8 >= 247 && LA85_8 <= 250) || LA85_8 == 256 || (LA85_8 >= 263 && LA85_8 <= 264) || LA85_8 == 274 || LA85_8 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA85_23 = input.LA(1);

                       	 
                       	int index85_23 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_23 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_23 == EOF || LA85_23 == UP || LA85_23 == PARAMS || LA85_23 == ATTRIBUTE || LA85_23 == OPEN_BRACKET || LA85_23 == OPEN_BRACE || LA85_23 == LPAREN || LA85_23 == ASSIGN || LA85_23 == STAR || LA85_23 == COMMA || LA85_23 == TYPE_PARAM_CONSTRAINT || LA85_23 == JAVAWRAPPER || LA85_23 == IDENTIFIER || (LA85_23 >= DOT && LA85_23 <= PTR) || (LA85_23 >= ELIF && LA85_23 <= SEMI) || LA85_23 == 195 || LA85_23 == 208 || (LA85_23 >= 220 && LA85_23 <= 221) || (LA85_23 >= 224 && LA85_23 <= 239) || (LA85_23 >= 241 && LA85_23 <= 244) || (LA85_23 >= 247 && LA85_23 <= 250) || LA85_23 == 256 || (LA85_23 >= 263 && LA85_23 <= 264) || LA85_23 == 274 || LA85_23 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_23);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA85_30 = input.LA(1);

                       	 
                       	int index85_30 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_30 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_30 == EOF || LA85_30 == UP || LA85_30 == PARAMS || LA85_30 == ATTRIBUTE || LA85_30 == OPEN_BRACKET || LA85_30 == OPEN_BRACE || LA85_30 == LPAREN || LA85_30 == ASSIGN || LA85_30 == STAR || LA85_30 == COMMA || LA85_30 == TYPE_PARAM_CONSTRAINT || LA85_30 == JAVAWRAPPER || LA85_30 == IDENTIFIER || (LA85_30 >= DOT && LA85_30 <= PTR) || (LA85_30 >= ELIF && LA85_30 <= SEMI) || LA85_30 == 195 || LA85_30 == 208 || (LA85_30 >= 220 && LA85_30 <= 221) || (LA85_30 >= 224 && LA85_30 <= 239) || (LA85_30 >= 241 && LA85_30 <= 244) || (LA85_30 >= 247 && LA85_30 <= 250) || LA85_30 == 256 || (LA85_30 >= 263 && LA85_30 <= 264) || LA85_30 == 274 || LA85_30 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_30);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA85_13 = input.LA(1);

                       	 
                       	int index85_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_13 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_13 == EOF || LA85_13 == UP || LA85_13 == PARAMS || LA85_13 == ATTRIBUTE || LA85_13 == OPEN_BRACKET || LA85_13 == OPEN_BRACE || LA85_13 == LPAREN || LA85_13 == ASSIGN || LA85_13 == STAR || LA85_13 == COMMA || LA85_13 == TYPE_PARAM_CONSTRAINT || LA85_13 == JAVAWRAPPER || LA85_13 == IDENTIFIER || (LA85_13 >= DOT && LA85_13 <= PTR) || (LA85_13 >= ELIF && LA85_13 <= SEMI) || LA85_13 == 195 || LA85_13 == 208 || (LA85_13 >= 220 && LA85_13 <= 221) || (LA85_13 >= 224 && LA85_13 <= 239) || (LA85_13 >= 241 && LA85_13 <= 244) || (LA85_13 >= 247 && LA85_13 <= 250) || LA85_13 == 256 || (LA85_13 >= 263 && LA85_13 <= 264) || LA85_13 == 274 || LA85_13 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA85_29 = input.LA(1);

                       	 
                       	int index85_29 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_29 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_29 == EOF || LA85_29 == UP || LA85_29 == PARAMS || LA85_29 == ATTRIBUTE || LA85_29 == OPEN_BRACKET || LA85_29 == OPEN_BRACE || LA85_29 == LPAREN || LA85_29 == ASSIGN || LA85_29 == STAR || LA85_29 == COMMA || LA85_29 == TYPE_PARAM_CONSTRAINT || LA85_29 == JAVAWRAPPER || LA85_29 == IDENTIFIER || (LA85_29 >= DOT && LA85_29 <= PTR) || (LA85_29 >= ELIF && LA85_29 <= SEMI) || LA85_29 == 195 || LA85_29 == 208 || (LA85_29 >= 220 && LA85_29 <= 221) || (LA85_29 >= 224 && LA85_29 <= 239) || (LA85_29 >= 241 && LA85_29 <= 244) || (LA85_29 >= 247 && LA85_29 <= 250) || LA85_29 == 256 || (LA85_29 >= 263 && LA85_29 <= 264) || LA85_29 == 274 || LA85_29 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_29);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA85_14 = input.LA(1);

                       	 
                       	int index85_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_14 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_14 == EOF || LA85_14 == UP || LA85_14 == PARAMS || LA85_14 == ATTRIBUTE || LA85_14 == OPEN_BRACKET || LA85_14 == OPEN_BRACE || LA85_14 == LPAREN || LA85_14 == ASSIGN || LA85_14 == STAR || LA85_14 == COMMA || LA85_14 == TYPE_PARAM_CONSTRAINT || LA85_14 == JAVAWRAPPER || LA85_14 == IDENTIFIER || (LA85_14 >= DOT && LA85_14 <= PTR) || (LA85_14 >= ELIF && LA85_14 <= SEMI) || LA85_14 == 195 || LA85_14 == 208 || (LA85_14 >= 220 && LA85_14 <= 221) || (LA85_14 >= 224 && LA85_14 <= 239) || (LA85_14 >= 241 && LA85_14 <= 244) || (LA85_14 >= 247 && LA85_14 <= 250) || LA85_14 == 256 || (LA85_14 >= 263 && LA85_14 <= 264) || LA85_14 == 274 || LA85_14 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA85_28 = input.LA(1);

                       	 
                       	int index85_28 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_28 == EOF || LA85_28 == UP || LA85_28 == PARAMS || LA85_28 == ATTRIBUTE || LA85_28 == OPEN_BRACKET || LA85_28 == OPEN_BRACE || LA85_28 == LPAREN || LA85_28 == ASSIGN || LA85_28 == STAR || LA85_28 == COMMA || LA85_28 == TYPE_PARAM_CONSTRAINT || LA85_28 == JAVAWRAPPER || LA85_28 == IDENTIFIER || (LA85_28 >= DOT && LA85_28 <= PTR) || (LA85_28 >= ELIF && LA85_28 <= SEMI) || LA85_28 == 195 || LA85_28 == 208 || (LA85_28 >= 220 && LA85_28 <= 221) || (LA85_28 >= 224 && LA85_28 <= 239) || (LA85_28 >= 241 && LA85_28 <= 244) || (LA85_28 >= 247 && LA85_28 <= 250) || LA85_28 == 256 || (LA85_28 >= 263 && LA85_28 <= 264) || LA85_28 == 274 || LA85_28 == 277) ) { s = 38; }

                       	else if ( (LA85_28 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_28);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 22 : 
                       	int LA85_11 = input.LA(1);

                       	 
                       	int index85_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_11 == EOF || LA85_11 == UP || LA85_11 == PARAMS || LA85_11 == ATTRIBUTE || LA85_11 == OPEN_BRACKET || LA85_11 == OPEN_BRACE || LA85_11 == LPAREN || LA85_11 == ASSIGN || LA85_11 == STAR || LA85_11 == COMMA || LA85_11 == TYPE_PARAM_CONSTRAINT || LA85_11 == JAVAWRAPPER || LA85_11 == IDENTIFIER || (LA85_11 >= DOT && LA85_11 <= PTR) || (LA85_11 >= ELIF && LA85_11 <= SEMI) || LA85_11 == 195 || LA85_11 == 208 || (LA85_11 >= 220 && LA85_11 <= 221) || (LA85_11 >= 224 && LA85_11 <= 239) || (LA85_11 >= 241 && LA85_11 <= 244) || (LA85_11 >= 247 && LA85_11 <= 250) || LA85_11 == 256 || (LA85_11 >= 263 && LA85_11 <= 264) || LA85_11 == 274 || LA85_11 == 277) ) { s = 38; }

                       	else if ( (LA85_11 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 23 : 
                       	int LA85_27 = input.LA(1);

                       	 
                       	int index85_27 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_27 == EOF || LA85_27 == UP || LA85_27 == PARAMS || LA85_27 == ATTRIBUTE || LA85_27 == OPEN_BRACKET || LA85_27 == OPEN_BRACE || LA85_27 == LPAREN || LA85_27 == ASSIGN || LA85_27 == STAR || LA85_27 == COMMA || LA85_27 == TYPE_PARAM_CONSTRAINT || LA85_27 == JAVAWRAPPER || LA85_27 == IDENTIFIER || (LA85_27 >= DOT && LA85_27 <= PTR) || (LA85_27 >= ELIF && LA85_27 <= SEMI) || LA85_27 == 195 || LA85_27 == 208 || (LA85_27 >= 220 && LA85_27 <= 221) || (LA85_27 >= 224 && LA85_27 <= 239) || (LA85_27 >= 241 && LA85_27 <= 244) || (LA85_27 >= 247 && LA85_27 <= 250) || LA85_27 == 256 || (LA85_27 >= 263 && LA85_27 <= 264) || LA85_27 == 274 || LA85_27 == 277) ) { s = 38; }

                       	else if ( (LA85_27 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_27);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 24 : 
                       	int LA85_12 = input.LA(1);

                       	 
                       	int index85_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_12 == EOF || LA85_12 == UP || LA85_12 == PARAMS || LA85_12 == ATTRIBUTE || LA85_12 == OPEN_BRACKET || LA85_12 == OPEN_BRACE || LA85_12 == LPAREN || LA85_12 == ASSIGN || LA85_12 == STAR || LA85_12 == COMMA || LA85_12 == TYPE_PARAM_CONSTRAINT || LA85_12 == JAVAWRAPPER || LA85_12 == IDENTIFIER || (LA85_12 >= DOT && LA85_12 <= PTR) || (LA85_12 >= ELIF && LA85_12 <= SEMI) || LA85_12 == 195 || LA85_12 == 208 || (LA85_12 >= 220 && LA85_12 <= 221) || (LA85_12 >= 224 && LA85_12 <= 239) || (LA85_12 >= 241 && LA85_12 <= 244) || (LA85_12 >= 247 && LA85_12 <= 250) || LA85_12 == 256 || (LA85_12 >= 263 && LA85_12 <= 264) || LA85_12 == 274 || LA85_12 == 277) ) { s = 38; }

                       	else if ( (LA85_12 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 25 : 
                       	int LA85_34 = input.LA(1);

                       	 
                       	int index85_34 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_34 == EOF || LA85_34 == UP || LA85_34 == PARAMS || LA85_34 == ATTRIBUTE || LA85_34 == OPEN_BRACKET || LA85_34 == OPEN_BRACE || LA85_34 == LPAREN || LA85_34 == ASSIGN || LA85_34 == STAR || LA85_34 == COMMA || LA85_34 == TYPE_PARAM_CONSTRAINT || LA85_34 == JAVAWRAPPER || LA85_34 == IDENTIFIER || (LA85_34 >= DOT && LA85_34 <= PTR) || (LA85_34 >= ELIF && LA85_34 <= SEMI) || LA85_34 == 195 || LA85_34 == 208 || (LA85_34 >= 220 && LA85_34 <= 221) || (LA85_34 >= 224 && LA85_34 <= 239) || (LA85_34 >= 241 && LA85_34 <= 244) || (LA85_34 >= 247 && LA85_34 <= 250) || LA85_34 == 256 || (LA85_34 >= 263 && LA85_34 <= 264) || LA85_34 == 274 || LA85_34 == 277) ) { s = 38; }

                       	else if ( (LA85_34 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_34);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 26 : 
                       	int LA85_17 = input.LA(1);

                       	 
                       	int index85_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_17 == EOF || LA85_17 == UP || LA85_17 == PARAMS || LA85_17 == ATTRIBUTE || LA85_17 == OPEN_BRACKET || LA85_17 == OPEN_BRACE || LA85_17 == LPAREN || LA85_17 == ASSIGN || LA85_17 == STAR || LA85_17 == COMMA || LA85_17 == TYPE_PARAM_CONSTRAINT || LA85_17 == JAVAWRAPPER || LA85_17 == IDENTIFIER || (LA85_17 >= DOT && LA85_17 <= PTR) || (LA85_17 >= ELIF && LA85_17 <= SEMI) || LA85_17 == 195 || LA85_17 == 208 || (LA85_17 >= 220 && LA85_17 <= 221) || (LA85_17 >= 224 && LA85_17 <= 239) || (LA85_17 >= 241 && LA85_17 <= 244) || (LA85_17 >= 247 && LA85_17 <= 250) || LA85_17 == 256 || (LA85_17 >= 263 && LA85_17 <= 264) || LA85_17 == 274 || LA85_17 == 277) ) { s = 38; }

                       	else if ( (LA85_17 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 27 : 
                       	int LA85_33 = input.LA(1);

                       	 
                       	int index85_33 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_33 == EOF || LA85_33 == UP || LA85_33 == PARAMS || LA85_33 == ATTRIBUTE || LA85_33 == OPEN_BRACKET || LA85_33 == OPEN_BRACE || LA85_33 == LPAREN || LA85_33 == ASSIGN || LA85_33 == STAR || LA85_33 == COMMA || LA85_33 == TYPE_PARAM_CONSTRAINT || LA85_33 == JAVAWRAPPER || LA85_33 == IDENTIFIER || (LA85_33 >= DOT && LA85_33 <= PTR) || (LA85_33 >= ELIF && LA85_33 <= SEMI) || LA85_33 == 195 || LA85_33 == 208 || (LA85_33 >= 220 && LA85_33 <= 221) || (LA85_33 >= 224 && LA85_33 <= 239) || (LA85_33 >= 241 && LA85_33 <= 244) || (LA85_33 >= 247 && LA85_33 <= 250) || LA85_33 == 256 || (LA85_33 >= 263 && LA85_33 <= 264) || LA85_33 == 274 || LA85_33 == 277) ) { s = 38; }

                       	else if ( (LA85_33 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_33);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 28 : 
                       	int LA85_18 = input.LA(1);

                       	 
                       	int index85_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_18 == EOF || LA85_18 == UP || LA85_18 == PARAMS || LA85_18 == ATTRIBUTE || LA85_18 == OPEN_BRACKET || LA85_18 == OPEN_BRACE || LA85_18 == LPAREN || LA85_18 == ASSIGN || LA85_18 == STAR || LA85_18 == COMMA || LA85_18 == TYPE_PARAM_CONSTRAINT || LA85_18 == JAVAWRAPPER || LA85_18 == IDENTIFIER || (LA85_18 >= DOT && LA85_18 <= PTR) || (LA85_18 >= ELIF && LA85_18 <= SEMI) || LA85_18 == 195 || LA85_18 == 208 || (LA85_18 >= 220 && LA85_18 <= 221) || (LA85_18 >= 224 && LA85_18 <= 239) || (LA85_18 >= 241 && LA85_18 <= 244) || (LA85_18 >= 247 && LA85_18 <= 250) || LA85_18 == 256 || (LA85_18 >= 263 && LA85_18 <= 264) || LA85_18 == 274 || LA85_18 == 277) ) { s = 38; }

                       	else if ( (LA85_18 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 29 : 
                       	int LA85_2 = input.LA(1);

                       	 
                       	int index85_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_2 == EOF || LA85_2 == UP || LA85_2 == PARAMS || LA85_2 == ATTRIBUTE || LA85_2 == OPEN_BRACKET || LA85_2 == OPEN_BRACE || LA85_2 == LPAREN || LA85_2 == ASSIGN || LA85_2 == STAR || LA85_2 == COMMA || LA85_2 == TYPE_PARAM_CONSTRAINT || LA85_2 == JAVAWRAPPER || LA85_2 == IDENTIFIER || (LA85_2 >= DOT && LA85_2 <= PTR) || (LA85_2 >= ELIF && LA85_2 <= SEMI) || LA85_2 == 195 || LA85_2 == 208 || (LA85_2 >= 220 && LA85_2 <= 221) || (LA85_2 >= 224 && LA85_2 <= 239) || (LA85_2 >= 241 && LA85_2 <= 244) || (LA85_2 >= 247 && LA85_2 <= 250) || LA85_2 == 256 || (LA85_2 >= 263 && LA85_2 <= 264) || LA85_2 == 274 || LA85_2 == 277) ) { s = 38; }

                       	else if ( (LA85_2 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 30 : 
                       	int LA85_36 = input.LA(1);

                       	 
                       	int index85_36 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_36 == EOF || LA85_36 == UP || LA85_36 == PARAMS || LA85_36 == ATTRIBUTE || LA85_36 == OPEN_BRACKET || LA85_36 == OPEN_BRACE || LA85_36 == LPAREN || LA85_36 == ASSIGN || LA85_36 == STAR || LA85_36 == COMMA || LA85_36 == TYPE_PARAM_CONSTRAINT || LA85_36 == JAVAWRAPPER || LA85_36 == IDENTIFIER || (LA85_36 >= DOT && LA85_36 <= PTR) || (LA85_36 >= ELIF && LA85_36 <= SEMI) || LA85_36 == 195 || LA85_36 == 208 || (LA85_36 >= 220 && LA85_36 <= 221) || (LA85_36 >= 224 && LA85_36 <= 239) || (LA85_36 >= 241 && LA85_36 <= 244) || (LA85_36 >= 247 && LA85_36 <= 250) || LA85_36 == 256 || (LA85_36 >= 263 && LA85_36 <= 264) || LA85_36 == 274 || LA85_36 == 277) ) { s = 38; }

                       	else if ( (LA85_36 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_36);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 31 : 
                       	int LA85_32 = input.LA(1);

                       	 
                       	int index85_32 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_32 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_32 == EOF || LA85_32 == UP || LA85_32 == PARAMS || LA85_32 == ATTRIBUTE || LA85_32 == OPEN_BRACKET || LA85_32 == OPEN_BRACE || LA85_32 == LPAREN || LA85_32 == ASSIGN || LA85_32 == STAR || LA85_32 == COMMA || LA85_32 == TYPE_PARAM_CONSTRAINT || LA85_32 == JAVAWRAPPER || LA85_32 == IDENTIFIER || (LA85_32 >= DOT && LA85_32 <= PTR) || (LA85_32 >= ELIF && LA85_32 <= SEMI) || LA85_32 == 195 || LA85_32 == 208 || (LA85_32 >= 220 && LA85_32 <= 221) || (LA85_32 >= 224 && LA85_32 <= 239) || (LA85_32 >= 241 && LA85_32 <= 244) || (LA85_32 >= 247 && LA85_32 <= 250) || LA85_32 == 256 || (LA85_32 >= 263 && LA85_32 <= 264) || LA85_32 == 274 || LA85_32 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_32);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 32 : 
                       	int LA85_15 = input.LA(1);

                       	 
                       	int index85_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_15 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_15 == EOF || LA85_15 == UP || LA85_15 == PARAMS || LA85_15 == ATTRIBUTE || LA85_15 == OPEN_BRACKET || LA85_15 == OPEN_BRACE || LA85_15 == LPAREN || LA85_15 == ASSIGN || LA85_15 == STAR || LA85_15 == COMMA || LA85_15 == TYPE_PARAM_CONSTRAINT || LA85_15 == JAVAWRAPPER || LA85_15 == IDENTIFIER || (LA85_15 >= DOT && LA85_15 <= PTR) || (LA85_15 >= ELIF && LA85_15 <= SEMI) || LA85_15 == 195 || LA85_15 == 208 || (LA85_15 >= 220 && LA85_15 <= 221) || (LA85_15 >= 224 && LA85_15 <= 239) || (LA85_15 >= 241 && LA85_15 <= 244) || (LA85_15 >= 247 && LA85_15 <= 250) || LA85_15 == 256 || (LA85_15 >= 263 && LA85_15 <= 264) || LA85_15 == 274 || LA85_15 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 33 : 
                       	int LA85_35 = input.LA(1);

                       	 
                       	int index85_35 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_35 == EOF || LA85_35 == UP || LA85_35 == PARAMS || LA85_35 == ATTRIBUTE || LA85_35 == OPEN_BRACKET || LA85_35 == OPEN_BRACE || LA85_35 == LPAREN || LA85_35 == ASSIGN || LA85_35 == STAR || LA85_35 == COMMA || LA85_35 == TYPE_PARAM_CONSTRAINT || LA85_35 == JAVAWRAPPER || LA85_35 == IDENTIFIER || (LA85_35 >= DOT && LA85_35 <= PTR) || (LA85_35 >= ELIF && LA85_35 <= SEMI) || LA85_35 == 195 || LA85_35 == 208 || (LA85_35 >= 220 && LA85_35 <= 221) || (LA85_35 >= 224 && LA85_35 <= 239) || (LA85_35 >= 241 && LA85_35 <= 244) || (LA85_35 >= 247 && LA85_35 <= 250) || LA85_35 == 256 || (LA85_35 >= 263 && LA85_35 <= 264) || LA85_35 == 274 || LA85_35 == 277) ) { s = 38; }

                       	else if ( (LA85_35 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	 
                       	input.Seek(index85_35);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 34 : 
                       	int LA85_31 = input.LA(1);

                       	 
                       	int index85_31 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_31 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_31 == EOF || LA85_31 == UP || LA85_31 == PARAMS || LA85_31 == ATTRIBUTE || LA85_31 == OPEN_BRACKET || LA85_31 == OPEN_BRACE || LA85_31 == LPAREN || LA85_31 == ASSIGN || LA85_31 == STAR || LA85_31 == COMMA || LA85_31 == TYPE_PARAM_CONSTRAINT || LA85_31 == JAVAWRAPPER || LA85_31 == IDENTIFIER || (LA85_31 >= DOT && LA85_31 <= PTR) || (LA85_31 >= ELIF && LA85_31 <= SEMI) || LA85_31 == 195 || LA85_31 == 208 || (LA85_31 >= 220 && LA85_31 <= 221) || (LA85_31 >= 224 && LA85_31 <= 239) || (LA85_31 >= 241 && LA85_31 <= 244) || (LA85_31 >= 247 && LA85_31 <= 250) || LA85_31 == 256 || (LA85_31 >= 263 && LA85_31 <= 264) || LA85_31 == 274 || LA85_31 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_31);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 35 : 
                       	int LA85_16 = input.LA(1);

                       	 
                       	int index85_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA85_16 == LTHAN) && (synpred5_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA85_16 == EOF || LA85_16 == UP || LA85_16 == PARAMS || LA85_16 == ATTRIBUTE || LA85_16 == OPEN_BRACKET || LA85_16 == OPEN_BRACE || LA85_16 == LPAREN || LA85_16 == ASSIGN || LA85_16 == STAR || LA85_16 == COMMA || LA85_16 == TYPE_PARAM_CONSTRAINT || LA85_16 == JAVAWRAPPER || LA85_16 == IDENTIFIER || (LA85_16 >= DOT && LA85_16 <= PTR) || (LA85_16 >= ELIF && LA85_16 <= SEMI) || LA85_16 == 195 || LA85_16 == 208 || (LA85_16 >= 220 && LA85_16 <= 221) || (LA85_16 >= 224 && LA85_16 <= 239) || (LA85_16 >= 241 && LA85_16 <= 244) || (LA85_16 >= 247 && LA85_16 <= 250) || LA85_16 == 256 || (LA85_16 >= 263 && LA85_16 <= 264) || LA85_16 == 274 || LA85_16 == 277) ) { s = 38; }

                       	 
                       	input.Seek(index85_16);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae85 =
                new NoViableAltException(dfa.Description, 85, _s, input);
            dfa.Error(nvae85);
            throw nvae85;
        }
        const string DFA88_eotS =
            "\x29\uffff";
        const string DFA88_eofS =
            "\x29\uffff";
        const string DFA88_minS =
            "\x01\x41\x01\uffff\x24\x48\x03\uffff";
        const string DFA88_maxS =
            "\x01\u0115\x01\uffff\x24\u0115\x03\uffff";
        const string DFA88_acceptS =
            "\x01\uffff\x01\x01\x24\uffff\x01\x04\x01\x03\x01\x02";
        const string DFA88_specialS =
            "\x02\uffff\x01\x1d\x01\x02\x01\x1c\x01\x19\x01\x23\x01\x20\x01"+
            "\x0e\x01\x0b\x01\x14\x01\x11\x01\x1b\x01\x18\x01\x22\x01\x1f"+
            "\x01\x10\x01\x0d\x01\x16\x01\x13\x01\x08\x01\x06\x01\x0a\x01"+
            "\x09\x01\x01\x01\x00\x01\x04\x01\x03\x01\x17\x01\x1a\x01\x1e"+
            "\x01\x21\x01\x0c\x01\x0f\x01\x12\x01\x15\x01\x05\x01\x07\x03"+
            "\uffff}>";
        static readonly string[] DFA88_transitionS = {
                "\x01\x01\x26\uffff\x01\x26\x19\uffff\x08\x01\x01\x02\x09"+
                "\x26\x04\uffff\x01\x21\x01\x22\x01\x23\x01\x24\x27\uffff"+
                "\x01\x04\x19\uffff\x01\x25\x02\uffff\x01\x0e\x01\x0d\x01"+
                "\x0f\x01\x10\x01\x17\x01\x1a\x01\x12\x01\x15\x01\x16\x01"+
                "\x18\x01\x13\x01\x14\x01\x11\x01\x05\x01\x06\x01\x07\x01"+
                "\uffff\x01\x08\x01\x09\x01\x0a\x01\x0b\x02\uffff\x01\x1c"+
                "\x01\x1d\x01\x03\x01\x1b\x04\x01\x01\uffff\x01\x1f\x06\uffff"+
                "\x01\x1e\x01\x20\x09\uffff\x01\x0c\x02\x01\x01\x19",
                "",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "\x01\x27\x03\uffff\x01\x27\x15\uffff\x01\x28\x0c\uffff"+
                "\x01\x27\x1a\uffff\x01\x27\x0d\uffff\x04\x27\x27\uffff\x01"+
                "\x27\x0c\uffff\x01\x27\x0c\uffff\x01\x27\x02\uffff\x10\x27"+
                "\x01\uffff\x04\x27\x02\uffff\x04\x27\x05\uffff\x01\x27\x06"+
                "\uffff\x02\x27\x09\uffff\x01\x27\x02\uffff\x01\x27",
                "",
                "",
                ""
        };

        static readonly short[] DFA88_eot = DFA.UnpackEncodedString(DFA88_eotS);
        static readonly short[] DFA88_eof = DFA.UnpackEncodedString(DFA88_eofS);
        static readonly char[] DFA88_min = DFA.UnpackEncodedStringToUnsignedChars(DFA88_minS);
        static readonly char[] DFA88_max = DFA.UnpackEncodedStringToUnsignedChars(DFA88_maxS);
        static readonly short[] DFA88_accept = DFA.UnpackEncodedString(DFA88_acceptS);
        static readonly short[] DFA88_special = DFA.UnpackEncodedString(DFA88_specialS);
        static readonly short[][] DFA88_transition = DFA.UnpackEncodedStringArray(DFA88_transitionS);

        protected class DFA88 : DFA
        {
            public DFA88(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 88;
                this.eot = DFA88_eot;
                this.eof = DFA88_eof;
                this.min = DFA88_min;
                this.max = DFA88_max;
                this.accept = DFA88_accept;
                this.special = DFA88_special;
                this.transition = DFA88_transition;

            }

            override public string Description
            {
                get { return "954:1: qid_start : ( predefined_type -> { $predefined_type.st } | ( identifier generic_argument_list )=> identifier generic_argument_list -> op(pre= $identifier.st post= $generic_argument_list.st ) | i1= identifier ( '::' i2= identifier )? -> identifier(id= $i1.st id2= $i2.st ) | literal -> { $literal.st });"; }
            }

        }


        protected internal int DFA88_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA88_25 = input.LA(1);

                       	 
                       	int index88_25 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_25 == CLOSE_BRACE || LA88_25 == ASSIGN || LA88_25 == COMMA || LA88_25 == IDENTIFIER || (LA88_25 >= ELIF && LA88_25 <= UNDEF) || LA88_25 == 195 || LA88_25 == 208 || LA88_25 == 221 || (LA88_25 >= 224 && LA88_25 <= 239) || (LA88_25 >= 241 && LA88_25 <= 244) || (LA88_25 >= 247 && LA88_25 <= 250) || LA88_25 == 256 || (LA88_25 >= 263 && LA88_25 <= 264) || LA88_25 == 274 || LA88_25 == 277) ) { s = 39; }

                       	else if ( (LA88_25 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_25);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA88_24 = input.LA(1);

                       	 
                       	int index88_24 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_24 == CLOSE_BRACE || LA88_24 == ASSIGN || LA88_24 == COMMA || LA88_24 == IDENTIFIER || (LA88_24 >= ELIF && LA88_24 <= UNDEF) || LA88_24 == 195 || LA88_24 == 208 || LA88_24 == 221 || (LA88_24 >= 224 && LA88_24 <= 239) || (LA88_24 >= 241 && LA88_24 <= 244) || (LA88_24 >= 247 && LA88_24 <= 250) || LA88_24 == 256 || (LA88_24 >= 263 && LA88_24 <= 264) || LA88_24 == 274 || LA88_24 == 277) ) { s = 39; }

                       	else if ( (LA88_24 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_24);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA88_3 = input.LA(1);

                       	 
                       	int index88_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_3 == CLOSE_BRACE || LA88_3 == ASSIGN || LA88_3 == COMMA || LA88_3 == IDENTIFIER || (LA88_3 >= ELIF && LA88_3 <= UNDEF) || LA88_3 == 195 || LA88_3 == 208 || LA88_3 == 221 || (LA88_3 >= 224 && LA88_3 <= 239) || (LA88_3 >= 241 && LA88_3 <= 244) || (LA88_3 >= 247 && LA88_3 <= 250) || LA88_3 == 256 || (LA88_3 >= 263 && LA88_3 <= 264) || LA88_3 == 274 || LA88_3 == 277) ) { s = 39; }

                       	else if ( (LA88_3 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA88_27 = input.LA(1);

                       	 
                       	int index88_27 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_27 == CLOSE_BRACE || LA88_27 == ASSIGN || LA88_27 == COMMA || LA88_27 == IDENTIFIER || (LA88_27 >= ELIF && LA88_27 <= UNDEF) || LA88_27 == 195 || LA88_27 == 208 || LA88_27 == 221 || (LA88_27 >= 224 && LA88_27 <= 239) || (LA88_27 >= 241 && LA88_27 <= 244) || (LA88_27 >= 247 && LA88_27 <= 250) || LA88_27 == 256 || (LA88_27 >= 263 && LA88_27 <= 264) || LA88_27 == 274 || LA88_27 == 277) ) { s = 39; }

                       	else if ( (LA88_27 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_27);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA88_26 = input.LA(1);

                       	 
                       	int index88_26 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_26 == CLOSE_BRACE || LA88_26 == ASSIGN || LA88_26 == COMMA || LA88_26 == IDENTIFIER || (LA88_26 >= ELIF && LA88_26 <= UNDEF) || LA88_26 == 195 || LA88_26 == 208 || LA88_26 == 221 || (LA88_26 >= 224 && LA88_26 <= 239) || (LA88_26 >= 241 && LA88_26 <= 244) || (LA88_26 >= 247 && LA88_26 <= 250) || LA88_26 == 256 || (LA88_26 >= 263 && LA88_26 <= 264) || LA88_26 == 274 || LA88_26 == 277) ) { s = 39; }

                       	else if ( (LA88_26 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_26);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA88_36 = input.LA(1);

                       	 
                       	int index88_36 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_36 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_36 == CLOSE_BRACE || LA88_36 == ASSIGN || LA88_36 == COMMA || LA88_36 == IDENTIFIER || (LA88_36 >= ELIF && LA88_36 <= UNDEF) || LA88_36 == 195 || LA88_36 == 208 || LA88_36 == 221 || (LA88_36 >= 224 && LA88_36 <= 239) || (LA88_36 >= 241 && LA88_36 <= 244) || (LA88_36 >= 247 && LA88_36 <= 250) || LA88_36 == 256 || (LA88_36 >= 263 && LA88_36 <= 264) || LA88_36 == 274 || LA88_36 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_36);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA88_21 = input.LA(1);

                       	 
                       	int index88_21 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_21 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_21 == CLOSE_BRACE || LA88_21 == ASSIGN || LA88_21 == COMMA || LA88_21 == IDENTIFIER || (LA88_21 >= ELIF && LA88_21 <= UNDEF) || LA88_21 == 195 || LA88_21 == 208 || LA88_21 == 221 || (LA88_21 >= 224 && LA88_21 <= 239) || (LA88_21 >= 241 && LA88_21 <= 244) || (LA88_21 >= 247 && LA88_21 <= 250) || LA88_21 == 256 || (LA88_21 >= 263 && LA88_21 <= 264) || LA88_21 == 274 || LA88_21 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_21);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA88_37 = input.LA(1);

                       	 
                       	int index88_37 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_37 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_37 == CLOSE_BRACE || LA88_37 == ASSIGN || LA88_37 == COMMA || LA88_37 == IDENTIFIER || (LA88_37 >= ELIF && LA88_37 <= UNDEF) || LA88_37 == 195 || LA88_37 == 208 || LA88_37 == 221 || (LA88_37 >= 224 && LA88_37 <= 239) || (LA88_37 >= 241 && LA88_37 <= 244) || (LA88_37 >= 247 && LA88_37 <= 250) || LA88_37 == 256 || (LA88_37 >= 263 && LA88_37 <= 264) || LA88_37 == 274 || LA88_37 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_37);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA88_20 = input.LA(1);

                       	 
                       	int index88_20 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_20 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_20 == CLOSE_BRACE || LA88_20 == ASSIGN || LA88_20 == COMMA || LA88_20 == IDENTIFIER || (LA88_20 >= ELIF && LA88_20 <= UNDEF) || LA88_20 == 195 || LA88_20 == 208 || LA88_20 == 221 || (LA88_20 >= 224 && LA88_20 <= 239) || (LA88_20 >= 241 && LA88_20 <= 244) || (LA88_20 >= 247 && LA88_20 <= 250) || LA88_20 == 256 || (LA88_20 >= 263 && LA88_20 <= 264) || LA88_20 == 274 || LA88_20 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_20);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA88_23 = input.LA(1);

                       	 
                       	int index88_23 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_23 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_23 == CLOSE_BRACE || LA88_23 == ASSIGN || LA88_23 == COMMA || LA88_23 == IDENTIFIER || (LA88_23 >= ELIF && LA88_23 <= UNDEF) || LA88_23 == 195 || LA88_23 == 208 || LA88_23 == 221 || (LA88_23 >= 224 && LA88_23 <= 239) || (LA88_23 >= 241 && LA88_23 <= 244) || (LA88_23 >= 247 && LA88_23 <= 250) || LA88_23 == 256 || (LA88_23 >= 263 && LA88_23 <= 264) || LA88_23 == 274 || LA88_23 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_23);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA88_22 = input.LA(1);

                       	 
                       	int index88_22 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_22 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_22 == CLOSE_BRACE || LA88_22 == ASSIGN || LA88_22 == COMMA || LA88_22 == IDENTIFIER || (LA88_22 >= ELIF && LA88_22 <= UNDEF) || LA88_22 == 195 || LA88_22 == 208 || LA88_22 == 221 || (LA88_22 >= 224 && LA88_22 <= 239) || (LA88_22 >= 241 && LA88_22 <= 244) || (LA88_22 >= 247 && LA88_22 <= 250) || LA88_22 == 256 || (LA88_22 >= 263 && LA88_22 <= 264) || LA88_22 == 274 || LA88_22 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_22);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA88_9 = input.LA(1);

                       	 
                       	int index88_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_9 == CLOSE_BRACE || LA88_9 == ASSIGN || LA88_9 == COMMA || LA88_9 == IDENTIFIER || (LA88_9 >= ELIF && LA88_9 <= UNDEF) || LA88_9 == 195 || LA88_9 == 208 || LA88_9 == 221 || (LA88_9 >= 224 && LA88_9 <= 239) || (LA88_9 >= 241 && LA88_9 <= 244) || (LA88_9 >= 247 && LA88_9 <= 250) || LA88_9 == 256 || (LA88_9 >= 263 && LA88_9 <= 264) || LA88_9 == 274 || LA88_9 == 277) ) { s = 39; }

                       	else if ( (LA88_9 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA88_32 = input.LA(1);

                       	 
                       	int index88_32 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_32 == CLOSE_BRACE || LA88_32 == ASSIGN || LA88_32 == COMMA || LA88_32 == IDENTIFIER || (LA88_32 >= ELIF && LA88_32 <= UNDEF) || LA88_32 == 195 || LA88_32 == 208 || LA88_32 == 221 || (LA88_32 >= 224 && LA88_32 <= 239) || (LA88_32 >= 241 && LA88_32 <= 244) || (LA88_32 >= 247 && LA88_32 <= 250) || LA88_32 == 256 || (LA88_32 >= 263 && LA88_32 <= 264) || LA88_32 == 274 || LA88_32 == 277) ) { s = 39; }

                       	else if ( (LA88_32 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_32);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA88_17 = input.LA(1);

                       	 
                       	int index88_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_17 == CLOSE_BRACE || LA88_17 == ASSIGN || LA88_17 == COMMA || LA88_17 == IDENTIFIER || (LA88_17 >= ELIF && LA88_17 <= UNDEF) || LA88_17 == 195 || LA88_17 == 208 || LA88_17 == 221 || (LA88_17 >= 224 && LA88_17 <= 239) || (LA88_17 >= 241 && LA88_17 <= 244) || (LA88_17 >= 247 && LA88_17 <= 250) || LA88_17 == 256 || (LA88_17 >= 263 && LA88_17 <= 264) || LA88_17 == 274 || LA88_17 == 277) ) { s = 39; }

                       	else if ( (LA88_17 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA88_8 = input.LA(1);

                       	 
                       	int index88_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_8 == CLOSE_BRACE || LA88_8 == ASSIGN || LA88_8 == COMMA || LA88_8 == IDENTIFIER || (LA88_8 >= ELIF && LA88_8 <= UNDEF) || LA88_8 == 195 || LA88_8 == 208 || LA88_8 == 221 || (LA88_8 >= 224 && LA88_8 <= 239) || (LA88_8 >= 241 && LA88_8 <= 244) || (LA88_8 >= 247 && LA88_8 <= 250) || LA88_8 == 256 || (LA88_8 >= 263 && LA88_8 <= 264) || LA88_8 == 274 || LA88_8 == 277) ) { s = 39; }

                       	else if ( (LA88_8 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA88_33 = input.LA(1);

                       	 
                       	int index88_33 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_33 == CLOSE_BRACE || LA88_33 == ASSIGN || LA88_33 == COMMA || LA88_33 == IDENTIFIER || (LA88_33 >= ELIF && LA88_33 <= UNDEF) || LA88_33 == 195 || LA88_33 == 208 || LA88_33 == 221 || (LA88_33 >= 224 && LA88_33 <= 239) || (LA88_33 >= 241 && LA88_33 <= 244) || (LA88_33 >= 247 && LA88_33 <= 250) || LA88_33 == 256 || (LA88_33 >= 263 && LA88_33 <= 264) || LA88_33 == 274 || LA88_33 == 277) ) { s = 39; }

                       	else if ( (LA88_33 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_33);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA88_16 = input.LA(1);

                       	 
                       	int index88_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_16 == CLOSE_BRACE || LA88_16 == ASSIGN || LA88_16 == COMMA || LA88_16 == IDENTIFIER || (LA88_16 >= ELIF && LA88_16 <= UNDEF) || LA88_16 == 195 || LA88_16 == 208 || LA88_16 == 221 || (LA88_16 >= 224 && LA88_16 <= 239) || (LA88_16 >= 241 && LA88_16 <= 244) || (LA88_16 >= 247 && LA88_16 <= 250) || LA88_16 == 256 || (LA88_16 >= 263 && LA88_16 <= 264) || LA88_16 == 274 || LA88_16 == 277) ) { s = 39; }

                       	else if ( (LA88_16 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA88_11 = input.LA(1);

                       	 
                       	int index88_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_11 == CLOSE_BRACE || LA88_11 == ASSIGN || LA88_11 == COMMA || LA88_11 == IDENTIFIER || (LA88_11 >= ELIF && LA88_11 <= UNDEF) || LA88_11 == 195 || LA88_11 == 208 || LA88_11 == 221 || (LA88_11 >= 224 && LA88_11 <= 239) || (LA88_11 >= 241 && LA88_11 <= 244) || (LA88_11 >= 247 && LA88_11 <= 250) || LA88_11 == 256 || (LA88_11 >= 263 && LA88_11 <= 264) || LA88_11 == 274 || LA88_11 == 277) ) { s = 39; }

                       	else if ( (LA88_11 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA88_34 = input.LA(1);

                       	 
                       	int index88_34 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_34 == CLOSE_BRACE || LA88_34 == ASSIGN || LA88_34 == COMMA || LA88_34 == IDENTIFIER || (LA88_34 >= ELIF && LA88_34 <= UNDEF) || LA88_34 == 195 || LA88_34 == 208 || LA88_34 == 221 || (LA88_34 >= 224 && LA88_34 <= 239) || (LA88_34 >= 241 && LA88_34 <= 244) || (LA88_34 >= 247 && LA88_34 <= 250) || LA88_34 == 256 || (LA88_34 >= 263 && LA88_34 <= 264) || LA88_34 == 274 || LA88_34 == 277) ) { s = 39; }

                       	else if ( (LA88_34 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_34);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA88_19 = input.LA(1);

                       	 
                       	int index88_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_19 == CLOSE_BRACE || LA88_19 == ASSIGN || LA88_19 == COMMA || LA88_19 == IDENTIFIER || (LA88_19 >= ELIF && LA88_19 <= UNDEF) || LA88_19 == 195 || LA88_19 == 208 || LA88_19 == 221 || (LA88_19 >= 224 && LA88_19 <= 239) || (LA88_19 >= 241 && LA88_19 <= 244) || (LA88_19 >= 247 && LA88_19 <= 250) || LA88_19 == 256 || (LA88_19 >= 263 && LA88_19 <= 264) || LA88_19 == 274 || LA88_19 == 277) ) { s = 39; }

                       	else if ( (LA88_19 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA88_10 = input.LA(1);

                       	 
                       	int index88_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_10 == CLOSE_BRACE || LA88_10 == ASSIGN || LA88_10 == COMMA || LA88_10 == IDENTIFIER || (LA88_10 >= ELIF && LA88_10 <= UNDEF) || LA88_10 == 195 || LA88_10 == 208 || LA88_10 == 221 || (LA88_10 >= 224 && LA88_10 <= 239) || (LA88_10 >= 241 && LA88_10 <= 244) || (LA88_10 >= 247 && LA88_10 <= 250) || LA88_10 == 256 || (LA88_10 >= 263 && LA88_10 <= 264) || LA88_10 == 274 || LA88_10 == 277) ) { s = 39; }

                       	else if ( (LA88_10 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA88_35 = input.LA(1);

                       	 
                       	int index88_35 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_35 == CLOSE_BRACE || LA88_35 == ASSIGN || LA88_35 == COMMA || LA88_35 == IDENTIFIER || (LA88_35 >= ELIF && LA88_35 <= UNDEF) || LA88_35 == 195 || LA88_35 == 208 || LA88_35 == 221 || (LA88_35 >= 224 && LA88_35 <= 239) || (LA88_35 >= 241 && LA88_35 <= 244) || (LA88_35 >= 247 && LA88_35 <= 250) || LA88_35 == 256 || (LA88_35 >= 263 && LA88_35 <= 264) || LA88_35 == 274 || LA88_35 == 277) ) { s = 39; }

                       	else if ( (LA88_35 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_35);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 22 : 
                       	int LA88_18 = input.LA(1);

                       	 
                       	int index88_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_18 == CLOSE_BRACE || LA88_18 == ASSIGN || LA88_18 == COMMA || LA88_18 == IDENTIFIER || (LA88_18 >= ELIF && LA88_18 <= UNDEF) || LA88_18 == 195 || LA88_18 == 208 || LA88_18 == 221 || (LA88_18 >= 224 && LA88_18 <= 239) || (LA88_18 >= 241 && LA88_18 <= 244) || (LA88_18 >= 247 && LA88_18 <= 250) || LA88_18 == 256 || (LA88_18 >= 263 && LA88_18 <= 264) || LA88_18 == 274 || LA88_18 == 277) ) { s = 39; }

                       	else if ( (LA88_18 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 23 : 
                       	int LA88_28 = input.LA(1);

                       	 
                       	int index88_28 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_28 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_28 == CLOSE_BRACE || LA88_28 == ASSIGN || LA88_28 == COMMA || LA88_28 == IDENTIFIER || (LA88_28 >= ELIF && LA88_28 <= UNDEF) || LA88_28 == 195 || LA88_28 == 208 || LA88_28 == 221 || (LA88_28 >= 224 && LA88_28 <= 239) || (LA88_28 >= 241 && LA88_28 <= 244) || (LA88_28 >= 247 && LA88_28 <= 250) || LA88_28 == 256 || (LA88_28 >= 263 && LA88_28 <= 264) || LA88_28 == 274 || LA88_28 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_28);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 24 : 
                       	int LA88_13 = input.LA(1);

                       	 
                       	int index88_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_13 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_13 == CLOSE_BRACE || LA88_13 == ASSIGN || LA88_13 == COMMA || LA88_13 == IDENTIFIER || (LA88_13 >= ELIF && LA88_13 <= UNDEF) || LA88_13 == 195 || LA88_13 == 208 || LA88_13 == 221 || (LA88_13 >= 224 && LA88_13 <= 239) || (LA88_13 >= 241 && LA88_13 <= 244) || (LA88_13 >= 247 && LA88_13 <= 250) || LA88_13 == 256 || (LA88_13 >= 263 && LA88_13 <= 264) || LA88_13 == 274 || LA88_13 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 25 : 
                       	int LA88_5 = input.LA(1);

                       	 
                       	int index88_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_5 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_5 == CLOSE_BRACE || LA88_5 == ASSIGN || LA88_5 == COMMA || LA88_5 == IDENTIFIER || (LA88_5 >= ELIF && LA88_5 <= UNDEF) || LA88_5 == 195 || LA88_5 == 208 || LA88_5 == 221 || (LA88_5 >= 224 && LA88_5 <= 239) || (LA88_5 >= 241 && LA88_5 <= 244) || (LA88_5 >= 247 && LA88_5 <= 250) || LA88_5 == 256 || (LA88_5 >= 263 && LA88_5 <= 264) || LA88_5 == 274 || LA88_5 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 26 : 
                       	int LA88_29 = input.LA(1);

                       	 
                       	int index88_29 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_29 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_29 == CLOSE_BRACE || LA88_29 == ASSIGN || LA88_29 == COMMA || LA88_29 == IDENTIFIER || (LA88_29 >= ELIF && LA88_29 <= UNDEF) || LA88_29 == 195 || LA88_29 == 208 || LA88_29 == 221 || (LA88_29 >= 224 && LA88_29 <= 239) || (LA88_29 >= 241 && LA88_29 <= 244) || (LA88_29 >= 247 && LA88_29 <= 250) || LA88_29 == 256 || (LA88_29 >= 263 && LA88_29 <= 264) || LA88_29 == 274 || LA88_29 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_29);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 27 : 
                       	int LA88_12 = input.LA(1);

                       	 
                       	int index88_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_12 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_12 == CLOSE_BRACE || LA88_12 == ASSIGN || LA88_12 == COMMA || LA88_12 == IDENTIFIER || (LA88_12 >= ELIF && LA88_12 <= UNDEF) || LA88_12 == 195 || LA88_12 == 208 || LA88_12 == 221 || (LA88_12 >= 224 && LA88_12 <= 239) || (LA88_12 >= 241 && LA88_12 <= 244) || (LA88_12 >= 247 && LA88_12 <= 250) || LA88_12 == 256 || (LA88_12 >= 263 && LA88_12 <= 264) || LA88_12 == 274 || LA88_12 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 28 : 
                       	int LA88_4 = input.LA(1);

                       	 
                       	int index88_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_4 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_4 == CLOSE_BRACE || LA88_4 == ASSIGN || LA88_4 == COMMA || LA88_4 == IDENTIFIER || (LA88_4 >= ELIF && LA88_4 <= UNDEF) || LA88_4 == 195 || LA88_4 == 208 || LA88_4 == 221 || (LA88_4 >= 224 && LA88_4 <= 239) || (LA88_4 >= 241 && LA88_4 <= 244) || (LA88_4 >= 247 && LA88_4 <= 250) || LA88_4 == 256 || (LA88_4 >= 263 && LA88_4 <= 264) || LA88_4 == 274 || LA88_4 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 29 : 
                       	int LA88_2 = input.LA(1);

                       	 
                       	int index88_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_2 == CLOSE_BRACE || LA88_2 == ASSIGN || LA88_2 == COMMA || LA88_2 == IDENTIFIER || (LA88_2 >= ELIF && LA88_2 <= UNDEF) || LA88_2 == 195 || LA88_2 == 208 || LA88_2 == 221 || (LA88_2 >= 224 && LA88_2 <= 239) || (LA88_2 >= 241 && LA88_2 <= 244) || (LA88_2 >= 247 && LA88_2 <= 250) || LA88_2 == 256 || (LA88_2 >= 263 && LA88_2 <= 264) || LA88_2 == 274 || LA88_2 == 277) ) { s = 39; }

                       	else if ( (LA88_2 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	 
                       	input.Seek(index88_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 30 : 
                       	int LA88_30 = input.LA(1);

                       	 
                       	int index88_30 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_30 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_30 == CLOSE_BRACE || LA88_30 == ASSIGN || LA88_30 == COMMA || LA88_30 == IDENTIFIER || (LA88_30 >= ELIF && LA88_30 <= UNDEF) || LA88_30 == 195 || LA88_30 == 208 || LA88_30 == 221 || (LA88_30 >= 224 && LA88_30 <= 239) || (LA88_30 >= 241 && LA88_30 <= 244) || (LA88_30 >= 247 && LA88_30 <= 250) || LA88_30 == 256 || (LA88_30 >= 263 && LA88_30 <= 264) || LA88_30 == 274 || LA88_30 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_30);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 31 : 
                       	int LA88_15 = input.LA(1);

                       	 
                       	int index88_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_15 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_15 == CLOSE_BRACE || LA88_15 == ASSIGN || LA88_15 == COMMA || LA88_15 == IDENTIFIER || (LA88_15 >= ELIF && LA88_15 <= UNDEF) || LA88_15 == 195 || LA88_15 == 208 || LA88_15 == 221 || (LA88_15 >= 224 && LA88_15 <= 239) || (LA88_15 >= 241 && LA88_15 <= 244) || (LA88_15 >= 247 && LA88_15 <= 250) || LA88_15 == 256 || (LA88_15 >= 263 && LA88_15 <= 264) || LA88_15 == 274 || LA88_15 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 32 : 
                       	int LA88_7 = input.LA(1);

                       	 
                       	int index88_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_7 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_7 == CLOSE_BRACE || LA88_7 == ASSIGN || LA88_7 == COMMA || LA88_7 == IDENTIFIER || (LA88_7 >= ELIF && LA88_7 <= UNDEF) || LA88_7 == 195 || LA88_7 == 208 || LA88_7 == 221 || (LA88_7 >= 224 && LA88_7 <= 239) || (LA88_7 >= 241 && LA88_7 <= 244) || (LA88_7 >= 247 && LA88_7 <= 250) || LA88_7 == 256 || (LA88_7 >= 263 && LA88_7 <= 264) || LA88_7 == 274 || LA88_7 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 33 : 
                       	int LA88_31 = input.LA(1);

                       	 
                       	int index88_31 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_31 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_31 == CLOSE_BRACE || LA88_31 == ASSIGN || LA88_31 == COMMA || LA88_31 == IDENTIFIER || (LA88_31 >= ELIF && LA88_31 <= UNDEF) || LA88_31 == 195 || LA88_31 == 208 || LA88_31 == 221 || (LA88_31 >= 224 && LA88_31 <= 239) || (LA88_31 >= 241 && LA88_31 <= 244) || (LA88_31 >= 247 && LA88_31 <= 250) || LA88_31 == 256 || (LA88_31 >= 263 && LA88_31 <= 264) || LA88_31 == 274 || LA88_31 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_31);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 34 : 
                       	int LA88_14 = input.LA(1);

                       	 
                       	int index88_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_14 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_14 == CLOSE_BRACE || LA88_14 == ASSIGN || LA88_14 == COMMA || LA88_14 == IDENTIFIER || (LA88_14 >= ELIF && LA88_14 <= UNDEF) || LA88_14 == 195 || LA88_14 == 208 || LA88_14 == 221 || (LA88_14 >= 224 && LA88_14 <= 239) || (LA88_14 >= 241 && LA88_14 <= 244) || (LA88_14 >= 247 && LA88_14 <= 250) || LA88_14 == 256 || (LA88_14 >= 263 && LA88_14 <= 264) || LA88_14 == 274 || LA88_14 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 35 : 
                       	int LA88_6 = input.LA(1);

                       	 
                       	int index88_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA88_6 == LTHAN) && (synpred6_JavaPrettyPrint()) ) { s = 40; }

                       	else if ( (LA88_6 == CLOSE_BRACE || LA88_6 == ASSIGN || LA88_6 == COMMA || LA88_6 == IDENTIFIER || (LA88_6 >= ELIF && LA88_6 <= UNDEF) || LA88_6 == 195 || LA88_6 == 208 || LA88_6 == 221 || (LA88_6 >= 224 && LA88_6 <= 239) || (LA88_6 >= 241 && LA88_6 <= 244) || (LA88_6 >= 247 && LA88_6 <= 250) || LA88_6 == 256 || (LA88_6 >= 263 && LA88_6 <= 264) || LA88_6 == 274 || LA88_6 == 277) ) { s = 39; }

                       	 
                       	input.Seek(index88_6);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae88 =
                new NoViableAltException(dfa.Description, 88, _s, input);
            dfa.Error(nvae88);
            throw nvae88;
        }
        const string DFA97_eotS =
            "\x75\uffff";
        const string DFA97_eofS =
            "\x75\uffff";
        const string DFA97_minS =
            "\x01\x1a\x5b\x00\x19\uffff";
        const string DFA97_maxS =
            "\x01\u0115\x5b\x00\x19\uffff";
        const string DFA97_acceptS =
            "\x5c\uffff\x01\x02\x17\uffff\x01\x01";
        const string DFA97_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
            "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d"+
            "\x01\x0e\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x01\x14\x01"+
            "\x15\x01\x16\x01\x17\x01\x18\x01\x19\x01\x1a\x01\x1b\x01\x1c"+
            "\x01\x1d\x01\x1e\x01\x1f\x01\x20\x01\x21\x01\x22\x01\x23\x01"+
            "\x24\x01\x25\x01\x26\x01\x27\x01\x28\x01\x29\x01\x2a\x01\x2b"+
            "\x01\x2c\x01\x2d\x01\x2e\x01\x2f\x01\x30\x01\x31\x01\x32\x01"+
            "\x33\x01\x34\x01\x35\x01\x36\x01\x37\x01\x38\x01\x39\x01\x3a"+
            "\x01\x3b\x01\x3c\x01\x3d\x01\x3e\x01\x3f\x01\x40\x01\x41\x01"+
            "\x42\x01\x43\x01\x44\x01\x45\x01\x46\x01\x47\x01\x48\x01\x49"+
            "\x01\x4a\x01\x4b\x01\x4c\x01\x4d\x01\x4e\x01\x4f\x01\x50\x01"+
            "\x51\x01\x52\x01\x53\x01\x54\x01\x55\x01\x56\x01\x57\x01\x58"+
            "\x01\x59\x01\x5a\x19\uffff}>";
        static readonly string[] DFA97_transitionS = {
                "\x02\x5c\x06\uffff\x01\x53\x01\x54\x01\x55\x01\x56\x01\x59"+
                "\x01\x5a\x01\x57\x01\x58\x01\x06\x01\x07\x01\x5b\x01\x04"+
                "\x01\x05\x01\uffff\x01\x4b\x01\x02\x01\x4c\x01\x4d\x0d\uffff"+
                "\x01\x10\x01\x3c\x07\uffff\x01\x5c\x0d\uffff\x0e\x5c\x01"+
                "\uffff\x01\x3d\x01\x41\x06\x5c\x07\uffff\x01\x01\x04\uffff"+
                "\x01\x03\x06\uffff\x01\x08\x01\x09\x01\x0a\x01\x12\x01\x0e"+
                "\x01\x0f\x01\x0d\x01\x0c\x01\x17\x01\x3f\x01\x40\x01\x42"+
                "\x01\x43\x01\x44\x01\x45\x01\x46\x01\x47\x01\x48\x01\x49"+
                "\x01\x4a\x01\x5c\x01\uffff\x01\x36\x01\x37\x01\x38\x01\x39"+
                "\x27\uffff\x01\x19\x0c\uffff\x01\x3b\x05\uffff\x01\x4e\x01"+
                "\x4f\x01\x50\x01\x51\x01\x52\x01\x3e\x01\uffff\x01\x3a\x02"+
                "\uffff\x01\x23\x01\x22\x01\x24\x01\x25\x01\x2c\x01\x2f\x01"+
                "\x27\x01\x2a\x01\x2b\x01\x2d\x01\x28\x01\x29\x01\x26\x01"+
                "\x1a\x01\x1b\x01\x1c\x01\uffff\x01\x1d\x01\x1e\x01\x1f\x01"+
                "\x20\x02\uffff\x01\x31\x01\x32\x01\x18\x01\x30\x01\x11\x01"+
                "\x16\x01\x14\x01\x15\x01\uffff\x01\x34\x06\uffff\x01\x33"+
                "\x01\x35\x09\uffff\x01\x21\x01\x0b\x01\x13\x01\x2e",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA97_eot = DFA.UnpackEncodedString(DFA97_eotS);
        static readonly short[] DFA97_eof = DFA.UnpackEncodedString(DFA97_eofS);
        static readonly char[] DFA97_min = DFA.UnpackEncodedStringToUnsignedChars(DFA97_minS);
        static readonly char[] DFA97_max = DFA.UnpackEncodedStringToUnsignedChars(DFA97_maxS);
        static readonly short[] DFA97_accept = DFA.UnpackEncodedString(DFA97_acceptS);
        static readonly short[] DFA97_special = DFA.UnpackEncodedString(DFA97_specialS);
        static readonly short[][] DFA97_transition = DFA.UnpackEncodedStringArray(DFA97_transitionS);

        protected class DFA97 : DFA
        {
            public DFA97(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 97;
                this.eot = DFA97_eot;
                this.eof = DFA97_eof;
                this.min = DFA97_min;
                this.max = DFA97_max;
                this.accept = DFA97_accept;
                this.special = DFA97_special;
                this.transition = DFA97_transition;

            }

            override public string Description
            {
                get { return "1016:1: expression returns [int precedence] : ( ( unary_expression assignment_operator )=> assignment -> { $assignment.st } | non_assignment_expression -> { $non_assignment_expression.st });"; }
            }

        }


        protected internal int DFA97_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA97_1 = input.LA(1);

                       	 
                       	int index97_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA97_2 = input.LA(1);

                       	 
                       	int index97_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA97_3 = input.LA(1);

                       	 
                       	int index97_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA97_4 = input.LA(1);

                       	 
                       	int index97_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA97_5 = input.LA(1);

                       	 
                       	int index97_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA97_6 = input.LA(1);

                       	 
                       	int index97_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA97_7 = input.LA(1);

                       	 
                       	int index97_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA97_8 = input.LA(1);

                       	 
                       	int index97_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA97_9 = input.LA(1);

                       	 
                       	int index97_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA97_10 = input.LA(1);

                       	 
                       	int index97_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA97_11 = input.LA(1);

                       	 
                       	int index97_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA97_12 = input.LA(1);

                       	 
                       	int index97_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA97_13 = input.LA(1);

                       	 
                       	int index97_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA97_14 = input.LA(1);

                       	 
                       	int index97_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA97_15 = input.LA(1);

                       	 
                       	int index97_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA97_16 = input.LA(1);

                       	 
                       	int index97_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA97_17 = input.LA(1);

                       	 
                       	int index97_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA97_18 = input.LA(1);

                       	 
                       	int index97_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA97_19 = input.LA(1);

                       	 
                       	int index97_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA97_20 = input.LA(1);

                       	 
                       	int index97_20 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_20);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA97_21 = input.LA(1);

                       	 
                       	int index97_21 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_21);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA97_22 = input.LA(1);

                       	 
                       	int index97_22 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_22);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 22 : 
                       	int LA97_23 = input.LA(1);

                       	 
                       	int index97_23 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_23);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 23 : 
                       	int LA97_24 = input.LA(1);

                       	 
                       	int index97_24 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_24);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 24 : 
                       	int LA97_25 = input.LA(1);

                       	 
                       	int index97_25 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_25);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 25 : 
                       	int LA97_26 = input.LA(1);

                       	 
                       	int index97_26 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_26);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 26 : 
                       	int LA97_27 = input.LA(1);

                       	 
                       	int index97_27 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_27);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 27 : 
                       	int LA97_28 = input.LA(1);

                       	 
                       	int index97_28 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_28);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 28 : 
                       	int LA97_29 = input.LA(1);

                       	 
                       	int index97_29 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_29);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 29 : 
                       	int LA97_30 = input.LA(1);

                       	 
                       	int index97_30 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_30);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 30 : 
                       	int LA97_31 = input.LA(1);

                       	 
                       	int index97_31 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_31);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 31 : 
                       	int LA97_32 = input.LA(1);

                       	 
                       	int index97_32 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_32);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 32 : 
                       	int LA97_33 = input.LA(1);

                       	 
                       	int index97_33 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_33);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 33 : 
                       	int LA97_34 = input.LA(1);

                       	 
                       	int index97_34 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_34);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 34 : 
                       	int LA97_35 = input.LA(1);

                       	 
                       	int index97_35 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_35);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 35 : 
                       	int LA97_36 = input.LA(1);

                       	 
                       	int index97_36 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_36);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 36 : 
                       	int LA97_37 = input.LA(1);

                       	 
                       	int index97_37 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_37);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 37 : 
                       	int LA97_38 = input.LA(1);

                       	 
                       	int index97_38 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_38);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 38 : 
                       	int LA97_39 = input.LA(1);

                       	 
                       	int index97_39 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_39);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 39 : 
                       	int LA97_40 = input.LA(1);

                       	 
                       	int index97_40 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_40);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 40 : 
                       	int LA97_41 = input.LA(1);

                       	 
                       	int index97_41 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_41);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 41 : 
                       	int LA97_42 = input.LA(1);

                       	 
                       	int index97_42 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_42);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 42 : 
                       	int LA97_43 = input.LA(1);

                       	 
                       	int index97_43 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_43);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 43 : 
                       	int LA97_44 = input.LA(1);

                       	 
                       	int index97_44 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_44);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 44 : 
                       	int LA97_45 = input.LA(1);

                       	 
                       	int index97_45 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_45);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 45 : 
                       	int LA97_46 = input.LA(1);

                       	 
                       	int index97_46 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_46);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 46 : 
                       	int LA97_47 = input.LA(1);

                       	 
                       	int index97_47 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_47);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 47 : 
                       	int LA97_48 = input.LA(1);

                       	 
                       	int index97_48 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_48);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 48 : 
                       	int LA97_49 = input.LA(1);

                       	 
                       	int index97_49 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_49);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 49 : 
                       	int LA97_50 = input.LA(1);

                       	 
                       	int index97_50 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_50);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 50 : 
                       	int LA97_51 = input.LA(1);

                       	 
                       	int index97_51 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_51);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 51 : 
                       	int LA97_52 = input.LA(1);

                       	 
                       	int index97_52 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_52);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 52 : 
                       	int LA97_53 = input.LA(1);

                       	 
                       	int index97_53 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_53);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 53 : 
                       	int LA97_54 = input.LA(1);

                       	 
                       	int index97_54 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_54);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 54 : 
                       	int LA97_55 = input.LA(1);

                       	 
                       	int index97_55 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_55);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 55 : 
                       	int LA97_56 = input.LA(1);

                       	 
                       	int index97_56 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_56);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 56 : 
                       	int LA97_57 = input.LA(1);

                       	 
                       	int index97_57 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_57);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 57 : 
                       	int LA97_58 = input.LA(1);

                       	 
                       	int index97_58 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_58);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 58 : 
                       	int LA97_59 = input.LA(1);

                       	 
                       	int index97_59 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_59);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 59 : 
                       	int LA97_60 = input.LA(1);

                       	 
                       	int index97_60 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_60);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 60 : 
                       	int LA97_61 = input.LA(1);

                       	 
                       	int index97_61 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_61);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 61 : 
                       	int LA97_62 = input.LA(1);

                       	 
                       	int index97_62 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_62);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 62 : 
                       	int LA97_63 = input.LA(1);

                       	 
                       	int index97_63 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_63);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 63 : 
                       	int LA97_64 = input.LA(1);

                       	 
                       	int index97_64 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_64);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 64 : 
                       	int LA97_65 = input.LA(1);

                       	 
                       	int index97_65 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_65);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 65 : 
                       	int LA97_66 = input.LA(1);

                       	 
                       	int index97_66 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_66);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 66 : 
                       	int LA97_67 = input.LA(1);

                       	 
                       	int index97_67 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_67);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 67 : 
                       	int LA97_68 = input.LA(1);

                       	 
                       	int index97_68 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_68);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 68 : 
                       	int LA97_69 = input.LA(1);

                       	 
                       	int index97_69 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_69);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 69 : 
                       	int LA97_70 = input.LA(1);

                       	 
                       	int index97_70 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_70);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 70 : 
                       	int LA97_71 = input.LA(1);

                       	 
                       	int index97_71 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_71);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 71 : 
                       	int LA97_72 = input.LA(1);

                       	 
                       	int index97_72 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_72);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 72 : 
                       	int LA97_73 = input.LA(1);

                       	 
                       	int index97_73 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_73);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 73 : 
                       	int LA97_74 = input.LA(1);

                       	 
                       	int index97_74 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_74);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 74 : 
                       	int LA97_75 = input.LA(1);

                       	 
                       	int index97_75 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_75);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 75 : 
                       	int LA97_76 = input.LA(1);

                       	 
                       	int index97_76 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_76);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 76 : 
                       	int LA97_77 = input.LA(1);

                       	 
                       	int index97_77 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_77);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 77 : 
                       	int LA97_78 = input.LA(1);

                       	 
                       	int index97_78 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_78);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 78 : 
                       	int LA97_79 = input.LA(1);

                       	 
                       	int index97_79 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_79);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 79 : 
                       	int LA97_80 = input.LA(1);

                       	 
                       	int index97_80 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_80);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 80 : 
                       	int LA97_81 = input.LA(1);

                       	 
                       	int index97_81 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_81);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 81 : 
                       	int LA97_82 = input.LA(1);

                       	 
                       	int index97_82 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_82);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 82 : 
                       	int LA97_83 = input.LA(1);

                       	 
                       	int index97_83 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_83);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 83 : 
                       	int LA97_84 = input.LA(1);

                       	 
                       	int index97_84 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_84);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 84 : 
                       	int LA97_85 = input.LA(1);

                       	 
                       	int index97_85 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_85);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 85 : 
                       	int LA97_86 = input.LA(1);

                       	 
                       	int index97_86 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_86);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 86 : 
                       	int LA97_87 = input.LA(1);

                       	 
                       	int index97_87 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_87);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 87 : 
                       	int LA97_88 = input.LA(1);

                       	 
                       	int index97_88 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_88);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 88 : 
                       	int LA97_89 = input.LA(1);

                       	 
                       	int index97_89 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_89);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 89 : 
                       	int LA97_90 = input.LA(1);

                       	 
                       	int index97_90 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_90);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 90 : 
                       	int LA97_91 = input.LA(1);

                       	 
                       	int index97_91 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred8_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 92; }

                       	 
                       	input.Seek(index97_91);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae97 =
                new NoViableAltException(dfa.Description, 97, _s, input);
            dfa.Error(nvae97);
            throw nvae97;
        }
        const string DFA104_eotS =
            "\x75\uffff";
        const string DFA104_eofS =
            "\x75\uffff";
        const string DFA104_minS =
            "\x01\x1a\x03\uffff\x01\x00\x70\uffff";
        const string DFA104_maxS =
            "\x01\u0115\x03\uffff\x01\x00\x70\uffff";
        const string DFA104_acceptS =
            "\x01\uffff\x03\x01\x01\uffff\x01\x03\x01\x04\x01\x05\x11\uffff"+
            "\x01\x06\x01\x07\x59\uffff\x01\x02";
        const string DFA104_specialS =
            "\x01\x00\x03\uffff\x01\x01\x70\uffff}>";
        static readonly string[] DFA104_transitionS = {
                "\x01\x01\x01\x02\x06\uffff\x0d\x1a\x01\uffff\x04\x1a\x0d"+
                "\uffff\x02\x1a\x07\uffff\x01\x06\x0d\uffff\x01\x05\x01\x07"+
                "\x01\x19\x0b\x07\x01\uffff\x02\x1a\x05\x07\x01\x03\x07\uffff"+
                "\x01\x1a\x04\uffff\x01\x1a\x06\uffff\x14\x1a\x01\x07\x01"+
                "\uffff\x04\x1a\x27\uffff\x01\x1a\x0c\uffff\x01\x1a\x05\uffff"+
                "\x06\x1a\x01\uffff\x01\x1a\x02\uffff\x01\x1a\x01\x04\x0e"+
                "\x1a\x01\uffff\x04\x1a\x02\uffff\x08\x1a\x01\uffff\x01\x1a"+
                "\x06\uffff\x02\x1a\x09\uffff\x04\x1a",
                "",
                "",
                "",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA104_eot = DFA.UnpackEncodedString(DFA104_eotS);
        static readonly short[] DFA104_eof = DFA.UnpackEncodedString(DFA104_eofS);
        static readonly char[] DFA104_min = DFA.UnpackEncodedStringToUnsignedChars(DFA104_minS);
        static readonly char[] DFA104_max = DFA.UnpackEncodedStringToUnsignedChars(DFA104_maxS);
        static readonly short[] DFA104_accept = DFA.UnpackEncodedString(DFA104_acceptS);
        static readonly short[] DFA104_special = DFA.UnpackEncodedString(DFA104_specialS);
        static readonly short[][] DFA104_transition = DFA.UnpackEncodedStringArray(DFA104_transitionS);

        protected class DFA104 : DFA
        {
            public DFA104(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 104;
                this.eot = DFA104_eot;
                this.eof = DFA104_eof;
                this.min = DFA104_min;
                this.max = DFA104_max;
                this.accept = DFA104_accept;
                this.special = DFA104_special;
                this.transition = DFA104_transition;

            }

            override public string Description
            {
                get { return "1080:1: non_assignment_expression returns [int precedence] : ( ( ( anonymous_function_signature )? '=>' )=> lambda_expression -> { $lambda_expression.st; } | ( query_expression )=> query_expression | ^(cop= COND_EXPR ce1= non_assignment_expression ce2= expression ce3= expression ) -> cond(condexp= $ce1.st thenexp= $ce2.st elseexp= $ce3.st condparens= comparePrecedence($cop.token, $ce1.precedence) <= 0 thenparens= comparePrecedence($cop.token, $ce2.precedence) <= 0 elseparens= comparePrecedence($cop.token, $ce3.precedence) <= 0 ) | ^( '??' non_assignment_expression non_assignment_expression ) | ^( (op= '==' | op= '!=' | op= '||' | op= '&&' | op= '|' | op= '^' | op= '&' | op= '>' | op= '<' | op= '>=' | op= '<=' | op= '<<' | op= RIGHT_SHIFT | op= '+' | op= '-' | op= '*' | op= '/' | op= '%' ) e1= non_assignment_expression e2= non_assignment_expression ) -> op(pre= $e1.st op= $op.token.Text post= $e2.st space= \" \" preparen= comparePrecedence($op.token, $e1.precedence) < 0 postparen= comparePrecedence($op.token, $e2.precedence) <= 0) | ^(iop= INSTANCEOF ie= non_assignment_expression non_nullable_type ) -> op(pre= $ie.st op= \"instanceof\" space= \" \" post= $non_nullable_type.st preparen= comparePrecedence($iop.token, $ie.precedence) < 0 ) | unary_expression -> { $unary_expression.st });"; }
            }

        }


        protected internal int DFA104_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA104_0 = input.LA(1);

                       	 
                       	int index104_0 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA104_0 == PARAMS) && (synpred9_JavaPrettyPrint()) ) { s = 1; }

                       	else if ( (LA104_0 == PARAMS_TYPELESS) && (synpred9_JavaPrettyPrint()) ) { s = 2; }

                       	else if ( (LA104_0 == LAMBDA) && (synpred9_JavaPrettyPrint()) ) { s = 3; }

                       	else if ( (LA104_0 == 225) ) { s = 4; }

                       	else if ( (LA104_0 == COND_EXPR) ) { s = 5; }

                       	else if ( (LA104_0 == NULL_COALESCE) ) { s = 6; }

                       	else if ( (LA104_0 == RIGHT_SHIFT || (LA104_0 >= LOG_OR && LA104_0 <= LEFT_SHIFT) || (LA104_0 >= PLUS && LA104_0 <= STAR) || LA104_0 == GT) ) { s = 7; }

                       	else if ( (LA104_0 == INSTANCEOF) ) { s = 25; }

                       	else if ( ((LA104_0 >= MONOPLUS && LA104_0 <= APPLY) || (LA104_0 >= NEW && LA104_0 <= NEW_ANON_OBJECT) || (LA104_0 >= OBJECT && LA104_0 <= THIS) || (LA104_0 >= SUPER && LA104_0 <= LONGNUMBER) || LA104_0 == CAST_EXPR || LA104_0 == JAVAWRAPPER || (LA104_0 >= BOOL && LA104_0 <= PTR) || (LA104_0 >= ELIF && LA104_0 <= UNDEF) || LA104_0 == 195 || LA104_0 == 208 || (LA104_0 >= 214 && LA104_0 <= 219) || LA104_0 == 221 || LA104_0 == 224 || (LA104_0 >= 226 && LA104_0 <= 239) || (LA104_0 >= 241 && LA104_0 <= 244) || (LA104_0 >= 247 && LA104_0 <= 254) || LA104_0 == 256 || (LA104_0 >= 263 && LA104_0 <= 264) || (LA104_0 >= 274 && LA104_0 <= 277)) ) { s = 26; }

                       	 
                       	input.Seek(index104_0);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA104_4 = input.LA(1);

                       	 
                       	int index104_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred10_JavaPrettyPrint()) ) { s = 116; }

                       	else if ( (true) ) { s = 26; }

                       	 
                       	input.Seek(index104_4);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae104 =
                new NoViableAltException(dfa.Description, 104, _s, input);
            dfa.Error(nvae104);
            throw nvae104;
        }
        const string DFA124_eotS =
            "\x27\uffff";
        const string DFA124_eofS =
            "\x27\uffff";
        const string DFA124_minS =
            "\x01\x6f\x26\uffff";
        const string DFA124_maxS =
            "\x01\u0115\x26\uffff";
        const string DFA124_acceptS =
            "\x01\uffff\x01\x03\x24\x01\x01\x02";
        const string DFA124_specialS =
            "\x01\x00\x26\uffff}>";
        static readonly string[] DFA124_transitionS = {
                "\x01\x26\x1a\uffff\x01\x02\x0d\uffff\x01\x21\x01\x22\x01"+
                "\x23\x01\x24\x01\uffff\x01\x01\x25\uffff\x01\x04\x19\uffff"+
                "\x01\x25\x02\uffff\x01\x0e\x01\x0d\x01\x0f\x01\x10\x01\x17"+
                "\x01\x1a\x01\x12\x01\x15\x01\x16\x01\x18\x01\x13\x01\x14"+
                "\x01\x11\x01\x05\x01\x06\x01\x07\x01\uffff\x01\x08\x01\x09"+
                "\x01\x0a\x01\x0b\x02\uffff\x01\x1c\x01\x1d\x01\x03\x01\x1b"+
                "\x05\uffff\x01\x1f\x06\uffff\x01\x1e\x01\x20\x09\uffff\x01"+
                "\x0c\x02\uffff\x01\x19",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA124_eot = DFA.UnpackEncodedString(DFA124_eotS);
        static readonly short[] DFA124_eof = DFA.UnpackEncodedString(DFA124_eofS);
        static readonly char[] DFA124_min = DFA.UnpackEncodedStringToUnsignedChars(DFA124_minS);
        static readonly char[] DFA124_max = DFA.UnpackEncodedStringToUnsignedChars(DFA124_maxS);
        static readonly short[] DFA124_accept = DFA.UnpackEncodedString(DFA124_acceptS);
        static readonly short[] DFA124_special = DFA.UnpackEncodedString(DFA124_specialS);
        static readonly short[][] DFA124_transition = DFA.UnpackEncodedStringArray(DFA124_transitionS);

        protected class DFA124 : DFA
        {
            public DFA124(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 124;
                this.eot = DFA124_eot;
                this.eof = DFA124_eof;
                this.min = DFA124_min;
                this.max = DFA124_max;
                this.accept = DFA124_accept;
                this.special = DFA124_special;
                this.transition = DFA124_transition;

            }

            override public string Description
            {
                get { return "()* loopback of 1199:31: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*"; }
            }

        }


        protected internal int DFA124_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA124_0 = input.LA(1);

                       	 
                       	int index124_0 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA124_0 == RPAREN) ) { s = 1; }

                       	else if ( (LA124_0 == IDENTIFIER) && (synpred12_JavaPrettyPrint()) ) { s = 2; }

                       	else if ( (LA124_0 == 249) && (synpred12_JavaPrettyPrint()) ) { s = 3; }

                       	else if ( (LA124_0 == 195) && (synpred12_JavaPrettyPrint()) ) { s = 4; }

                       	else if ( (LA124_0 == 237) && (synpred12_JavaPrettyPrint()) ) { s = 5; }

                       	else if ( (LA124_0 == 238) && (synpred12_JavaPrettyPrint()) ) { s = 6; }

                       	else if ( (LA124_0 == 239) && (synpred12_JavaPrettyPrint()) ) { s = 7; }

                       	else if ( (LA124_0 == 241) && (synpred12_JavaPrettyPrint()) ) { s = 8; }

                       	else if ( (LA124_0 == 242) && (synpred12_JavaPrettyPrint()) ) { s = 9; }

                       	else if ( (LA124_0 == 243) && (synpred12_JavaPrettyPrint()) ) { s = 10; }

                       	else if ( (LA124_0 == 244) && (synpred12_JavaPrettyPrint()) ) { s = 11; }

                       	else if ( (LA124_0 == 274) && (synpred12_JavaPrettyPrint()) ) { s = 12; }

                       	else if ( (LA124_0 == 225) && (synpred12_JavaPrettyPrint()) ) { s = 13; }

                       	else if ( (LA124_0 == 224) && (synpred12_JavaPrettyPrint()) ) { s = 14; }

                       	else if ( (LA124_0 == 226) && (synpred12_JavaPrettyPrint()) ) { s = 15; }

                       	else if ( (LA124_0 == 227) && (synpred12_JavaPrettyPrint()) ) { s = 16; }

                       	else if ( (LA124_0 == 236) && (synpred12_JavaPrettyPrint()) ) { s = 17; }

                       	else if ( (LA124_0 == 230) && (synpred12_JavaPrettyPrint()) ) { s = 18; }

                       	else if ( (LA124_0 == 234) && (synpred12_JavaPrettyPrint()) ) { s = 19; }

                       	else if ( (LA124_0 == 235) && (synpred12_JavaPrettyPrint()) ) { s = 20; }

                       	else if ( (LA124_0 == 231) && (synpred12_JavaPrettyPrint()) ) { s = 21; }

                       	else if ( (LA124_0 == 232) && (synpred12_JavaPrettyPrint()) ) { s = 22; }

                       	else if ( (LA124_0 == 228) && (synpred12_JavaPrettyPrint()) ) { s = 23; }

                       	else if ( (LA124_0 == 233) && (synpred12_JavaPrettyPrint()) ) { s = 24; }

                       	else if ( (LA124_0 == 277) && (synpred12_JavaPrettyPrint()) ) { s = 25; }

                       	else if ( (LA124_0 == 229) && (synpred12_JavaPrettyPrint()) ) { s = 26; }

                       	else if ( (LA124_0 == 250) && (synpred12_JavaPrettyPrint()) ) { s = 27; }

                       	else if ( (LA124_0 == 247) && (synpred12_JavaPrettyPrint()) ) { s = 28; }

                       	else if ( (LA124_0 == 248) && (synpred12_JavaPrettyPrint()) ) { s = 29; }

                       	else if ( (LA124_0 == 263) && (synpred12_JavaPrettyPrint()) ) { s = 30; }

                       	else if ( (LA124_0 == 256) && (synpred12_JavaPrettyPrint()) ) { s = 31; }

                       	else if ( (LA124_0 == 264) && (synpred12_JavaPrettyPrint()) ) { s = 32; }

                       	else if ( (LA124_0 == ELIF) && (synpred12_JavaPrettyPrint()) ) { s = 33; }

                       	else if ( (LA124_0 == ENDIF) && (synpred12_JavaPrettyPrint()) ) { s = 34; }

                       	else if ( (LA124_0 == DEFINE) && (synpred12_JavaPrettyPrint()) ) { s = 35; }

                       	else if ( (LA124_0 == UNDEF) && (synpred12_JavaPrettyPrint()) ) { s = 36; }

                       	else if ( (LA124_0 == 221) && (synpred12_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (LA124_0 == COMMA) ) { s = 38; }

                       	 
                       	input.Seek(index124_0);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae124 =
                new NoViableAltException(dfa.Description, 124, _s, input);
            dfa.Error(nvae124);
            throw nvae124;
        }
        const string DFA147_eotS =
            "\x27\uffff";
        const string DFA147_eofS =
            "\x27\uffff";
        const string DFA147_minS =
            "\x01\u008a\x24\x00\x02\uffff";
        const string DFA147_maxS =
            "\x01\u0115\x24\x00\x02\uffff";
        const string DFA147_acceptS =
            "\x25\uffff\x01\x01\x01\x02";
        const string DFA147_specialS =
            "\x01\uffff\x01\x07\x01\x21\x01\x1d\x01\x19\x01\x14\x01\x0f\x01"+
            "\x0b\x01\x08\x01\x03\x01\x1f\x01\x1b\x01\x17\x01\x12\x01\x0d"+
            "\x01\x09\x01\x05\x01\x01\x01\x1e\x01\x22\x01\x13\x01\x18\x01"+
            "\x0c\x01\x10\x01\x02\x01\x06\x01\x1c\x01\x20\x01\x11\x01\x16"+
            "\x01\x0a\x01\x0e\x01\x00\x01\x04\x01\x1a\x01\x15\x01\x23\x02"+
            "\uffff}>";
        static readonly string[] DFA147_transitionS = {
                "\x01\x01\x0d\uffff\x01\x20\x01\x21\x01\x22\x01\x23\x27\uffff"+
                "\x01\x03\x19\uffff\x01\x24\x02\uffff\x01\x0d\x01\x0c\x01"+
                "\x0e\x01\x0f\x01\x16\x01\x19\x01\x11\x01\x14\x01\x15\x01"+
                "\x17\x01\x12\x01\x13\x01\x10\x01\x04\x01\x05\x01\x06\x01"+
                "\uffff\x01\x07\x01\x08\x01\x09\x01\x0a\x02\uffff\x01\x1b"+
                "\x01\x1c\x01\x02\x01\x1a\x05\uffff\x01\x1e\x06\uffff\x01"+
                "\x1d\x01\x1f\x09\uffff\x01\x0b\x02\uffff\x01\x18",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                ""
        };

        static readonly short[] DFA147_eot = DFA.UnpackEncodedString(DFA147_eotS);
        static readonly short[] DFA147_eof = DFA.UnpackEncodedString(DFA147_eofS);
        static readonly char[] DFA147_min = DFA.UnpackEncodedStringToUnsignedChars(DFA147_minS);
        static readonly char[] DFA147_max = DFA.UnpackEncodedStringToUnsignedChars(DFA147_maxS);
        static readonly short[] DFA147_accept = DFA.UnpackEncodedString(DFA147_acceptS);
        static readonly short[] DFA147_special = DFA.UnpackEncodedString(DFA147_specialS);
        static readonly short[][] DFA147_transition = DFA.UnpackEncodedStringArray(DFA147_transitionS);

        protected class DFA147 : DFA
        {
            public DFA147(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 147;
                this.eot = DFA147_eot;
                this.eof = DFA147_eof;
                this.min = DFA147_min;
                this.max = DFA147_max;
                this.accept = DFA147_accept;
                this.special = DFA147_special;
                this.transition = DFA147_transition;

            }

            override public string Description
            {
                get { return "1335:1: member_name : ( ( type_or_generic '.' )=>t1= type_or_generic (op= '.' tn= type_or_generic )* | type_or_generic -> { $type_or_generic.st });"; }
            }

        }


        protected internal int DFA147_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA147_32 = input.LA(1);

                       	 
                       	int index147_32 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_32);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA147_17 = input.LA(1);

                       	 
                       	int index147_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA147_24 = input.LA(1);

                       	 
                       	int index147_24 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_24);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA147_9 = input.LA(1);

                       	 
                       	int index147_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA147_33 = input.LA(1);

                       	 
                       	int index147_33 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_33);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA147_16 = input.LA(1);

                       	 
                       	int index147_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA147_25 = input.LA(1);

                       	 
                       	int index147_25 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_25);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA147_1 = input.LA(1);

                       	 
                       	int index147_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA147_8 = input.LA(1);

                       	 
                       	int index147_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA147_15 = input.LA(1);

                       	 
                       	int index147_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA147_30 = input.LA(1);

                       	 
                       	int index147_30 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_30);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA147_7 = input.LA(1);

                       	 
                       	int index147_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA147_22 = input.LA(1);

                       	 
                       	int index147_22 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_22);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA147_14 = input.LA(1);

                       	 
                       	int index147_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA147_31 = input.LA(1);

                       	 
                       	int index147_31 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_31);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA147_6 = input.LA(1);

                       	 
                       	int index147_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA147_23 = input.LA(1);

                       	 
                       	int index147_23 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_23);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA147_28 = input.LA(1);

                       	 
                       	int index147_28 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_28);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA147_13 = input.LA(1);

                       	 
                       	int index147_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA147_20 = input.LA(1);

                       	 
                       	int index147_20 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_20);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA147_5 = input.LA(1);

                       	 
                       	int index147_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA147_35 = input.LA(1);

                       	 
                       	int index147_35 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_35);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 22 : 
                       	int LA147_29 = input.LA(1);

                       	 
                       	int index147_29 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_29);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 23 : 
                       	int LA147_12 = input.LA(1);

                       	 
                       	int index147_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 24 : 
                       	int LA147_21 = input.LA(1);

                       	 
                       	int index147_21 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_21);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 25 : 
                       	int LA147_4 = input.LA(1);

                       	 
                       	int index147_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 26 : 
                       	int LA147_34 = input.LA(1);

                       	 
                       	int index147_34 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_34);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 27 : 
                       	int LA147_11 = input.LA(1);

                       	 
                       	int index147_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 28 : 
                       	int LA147_26 = input.LA(1);

                       	 
                       	int index147_26 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_26);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 29 : 
                       	int LA147_3 = input.LA(1);

                       	 
                       	int index147_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 30 : 
                       	int LA147_18 = input.LA(1);

                       	 
                       	int index147_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 31 : 
                       	int LA147_10 = input.LA(1);

                       	 
                       	int index147_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 32 : 
                       	int LA147_27 = input.LA(1);

                       	 
                       	int index147_27 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_27);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 33 : 
                       	int LA147_2 = input.LA(1);

                       	 
                       	int index147_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 34 : 
                       	int LA147_19 = input.LA(1);

                       	 
                       	int index147_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 35 : 
                       	int LA147_36 = input.LA(1);

                       	 
                       	int index147_36 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred13_JavaPrettyPrint()) ) { s = 37; }

                       	else if ( (true) ) { s = 38; }

                       	 
                       	input.Seek(index147_36);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae147 =
                new NoViableAltException(dfa.Description, 147, _s, input);
            dfa.Error(nvae147);
            throw nvae147;
        }
        const string DFA192_eotS =
            "\x10\uffff";
        const string DFA192_eofS =
            "\x10\uffff";
        const string DFA192_minS =
            "\x01\x5d\x07\uffff\x01\x49\x07\uffff";
        const string DFA192_maxS =
            "\x01\u0096\x07\uffff\x01\u0096\x07\uffff";
        const string DFA192_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\x07\x01\uffff\x01\x09\x01\x0a\x01\x0c\x01\x0d\x01\x0e\x01\x08"+
            "\x01\x0b";
        const string DFA192_specialS =
            "\x10\uffff}>";
        static readonly string[] DFA192_transitionS = {
                "\x01\x05\x01\x06\x01\x04\x01\x0a\x01\x09\x01\x0b\x01\x0d"+
                "\x01\x0c\x01\x07\x05\uffff\x01\x02\x01\x03\x01\x01\x28\uffff"+
                "\x01\x08",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\x0f\x4c\uffff\x01\x0e",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA192_eot = DFA.UnpackEncodedString(DFA192_eotS);
        static readonly short[] DFA192_eof = DFA.UnpackEncodedString(DFA192_eofS);
        static readonly char[] DFA192_min = DFA.UnpackEncodedStringToUnsignedChars(DFA192_minS);
        static readonly char[] DFA192_max = DFA.UnpackEncodedStringToUnsignedChars(DFA192_maxS);
        static readonly short[] DFA192_accept = DFA.UnpackEncodedString(DFA192_acceptS);
        static readonly short[] DFA192_special = DFA.UnpackEncodedString(DFA192_specialS);
        static readonly short[][] DFA192_transition = DFA.UnpackEncodedStringArray(DFA192_transitionS);

        protected class DFA192 : DFA
        {
            public DFA192(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 192;
                this.eot = DFA192_eot;
                this.eof = DFA192_eof;
                this.min = DFA192_min;
                this.max = DFA192_max;
                this.accept = DFA192_accept;
                this.special = DFA192_special;
                this.transition = DFA192_transition;

            }

            override public string Description
            {
                get { return "1536:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );"; }
            }

        }

        const string DFA196_eotS =
            "\x2b\uffff";
        const string DFA196_eofS =
            "\x2b\uffff";
        const string DFA196_minS =
            "\x01\x41\x01\uffff\x24\x45\x05\uffff";
        const string DFA196_maxS =
            "\x01\u0115\x01\uffff\x24\u00d0\x05\uffff";
        const string DFA196_acceptS =
            "\x01\uffff\x01\x01\x24\uffff\x01\x03\x01\x04\x01\x06\x01\x05"+
            "\x01\x02";
        const string DFA196_specialS =
            "\x02\uffff\x01\x14\x01\x19\x01\x1c\x01\x1f\x01\x22\x01\x02\x01"+
            "\x00\x01\x06\x01\x04\x01\x0a\x01\x08\x01\x0e\x01\x0c\x01\x12"+
            "\x01\x11\x01\x17\x01\x15\x01\x1d\x01\x1a\x01\x23\x01\x20\x01"+
            "\x0d\x01\x0f\x01\x09\x01\x0b\x01\x05\x01\x07\x01\x01\x01\x03"+
            "\x01\x1e\x01\x21\x01\x18\x01\x1b\x01\x13\x01\x16\x01\x10\x05"+
            "\uffff}>";
        static readonly string[] DFA196_transitionS = {
                "\x01\x01\x01\x26\x3f\uffff\x08\x01\x01\x02\x0d\uffff\x01"+
                "\x21\x01\x22\x01\x23\x01\x24\x27\uffff\x01\x04\x0b\uffff"+
                "\x01\x27\x0b\uffff\x01\x28\x01\uffff\x01\x25\x02\uffff\x01"+
                "\x0e\x01\x0d\x01\x0f\x01\x10\x01\x17\x01\x1a\x01\x12\x01"+
                "\x15\x01\x16\x01\x18\x01\x13\x01\x14\x01\x11\x01\x05\x01"+
                "\x06\x01\x07\x01\uffff\x01\x08\x01\x09\x01\x0a\x01\x0b\x02"+
                "\uffff\x01\x1c\x01\x1d\x01\x03\x01\x1b\x04\x01\x01\uffff"+
                "\x01\x1f\x06\uffff\x01\x1e\x01\x20\x09\uffff\x01\x0c\x02"+
                "\x01\x01\x19",
                "",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "\x01\x29\x03\uffff\x01\x29\x18\uffff\x01\x2a\x31\uffff"+
                "\x02\x29\x3a\uffff\x01\x29",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA196_eot = DFA.UnpackEncodedString(DFA196_eotS);
        static readonly short[] DFA196_eof = DFA.UnpackEncodedString(DFA196_eofS);
        static readonly char[] DFA196_min = DFA.UnpackEncodedStringToUnsignedChars(DFA196_minS);
        static readonly char[] DFA196_max = DFA.UnpackEncodedStringToUnsignedChars(DFA196_maxS);
        static readonly short[] DFA196_accept = DFA.UnpackEncodedString(DFA196_acceptS);
        static readonly short[] DFA196_special = DFA.UnpackEncodedString(DFA196_specialS);
        static readonly short[][] DFA196_transition = DFA.UnpackEncodedStringArray(DFA196_transitionS);

        protected class DFA196 : DFA
        {
            public DFA196(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 196;
                this.eot = DFA196_eot;
                this.eof = DFA196_eof;
                this.min = DFA196_min;
                this.max = DFA196_max;
                this.accept = DFA196_accept;
                this.special = DFA196_special;
                this.transition = DFA196_transition;

            }

            override public string Description
            {
                get { return "1550:1: invocation_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | ^( 'typeof' ( unbound_type_name | type ) ) );"; }
            }

        }


        protected internal int DFA196_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA196_8 = input.LA(1);

                       	 
                       	int index196_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_8 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_8 == OPEN_BRACKET || LA196_8 == LPAREN || (LA196_8 >= DOT && LA196_8 <= PTR) || LA196_8 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA196_29 = input.LA(1);

                       	 
                       	int index196_29 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_29 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_29 == OPEN_BRACKET || LA196_29 == LPAREN || (LA196_29 >= DOT && LA196_29 <= PTR) || LA196_29 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_29);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA196_7 = input.LA(1);

                       	 
                       	int index196_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_7 == OPEN_BRACKET || LA196_7 == LPAREN || (LA196_7 >= DOT && LA196_7 <= PTR) || LA196_7 == 208) ) { s = 41; }

                       	else if ( (LA196_7 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA196_30 = input.LA(1);

                       	 
                       	int index196_30 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_30 == OPEN_BRACKET || LA196_30 == LPAREN || (LA196_30 >= DOT && LA196_30 <= PTR) || LA196_30 == 208) ) { s = 41; }

                       	else if ( (LA196_30 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_30);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA196_10 = input.LA(1);

                       	 
                       	int index196_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_10 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_10 == OPEN_BRACKET || LA196_10 == LPAREN || (LA196_10 >= DOT && LA196_10 <= PTR) || LA196_10 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA196_27 = input.LA(1);

                       	 
                       	int index196_27 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_27 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_27 == OPEN_BRACKET || LA196_27 == LPAREN || (LA196_27 >= DOT && LA196_27 <= PTR) || LA196_27 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_27);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA196_9 = input.LA(1);

                       	 
                       	int index196_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_9 == OPEN_BRACKET || LA196_9 == LPAREN || (LA196_9 >= DOT && LA196_9 <= PTR) || LA196_9 == 208) ) { s = 41; }

                       	else if ( (LA196_9 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA196_28 = input.LA(1);

                       	 
                       	int index196_28 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_28 == OPEN_BRACKET || LA196_28 == LPAREN || (LA196_28 >= DOT && LA196_28 <= PTR) || LA196_28 == 208) ) { s = 41; }

                       	else if ( (LA196_28 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_28);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA196_12 = input.LA(1);

                       	 
                       	int index196_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_12 == OPEN_BRACKET || LA196_12 == LPAREN || (LA196_12 >= DOT && LA196_12 <= PTR) || LA196_12 == 208) ) { s = 41; }

                       	else if ( (LA196_12 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA196_25 = input.LA(1);

                       	 
                       	int index196_25 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_25 == OPEN_BRACKET || LA196_25 == LPAREN || (LA196_25 >= DOT && LA196_25 <= PTR) || LA196_25 == 208) ) { s = 41; }

                       	else if ( (LA196_25 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_25);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA196_11 = input.LA(1);

                       	 
                       	int index196_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_11 == OPEN_BRACKET || LA196_11 == LPAREN || (LA196_11 >= DOT && LA196_11 <= PTR) || LA196_11 == 208) ) { s = 41; }

                       	else if ( (LA196_11 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA196_26 = input.LA(1);

                       	 
                       	int index196_26 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_26 == OPEN_BRACKET || LA196_26 == LPAREN || (LA196_26 >= DOT && LA196_26 <= PTR) || LA196_26 == 208) ) { s = 41; }

                       	else if ( (LA196_26 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_26);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA196_14 = input.LA(1);

                       	 
                       	int index196_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_14 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_14 == OPEN_BRACKET || LA196_14 == LPAREN || (LA196_14 >= DOT && LA196_14 <= PTR) || LA196_14 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA196_23 = input.LA(1);

                       	 
                       	int index196_23 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_23 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_23 == OPEN_BRACKET || LA196_23 == LPAREN || (LA196_23 >= DOT && LA196_23 <= PTR) || LA196_23 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_23);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA196_13 = input.LA(1);

                       	 
                       	int index196_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_13 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_13 == OPEN_BRACKET || LA196_13 == LPAREN || (LA196_13 >= DOT && LA196_13 <= PTR) || LA196_13 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA196_24 = input.LA(1);

                       	 
                       	int index196_24 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_24 == OPEN_BRACKET || LA196_24 == LPAREN || (LA196_24 >= DOT && LA196_24 <= PTR) || LA196_24 == 208) ) { s = 41; }

                       	else if ( (LA196_24 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_24);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA196_37 = input.LA(1);

                       	 
                       	int index196_37 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_37 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_37 == OPEN_BRACKET || LA196_37 == LPAREN || (LA196_37 >= DOT && LA196_37 <= PTR) || LA196_37 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_37);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA196_16 = input.LA(1);

                       	 
                       	int index196_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_16 == OPEN_BRACKET || LA196_16 == LPAREN || (LA196_16 >= DOT && LA196_16 <= PTR) || LA196_16 == 208) ) { s = 41; }

                       	else if ( (LA196_16 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA196_15 = input.LA(1);

                       	 
                       	int index196_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_15 == OPEN_BRACKET || LA196_15 == LPAREN || (LA196_15 >= DOT && LA196_15 <= PTR) || LA196_15 == 208) ) { s = 41; }

                       	else if ( (LA196_15 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA196_35 = input.LA(1);

                       	 
                       	int index196_35 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_35 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_35 == OPEN_BRACKET || LA196_35 == LPAREN || (LA196_35 >= DOT && LA196_35 <= PTR) || LA196_35 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_35);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA196_2 = input.LA(1);

                       	 
                       	int index196_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_2 == OPEN_BRACKET || LA196_2 == LPAREN || (LA196_2 >= DOT && LA196_2 <= PTR) || LA196_2 == 208) ) { s = 41; }

                       	else if ( (LA196_2 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA196_18 = input.LA(1);

                       	 
                       	int index196_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_18 == OPEN_BRACKET || LA196_18 == LPAREN || (LA196_18 >= DOT && LA196_18 <= PTR) || LA196_18 == 208) ) { s = 41; }

                       	else if ( (LA196_18 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 22 : 
                       	int LA196_36 = input.LA(1);

                       	 
                       	int index196_36 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_36 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_36 == OPEN_BRACKET || LA196_36 == LPAREN || (LA196_36 >= DOT && LA196_36 <= PTR) || LA196_36 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_36);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 23 : 
                       	int LA196_17 = input.LA(1);

                       	 
                       	int index196_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_17 == OPEN_BRACKET || LA196_17 == LPAREN || (LA196_17 >= DOT && LA196_17 <= PTR) || LA196_17 == 208) ) { s = 41; }

                       	else if ( (LA196_17 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 24 : 
                       	int LA196_33 = input.LA(1);

                       	 
                       	int index196_33 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_33 == OPEN_BRACKET || LA196_33 == LPAREN || (LA196_33 >= DOT && LA196_33 <= PTR) || LA196_33 == 208) ) { s = 41; }

                       	else if ( (LA196_33 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_33);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 25 : 
                       	int LA196_3 = input.LA(1);

                       	 
                       	int index196_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_3 == OPEN_BRACKET || LA196_3 == LPAREN || (LA196_3 >= DOT && LA196_3 <= PTR) || LA196_3 == 208) ) { s = 41; }

                       	else if ( (LA196_3 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 26 : 
                       	int LA196_20 = input.LA(1);

                       	 
                       	int index196_20 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_20 == OPEN_BRACKET || LA196_20 == LPAREN || (LA196_20 >= DOT && LA196_20 <= PTR) || LA196_20 == 208) ) { s = 41; }

                       	else if ( (LA196_20 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_20);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 27 : 
                       	int LA196_34 = input.LA(1);

                       	 
                       	int index196_34 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_34 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_34 == OPEN_BRACKET || LA196_34 == LPAREN || (LA196_34 >= DOT && LA196_34 <= PTR) || LA196_34 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_34);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 28 : 
                       	int LA196_4 = input.LA(1);

                       	 
                       	int index196_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_4 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_4 == OPEN_BRACKET || LA196_4 == LPAREN || (LA196_4 >= DOT && LA196_4 <= PTR) || LA196_4 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 29 : 
                       	int LA196_19 = input.LA(1);

                       	 
                       	int index196_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_19 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_19 == OPEN_BRACKET || LA196_19 == LPAREN || (LA196_19 >= DOT && LA196_19 <= PTR) || LA196_19 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 30 : 
                       	int LA196_31 = input.LA(1);

                       	 
                       	int index196_31 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_31 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_31 == OPEN_BRACKET || LA196_31 == LPAREN || (LA196_31 >= DOT && LA196_31 <= PTR) || LA196_31 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_31);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 31 : 
                       	int LA196_5 = input.LA(1);

                       	 
                       	int index196_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_5 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_5 == OPEN_BRACKET || LA196_5 == LPAREN || (LA196_5 >= DOT && LA196_5 <= PTR) || LA196_5 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 32 : 
                       	int LA196_22 = input.LA(1);

                       	 
                       	int index196_22 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_22 == OPEN_BRACKET || LA196_22 == LPAREN || (LA196_22 >= DOT && LA196_22 <= PTR) || LA196_22 == 208) ) { s = 41; }

                       	else if ( (LA196_22 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_22);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 33 : 
                       	int LA196_32 = input.LA(1);

                       	 
                       	int index196_32 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_32 == OPEN_BRACKET || LA196_32 == LPAREN || (LA196_32 >= DOT && LA196_32 <= PTR) || LA196_32 == 208) ) { s = 41; }

                       	else if ( (LA196_32 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	 
                       	input.Seek(index196_32);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 34 : 
                       	int LA196_6 = input.LA(1);

                       	 
                       	int index196_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_6 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_6 == OPEN_BRACKET || LA196_6 == LPAREN || (LA196_6 >= DOT && LA196_6 <= PTR) || LA196_6 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 35 : 
                       	int LA196_21 = input.LA(1);

                       	 
                       	int index196_21 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA196_21 == LTHAN) && (synpred15_JavaPrettyPrint()) ) { s = 42; }

                       	else if ( (LA196_21 == OPEN_BRACKET || LA196_21 == LPAREN || (LA196_21 >= DOT && LA196_21 <= PTR) || LA196_21 == 208) ) { s = 41; }

                       	 
                       	input.Seek(index196_21);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae196 =
                new NoViableAltException(dfa.Description, 196, _s, input);
            dfa.Error(nvae196);
            throw nvae196;
        }
        const string DFA199_eotS =
            "\x27\uffff";
        const string DFA199_eofS =
            "\x27\uffff";
        const string DFA199_minS =
            "\x01\x1a\x24\x4c\x02\uffff";
        const string DFA199_maxS =
            "\x01\u0115\x0b\u00d3\x01\u0115\x18\u00d3\x02\uffff";
        const string DFA199_acceptS =
            "\x25\uffff\x01\x02\x01\x01";
        const string DFA199_specialS =
            "\x27\uffff}>";
        static readonly string[] DFA199_transitionS = {
                "\x02\x25\x01\uffff\x03\x25\x02\uffff\x0d\x25\x01\uffff\x04"+
                "\x25\x06\uffff\x02\x25\x02\uffff\x01\x25\x01\uffff\x04\x25"+
                "\x03\uffff\x01\x25\x02\uffff\x02\x25\x0c\uffff\x0e\x25\x01"+
                "\uffff\x08\x25\x07\uffff\x01\x25\x01\uffff\x01\x25\x02\uffff"+
                "\x01\x25\x06\uffff\x08\x25\x01\x01\x0c\x25\x01\uffff\x01"+
                "\x20\x01\x21\x01\x22\x01\x23\x01\x25\x26\uffff\x01\x03\x02"+
                "\uffff\x01\x25\x09\uffff\x01\x25\x05\uffff\x06\x25\x01\uffff"+
                "\x01\x24\x02\uffff\x01\x0d\x01\x0c\x01\x0e\x01\x0f\x01\x16"+
                "\x01\x19\x01\x11\x01\x14\x01\x15\x01\x17\x01\x12\x01\x13"+
                "\x01\x10\x01\x04\x01\x05\x01\x06\x01\uffff\x01\x07\x01\x08"+
                "\x01\x09\x01\x0a\x02\uffff\x01\x1b\x01\x1c\x01\x02\x01\x1a"+
                "\x04\x25\x01\uffff\x01\x1e\x05\uffff\x01\x25\x01\x1d\x01"+
                "\x1f\x01\uffff\x01\x25\x01\uffff\x05\x25\x01\uffff\x01\x0b"+
                "\x02\x25\x01\x18",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x0d\uffff\x01\x25\x19\uffff"+
                "\x01\x25\x0d\uffff\x05\x25\x26\uffff\x01\x25\x0f\uffff\x01"+
                "\x26\x09\uffff\x01\x25\x02\uffff\x10\x25\x01\uffff\x04\x25"+
                "\x02\uffff\x04\x25\x05\uffff\x01\x25\x06\uffff\x02\x25\x09"+
                "\uffff\x01\x25\x02\uffff\x01\x25",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "\x0b\x25\x0b\uffff\x01\x25\x39\uffff\x01\x25\x36\uffff"+
                "\x01\x26",
                "",
                ""
        };

        static readonly short[] DFA199_eot = DFA.UnpackEncodedString(DFA199_eotS);
        static readonly short[] DFA199_eof = DFA.UnpackEncodedString(DFA199_eofS);
        static readonly char[] DFA199_min = DFA.UnpackEncodedStringToUnsignedChars(DFA199_minS);
        static readonly char[] DFA199_max = DFA.UnpackEncodedStringToUnsignedChars(DFA199_maxS);
        static readonly short[] DFA199_accept = DFA.UnpackEncodedString(DFA199_acceptS);
        static readonly short[] DFA199_special = DFA.UnpackEncodedString(DFA199_specialS);
        static readonly short[][] DFA199_transition = DFA.UnpackEncodedStringArray(DFA199_transitionS);

        protected class DFA199 : DFA
        {
            public DFA199(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 199;
                this.eot = DFA199_eot;
                this.eof = DFA199_eof;
                this.min = DFA199_min;
                this.max = DFA199_max;
                this.accept = DFA199_accept;
                this.special = DFA199_special;
                this.transition = DFA199_transition;

            }

            override public string Description
            {
                get { return "1570:1: statement_plus : ( labeled_statement -> statement(statement= $labeled_statement.st ) | embedded_statement -> statement(statement= $embedded_statement.st ));"; }
            }

        }

        const string DFA204_eotS =
            "\x0f\uffff";
        const string DFA204_eofS =
            "\x0f\uffff";
        const string DFA204_minS =
            "\x01\x1a\x06\uffff\x01\x02\x07\uffff";
        const string DFA204_maxS =
            "\x01\u0115\x06\uffff\x01\u009c\x07\uffff";
        const string DFA204_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\uffff\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x07";
        const string DFA204_specialS =
            "\x0f\uffff}>";
        static readonly string[] DFA204_transitionS = {
                "\x02\x0d\x01\uffff\x02\x0a\x01\x08\x02\uffff\x0d\x0d\x01"+
                "\uffff\x04\x0d\x06\uffff\x01\x05\x01\x06\x02\uffff\x01\x05"+
                "\x01\uffff\x01\x05\x02\x0d\x01\x04\x03\uffff\x01\x01\x02"+
                "\uffff\x01\x0d\x01\x02\x0c\uffff\x0e\x0d\x01\uffff\x08\x0d"+
                "\x07\uffff\x01\x0d\x01\uffff\x01\x09\x02\uffff\x01\x0d\x06"+
                "\uffff\x15\x0d\x01\uffff\x04\x0d\x01\x01\x26\uffff\x01\x0d"+
                "\x02\uffff\x01\x0b\x09\uffff\x01\x0d\x05\uffff\x01\x0d\x01"+
                "\x07\x04\x0d\x01\uffff\x01\x0d\x02\uffff\x10\x0d\x01\uffff"+
                "\x04\x0d\x02\uffff\x08\x0d\x01\uffff\x01\x0d\x05\uffff\x01"+
                "\x0c\x02\x0d\x01\uffff\x01\x03\x01\uffff\x03\x04\x02\x05"+
                "\x01\uffff\x04\x0d",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\x0d\x44\uffff\x01\x0e\x54\uffff\x01\x0e",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA204_eot = DFA.UnpackEncodedString(DFA204_eotS);
        static readonly short[] DFA204_eof = DFA.UnpackEncodedString(DFA204_eofS);
        static readonly char[] DFA204_min = DFA.UnpackEncodedStringToUnsignedChars(DFA204_minS);
        static readonly char[] DFA204_max = DFA.UnpackEncodedStringToUnsignedChars(DFA204_maxS);
        static readonly short[] DFA204_accept = DFA.UnpackEncodedString(DFA204_acceptS);
        static readonly short[] DFA204_special = DFA.UnpackEncodedString(DFA204_specialS);
        static readonly short[][] DFA204_transition = DFA.UnpackEncodedStringArray(DFA204_transitionS);

        protected class DFA204 : DFA
        {
            public DFA204(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 204;
                this.eot = DFA204_eot;
                this.eof = DFA204_eof;
                this.min = DFA204_min;
                this.max = DFA204_max;
                this.accept = DFA204_accept;
                this.special = DFA204_special;
                this.transition = DFA204_transition;

            }

            override public string Description
            {
                get { return "1574:1: embedded_statement returns [bool isSemi, bool isIf, bool indent] : ( block -> { $block.st } | ^( IF boolean_expression SEP t= embedded_statement (e= else_statement )? ) -> if_template(comments= preComments cond= $boolean_expression.st then= $t.st thenindent= $t.indent else= $e.st elseisif= $e.isIf elseindent= $e.indent) | ^( 'switch' expression (s+= switch_section )* ) -> switch(comments= preComments scrutinee= $expression.st sections= $s ) | iteration_statement -> { $iteration_statement.st } | jump_statement -> { $jump_statement.st } | ^( 'try' b= block ( catch_clauses )? ( finally_clause )? ) -> try(comments= preComments block=$b.stblockindent= $b.isSemi catches= $catch_clauses.st fin= $finally_clause.st ) | checked_statement -> { $checked_statement.st } | unchecked_statement -> { $unchecked_statement.st } | synchronized_statement -> { $synchronized_statement.st } | yield_statement -> { $yield_statement.st } | ^( 'unsafe' block ) -> unsupported(comments= preComments reason=\"unsafe blocks are not supported\"text= someText ) | fixed_statement | expression_statement -> op(comments= preComments pre= $expression_statement.st op= ($expression_statement.st.ToString() == \"\" ? \"\" : \";\") ));"; }
            }

        }

     

        public static readonly BitSet FOLLOW_PACKAGE_in_compilation_unit107 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_PAYLOAD_in_compilation_unit111 = new BitSet(new ulong[]{0x0000000000100B20UL});
        public static readonly BitSet FOLLOW_imports_in_compilation_unit113 = new BitSet(new ulong[]{0x0000000000100B20UL});
        public static readonly BitSet FOLLOW_type_declaration_in_compilation_unit116 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_class_declaration_in_type_declaration242 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_type_declaration252 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_enum_declaration_in_type_declaration261 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_annotation_declaration_in_type_declaration270 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_qualified_identifier286 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_qualified_identifier289 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_qualified_identifier291 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_namespace_or_type_name_in_namespace_name301 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_modifiers325 = new BitSet(new ulong[]{0x02E0000000000402UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_197_in_modifier362 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PUBLIC_in_modifier378 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PROTECTED_in_modifier394 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PRIVATE_in_modifier410 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_199_in_modifier426 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_200_in_modifier442 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STATIC_in_modifier458 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_201_in_modifier474 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_202_in_modifier490 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_194_in_modifier506 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_203_in_modifier523 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_204_in_modifier539 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_FINAL_in_modifier555 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_importns_in_imports595 = new BitSet(new ulong[]{0x0000000000000102UL});
        public static readonly BitSet FOLLOW_IMPORT_in_importns623 = new BitSet(new ulong[]{0x0000000000000000UL,0x0200000000000000UL});
        public static readonly BitSet FOLLOW_PAYLOAD_in_importns625 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CONST_in_class_member_declaration655 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration657 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration660 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_class_member_declaration663 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_class_member_declaration667 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_EVENT_in_class_member_declaration677 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration679 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration682 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_event_declaration_in_class_member_declaration687 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_METHOD_in_class_member_declaration697 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration699 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration702 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_class_member_declaration705 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_member_name_in_class_member_declaration707 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_class_member_declaration709 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_list_in_class_member_declaration712 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_class_member_declaration716 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_method_body_in_class_member_declaration733 = new BitSet(new ulong[]{0x0000000000000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_exception_in_class_member_declaration735 = new BitSet(new ulong[]{0x0000000000000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_class_member_declaration801 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_declaration_in_class_member_declaration813 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_FIELD_in_class_member_declaration827 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration829 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration832 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_class_member_declaration835 = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_field_declaration_in_class_member_declaration839 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_OPERATOR_in_class_member_declaration870 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration872 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration875 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_class_member_declaration878 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
        public static readonly BitSet FOLLOW_operator_declaration_in_class_member_declaration882 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_enum_declaration_in_class_member_declaration891 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_annotation_declaration_in_class_member_declaration903 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CONSTRUCTOR_in_class_member_declaration916 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration918 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration921 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_class_member_declaration924 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_class_member_declaration927 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_class_member_declaration933 = new BitSet(new ulong[]{0x0000000000000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_exception_in_class_member_declaration935 = new BitSet(new ulong[]{0x0000000000000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_STATIC_CONSTRUCTOR_in_class_member_declaration991 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration993 = new BitSet(new ulong[]{0x02E0000204000400UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration996 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_class_member_declaration999 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_EXCEPTION_in_exception1044 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPER_in_primary_expression1079 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression1083 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression1107 = new BitSet(new ulong[]{0x0000000000000000UL,0xF800000000000000UL});
        public static readonly BitSet FOLLOW_wrapped_in_primary_expression1111 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_INDEX_in_primary_expression1193 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_primary_expression1195 = new BitSet(new ulong[]{0x000F7FFC0C000008UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_primary_expression1197 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_APPLY_in_primary_expression1235 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_primary_expression1237 = new BitSet(new ulong[]{0x0000800000000008UL});
        public static readonly BitSet FOLLOW_argument_list_in_primary_expression1239 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_POSTINC_in_primary_expression1280 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_POSTDEC_in_primary_expression1284 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_primary_expression1287 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_primary_expression_start_in_primary_expression1328 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_operator_in_primary_expression1341 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_primary_expression1343 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression1345 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_primary_expression1347 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_NEW_in_primary_expression1421 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_primary_expression1423 = new BitSet(new ulong[]{0x0000800000000008UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_argument_list_in_primary_expression1425 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_primary_expression1428 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_NEW_DELEGATE_in_primary_expression1462 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_primary_expression1464 = new BitSet(new ulong[]{0x0000800000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_argument_list_in_primary_expression1466 = new BitSet(new ulong[]{0x0000800000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_class_body_in_primary_expression1469 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_NEW_ANON_OBJECT_in_primary_expression1500 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_anonymous_object_creation_expression_in_primary_expression1502 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_sizeof_expression_in_primary_expression1515 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_checked_expression_in_primary_expression1526 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unchecked_expression_in_primary_expression1548 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_default_value_expression_in_primary_expression1568 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_method_expression_in_primary_expression1584 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_primary_expression_start1614 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_start1645 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_primary_expression_start1649 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_start1670 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_primary_expression_extalias_in_primary_expression_start1680 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_primary_expression_start1704 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SUPER_in_primary_expression_start1721 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_219_in_primary_expression_start1743 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_unbound_type_name_in_primary_expression_start1746 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_219_in_primary_expression_start1764 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_primary_expression_start1767 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_literal_in_primary_expression_start1784 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_208_in_primary_expression_extalias1799 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_extalias1803 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_extalias1807 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_access_identifier_in_primary_expression_part1845 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_brackets_or_arguments_in_primary_expression_part1850 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_209_in_primary_expression_part1856 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_210_in_primary_expression_part1861 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_operator_in_access_identifier1869 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_access_identifier1873 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DOT_in_access_operator1888 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PTR_in_access_operator1896 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_brackets_in_brackets_or_arguments1918 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_brackets_or_arguments1922 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_brackets1930 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000446UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_brackets1934 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_brackets1939 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_paren_expression1949 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_paren_expression1953 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_paren_expression1957 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_arguments1966 = new BitSet(new ulong[]{0x0000800000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_argument_list_in_arguments1970 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_arguments1975 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ARGS_in_argument_list1995 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_argument_in_argument_list1998 = new BitSet(new ulong[]{0x000F7FFC0C000008UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FF10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_name_in_argument2026 = new BitSet(new ulong[]{0x000F7FFC0C000008UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FF10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_value_in_argument2030 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_argument_value_in_argument2035 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_argument_name_unsupported_in_argument_name2046 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_argument_name_unsupported2070 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_argument_name_unsupported2074 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_argument_value2106 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ref_variable_reference_in_argument_value2117 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_212_in_argument_value2123 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_reference_in_argument_value2127 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_213_in_ref_variable_reference2171 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000606UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_LPAREN_in_ref_variable_reference2193 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_ref_variable_reference2197 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_ref_variable_reference2201 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FE10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_ref_variable_reference_in_ref_variable_reference2206 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_reference_in_ref_variable_reference2210 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_reference_in_ref_variable_reference2246 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_variable_reference2256 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_rank_specifier_in_rank_specifiers2270 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_rank_specifier2296 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_rank_specifier2303 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPEREXPRESSION_in_wrapped2337 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_wrapped2339 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPERARGUMENT_in_wrapped2356 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_argument_value_in_wrapped2358 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPERARGUMENTLIST_in_wrapped2375 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_argument_list_in_wrapped2378 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPERTYPE_in_wrapped2398 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_wrapped2400 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPER_in_wrapped2415 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_identifier_in_wrapped2419 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_wrapped2434 = new BitSet(new ulong[]{0x0000000000000000UL,0xF800000000000000UL});
        public static readonly BitSet FOLLOW_wrapped_in_wrapped2438 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression2498 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_anonymous_object_initializer2507 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000018000000106UL,0x000000000F3FFFFCUL,0x7F9EFFFF28010008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer2512 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_anonymous_object_initializer2516 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer2523 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_declarator_in_member_declarator_list2531 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_member_declarator_list2535 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000018000000006UL,0x000000000F3FFFFCUL,0x7F9EFFFF28010008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_member_declarator_in_member_declarator_list2537 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_qid_in_member_declarator2549 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_member_declarator2554 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_member_declarator2558 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_creation_expression_in_primary_or_array_creation_expression2578 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_primary_expression_in_primary_or_array_creation_expression2591 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_NEW_ARRAY_in_array_creation_expression2613 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_array_creation_expression2621 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000000000A0UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_array_creation_expression2626 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000446UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_array_creation_expression2630 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_array_creation_expression2635 = new BitSet(new ulong[]{0x0000000000000008UL,0x00000000000000A0UL});
        public static readonly BitSet FOLLOW_rank_specifiers_in_array_creation_expression2639 = new BitSet(new ulong[]{0x0000000000000008UL,0x00000000000000A0UL});
        public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression2646 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression2685 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_rank_specifier_in_array_creation_expression2716 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000000000A0UL});
        public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression2719 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_array_initializer2741 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x0840FFBFFF0005A6UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_initializer_list_in_array_initializer2745 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_array_initializer2750 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_array_initializer2755 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_initializer_in_variable_initializer_list2775 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_variable_initializer_list2778 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF0004A6UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_initializer_in_variable_initializer_list2782 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_expression_in_variable_initializer2809 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_initializer_in_variable_initializer2817 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_214_in_sizeof_expression2829 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_unmanaged_type_in_sizeof_expression2832 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_215_in_checked_expression2848 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_checked_expression2850 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_216_in_unchecked_expression2898 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_unchecked_expression2900 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_217_in_default_value_expression2948 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_default_value_expression2950 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_218_in_anonymous_method_expression2994 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_anonymous_method_expression2998 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_anonymous_method_expression3003 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_type_in_object_creation_expression3016 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL});
        public static readonly BitSet FOLLOW_LPAREN_in_object_creation_expression3025 = new BitSet(new ulong[]{0x0000800000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_argument_list_in_object_creation_expression3029 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_object_creation_expression3034 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression3038 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression3049 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_object_or_collection_initializer3061 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x0840FFBFFF000586UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_object_initializer_in_object_or_collection_initializer3065 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer3072 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_element_initializer_list_in_collection_initializer3082 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_collection_initializer3086 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_collection_initializer3091 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_element_initializer_in_element_initializer_list3100 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_element_initializer_list3104 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x0840FFBFFF000586UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_element_initializer_in_element_initializer_list3106 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_element_initializer3117 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_element_initializer3123 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_element_initializer3127 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_element_initializer3131 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_initializer_list_in_object_initializer3146 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_object_initializer3151 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_object_initializer3156 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_initializer_in_member_initializer_list3165 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_member_initializer_list3169 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_member_initializer_in_member_initializer_list3171 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_member_initializer3182 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_member_initializer3186 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000486UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_initializer_value_in_member_initializer3190 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_initializer_value3199 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_initializer_value3205 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unbound_type_name_start_in_unbound_type_name3223 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name3242 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name3246 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name3253 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name3263 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_start3273 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_unbound_type_name_start3276 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_start3278 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DOT_in_unbound_type_name_part3287 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_part3291 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTHAN_in_generic_dimension_specifier3299 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_commas_in_generic_dimension_specifier3303 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_generic_dimension_specifier3308 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_commas3317 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_namespace_or_type_name_in_type_name3338 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_JAVAWRAPPER_in_type_name3350 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_identifier_in_type_name3354 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_type_name3369 = new BitSet(new ulong[]{0x0000000000000000UL,0xF800000000000000UL});
        public static readonly BitSet FOLLOW_wrapped_in_type_name3373 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name3424 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_208_in_namespace_or_type_name3446 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_name_in_namespace_or_type_name3450 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name3454 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_DOT_in_namespace_or_type_name3470 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_name_in_namespace_or_type_name3475 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name3479 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_identifier_in_type_or_generic3532 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_type_or_generic3536 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_type_or_generic3557 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_operator_in_qid3575 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_qid_in_qid3579 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_qid3581 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_qid_start_in_qid3610 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_qid_start3624 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_qid_start3643 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_qid_start3647 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_qid_start3670 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_qid_start3675 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_qid_start3681 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_literal_in_qid_start3703 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_identifier_in_qid_part3720 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTHAN_in_generic_argument_list3729 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000010001FA4UL});
        public static readonly BitSet FOLLOW_type_arguments_in_generic_argument_list3733 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_generic_argument_list3737 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_argument_in_type_arguments3755 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_type_arguments3758 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000010001FA4UL});
        public static readonly BitSet FOLLOW_type_argument_in_type_arguments3762 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_220_in_type_argument3795 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_221_in_type_argument3797 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_type_argument3799 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_220_in_type_argument3823 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_type_argument3840 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_TYPE_in_type3860 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_predefined_type_in_type3878 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000200000000020UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_type_name_in_type3899 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000200000000020UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_206_in_type3920 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000200000000020UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_rank_specifiers_in_type3939 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000200000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_STAR_in_type3943 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000200000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_220_in_type3950 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_type_in_non_nullable_type3991 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_non_array_type4005 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_array_type4017 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_unmanaged_type4029 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_pointer_type4041 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SEMI_in_block4067 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_block4086 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000D8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_statement_in_block4092 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000D8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_block4097 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_assignment_in_expression4134 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_expression4145 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_expression_list4162 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_expression_list4166 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_expression_list4172 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_unary_expression_in_assignment4202 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000007FF000UL});
        public static readonly BitSet FOLLOW_assignment_operator_in_assignment4206 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_assignment4210 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CAST_EXPR_in_unary_expression4461 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_unary_expression4463 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_unary_expression4467 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_primary_or_array_creation_expression_in_unary_expression4493 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MONOPLUS_in_unary_expression4508 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_MONOMINUS_in_unary_expression4514 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_MONONOT_in_unary_expression4520 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_MONOTWIDDLE_in_unary_expression4526 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_PREINC_in_unary_expression4532 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_PREDEC_in_unary_expression4538 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_unary_expression_in_unary_expression4544 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_MONOSTAR_in_unary_expression4585 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_ADDRESSOF_in_unary_expression4589 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_unary_expression_in_unary_expression4594 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_PARENS_in_unary_expression4633 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_unary_expression4635 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_assignment_operator4747 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PLUS_ASSIGN_in_assignment_operator4753 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MINUS_ASSIGN_in_assignment_operator4759 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STAR_ASSIGN_in_assignment_operator4765 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DIV_ASSIGN_in_assignment_operator4771 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MOD_ASSIGN_in_assignment_operator4777 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_AND_ASSIGN_in_assignment_operator4783 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_OR_ASSIGN_in_assignment_operator4789 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_XOR_ASSIGN_in_assignment_operator4795 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LEFT_SHIFT_ASSIGN_in_assignment_operator4801 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_RIGHT_SHIFT_ASSIGN_in_assignment_operator4807 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_lambda_expression_in_non_assignment_expression4866 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_expression_in_non_assignment_expression4883 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COND_EXPR_in_non_assignment_expression4892 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression4896 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_non_assignment_expression4900 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_non_assignment_expression4904 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_NULL_COALESCE_in_non_assignment_expression5037 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression5039 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression5041 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_EQUAL_in_non_assignment_expression5059 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_NOT_EQUAL_in_non_assignment_expression5063 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_LOG_OR_in_non_assignment_expression5067 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_LOG_AND_in_non_assignment_expression5071 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_BIT_OR_in_non_assignment_expression5075 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_BIT_XOR_in_non_assignment_expression5079 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_BIT_AND_in_non_assignment_expression5083 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_GT_in_non_assignment_expression5087 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_LTHAN_in_non_assignment_expression5091 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_GTE_in_non_assignment_expression5095 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_LTE_in_non_assignment_expression5099 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_LEFT_SHIFT_in_non_assignment_expression5103 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_RIGHT_SHIFT_in_non_assignment_expression5107 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_PLUS_in_non_assignment_expression5111 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_MINUS_in_non_assignment_expression5115 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_STAR_in_non_assignment_expression5119 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_DIV_in_non_assignment_expression5123 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_MOD_in_non_assignment_expression5127 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression5141 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression5145 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_INSTANCEOF_in_non_assignment_expression5240 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression5244 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_non_nullable_type_in_non_assignment_expression5246 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_unary_expression_in_non_assignment_expression5323 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_function_signature_in_lambda_expression5341 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000400000000000UL});
        public static readonly BitSet FOLLOW_LAMBDA_in_lambda_expression5346 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_lambda_expression5350 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PARAMS_in_anonymous_function_signature5373 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_formal_parameter_in_anonymous_function_signature5377 = new BitSet(new ulong[]{0x02E0000200000408UL,0x0001000000000004UL,0x0000000000000000UL,0x0000000000301FA4UL,0x0000000000000003UL});
        public static readonly BitSet FOLLOW_PARAMS_TYPELESS_in_anonymous_function_signature5400 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_identifier_in_anonymous_function_signature5404 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_from_clause_in_query_expression5434 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000166600000000UL});
        public static readonly BitSet FOLLOW_query_body_in_query_expression5438 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_body_clauses_in_query_body5448 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000166600000000UL});
        public static readonly BitSet FOLLOW_select_or_group_clause_in_query_body5453 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000100000000UL});
        public static readonly BitSet FOLLOW_query_continuation_in_query_body5464 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_224_in_query_continuation5474 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_query_continuation5478 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000166600000000UL});
        public static readonly BitSet FOLLOW_query_body_in_query_continuation5482 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_body_clause_in_query_body_clauses5489 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000106600000000UL});
        public static readonly BitSet FOLLOW_from_clause_in_query_body_clause5498 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_let_clause_in_query_body_clause5503 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_where_clause_in_query_body_clause5508 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_join_clause_in_query_body_clause5513 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_orderby_clause_in_query_body_clause5518 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_225_in_from_clause5525 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_in_from_clause5529 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_from_clause5534 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000010UL});
        public static readonly BitSet FOLLOW_IN_in_from_clause5538 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_from_clause5542 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_226_in_join_clause5550 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_in_join_clause5554 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_join_clause5559 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000010UL});
        public static readonly BitSet FOLLOW_IN_in_join_clause5563 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_join_clause5567 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000800000000UL});
        public static readonly BitSet FOLLOW_227_in_join_clause5571 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_join_clause5575 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000001000000000UL});
        public static readonly BitSet FOLLOW_228_in_join_clause5579 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_join_clause5583 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000100000000UL});
        public static readonly BitSet FOLLOW_224_in_join_clause5586 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_join_clause5588 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_229_in_let_clause5598 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_let_clause5602 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_let_clause5606 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_let_clause5610 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_230_in_orderby_clause5617 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_ordering_list_in_orderby_clause5621 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ordering_in_ordering_list5629 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_ordering_list5634 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_ordering_in_ordering_list5638 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_expression_in_ordering5648 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000018000000000UL});
        public static readonly BitSet FOLLOW_ordering_direction_in_ordering5653 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_ordering_direction0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_select_clause_in_select_or_group_clause5676 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_group_clause_in_select_or_group_clause5681 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_233_in_select_clause5689 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_select_clause5693 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_234_in_group_clause5701 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_group_clause5705 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000080000000000UL});
        public static readonly BitSet FOLLOW_235_in_group_clause5709 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_group_clause5713 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_236_in_where_clause5721 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_where_clause5725 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_boolean_expression5733 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_global_attribute_in_global_attributes5749 = new BitSet(new ulong[]{0x0000000100000002UL});
        public static readonly BitSet FOLLOW_GLOBAL_ATTRIBUTE_in_global_attribute5760 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute5762 = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attribute_list_in_global_attribute5766 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier5776 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_global_attribute_target_specifier5780 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_global_attribute_target0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_sections_in_attributes5802 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_section_in_attribute_sections5817 = new BitSet(new ulong[]{0x0000000200000002UL});
        public static readonly BitSet FOLLOW_ATTRIBUTE_in_attribute_section5828 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attribute_target_specifier_in_attribute_section5830 = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attribute_list_in_attribute_section5835 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_attribute_target_in_attribute_target_specifier5845 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_attribute_target_specifier5849 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_attribute_target0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_in_attribute_list5891 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_attribute_list5894 = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attribute_in_attribute_list5896 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_type_name_in_attribute5908 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_attribute_arguments_in_attribute5912 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_attribute_arguments5923 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000002F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_RPAREN_in_attribute_arguments5928 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_positional_argument_in_attribute_arguments5948 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_named_argument_in_attribute_arguments5967 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_COMMA_in_attribute_arguments5983 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000002F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_positional_argument_in_attribute_arguments5985 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_RPAREN_in_attribute_arguments5996 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ARGS_in_positional_argument_list6011 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_positional_argument_in_positional_argument_list6013 = new BitSet(new ulong[]{0x000F7FFC0C000008UL,0x08407FBFFF000406UL,0x000000002F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_argument_expression_in_positional_argument6024 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ARGS_in_named_argument_list6034 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_named_argument_in_named_argument_list6036 = new BitSet(new ulong[]{0x0000000000000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_named_argument6047 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_named_argument6051 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000002F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_argument_expression_in_named_argument6055 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_attribute_argument_expression6064 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CLASS_in_class_declaration6093 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_196_in_class_declaration6096 = new BitSet(new ulong[]{0x02E0000200000400UL,0x0200000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_PAYLOAD_in_class_declaration6102 = new BitSet(new ulong[]{0x02E0000200000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attributes_in_class_declaration6117 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_declaration6120 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_class_declaration6123 = new BitSet(new ulong[]{0x00008002000000C0UL,0x0010000000000080UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration6127 = new BitSet(new ulong[]{0x00008002000000C0UL,0x0000000000000080UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_list_in_class_declaration6130 = new BitSet(new ulong[]{0x00008000000000C0UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_class_extends_in_class_declaration6143 = new BitSet(new ulong[]{0x0000800000000080UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_class_implements_in_class_declaration6146 = new BitSet(new ulong[]{0x0000800000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_class_body_in_class_declaration6152 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_attributes_in_type_parameter_list6256 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_in_type_parameter_list6261 = new BitSet(new ulong[]{0x0000000200000002UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_type_parameter6291 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_extend_in_class_extends6321 = new BitSet(new ulong[]{0x0000000000000042UL});
        public static readonly BitSet FOLLOW_EXTENDS_in_class_extend6349 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_class_extend6353 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_class_implement_in_class_implements6378 = new BitSet(new ulong[]{0x0000000000000082UL});
        public static readonly BitSet FOLLOW_IMPLEMENTS_in_class_implement6406 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_class_implement6410 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_type_in_interface_type_list6428 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_interface_type_list6431 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_interface_type_list6437 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_class_body6456 = new BitSet(new ulong[]{0x00100000009CEB20UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_class_member_declaration_aux_in_class_body6462 = new BitSet(new ulong[]{0x00100000009CEB20UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_class_body6467 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_member_declaration_in_class_member_declaration_aux6489 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_205_in_constant_declaration6514 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_constant_declaration6518 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_constant_declaration6522 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_constant_declaration6526 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_constant_declarator_in_constant_declarators6534 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_constant_declarators6537 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarator_in_constant_declarators6539 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_constant_declarator6549 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_constant_declarator6554 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constant_expression_in_constant_declarator6558 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_constant_expression6568 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_declarators_in_field_declaration6581 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_declarator_in_variable_declarators6594 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_variable_declarators6597 = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_variable_declarator_in_variable_declarators6603 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_type_name_in_variable_declarator6623 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_variable_declarator6626 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF0004A6UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_initializer_in_variable_declarator6630 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_method_body6667 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_member_name6700 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_member_name6707 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_member_name6711 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_member_name6734 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_event_declaration6760 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_member_name_in_event_declaration6762 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_event_declaration6766 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_event_accessor_declarations_in_event_declaration6770 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_event_declaration6774 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_event_modifiers6784 = new BitSet(new ulong[]{0x02E0000000000402UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations6793 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations6800 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations6804 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations6809 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations6830 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0200000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations6834 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0200000000000000UL});
        public static readonly BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations6839 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_249_in_add_accessor_declaration6849 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_add_accessor_declaration6853 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_250_in_remove_accessor_declaration6861 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_remove_accessor_declaration6865 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ANNOTATION_in_annotation_declaration6884 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_annotation_declaration6886 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_modifiers_in_annotation_declaration6889 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_annotation_declaration6892 = new BitSet(new ulong[]{0x0000800000000008UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_class_body_in_annotation_declaration6897 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_ENUM_in_enum_declaration6950 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_enum_declaration6954 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_modifiers_in_enum_declaration6957 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_enum_declaration6960 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0009000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_enum_base_in_enum_declaration6964 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0009000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_enum_body_in_enum_declaration6969 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_type_in_enum_base7011 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ENUM_BODY_in_enum_body7020 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_enum_member_declaration_in_enum_body7024 = new BitSet(new ulong[]{0x0000000200000008UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attributes_in_enum_member_declaration7042 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_enum_member_declaration7047 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_integral_type0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variant_generic_parameter_in_variant_generic_parameter_list7122 = new BitSet(new ulong[]{0x0000000200001002UL,0x0000000000000010UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attributes_in_variant_generic_parameter7146 = new BitSet(new ulong[]{0x0000000200001000UL,0x0000000000000010UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_variance_annotation_in_variant_generic_parameter7151 = new BitSet(new ulong[]{0x0000000200000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_in_variant_generic_parameter7157 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_IN_in_variance_annotation7169 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OUT_in_variance_annotation7182 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses7213 = new BitSet(new ulong[]{0x0000000000000002UL,0x0010000000000000UL});
        public static readonly BitSet FOLLOW_TYPE_PARAM_CONSTRAINT_in_type_parameter_constraints_clause7235 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_variable_name_in_type_parameter_constraints_clause7239 = new BitSet(new ulong[]{0x0000000000000000UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_name_in_type_parameter_constraints_clause7243 = new BitSet(new ulong[]{0x0000000000000008UL,0x0800000000000000UL,0x000000000F100400UL,0x079EFFFF20010008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_type_variable_name7271 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_return_type7286 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PARAMS_in_formal_parameter_list7302 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_formal_parameter_in_formal_parameter_list7306 = new BitSet(new ulong[]{0x02E0000200000408UL,0x0001000000000004UL,0x0000000000000000UL,0x0000000000301FA4UL,0x0000000000000003UL});
        public static readonly BitSet FOLLOW_attributes_in_formal_parameter7330 = new BitSet(new ulong[]{0x02E0000200000400UL,0x0001000000000004UL,0x0000000000000000UL,0x0000000000301FA4UL,0x0000000000000002UL});
        public static readonly BitSet FOLLOW_fixed_parameter_in_formal_parameter7336 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_parameter_array_in_formal_parameter7343 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_256_in_formal_parameter7354 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_parameter_modifier_in_fixed_parameter7365 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_fixed_parameter7370 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_fixed_parameter7374 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_default_argument_in_fixed_parameter7378 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_default_argument7417 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_default_argument7419 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_213_in_parameter_modifier7433 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_212_in_parameter_modifier7439 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_parameter_modifier7445 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_257_in_parameter_array7469 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_parameter_array7473 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_parameter_array7477 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_INTERFACE_in_interface_declaration7514 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_196_in_interface_declaration7517 = new BitSet(new ulong[]{0x02E0000200000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_declaration7523 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20001FACUL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_modifiers_in_interface_declaration7526 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_interface_declaration7541 = new BitSet(new ulong[]{0x0000000200001040UL,0x0010000000000090UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration7545 = new BitSet(new ulong[]{0x0000000200001040UL,0x0010000000000090UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_variant_generic_parameter_list_in_interface_declaration7549 = new BitSet(new ulong[]{0x0000000200001040UL,0x0010000000000090UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_class_extends_in_interface_declaration7562 = new BitSet(new ulong[]{0x0000000200001040UL,0x0010000000000090UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_interface_body_in_interface_declaration7569 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_interface_body7660 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_interface_member_declaration_aux_in_interface_body7666 = new BitSet(new ulong[]{0x000000000000C000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_interface_body7671 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_member_declaration_in_interface_member_declaration_aux7691 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_EVENT_in_interface_member_declaration7725 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_member_declaration7727 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_interface_member_declaration7730 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_event_declaration_in_interface_member_declaration7733 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_METHOD_in_interface_member_declaration7743 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_member_declaration7745 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_modifiers_in_interface_member_declaration7748 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_interface_member_declaration7751 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_interface_member_declaration7753 = new BitSet(new ulong[]{0x0000000204000008UL,0x0090000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_member_declaration7755 = new BitSet(new ulong[]{0x0000000204000008UL,0x0080000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_parameter_list_in_interface_member_declaration7758 = new BitSet(new ulong[]{0x0000000004000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_interface_member_declaration7762 = new BitSet(new ulong[]{0x0000000000000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_exception_in_interface_member_declaration7765 = new BitSet(new ulong[]{0x0000000000000008UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_operator_declarator_in_operator_declaration7840 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_operator_body_in_operator_declaration7844 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_259_in_operator_declarator7852 = new BitSet(new ulong[]{0x0000003000000000UL,0x00003E3FE0000000UL,0x0000000000460000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_set_in_operator_declarator7857 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_operator_declarator7867 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_operator_declarator7871 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_operator_declarator7875 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_binary_operator_declarator_in_operator_declarator7880 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unary_operator_declarator_in_operator_declarator7884 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_overloadable_unary_operator_in_operator_declarator7891 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_operator_declarator7895 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_operator_declarator7899 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_operator_declarator7901 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_unary_operator_declarator_in_operator_declarator7905 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_overloadable_binary_operator_in_operator_declarator7911 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_operator_declarator7915 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_operator_declarator7919 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_operator_declarator7921 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_binary_operator_declarator_in_operator_declarator7925 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_RPAREN_in_unary_operator_declarator7937 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_overloadable_unary_operator0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_binary_operator_declarator7980 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_binary_operator_declarator7984 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_binary_operator_declarator7988 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_binary_operator_declarator7992 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STAR_in_overloadable_binary_operator8003 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DIV_in_overloadable_binary_operator8007 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MOD_in_overloadable_binary_operator8011 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_AND_in_overloadable_binary_operator8015 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_OR_in_overloadable_binary_operator8019 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_XOR_in_overloadable_binary_operator8023 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LEFT_SHIFT_in_overloadable_binary_operator8027 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator8031 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator8033 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_EQUAL_in_overloadable_binary_operator8037 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_NOT_EQUAL_in_overloadable_binary_operator8041 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator8045 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTHAN_in_overloadable_binary_operator8049 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GTE_in_overloadable_binary_operator8053 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTE_in_overloadable_binary_operator8057 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration8067 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_operator_body_in_conversion_operator_declaration8071 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_conversion_operator_declarator8079 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
        public static readonly BitSet FOLLOW_259_in_conversion_operator_declarator8088 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_conversion_operator_declarator8092 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_conversion_operator_declarator8096 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_conversion_operator_declarator8100 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_conversion_operator_declarator8104 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_conversion_operator_declarator8108 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_operator_body8116 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_invocation_start_in_invocation_expression8126 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_invocation_expression8148 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_invocation_expression8152 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_invocation_expression8163 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_invocation_expression8169 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_invocation_start8177 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_invocation_start8194 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_invocation_start8198 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_invocation_start8203 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_207_in_invocation_start8209 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_invocation_start8214 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_invocation_start8219 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_invocation_start8223 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_219_in_invocation_start8231 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_unbound_type_name_in_invocation_start8235 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_type_in_invocation_start8239 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_access_identifier_in_invocation_part8266 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_brackets_in_invocation_part8271 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_declaration_statement_in_statement8290 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_plus_in_statement8306 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_labeled_statement_in_statement_plus8326 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_statement_plus8342 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_embedded_statement8372 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_IF_in_embedded_statement8384 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_embedded_statement8386 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_SEP_in_embedded_statement8390 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_embedded_statement8395 = new BitSet(new ulong[]{0x8000000000000008UL});
        public static readonly BitSet FOLLOW_else_statement_in_embedded_statement8399 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_266_in_embedded_statement8502 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_embedded_statement8504 = new BitSet(new ulong[]{0x0000000010000008UL});
        public static readonly BitSet FOLLOW_switch_section_in_embedded_statement8511 = new BitSet(new ulong[]{0x0000000010000008UL});
        public static readonly BitSet FOLLOW_iteration_statement_in_embedded_statement8544 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_jump_statement_in_embedded_statement8554 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_TRY_in_embedded_statement8565 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_block_in_embedded_statement8572 = new BitSet(new ulong[]{0x3000000000000008UL});
        public static readonly BitSet FOLLOW_catch_clauses_in_embedded_statement8574 = new BitSet(new ulong[]{0x2000000000000008UL});
        public static readonly BitSet FOLLOW_finally_clause_in_embedded_statement8577 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_checked_statement_in_embedded_statement8649 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unchecked_statement_in_embedded_statement8658 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_synchronized_statement_in_embedded_statement8670 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_yield_statement_in_embedded_statement8679 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_198_in_embedded_statement8693 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_block_in_embedded_statement8700 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_fixed_statement_in_embedded_statement8740 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_statement_in_embedded_statement8745 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_262_in_fixed_statement8790 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_fixed_statement8794 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_pointer_type_in_fixed_statement8798 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement8800 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_fixed_statement8804 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_fixed_statement8808 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators8816 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_fixed_pointer_declarators8821 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators8825 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_fixed_pointer_declarator8835 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_fixed_pointer_declarator8839 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator8843 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_fixed_pointer_initializer8853 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_labeled_statement8860 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_labeled_statement8862 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_statement_in_labeled_statement8864 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_declaration_statement8899 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_local_constant_declaration_in_declaration_statement8931 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_declaration_statement8962 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_type_in_local_variable_declaration8970 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration8974 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_TYPE_VAR_in_local_variable_type8998 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_TYPE_DYNAMIC_in_local_variable_type9022 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_local_variable_type9046 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators9061 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_local_variable_declarators9064 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators9068 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_local_variable_declarator9091 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_local_variable_declarator9094 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF0004A6UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0381UL});
        public static readonly BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator9098 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_local_variable_initializer9125 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_initializer_in_local_variable_initializer9134 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer9140 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_stackalloc_initializer_unsupported_in_stackalloc_initializer9148 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_265_in_stackalloc_initializer_unsupported9169 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer_unsupported9173 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_stackalloc_initializer_unsupported9177 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_stackalloc_initializer_unsupported9181 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_stackalloc_initializer_unsupported9185 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_205_in_local_constant_declaration9208 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_local_constant_declaration9212 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_local_constant_declaration9216 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_expression_statement9224 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_expression_statement9228 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_statement_expression9242 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ELSE_in_else_statement9269 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_else_statement9275 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SWITCH_SECTION_in_switch_section9293 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_switch_label_in_switch_section9297 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DFDC1UL});
        public static readonly BitSet FOLLOW_statement_in_switch_section9302 = new BitSet(new ulong[]{0x4EEF7FFEEC000408UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_267_in_switch_label9330 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_constant_expression_in_switch_label9334 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_217_in_switch_label9351 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_268_in_iteration_statement9366 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_iteration_statement9368 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_SEP_in_iteration_statement9371 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_iteration_statement9373 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_do_statement_in_iteration_statement9415 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_270_in_iteration_statement9425 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_for_initializer_in_iteration_statement9427 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_SEP_in_iteration_statement9430 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFDUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_iteration_statement9432 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_SEP_in_iteration_statement9435 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFDUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_for_iterator_in_iteration_statement9437 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_SEP_in_iteration_statement9440 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_iteration_statement9442 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_FOREACH_in_iteration_statement9519 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_local_variable_type_in_iteration_statement9521 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_iteration_statement9525 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_iteration_statement9528 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_SEP_in_iteration_statement9530 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_iteration_statement9533 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_269_in_do_statement9613 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_do_statement9617 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_268_in_do_statement9621 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_do_statement9625 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_do_statement9629 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_do_statement9633 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_do_statement9637 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_for_initializer9675 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_expression_list_in_for_initializer9684 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_expression_list_in_for_iterator9697 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_expression_in_statement_expression_list9710 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_statement_expression_list9713 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_statement_expression_in_statement_expression_list9717 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_BREAK_in_jump_statement9744 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_jump_statement9748 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_271_in_jump_statement9763 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_jump_statement9767 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_goto_statement_in_jump_statement9781 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_RETURN_in_jump_statement9790 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_jump_statement9794 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_THROW_in_jump_statement9813 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_jump_statement9817 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_272_in_goto_statement9837 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF22000008UL,0x0000000000240981UL});
        public static readonly BitSet FOLLOW_identifier_in_goto_statement9843 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_267_in_goto_statement9870 = new BitSet(new ulong[]{0x000F7FFC0C000000UL,0x08407FBFFF000406UL,0x000000000F7FFFFCUL,0x7F9EFFFF2FC10008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constant_expression_in_goto_statement9874 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_217_in_goto_statement9897 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_goto_statement9912 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_catch_clause_in_catch_clauses9925 = new BitSet(new ulong[]{0x1000000000000002UL});
        public static readonly BitSet FOLLOW_CATCH_in_catch_clause9951 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_in_catch_clause9953 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_catch_clause9955 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_catch_clause9957 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_FINALLY_in_finally_clause9999 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_block_in_finally_clause10003 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_SYNCHRONIZED_in_synchronized_statement10032 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_synchronized_statement10034 = new BitSet(new ulong[]{0x4EEF7FFEEC000400UL,0x09577FBFFF000C8FUL,0x000000001F7FFFFCUL,0x7F9EFFFF2FC13FECUL,0x00000000003DF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_synchronized_statement10036 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_215_in_checked_statement10073 = new BitSet(new ulong[]{0x0000000204000000UL,0x0010000000000080UL,0x000000001F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_block_in_checked_statement10077 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_UNCHECKED_in_unchecked_statement10122 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_block_in_unchecked_statement10126 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_YIELD_RETURN_in_yield_statement10175 = new BitSet(new ulong[]{0x0000000000000004UL});
        public static readonly BitSet FOLLOW_expression_in_yield_statement10177 = new BitSet(new ulong[]{0x0000000000000008UL});
        public static readonly BitSet FOLLOW_YIELD_BREAK_in_yield_statement10188 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BOOL_in_predefined_type10238 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BYTE_in_predefined_type10244 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CHAR_in_predefined_type10252 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_275_in_predefined_type10260 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DOUBLE_in_predefined_type10266 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_FLOAT_in_predefined_type10272 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_INT_in_predefined_type10279 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LONG_in_predefined_type10288 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OBJECT_in_predefined_type10296 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_251_in_predefined_type10302 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SHORT_in_predefined_type10311 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_276_in_predefined_type10318 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_253_in_predefined_type10324 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_254_in_predefined_type10332 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_252_in_predefined_type10339 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_IDENTIFIER_in_identifier10363 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_also_keyword_in_identifier10379 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_keyword0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_249_in_also_keyword10710 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_195_in_also_keyword10716 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_237_in_also_keyword10722 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_238_in_also_keyword10728 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_239_in_also_keyword10734 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_241_in_also_keyword10740 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_242_in_also_keyword10746 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_243_in_also_keyword10752 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_244_in_also_keyword10758 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_274_in_also_keyword10764 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_225_in_also_keyword10771 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_224_in_also_keyword10777 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_226_in_also_keyword10783 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_227_in_also_keyword10789 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_236_in_also_keyword10795 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_230_in_also_keyword10801 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_234_in_also_keyword10807 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_235_in_also_keyword10813 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_231_in_also_keyword10819 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_232_in_also_keyword10825 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_228_in_also_keyword10833 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_233_in_also_keyword10839 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_277_in_also_keyword10845 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_229_in_also_keyword10851 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_250_in_also_keyword10857 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_247_in_also_keyword10863 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_248_in_also_keyword10869 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_263_in_also_keyword10875 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_256_in_also_keyword10881 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_264_in_also_keyword10887 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ELIF_in_also_keyword10893 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ENDIF_in_also_keyword10901 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DEFINE_in_also_keyword10907 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_UNDEF_in_also_keyword10913 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_221_in_also_keyword10919 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_Real_literal_in_literal10942 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_NUMBER_in_literal10957 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LONGNUMBER_in_literal10972 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_Hex_number_in_literal10987 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_Character_literal_in_literal11002 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STRINGLITERAL_in_literal11017 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_Verbatim_string_literal_in_literal11032 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_TRUE_in_literal11047 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_FALSE_in_literal11062 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_NULL_in_literal11077 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred1_JavaPrettyPrint1635 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred1_JavaPrettyPrint1640 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_synpred2_JavaPrettyPrint2178 = new BitSet(new ulong[]{0x02E0000000000400UL,0x0001000000000000UL,0x0000000000000000UL,0x0000000000001FA4UL});
        public static readonly BitSet FOLLOW_type_in_synpred2_JavaPrettyPrint2182 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_synpred2_JavaPrettyPrint2186 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_creation_expression_in_synpred3_JavaPrettyPrint2573 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_generic_dimension_specifier_in_synpred4_JavaPrettyPrint3233 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_synpred4_JavaPrettyPrint3237 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred5_JavaPrettyPrint3521 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred5_JavaPrettyPrint3525 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred6_JavaPrettyPrint3634 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred6_JavaPrettyPrint3638 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_220_in_synpred7_JavaPrettyPrint3789 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_221_in_synpred7_JavaPrettyPrint3791 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unary_expression_in_synpred8_JavaPrettyPrint4125 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000007FF000UL});
        public static readonly BitSet FOLLOW_assignment_operator_in_synpred8_JavaPrettyPrint4129 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_function_signature_in_synpred9_JavaPrettyPrint4857 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000400000000000UL});
        public static readonly BitSet FOLLOW_LAMBDA_in_synpred9_JavaPrettyPrint4861 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_expression_in_synpred10_JavaPrettyPrint4878 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_224_in_synpred11_JavaPrettyPrint5459 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_synpred12_JavaPrettyPrint5954 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred12_JavaPrettyPrint5958 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_synpred12_JavaPrettyPrint5962 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_synpred13_JavaPrettyPrint6691 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_synpred13_JavaPrettyPrint6693 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_synpred14_JavaPrettyPrint8133 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_set_in_synpred14_JavaPrettyPrint8137 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred15_JavaPrettyPrint8184 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred15_JavaPrettyPrint8189 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_declaration_statement_in_synpred16_JavaPrettyPrint8285 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_synpred17_JavaPrettyPrint9670 = new BitSet(new ulong[]{0x0000000000000002UL});

    }
}