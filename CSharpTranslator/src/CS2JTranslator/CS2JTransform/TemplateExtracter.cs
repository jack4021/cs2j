// $ANTLR 3.2 Sep 23, 2009 12:02:23 /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g 2021-03-09 19:06:31

// The variable 'variable' is assigned but its value is never used.
#pragma warning disable 168, 219
// Unreachable code detected.
#pragma warning disable 162


	using System;
	using System.Text;
	using Twiglet.CS2J.Translator.TypeRep;
    using Twiglet.CS2J.Translator.Transform;


using System;
using System.Collections.Generic;
using Antlr.Runtime;
using Antlr.Runtime.Tree;
using RewriteRuleITokenStream = Antlr.Runtime.Tree.RewriteRuleTokenStream;using Stack = System.Collections.Generic.Stack<object>;
using List = System.Collections.IList;
using ArrayList = System.Collections.Generic.List<object>;
using Map = System.Collections.IDictionary;
using HashMap = System.Collections.Generic.Dictionary<object, object>;
namespace  Twiglet.CS2J.Translator.Extract 
{
    public partial class TemplateExtracter : CommonWalker
    {
        public static readonly string[] tokenNames = new string[] 
    	{
            "<invalid>", 
    		"<EOR>", 
    		"<DOWN>", 
    		"<UP>", 
    		"PACKAGE", 
    		"CLASS", 
    		"EXTENDS", 
    		"IMPLEMENTS", 
    		"IMPORT", 
    		"INTERFACE", 
    		"FINAL", 
    		"ANNOTATION", 
    		"OUT", 
    		"CONST", 
    		"EVENT", 
    		"METHOD", 
    		"PROPERTY", 
    		"INDEXER", 
    		"FIELD", 
    		"OPERATOR", 
    		"ENUM", 
    		"DELEGATE", 
    		"CONVERSION_OPERATOR", 
    		"CONSTRUCTOR", 
    		"DESTRUCTOR", 
    		"METHOD_HEADER", 
    		"PARAMS", 
    		"PARAMS_TYPELESS", 
    		"SWITCH_SECTION", 
    		"YIELD_RETURN", 
    		"YIELD_BREAK", 
    		"UNCHECKED", 
    		"GLOBAL_ATTRIBUTE", 
    		"ATTRIBUTE", 
    		"MONOPLUS", 
    		"MONOMINUS", 
    		"MONONOT", 
    		"MONOTWIDDLE", 
    		"MONOSTAR", 
    		"ADDRESSOF", 
    		"PREINC", 
    		"PREDEC", 
    		"POSTINC", 
    		"POSTDEC", 
    		"PARENS", 
    		"INDEX", 
    		"APPLY", 
    		"ARGS", 
    		"NEW", 
    		"NEW_ARRAY", 
    		"NEW_DELEGATE", 
    		"NEW_ANON_OBJECT", 
    		"STATIC_CONSTRUCTOR", 
    		"PUBLIC", 
    		"PROTECTED", 
    		"PRIVATE", 
    		"INTERNAL", 
    		"STATIC", 
    		"RETURN", 
    		"TRY", 
    		"CATCH", 
    		"FINALLY", 
    		"THROW", 
    		"ELSE", 
    		"BREAK", 
    		"OBJECT", 
    		"THIS", 
    		"FOREACH", 
    		"IN", 
    		"OPEN_BRACKET", 
    		"CLOSE_BRACKET", 
    		"OPEN_BRACE", 
    		"CLOSE_BRACE", 
    		"LPAREN", 
    		"NULL_COALESCE", 
    		"IF", 
    		"ASSIGN", 
    		"PLUS_ASSIGN", 
    		"MINUS_ASSIGN", 
    		"STAR_ASSIGN", 
    		"DIV_ASSIGN", 
    		"MOD_ASSIGN", 
    		"BIT_AND_ASSIGN", 
    		"BIT_OR_ASSIGN", 
    		"BIT_XOR_ASSIGN", 
    		"LEFT_SHIFT_ASSIGN", 
    		"RIGHT_SHIFT_ASSIGN", 
    		"UNSIGNED_RIGHT_SHIFT_ASSIGN", 
    		"COND_EXPR", 
    		"RIGHT_SHIFT", 
    		"INSTANCEOF", 
    		"LOG_OR", 
    		"LOG_AND", 
    		"BIT_OR", 
    		"BIT_XOR", 
    		"BIT_AND", 
    		"NOT_EQUAL", 
    		"EQUAL", 
    		"LTHAN", 
    		"LTE", 
    		"GTE", 
    		"LEFT_SHIFT", 
    		"UNSIGNED_RIGHT_SHIFT", 
    		"SUPER", 
    		"LONGNUMBER", 
    		"PLUS", 
    		"MINUS", 
    		"DIV", 
    		"MOD", 
    		"STAR", 
    		"LAMBDA", 
    		"COMMA", 
    		"TYPE", 
    		"TYPE_VAR", 
    		"TYPE_DYNAMIC", 
    		"ENUM_BODY", 
    		"TYPE_PARAM_CONSTRAINT", 
    		"UNARY_EXPR", 
    		"CAST_EXPR", 
    		"EXCEPTION", 
    		"SYNCHRONIZED", 
    		"PAYLOAD", 
    		"PAYLOAD_LIST", 
    		"JAVAWRAPPER", 
    		"JAVAWRAPPEREXPRESSION", 
    		"JAVAWRAPPERARGUMENT", 
    		"JAVAWRAPPERARGUMENTLIST", 
    		"JAVAWRAPPERTYPE", 
    		"SEP", 
    		"KGHOLE", 
    		"BOOL", 
    		"BYTE", 
    		"CHAR", 
    		"SHORT", 
    		"INT", 
    		"LONG", 
    		"FLOAT", 
    		"DOUBLE", 
    		"IDENTIFIER", 
    		"Real_literal", 
    		"NUMBER", 
    		"Hex_number", 
    		"Character_literal", 
    		"STRINGLITERAL", 
    		"Verbatim_string_literal", 
    		"TRUE", 
    		"FALSE", 
    		"NULL", 
    		"DOT", 
    		"PTR", 
    		"GT", 
    		"USING", 
    		"ELIF", 
    		"ENDIF", 
    		"DEFINE", 
    		"UNDEF", 
    		"SEMI", 
    		"RPAREN", 
    		"WS", 
    		"TS", 
    		"DOC_LINE_COMMENT", 
    		"LINE_COMMENT", 
    		"COMMENT", 
    		"EscapeSequence", 
    		"Verbatim_string_literal_character", 
    		"Decimal_digits", 
    		"INTEGER_TYPE_SUFFIX", 
    		"Decimal_integer_literal", 
    		"GooBallIdentifier", 
    		"GooBall", 
    		"IdentifierStart", 
    		"IdentifierPart", 
    		"Exponent_part", 
    		"Real_type_suffix", 
    		"Pragma", 
    		"PP_CONDITIONAL", 
    		"PREPROCESSOR_DIRECTIVE", 
    		"IF_TOKEN", 
    		"DEFINE_TOKEN", 
    		"ELSE_TOKEN", 
    		"ENDIF_TOKEN", 
    		"UNDEF_TOKEN", 
    		"PP_EXPRESSION", 
    		"PP_OR_EXPRESSION", 
    		"PP_AND_EXPRESSION", 
    		"PP_EQUALITY_EXPRESSION", 
    		"PP_UNARY_EXPRESSION", 
    		"PP_PRIMARY_EXPRESSION", 
    		"UNICODE_LETTER", 
    		"HEX_DIGIT", 
    		"HEX_DIGITS", 
    		"DECIMAL_DIGIT", 
    		"Sign", 
    		"'namespace'", 
    		"'extern'", 
    		"'alias'", 
    		"'partial'", 
    		"'new'", 
    		"'unsafe'", 
    		"'abstract'", 
    		"'sealed'", 
    		"'readonly'", 
    		"'volatile'", 
    		"'virtual'", 
    		"'override'", 
    		"'const'", 
    		"'void'", 
    		"'base'", 
    		"'::'", 
    		"'++'", 
    		"'--'", 
    		"':'", 
    		"'out'", 
    		"'ref'", 
    		"'sizeof'", 
    		"'checked'", 
    		"'unchecked'", 
    		"'default'", 
    		"'delegate'", 
    		"'typeof'", 
    		"'?'", 
    		"'extends'", 
    		"'is'", 
    		"'as'", 
    		"'into'", 
    		"'from'", 
    		"'join'", 
    		"'on'", 
    		"'equals'", 
    		"'let'", 
    		"'orderby'", 
    		"'ascending'", 
    		"'descending'", 
    		"'select'", 
    		"'group'", 
    		"'by'", 
    		"'where'", 
    		"'assembly'", 
    		"'module'", 
    		"'field'", 
    		"'event'", 
    		"'method'", 
    		"'param'", 
    		"'property'", 
    		"'type'", 
    		"'class'", 
    		"'throws'", 
    		"'get'", 
    		"'set'", 
    		"'add'", 
    		"'remove'", 
    		"'sbyte'", 
    		"'ushort'", 
    		"'uint'", 
    		"'ulong'", 
    		"'struct'", 
    		"'__arglist'", 
    		"'params'", 
    		"'interface'", 
    		"'operator'", 
    		"'implicit'", 
    		"'explicit'", 
    		"'fixed'", 
    		"'var'", 
    		"'dynamic'", 
    		"'stackalloc'", 
    		"'switch'", 
    		"'case'", 
    		"'while'", 
    		"'do'", 
    		"'for'", 
    		"'continue'", 
    		"'goto'", 
    		"'lock'", 
    		"'yield'", 
    		"'decimal'", 
    		"'string'", 
    		"'pragma'"
        };

        public const int DECIMAL_DIGIT = 191;
        public const int MONOMINUS = 35;
        public const int PACKAGE = 4;
        public const int GLOBAL_ATTRIBUTE = 32;
        public const int STAR = 109;
        public const int JAVAWRAPPERTYPE = 127;
        public const int T__259 = 259;
        public const int T__258 = 258;
        public const int MOD = 108;
        public const int T__257 = 257;
        public const int CONST = 13;
        public const int PREDEC = 41;
        public const int T__262 = 262;
        public const int Character_literal = 142;
        public const int SWITCH_SECTION = 28;
        public const int T__263 = 263;
        public const int T__260 = 260;
        public const int T__261 = 261;
        public const int T__266 = 266;
        public const int LEFT_SHIFT_ASSIGN = 85;
        public const int T__267 = 267;
        public const int T__264 = 264;
        public const int T__265 = 265;
        public const int EOF = -1;
        public const int TYPE = 112;
        public const int ELSE_TOKEN = 179;
        public const int RPAREN = 157;
        public const int FINAL = 10;
        public const int IMPORT = 8;
        public const int UNCHECKED = 31;
        public const int CAST_EXPR = 118;
        public const int USING = 151;
        public const int T__247 = 247;
        public const int NOT_EQUAL = 96;
        public const int T__246 = 246;
        public const int T__249 = 249;
        public const int T__248 = 248;
        public const int PP_AND_EXPRESSION = 184;
        public const int THIS = 66;
        public const int RETURN = 58;
        public const int T__250 = 250;
        public const int ARGS = 47;
        public const int T__251 = 251;
        public const int T__252 = 252;
        public const int T__253 = 253;
        public const int T__254 = 254;
        public const int T__255 = 255;
        public const int Sign = 192;
        public const int UNICODE_LETTER = 188;
        public const int T__256 = 256;
        public const int TYPE_VAR = 113;
        public const int TYPE_PARAM_CONSTRAINT = 116;
        public const int YIELD_BREAK = 30;
        public const int PARAMS_TYPELESS = 27;
        public const int STATIC = 57;
        public const int DELEGATE = 21;
        public const int ELSE = 63;
        public const int MINUS_ASSIGN = 78;
        public const int NUMBER = 140;
        public const int BOOL = 130;
        public const int Decimal_integer_literal = 167;
        public const int DEFINE_TOKEN = 178;
        public const int INT = 134;
        public const int UNDEF_TOKEN = 181;
        public const int ENDIF_TOKEN = 180;
        public const int UNSIGNED_RIGHT_SHIFT_ASSIGN = 87;
        public const int WS = 158;
        public const int PP_PRIMARY_EXPRESSION = 187;
        public const int OUT = 12;
        public const int T__269 = 269;
        public const int T__268 = 268;
        public const int COND_EXPR = 88;
        public const int YIELD_RETURN = 29;
        public const int T__275 = 275;
        public const int T__276 = 276;
        public const int T__277 = 277;
        public const int MONOSTAR = 38;
        public const int GT = 150;
        public const int T__271 = 271;
        public const int LEFT_SHIFT = 101;
        public const int T__272 = 272;
        public const int T__273 = 273;
        public const int POSTINC = 42;
        public const int T__274 = 274;
        public const int PP_EQUALITY_EXPRESSION = 185;
        public const int CONSTRUCTOR = 23;
        public const int T__270 = 270;
        public const int T__215 = 215;
        public const int T__216 = 216;
        public const int PROTECTED = 54;
        public const int T__213 = 213;
        public const int APPLY = 46;
        public const int T__214 = 214;
        public const int T__219 = 219;
        public const int T__217 = 217;
        public const int T__218 = 218;
        public const int ANNOTATION = 11;
        public const int UNARY_EXPR = 117;
        public const int FLOAT = 136;
        public const int T__223 = 223;
        public const int T__222 = 222;
        public const int LPAREN = 73;
        public const int T__221 = 221;
        public const int T__220 = 220;
        public const int T__202 = 202;
        public const int PARENS = 44;
        public const int T__203 = 203;
        public const int T__204 = 204;
        public const int LONGNUMBER = 104;
        public const int T__205 = 205;
        public const int T__206 = 206;
        public const int T__207 = 207;
        public const int IMPLEMENTS = 7;
        public const int T__208 = 208;
        public const int T__209 = 209;
        public const int JAVAWRAPPEREXPRESSION = 124;
        public const int SEP = 128;
        public const int PREPROCESSOR_DIRECTIVE = 176;
        public const int PREINC = 40;
        public const int RIGHT_SHIFT_ASSIGN = 86;
        public const int PLUS = 105;
        public const int LOG_OR = 91;
        public const int LAMBDA = 110;
        public const int LOG_AND = 92;
        public const int T__210 = 210;
        public const int T__212 = 212;
        public const int PARAMS = 26;
        public const int T__211 = 211;
        public const int T__239 = 239;
        public const int T__237 = 237;
        public const int T__238 = 238;
        public const int T__235 = 235;
        public const int T__236 = 236;
        public const int TS = 159;
        public const int HEX_DIGIT = 189;
        public const int SHORT = 133;
        public const int INSTANCEOF = 90;
        public const int PAYLOAD = 121;
        public const int CLOSE_BRACE = 72;
        public const int METHOD_HEADER = 25;
        public const int MINUS = 106;
        public const int T__245 = 245;
        public const int T__244 = 244;
        public const int SEMI = 156;
        public const int T__243 = 243;
        public const int STAR_ASSIGN = 79;
        public const int T__242 = 242;
        public const int Hex_number = 141;
        public const int T__241 = 241;
        public const int T__240 = 240;
        public const int STATIC_CONSTRUCTOR = 52;
        public const int T__228 = 228;
        public const int T__229 = 229;
        public const int T__224 = 224;
        public const int ENUM = 20;
        public const int T__225 = 225;
        public const int T__226 = 226;
        public const int T__227 = 227;
        public const int UNSIGNED_RIGHT_SHIFT = 102;
        public const int STRINGLITERAL = 143;
        public const int BIT_XOR = 94;
        public const int ADDRESSOF = 39;
        public const int PLUS_ASSIGN = 77;
        public const int INTERFACE = 9;
        public const int DIV = 107;
        public const int PP_UNARY_EXPRESSION = 186;
        public const int T__232 = 232;
        public const int LONG = 135;
        public const int T__231 = 231;
        public const int PUBLIC = 53;
        public const int T__234 = 234;
        public const int T__233 = 233;
        public const int JAVAWRAPPERARGUMENTLIST = 126;
        public const int T__230 = 230;
        public const int INTERNAL = 56;
        public const int PP_OR_EXPRESSION = 183;
        public const int MOD_ASSIGN = 81;
        public const int JAVAWRAPPERARGUMENT = 125;
        public const int NEW = 48;
        public const int CHAR = 132;
        public const int DIV_ASSIGN = 80;
        public const int BREAK = 64;
        public const int OPEN_BRACKET = 69;
        public const int PAYLOAD_LIST = 122;
        public const int BIT_OR = 93;
        public const int NEW_ARRAY = 49;
        public const int TYPE_DYNAMIC = 114;
        public const int ENDIF = 153;
        public const int DOUBLE = 137;
        public const int ENUM_BODY = 115;
        public const int SUPER = 103;
        public const int COMMENT = 162;
        public const int EXCEPTION = 119;
        public const int KGHOLE = 129;
        public const int LINE_COMMENT = 161;
        public const int PRIVATE = 55;
        public const int BIT_XOR_ASSIGN = 84;
        public const int NULL = 147;
        public const int IdentifierStart = 170;
        public const int MONOTWIDDLE = 37;
        public const int TRY = 59;
        public const int Verbatim_string_literal = 144;
        public const int IF_TOKEN = 177;
        public const int ELIF = 152;
        public const int T__200 = 200;
        public const int T__201 = 201;
        public const int PROPERTY = 16;
        public const int MONOPLUS = 34;
        public const int FIELD = 18;
        public const int PP_CONDITIONAL = 175;
        public const int FOREACH = 67;
        public const int CATCH = 60;
        public const int FALSE = 146;
        public const int INTEGER_TYPE_SUFFIX = 166;
        public const int EscapeSequence = 163;
        public const int THROW = 62;
        public const int CLOSE_BRACKET = 70;
        public const int POSTDEC = 43;
        public const int DESTRUCTOR = 24;
        public const int CLASS = 5;
        public const int Real_literal = 139;
        public const int BIT_AND = 95;
        public const int PP_EXPRESSION = 182;
        public const int CONVERSION_OPERATOR = 22;
        public const int GTE = 100;
        public const int ATTRIBUTE = 33;
        public const int LTHAN = 98;
        public const int GooBall = 169;
        public const int DEFINE = 154;
        public const int LTE = 99;
        public const int IF = 75;
        public const int Exponent_part = 172;
        public const int INDEX = 45;
        public const int T__199 = 199;
        public const int T__198 = 198;
        public const int T__197 = 197;
        public const int SYNCHRONIZED = 120;
        public const int T__196 = 196;
        public const int IN = 68;
        public const int T__195 = 195;
        public const int T__194 = 194;
        public const int T__193 = 193;
        public const int OBJECT = 65;
        public const int COMMA = 111;
        public const int IDENTIFIER = 138;
        public const int EQUAL = 97;
        public const int RIGHT_SHIFT = 89;
        public const int UNDEF = 155;
        public const int DOT = 148;
        public const int IdentifierPart = 171;
        public const int JAVAWRAPPER = 123;
        public const int BYTE = 131;
        public const int MONONOT = 36;
        public const int BIT_OR_ASSIGN = 83;
        public const int DOC_LINE_COMMENT = 160;
        public const int OPERATOR = 19;
        public const int GooBallIdentifier = 168;
        public const int Pragma = 174;
        public const int Verbatim_string_literal_character = 164;
        public const int NEW_ANON_OBJECT = 51;
        public const int EVENT = 14;
        public const int TRUE = 145;
        public const int NULL_COALESCE = 74;
        public const int PTR = 149;
        public const int Decimal_digits = 165;
        public const int FINALLY = 61;
        public const int INDEXER = 17;
        public const int NEW_DELEGATE = 50;
        public const int Real_type_suffix = 173;
        public const int ASSIGN = 76;
        public const int HEX_DIGITS = 190;
        public const int EXTENDS = 6;
        public const int OPEN_BRACE = 71;
        public const int METHOD = 15;
        public const int BIT_AND_ASSIGN = 82;

        // delegates
        // delegators

        protected class NSContext_scope 
        {
            protected internal IList<string> searchpath;
            protected internal IList<AliasRepTemplate> aliases;
            protected internal string currentNS;
            protected internal TypeRepTemplate currentTypeRep;
        }
        protected Stack NSContext_stack = new Stack();



            public TemplateExtracter(ITreeNodeStream input)
        		: this(input, new RecognizerSharedState()) {
            }

            public TemplateExtracter(ITreeNodeStream input, RecognizerSharedState state)
        		: base(input, state) {
                InitializeCyclicDFAs();

                 
            }
            

        override public string[] TokenNames {
    		get { return TemplateExtracter.tokenNames; }
        }

        override public string GrammarFileName {
    		get { return "/project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g"; }
        }



            protected string[] CollectUses {
                get {
                    // We return the elements in source order (hopefully less confusing)
                    // so when looking for types we search from last element to first.
                    // here we are getting scopes in the opposite order so we need some
                    // jiggery pokery to restore desired order.
                     List<string> rets = new List<string>();
                     // returns in LIFO order, like you would expect from a stack
                     // sigh,  in C# we can't index into the scopes like you can in Java
                     // so we resort to a bit of low level hackery to get the ns lists
                     foreach (NSContext_scope nscontext in NSContext_stack) {
                         IList<string> uses = nscontext.searchpath;
                         for (int i = uses.Count - 1; i >= 0; i--) {
                             rets.Add(uses[i]);
                         }
                     }
                     // And now return reversed list
        			rets.Reverse();        
                    return rets.ToArray();
                }
            }
            protected AliasRepTemplate[] CollectAliases {
                get {
                    // We return the elements in source order (hopefully less confusing)
                    // so when looking for types we search from last element to first.
                    // here we are getting scopes in the opposite order so we need some
                    // jiggery pokery to restore desired order.
                     List<AliasRepTemplate> rets = new List<AliasRepTemplate>();
                     // returns in LIFO order, like you would expect from a stack
                     // sigh,  in C# we can't index into the scopes like you can in Java
                     // so we resort to a bit of low level hackery to get the ns lists
                     foreach (NSContext_scope nscontext in NSContext_stack) {
                         IList<AliasRepTemplate> aliases = nscontext.aliases;
                         for (int i = aliases.Count - 1; i >= 0; i--) {
                             rets.Add(aliases[i]);
                         }
                     }
                     // And now return reversed list
        			rets.Reverse();        
                    return rets.ToArray();
                }
            }
            
            protected T[] MergeArray<T>(T[] arr1, T el) {
               if (arr1 == null) {
                  return new T[] {el};
               }

               if (Array.IndexOf(arr1, el) < 0) {
                  List<T> ret = new List<T>(arr1.Length + 1);
                  ret.AddRange(arr1);
                  ret.Add(el);
                  return ret.ToArray();
               } 
               return arr1;
            }

            protected T[] MergeArray<T>(T[] arr1, T[] arr2) {
               if (arr1 == null || arr1.Length == 0) {
                  return arr2;
               }

               if (arr2 == null || arr2.Length == 0) {
                  return arr1;
               }

               List<T> ret = new List<T>(arr1);
               foreach (T v in arr2) {
                  if (Array.IndexOf(arr1, v) < 0) {
                     ret.Add(v);
                  }
               } 
               return ret.ToArray();

            }

            // Updates l
            protected void MergeList<T>(IList<T> l, T el) {
               if (l == null) {
                  throw new ArgumentNullException("l");
               }

               if (!l.Contains(el)) {
                  l.Add(el);
               } 
            }

            protected void MergeList<T>(IList<T> l1, IList<T> l2) {
               if (l1 == null) {
                  throw new ArgumentNullException("l1");
               }
               if (l2 != null) {
                  foreach (T v in l2) {
                     MergeList(l1,v);
                  }
               }
            }


            protected string ParentNameSpace {
                get {
                    return ((NSContext_scope)NSContext_stack.ToArray()[1]).currentNS;
                }
            }

            protected string mkTypeString(string tyName, List<String> tyargs) {
               StringBuilder ty = new StringBuilder();
               ty.Append(tyName);
               ty.Append(mkTypeArgString(tyargs));
               return ty.ToString();
            }

            protected string mkTypeArgString(List<String> tyargs) {
               StringBuilder ty = new StringBuilder();
               if (tyargs != null && tyargs.Count > 0) {
                  ty.Append("*[");
                  bool isFirst = true;
                  foreach (String v in tyargs) {
                     if (!isFirst) {
                        ty.Append(",");
                     }
                     isFirst = false;
                     ty.Append(v);
                  }
                  ty.Append("]*");
               }
               return ty.ToString();
            }

            private Dictionary<string,string> methodRenames = null;

            protected Dictionary<string,string> MethodRenames
            {
               get {
                  if (methodRenames == null) {
                     methodRenames = new Dictionary<string,string>();
                     methodRenames["ToString"] = "toString"; 
                     methodRenames["Equals"] = "equals"; 
                     methodRenames["GetHashCode"] = "hashCode"; 
                     methodRenames["Clone"] = "clone"; 
                  }
                  return methodRenames;
               }
            }




        // $ANTLR start "compilation_unit"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:200:8: public compilation_unit : namespace_body ;
        public void compilation_unit() // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());


                // For initial, file level scope
                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                ((NSContext_scope)NSContext_stack.Peek()).currentNS =  "";
                ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep =  null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:215:1: ( namespace_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:216:1: namespace_body
                {
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("start template extraction"); 
                	}
                	PushFollow(FOLLOW_namespace_body_in_compilation_unit113);
                	namespace_body();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("end template extraction"); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();

            }
            return ;
        }
        // $ANTLR end "compilation_unit"


        // $ANTLR start "namespace_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:221:1: namespace_declaration : 'namespace' qi= qualified_identifier namespace_block ( ';' )? ;
        public void namespace_declaration() // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());

            string qi = default(string);



                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep =  null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:228:1: ( 'namespace' qi= qualified_identifier namespace_block ( ';' )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:229:2: 'namespace' qi= qualified_identifier namespace_block ( ';' )?
                {
                	Match(input,193,FOLLOW_193_in_namespace_declaration139); if (state.failed) return ;
                	PushFollow(FOLLOW_qualified_identifier_in_namespace_declaration145);
                	qi = qualified_identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("namespace: " + qi); 
                	            ((NSContext_scope)NSContext_stack.Peek()).searchpath.Add(qi);
                	            // extend parent namespace
                	            ((NSContext_scope)NSContext_stack.Peek()).currentNS =  NSPrefix(ParentNameSpace) + qi;
                	          
                	}
                	PushFollow(FOLLOW_namespace_block_in_namespace_declaration169);
                	namespace_block();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:235:27: ( ';' )?
                	int alt1 = 2;
                	int LA1_0 = input.LA(1);

                	if ( (LA1_0 == SEMI) )
                	{
                	    alt1 = 1;
                	}
                	switch (alt1) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:235:27: ';'
                	        {
                	        	Match(input,SEMI,FOLLOW_SEMI_in_namespace_declaration173); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();

            }
            return ;
        }
        // $ANTLR end "namespace_declaration"


        // $ANTLR start "namespace_block"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:236:1: namespace_block : '{' namespace_body '}' ;
        public void namespace_block() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:236:16: ( '{' namespace_body '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:237:2: '{' namespace_body '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_namespace_block182); if (state.failed) return ;
                	PushFollow(FOLLOW_namespace_body_in_namespace_block186);
                	namespace_body();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_namespace_block190); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "namespace_block"


        // $ANTLR start "namespace_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:238:1: namespace_body : ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? ;
        public void namespace_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:238:15: ( ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:2: ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )?
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:2: ( extern_alias_directives )?
                	int alt2 = 2;
                	int LA2_0 = input.LA(1);

                	if ( (LA2_0 == 194) )
                	{
                	    int LA2_1 = input.LA(2);

                	    if ( (LA2_1 == 195) )
                	    {
                	        alt2 = 1;
                	    }
                	}
                	switch (alt2) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:2: extern_alias_directives
                	        {
                	        	PushFollow(FOLLOW_extern_alias_directives_in_namespace_body198);
                	        	extern_alias_directives();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:29: ( using_directives )?
                	int alt3 = 2;
                	int LA3_0 = input.LA(1);

                	if ( (LA3_0 == USING) )
                	{
                	    alt3 = 1;
                	}
                	switch (alt3) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:29: using_directives
                	        {
                	        	PushFollow(FOLLOW_using_directives_in_namespace_body203);
                	        	using_directives();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:49: ( global_attributes )?
                	int alt4 = 2;
                	int LA4_0 = input.LA(1);

                	if ( (LA4_0 == OPEN_BRACKET) )
                	{
                	    int LA4_1 = input.LA(2);

                	    if ( ((LA4_1 >= 237 && LA4_1 <= 238)) )
                	    {
                	        int LA4_3 = input.LA(3);

                	        if ( (LA4_3 == 211) )
                	        {
                	            alt4 = 1;
                	        }
                	    }
                	}
                	switch (alt4) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:49: global_attributes
                	        {
                	        	PushFollow(FOLLOW_global_attributes_in_namespace_body208);
                	        	global_attributes();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:70: ( namespace_member_declarations )?
                	int alt5 = 2;
                	int LA5_0 = input.LA(1);

                	if ( (LA5_0 == ENUM || (LA5_0 >= PUBLIC && LA5_0 <= STATIC) || LA5_0 == OPEN_BRACKET || (LA5_0 >= 193 && LA5_0 <= 194) || (LA5_0 >= 196 && LA5_0 <= 204) || LA5_0 == 218 || LA5_0 == 245 || LA5_0 == 255 || LA5_0 == 258) )
                	{
                	    alt5 = 1;
                	}
                	switch (alt5) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:239:70: namespace_member_declarations
                	        {
                	        	PushFollow(FOLLOW_namespace_member_declarations_in_namespace_body213);
                	        	namespace_member_declarations();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "namespace_body"


        // $ANTLR start "extern_alias_directives"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:240:1: extern_alias_directives : ( extern_alias_directive )+ ;
        public void extern_alias_directives() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:240:24: ( ( extern_alias_directive )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:241:2: ( extern_alias_directive )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:241:2: ( extern_alias_directive )+
                	int cnt6 = 0;
                	do 
                	{
                	    int alt6 = 2;
                	    int LA6_0 = input.LA(1);

                	    if ( (LA6_0 == 194) )
                	    {
                	        int LA6_2 = input.LA(2);

                	        if ( (LA6_2 == 195) )
                	        {
                	            alt6 = 1;
                	        }


                	    }


                	    switch (alt6) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:241:2: extern_alias_directive
                			    {
                			    	PushFollow(FOLLOW_extern_alias_directive_in_extern_alias_directives222);
                			    	extern_alias_directive();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt6 >= 1 ) goto loop6;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee6 =
                		                new EarlyExitException(6, input);
                		            throw eee6;
                	    }
                	    cnt6++;
                	} while (true);

                	loop6:
                		;	// Stops C# compiler whining that label 'loop6' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "extern_alias_directives"


        // $ANTLR start "extern_alias_directive"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:242:1: extern_alias_directive : e= 'extern' 'alias' i= identifier ';' ;
        public void extern_alias_directive() // throws RecognitionException [1]
        {   
            CommonTree e = null;
            TemplateExtracter.identifier_return i = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:242:23: (e= 'extern' 'alias' i= identifier ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:243:2: e= 'extern' 'alias' i= identifier ';'
                {
                	e=(CommonTree)Match(input,194,FOLLOW_194_in_extern_alias_directive233); if (state.failed) return ;
                	Match(input,195,FOLLOW_195_in_extern_alias_directive237); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_extern_alias_directive243);
                	i = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_extern_alias_directive246); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   Warning(((e != null) ? e.Line : 0), "[UNSUPPORTED] External Alias " + ((i != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(i.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(i.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "extern_alias_directive"


        // $ANTLR start "using_directives"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:244:1: using_directives : ( using_directive )+ ;
        public void using_directives() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:244:17: ( ( using_directive )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:245:2: ( using_directive )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:245:2: ( using_directive )+
                	int cnt7 = 0;
                	do 
                	{
                	    int alt7 = 2;
                	    int LA7_0 = input.LA(1);

                	    if ( (LA7_0 == USING) )
                	    {
                	        alt7 = 1;
                	    }


                	    switch (alt7) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:245:2: using_directive
                			    {
                			    	PushFollow(FOLLOW_using_directive_in_using_directives256);
                			    	using_directive();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt7 >= 1 ) goto loop7;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee7 =
                		                new EarlyExitException(7, input);
                		            throw eee7;
                	    }
                	    cnt7++;
                	} while (true);

                	loop7:
                		;	// Stops C# compiler whining that label 'loop7' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "using_directives"


        // $ANTLR start "using_directive"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:246:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
        public void using_directive() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:246:16: ( ( using_alias_directive | using_namespace_directive ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:247:2: ( using_alias_directive | using_namespace_directive )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:247:2: ( using_alias_directive | using_namespace_directive )
                	int alt8 = 2;
                	int LA8_0 = input.LA(1);

                	if ( (LA8_0 == USING) )
                	{
                	    int LA8_1 = input.LA(2);

                	    if ( (LA8_1 == IDENTIFIER) )
                	    {
                	        int LA8_2 = input.LA(3);

                	        if ( (LA8_2 == ASSIGN) )
                	        {
                	            alt8 = 1;
                	        }
                	        else if ( (LA8_2 == LTHAN || LA8_2 == DOT || LA8_2 == SEMI || LA8_2 == 208) )
                	        {
                	            alt8 = 2;
                	        }
                	        else 
                	        {
                	            if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	            NoViableAltException nvae_d8s2 =
                	                new NoViableAltException("", 8, 2, input);

                	            throw nvae_d8s2;
                	        }
                	    }
                	    else if ( ((LA8_1 >= ELIF && LA8_1 <= UNDEF) || LA8_1 == 195 || LA8_1 == 221 || (LA8_1 >= 224 && LA8_1 <= 239) || (LA8_1 >= 241 && LA8_1 <= 244) || (LA8_1 >= 247 && LA8_1 <= 250) || LA8_1 == 256 || (LA8_1 >= 263 && LA8_1 <= 264) || LA8_1 == 274 || LA8_1 == 277) )
                	    {
                	        int LA8_3 = input.LA(3);

                	        if ( (LA8_3 == LTHAN || LA8_3 == DOT || LA8_3 == SEMI || LA8_3 == 208) )
                	        {
                	            alt8 = 2;
                	        }
                	        else if ( (LA8_3 == ASSIGN) )
                	        {
                	            alt8 = 1;
                	        }
                	        else 
                	        {
                	            if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	            NoViableAltException nvae_d8s3 =
                	                new NoViableAltException("", 8, 3, input);

                	            throw nvae_d8s3;
                	        }
                	    }
                	    else 
                	    {
                	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        NoViableAltException nvae_d8s1 =
                	            new NoViableAltException("", 8, 1, input);

                	        throw nvae_d8s1;
                	    }
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d8s0 =
                	        new NoViableAltException("", 8, 0, input);

                	    throw nvae_d8s0;
                	}
                	switch (alt8) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:247:3: using_alias_directive
                	        {
                	        	PushFollow(FOLLOW_using_alias_directive_in_using_directive266);
                	        	using_alias_directive();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:248:4: using_namespace_directive
                	        {
                	        	PushFollow(FOLLOW_using_namespace_directive_in_using_directive271);
                	        	using_namespace_directive();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "using_directive"


        // $ANTLR start "using_alias_directive"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:249:1: using_alias_directive : 'using' i= identifier '=' ns= namespace_or_type_name ';' ;
        public void using_alias_directive() // throws RecognitionException [1]
        {   
            TemplateExtracter.identifier_return i = default(TemplateExtracter.identifier_return);

            string ns = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:251:5: ( 'using' i= identifier '=' ns= namespace_or_type_name ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:252:2: 'using' i= identifier '=' ns= namespace_or_type_name ';'
                {
                	Match(input,USING,FOLLOW_USING_in_using_alias_directive289); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_using_alias_directive295);
                	i = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_using_alias_directive299); if (state.failed) return ;
                	PushFollow(FOLLOW_namespace_or_type_name_in_using_alias_directive305);
                	ns = namespace_or_type_name();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_using_alias_directive309); if (state.failed) return ;

                }

                if ( (state.backtracking==0) )
                {
                   ((NSContext_scope)NSContext_stack.Peek()).aliases.Add(new AliasRepTemplate(((i != null) ? i.thetext : default(string)), ns));
                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "using_alias_directive"


        // $ANTLR start "using_namespace_directive"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:253:1: using_namespace_directive : 'using' ns= namespace_name ';' ;
        public void using_namespace_directive() // throws RecognitionException [1]
        {   
            string ns = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:255:5: ( 'using' ns= namespace_name ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:256:2: 'using' ns= namespace_name ';'
                {
                	Match(input,USING,FOLLOW_USING_in_using_namespace_directive326); if (state.failed) return ;
                	PushFollow(FOLLOW_namespace_name_in_using_namespace_directive332);
                	ns = namespace_name();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_using_namespace_directive336); if (state.failed) return ;

                }

                if ( (state.backtracking==0) )
                {
                   ((NSContext_scope)NSContext_stack.Peek()).searchpath.Add(ns); 
                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "using_namespace_directive"


        // $ANTLR start "namespace_member_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:257:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
        public void namespace_member_declarations() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:257:30: ( ( namespace_member_declaration )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:258:2: ( namespace_member_declaration )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:258:2: ( namespace_member_declaration )+
                	int cnt9 = 0;
                	do 
                	{
                	    int alt9 = 2;
                	    int LA9_0 = input.LA(1);

                	    if ( (LA9_0 == ENUM || (LA9_0 >= PUBLIC && LA9_0 <= STATIC) || LA9_0 == OPEN_BRACKET || (LA9_0 >= 193 && LA9_0 <= 194) || (LA9_0 >= 196 && LA9_0 <= 204) || LA9_0 == 218 || LA9_0 == 245 || LA9_0 == 255 || LA9_0 == 258) )
                	    {
                	        alt9 = 1;
                	    }


                	    switch (alt9) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:258:2: namespace_member_declaration
                			    {
                			    	PushFollow(FOLLOW_namespace_member_declaration_in_namespace_member_declarations344);
                			    	namespace_member_declaration();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt9 >= 1 ) goto loop9;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee9 =
                		                new EarlyExitException(9, input);
                		            throw eee9;
                	    }
                	    cnt9++;
                	} while (true);

                	loop9:
                		;	// Stops C# compiler whining that label 'loop9' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "namespace_member_declarations"


        // $ANTLR start "namespace_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:259:1: namespace_member_declaration : ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration );
        public void namespace_member_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:259:29: ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration )
                int alt12 = 2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0 == 193) )
                {
                    alt12 = 1;
                }
                else if ( (LA12_0 == ENUM || (LA12_0 >= PUBLIC && LA12_0 <= STATIC) || LA12_0 == OPEN_BRACKET || LA12_0 == 194 || (LA12_0 >= 196 && LA12_0 <= 204) || LA12_0 == 218 || LA12_0 == 245 || LA12_0 == 255 || LA12_0 == 258) )
                {
                    alt12 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d12s0 =
                        new NoViableAltException("", 12, 0, input);

                    throw nvae_d12s0;
                }
                switch (alt12) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:260:2: namespace_declaration
                        {
                        	PushFollow(FOLLOW_namespace_declaration_in_namespace_member_declaration353);
                        	namespace_declaration();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:261:4: ( attributes )? ( modifiers )? type_declaration
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:261:4: ( attributes )?
                        	int alt10 = 2;
                        	int LA10_0 = input.LA(1);

                        	if ( (LA10_0 == OPEN_BRACKET) )
                        	{
                        	    alt10 = 1;
                        	}
                        	switch (alt10) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:261:4: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_namespace_member_declaration358);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:261:18: ( modifiers )?
                        	int alt11 = 2;
                        	int LA11_0 = input.LA(1);

                        	if ( ((LA11_0 >= PUBLIC && LA11_0 <= STATIC) || LA11_0 == 194 || (LA11_0 >= 197 && LA11_0 <= 204)) )
                        	{
                        	    alt11 = 1;
                        	}
                        	switch (alt11) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:261:18: modifiers
                        	        {
                        	        	PushFollow(FOLLOW_modifiers_in_namespace_member_declaration363);
                        	        	modifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_type_declaration_in_namespace_member_declaration368);
                        	type_declaration();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "namespace_member_declaration"


        // $ANTLR start "type_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:262:1: type_declaration : ( ( 'partial' )=>p= 'partial' ( class_declaration[true] | struct_declaration[true] | interface_declaration[true] ) | class_declaration[false] | struct_declaration[false] | interface_declaration[false] | enum_declaration | delegate_declaration );
        public void type_declaration() // throws RecognitionException [1]
        {   
            CommonTree p = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:262:17: ( ( 'partial' )=>p= 'partial' ( class_declaration[true] | struct_declaration[true] | interface_declaration[true] ) | class_declaration[false] | struct_declaration[false] | interface_declaration[false] | enum_declaration | delegate_declaration )
                int alt14 = 6;
                int LA14_0 = input.LA(1);

                if ( (LA14_0 == 196) && (synpred1_TemplateExtracter()) )
                {
                    alt14 = 1;
                }
                else if ( (LA14_0 == 245) )
                {
                    alt14 = 2;
                }
                else if ( (LA14_0 == 255) )
                {
                    alt14 = 3;
                }
                else if ( (LA14_0 == 258) )
                {
                    alt14 = 4;
                }
                else if ( (LA14_0 == ENUM) )
                {
                    alt14 = 5;
                }
                else if ( (LA14_0 == 218) )
                {
                    alt14 = 6;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d14s0 =
                        new NoViableAltException("", 14, 0, input);

                    throw nvae_d14s0;
                }
                switch (alt14) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:263:2: ( 'partial' )=>p= 'partial' ( class_declaration[true] | struct_declaration[true] | interface_declaration[true] )
                        {
                        	p=(CommonTree)Match(input,196,FOLLOW_196_in_type_declaration384); if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:263:30: ( class_declaration[true] | struct_declaration[true] | interface_declaration[true] )
                        	int alt13 = 3;
                        	switch ( input.LA(1) ) 
                        	{
                        	case 245:
                        		{
                        	    alt13 = 1;
                        	    }
                        	    break;
                        	case 255:
                        		{
                        	    alt13 = 2;
                        	    }
                        	    break;
                        	case 258:
                        		{
                        	    alt13 = 3;
                        	    }
                        	    break;
                        		default:
                        		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        		    NoViableAltException nvae_d13s0 =
                        		        new NoViableAltException("", 13, 0, input);

                        		    throw nvae_d13s0;
                        	}

                        	switch (alt13) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:263:31: class_declaration[true]
                        	        {
                        	        	PushFollow(FOLLOW_class_declaration_in_type_declaration388);
                        	        	class_declaration(true);
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:264:11: struct_declaration[true]
                        	        {
                        	        	PushFollow(FOLLOW_struct_declaration_in_type_declaration401);
                        	        	struct_declaration(true);
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;
                        	    case 3 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:265:11: interface_declaration[true]
                        	        {
                        	        	PushFollow(FOLLOW_interface_declaration_in_type_declaration414);
                        	        	interface_declaration(true);
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:266:4: class_declaration[false]
                        {
                        	PushFollow(FOLLOW_class_declaration_in_type_declaration421);
                        	class_declaration(false);
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:267:4: struct_declaration[false]
                        {
                        	PushFollow(FOLLOW_struct_declaration_in_type_declaration427);
                        	struct_declaration(false);
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:268:4: interface_declaration[false]
                        {
                        	PushFollow(FOLLOW_interface_declaration_in_type_declaration433);
                        	interface_declaration(false);
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:269:4: enum_declaration
                        {
                        	PushFollow(FOLLOW_enum_declaration_in_type_declaration439);
                        	enum_declaration();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:270:4: delegate_declaration
                        {
                        	PushFollow(FOLLOW_delegate_declaration_in_type_declaration444);
                        	delegate_declaration();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "type_declaration"


        // $ANTLR start "qualified_identifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:272:1: qualified_identifier returns [string thetext] : i1= identifier ( '.' ip= identifier )* ;
        public string qualified_identifier() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            TemplateExtracter.identifier_return i1 = default(TemplateExtracter.identifier_return);

            TemplateExtracter.identifier_return ip = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:272:46: (i1= identifier ( '.' ip= identifier )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:273:2: i1= identifier ( '.' ip= identifier )*
                {
                	PushFollow(FOLLOW_identifier_in_qualified_identifier459);
                	i1 = identifier();
                	state._fsp--;
                	if (state.failed) return thetext;
                	if ( (state.backtracking==0) )
                	{
                	   thetext =  ((i1 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(i1.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(i1.Start)) : null); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:273:41: ( '.' ip= identifier )*
                	do 
                	{
                	    int alt15 = 2;
                	    int LA15_0 = input.LA(1);

                	    if ( (LA15_0 == DOT) )
                	    {
                	        alt15 = 1;
                	    }


                	    switch (alt15) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:273:42: '.' ip= identifier
                			    {
                			    	Match(input,DOT,FOLLOW_DOT_in_qualified_identifier464); if (state.failed) return thetext;
                			    	PushFollow(FOLLOW_identifier_in_qualified_identifier468);
                			    	ip = identifier();
                			    	state._fsp--;
                			    	if (state.failed) return thetext;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   thetext += "." + ((ip != null) ? input.TokenStream.ToString(
                			    	    input.TreeAdaptor.GetTokenStartIndex(ip.Start),
                			    	    input.TreeAdaptor.GetTokenStopIndex(ip.Start)) : null); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop15;
                	    }
                	} while (true);

                	loop15:
                		;	// Stops C# compiler whining that label 'loop15' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "qualified_identifier"


        // $ANTLR start "namespace_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:274:1: namespace_name returns [string thetext] : namespace_or_type_name ;
        public string namespace_name() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            string namespace_or_type_name1 = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:275:2: ( namespace_or_type_name )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:275:4: namespace_or_type_name
                {
                	PushFollow(FOLLOW_namespace_or_type_name_in_namespace_name485);
                	namespace_or_type_name1 = namespace_or_type_name();
                	state._fsp--;
                	if (state.failed) return thetext;
                	if ( (state.backtracking==0) )
                	{
                	   thetext =  namespace_or_type_name1; 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "namespace_name"


        // $ANTLR start "modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:277:1: modifiers : ( modifier )+ ;
        public void modifiers() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:277:10: ( ( modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:278:2: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:278:2: ( modifier )+
                	int cnt16 = 0;
                	do 
                	{
                	    int alt16 = 2;
                	    int LA16_0 = input.LA(1);

                	    if ( ((LA16_0 >= PUBLIC && LA16_0 <= STATIC) || LA16_0 == 194 || (LA16_0 >= 197 && LA16_0 <= 204)) )
                	    {
                	        alt16 = 1;
                	    }


                	    switch (alt16) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:278:2: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_modifiers495);
                			    	modifier();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt16 >= 1 ) goto loop16;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee16 =
                		                new EarlyExitException(16, input);
                		            throw eee16;
                	    }
                	    cnt16++;
                	} while (true);

                	loop16:
                		;	// Stops C# compiler whining that label 'loop16' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "modifiers"


        // $ANTLR start "modifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:279:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' );
        public void modifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:279:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= PUBLIC && input.LA(1) <= STATIC) || input.LA(1) == 194 || (input.LA(1) >= 197 && input.LA(1) <= 204) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "modifier"


        // $ANTLR start "class_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:283:1: class_member_declaration : ( attributes )? (m= modifiers )? ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | class_declaration[false] | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) ;
        public void class_member_declaration() // throws RecognitionException [1]
        {   
            CommonTree p = null;
            string ct = default(string);

            string rt = default(string);

            TemplateExtracter.type_name_return type_name2 = default(TemplateExtracter.type_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:283:25: ( ( attributes )? (m= modifiers )? ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | class_declaration[false] | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:284:2: ( attributes )? (m= modifiers )? ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | class_declaration[false] | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:284:2: ( attributes )?
                	int alt17 = 2;
                	int LA17_0 = input.LA(1);

                	if ( (LA17_0 == OPEN_BRACKET) )
                	{
                	    alt17 = 1;
                	}
                	switch (alt17) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:284:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_class_member_declaration567);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:286:3: (m= modifiers )?
                	int alt18 = 2;
                	int LA18_0 = input.LA(1);

                	if ( ((LA18_0 >= PUBLIC && LA18_0 <= STATIC) || LA18_0 == 194 || (LA18_0 >= 197 && LA18_0 <= 204)) )
                	{
                	    alt18 = 1;
                	}
                	switch (alt18) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:286:3: m= modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_class_member_declaration578);
                	        	modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:287:2: ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | class_declaration[false] | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
                	int alt21 = 13;
                	alt21 = dfa21.Predict(input);
                	switch (alt21) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:287:4: 'const' ct= type constant_declarators[$ct.thetext] ';'
                	        {
                	        	Match(input,205,FOLLOW_205_in_class_member_declaration584); if (state.failed) return ;
                	        	PushFollow(FOLLOW_type_in_class_member_declaration590);
                	        	ct = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	PushFollow(FOLLOW_constant_declarators_in_class_member_declaration594);
                	        	constant_declarators(ct);
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,SEMI,FOLLOW_SEMI_in_class_member_declaration599); if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:288:4: event_declaration
                	        {
                	        	PushFollow(FOLLOW_event_declaration_in_class_member_declaration604);
                	        	event_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:289:4: p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] )
                	        {
                	        	p=(CommonTree)Match(input,196,FOLLOW_196_in_class_member_declaration613); if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:289:17: ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] )
                	        	int alt19 = 4;
                	        	switch ( input.LA(1) ) 
                	        	{
                	        	case 206:
                	        		{
                	        	    alt19 = 1;
                	        	    }
                	        	    break;
                	        	case 258:
                	        		{
                	        	    alt19 = 2;
                	        	    }
                	        	    break;
                	        	case 245:
                	        		{
                	        	    alt19 = 3;
                	        	    }
                	        	    break;
                	        	case 255:
                	        		{
                	        	    alt19 = 4;
                	        	    }
                	        	    break;
                	        		default:
                	        		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        		    NoViableAltException nvae_d19s0 =
                	        		        new NoViableAltException("", 19, 0, input);

                	        		    throw nvae_d19s0;
                	        	}

                	        	switch (alt19) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:289:18: 'void' method_declaration[true, \"System.Void\"]
                	        	        {
                	        	        	Match(input,206,FOLLOW_206_in_class_member_declaration617); if (state.failed) return ;
                	        	        	PushFollow(FOLLOW_method_declaration_in_class_member_declaration619);
                	        	        	method_declaration(true, "System.Void");
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:290:9: interface_declaration[true]
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_declaration_in_class_member_declaration631);
                	        	        	interface_declaration(true);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 3 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:291:9: class_declaration[true]
                	        	        {
                	        	        	PushFollow(FOLLOW_class_declaration_in_class_member_declaration643);
                	        	        	class_declaration(true);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 4 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:292:9: struct_declaration[true]
                	        	        {
                	        	        	PushFollow(FOLLOW_struct_declaration_in_class_member_declaration655);
                	        	        	struct_declaration(true);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 4 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:293:4: interface_declaration[false]
                	        {
                	        	PushFollow(FOLLOW_interface_declaration_in_class_member_declaration662);
                	        	interface_declaration(false);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 5 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:294:4: 'void' method_declaration[false, \"System.Void\"]
                	        {
                	        	Match(input,206,FOLLOW_206_in_class_member_declaration669); if (state.failed) return ;
                	        	PushFollow(FOLLOW_method_declaration_in_class_member_declaration673);
                	        	method_declaration(false, "System.Void");
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 6 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:295:4: rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] )
                	        {
                	        	PushFollow(FOLLOW_type_in_class_member_declaration681);
                	        	rt = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:295:12: ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] )
                	        	int alt20 = 6;
                	        	alt20 = dfa20.Predict(input);
                	        	switch (alt20) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:295:14: ( member_name '(' )=> method_declaration[false, $rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_method_declaration_in_class_member_declaration695);
                	        	        	method_declaration(false, rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:296:8: ( member_name '{' )=> property_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_property_declaration_in_class_member_declaration715);
                	        	        	property_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 3 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:297:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"]
                	        	        {
                	        	        	PushFollow(FOLLOW_type_name_in_class_member_declaration739);
                	        	        	type_name2 = type_name();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;
                	        	        	Match(input,DOT,FOLLOW_DOT_in_class_member_declaration741); if (state.failed) return ;
                	        	        	PushFollow(FOLLOW_indexer_declaration_in_class_member_declaration743);
                	        	        	indexer_declaration(rt, ((type_name2 != null) ? type_name2.thetext : default(string))+".");
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 4 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:298:8: indexer_declaration[$rt.thetext, \"\"]
                	        	        {
                	        	        	PushFollow(FOLLOW_indexer_declaration_in_class_member_declaration753);
                	        	        	indexer_declaration(rt, "");
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 5 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:299:11: field_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_field_declaration_in_class_member_declaration767);
                	        	        	field_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 6 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:300:11: operator_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_operator_declaration_in_class_member_declaration786);
                	        	        	operator_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 7 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:304:4: class_declaration[false]
                	        {
                	        	PushFollow(FOLLOW_class_declaration_in_class_member_declaration805);
                	        	class_declaration(false);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 8 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:305:4: struct_declaration[false]
                	        {
                	        	PushFollow(FOLLOW_struct_declaration_in_class_member_declaration813);
                	        	struct_declaration(false);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 9 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:306:4: enum_declaration
                	        {
                	        	PushFollow(FOLLOW_enum_declaration_in_class_member_declaration821);
                	        	enum_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 10 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:307:4: delegate_declaration
                	        {
                	        	PushFollow(FOLLOW_delegate_declaration_in_class_member_declaration828);
                	        	delegate_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 11 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:308:4: conversion_operator_declaration
                	        {
                	        	PushFollow(FOLLOW_conversion_operator_declaration_in_class_member_declaration834);
                	        	conversion_operator_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 12 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:309:4: constructor_declaration
                	        {
                	        	PushFollow(FOLLOW_constructor_declaration_in_class_member_declaration839);
                	        	constructor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 13 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:310:4: destructor_declaration
                	        {
                	        	PushFollow(FOLLOW_destructor_declaration_in_class_member_declaration845);
                	        	destructor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "class_member_declaration"


        // $ANTLR start "primary_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:314:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( object_creation_expression )=> object_creation_expression | delegate_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
        public void primary_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:314:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( object_creation_expression )=> object_creation_expression | delegate_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
                int alt27 = 9;
                alt27 = dfa27.Predict(input);
                switch (alt27) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:315:2: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
                        {
                        	Match(input,THIS,FOLLOW_THIS_in_primary_expression871); if (state.failed) return ;
                        	PushFollow(FOLLOW_brackets_in_primary_expression875);
                        	brackets();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:315:46: ( primary_expression_part )*
                        	do 
                        	{
                        	    int alt22 = 2;
                        	    int LA22_0 = input.LA(1);

                        	    if ( (LA22_0 == OPEN_BRACKET || LA22_0 == LPAREN || (LA22_0 >= DOT && LA22_0 <= PTR) || (LA22_0 >= 209 && LA22_0 <= 210)) )
                        	    {
                        	        alt22 = 1;
                        	    }


                        	    switch (alt22) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:315:46: primary_expression_part
                        			    {
                        			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression879);
                        			    	primary_expression_part();
                        			    	state._fsp--;
                        			    	if (state.failed) return ;

                        			    }
                        			    break;

                        			default:
                        			    goto loop22;
                        	    }
                        	} while (true);

                        	loop22:
                        		;	// Stops C# compiler whining that label 'loop22' has no statements


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:316:4: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
                        {
                        	Match(input,THIS,FOLLOW_THIS_in_primary_expression895); if (state.failed) return ;
                        	PushFollow(FOLLOW_brackets_in_primary_expression899);
                        	brackets();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:316:47: ( primary_expression_part )*
                        	do 
                        	{
                        	    int alt23 = 2;
                        	    int LA23_0 = input.LA(1);

                        	    if ( (LA23_0 == OPEN_BRACKET || LA23_0 == LPAREN || (LA23_0 >= DOT && LA23_0 <= PTR) || (LA23_0 >= 209 && LA23_0 <= 210)) )
                        	    {
                        	        alt23 = 1;
                        	    }


                        	    switch (alt23) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:316:47: primary_expression_part
                        			    {
                        			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression903);
                        			    	primary_expression_part();
                        			    	state._fsp--;
                        			    	if (state.failed) return ;

                        			    }
                        			    break;

                        			default:
                        			    goto loop23;
                        	    }
                        	} while (true);

                        	loop23:
                        		;	// Stops C# compiler whining that label 'loop23' has no statements


                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:317:4: primary_expression_start ( primary_expression_part )*
                        {
                        	PushFollow(FOLLOW_primary_expression_start_in_primary_expression909);
                        	primary_expression_start();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:317:31: ( primary_expression_part )*
                        	do 
                        	{
                        	    int alt24 = 2;
                        	    int LA24_0 = input.LA(1);

                        	    if ( (LA24_0 == OPEN_BRACKET || LA24_0 == LPAREN || (LA24_0 >= DOT && LA24_0 <= PTR) || (LA24_0 >= 209 && LA24_0 <= 210)) )
                        	    {
                        	        alt24 = 1;
                        	    }


                        	    switch (alt24) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:317:31: primary_expression_part
                        			    {
                        			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression913);
                        			    	primary_expression_part();
                        			    	state._fsp--;
                        			    	if (state.failed) return ;

                        			    }
                        			    break;

                        			default:
                        			    goto loop24;
                        	    }
                        	} while (true);

                        	loop24:
                        		;	// Stops C# compiler whining that label 'loop24' has no statements


                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:318:4: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( object_creation_expression )=> object_creation_expression | delegate_creation_expression | anonymous_object_creation_expression )
                        {
                        	Match(input,197,FOLLOW_197_in_primary_expression919); if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:318:10: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( object_creation_expression )=> object_creation_expression | delegate_creation_expression | anonymous_object_creation_expression )
                        	int alt26 = 4;
                        	alt26 = dfa26.Predict(input);
                        	switch (alt26) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:318:14: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
                        	        {
                        	        	PushFollow(FOLLOW_object_creation_expression_in_primary_expression947);
                        	        	object_creation_expression();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;
                        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:319:35: ( primary_expression_part )+
                        	        	int cnt25 = 0;
                        	        	do 
                        	        	{
                        	        	    int alt25 = 2;
                        	        	    int LA25_0 = input.LA(1);

                        	        	    if ( (LA25_0 == OPEN_BRACKET || LA25_0 == LPAREN || (LA25_0 >= DOT && LA25_0 <= PTR) || (LA25_0 >= 209 && LA25_0 <= 210)) )
                        	        	    {
                        	        	        alt25 = 1;
                        	        	    }


                        	        	    switch (alt25) 
                        	        		{
                        	        			case 1 :
                        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:319:35: primary_expression_part
                        	        			    {
                        	        			    	PushFollow(FOLLOW_primary_expression_part_in_primary_expression951);
                        	        			    	primary_expression_part();
                        	        			    	state._fsp--;
                        	        			    	if (state.failed) return ;

                        	        			    }
                        	        			    break;

                        	        			default:
                        	        			    if ( cnt25 >= 1 ) goto loop25;
                        	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        	        		            EarlyExitException eee25 =
                        	        		                new EarlyExitException(25, input);
                        	        		            throw eee25;
                        	        	    }
                        	        	    cnt25++;
                        	        	} while (true);

                        	        	loop25:
                        	        		;	// Stops C# compiler whining that label 'loop25' has no statements


                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:324:7: ( object_creation_expression )=> object_creation_expression
                        	        {
                        	        	PushFollow(FOLLOW_object_creation_expression_in_primary_expression1013);
                        	        	object_creation_expression();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;
                        	    case 3 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:325:7: delegate_creation_expression
                        	        {
                        	        	PushFollow(FOLLOW_delegate_creation_expression_in_primary_expression1021);
                        	        	delegate_creation_expression();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;
                        	    case 4 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:326:7: anonymous_object_creation_expression
                        	        {
                        	        	PushFollow(FOLLOW_anonymous_object_creation_expression_in_primary_expression1030);
                        	        	anonymous_object_creation_expression();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:327:4: sizeof_expression
                        {
                        	PushFollow(FOLLOW_sizeof_expression_in_primary_expression1043);
                        	sizeof_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:328:4: checked_expression
                        {
                        	PushFollow(FOLLOW_checked_expression_in_primary_expression1054);
                        	checked_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:329:4: unchecked_expression
                        {
                        	PushFollow(FOLLOW_unchecked_expression_in_primary_expression1073);
                        	unchecked_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:330:4: default_value_expression
                        {
                        	PushFollow(FOLLOW_default_value_expression_in_primary_expression1090);
                        	default_value_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:331:4: anonymous_method_expression
                        {
                        	PushFollow(FOLLOW_anonymous_method_expression_in_primary_expression1103);
                        	anonymous_method_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "primary_expression"


        // $ANTLR start "primary_expression_start"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:334:1: primary_expression_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
        public void primary_expression_start() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:334:25: ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
                int alt29 = 8;
                alt29 = dfa29.Predict(input);
                switch (alt29) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:335:2: predefined_type
                        {
                        	PushFollow(FOLLOW_predefined_type_in_primary_expression_start1116);
                        	predefined_type();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:336:4: ( identifier generic_argument_list )=> identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_primary_expression_start1144);
                        	identifier();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	PushFollow(FOLLOW_generic_argument_list_in_primary_expression_start1148);
                        	generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:337:4: identifier ( '::' identifier )?
                        {
                        	PushFollow(FOLLOW_identifier_in_primary_expression_start1153);
                        	identifier();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:337:15: ( '::' identifier )?
                        	int alt28 = 2;
                        	int LA28_0 = input.LA(1);

                        	if ( (LA28_0 == 208) )
                        	{
                        	    alt28 = 1;
                        	}
                        	switch (alt28) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:337:16: '::' identifier
                        	        {
                        	        	Match(input,208,FOLLOW_208_in_primary_expression_start1156); if (state.failed) return ;
                        	        	PushFollow(FOLLOW_identifier_in_primary_expression_start1160);
                        	        	identifier();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:338:4: 'this'
                        {
                        	Match(input,THIS,FOLLOW_THIS_in_primary_expression_start1167); if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:339:4: 'base'
                        {
                        	Match(input,207,FOLLOW_207_in_primary_expression_start1173); if (state.failed) return ;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:340:4: paren_expression
                        {
                        	PushFollow(FOLLOW_paren_expression_in_primary_expression_start1178);
                        	paren_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:341:4: typeof_expression
                        {
                        	PushFollow(FOLLOW_typeof_expression_in_primary_expression_start1183);
                        	typeof_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:342:4: literal
                        {
                        	PushFollow(FOLLOW_literal_in_primary_expression_start1201);
                        	literal();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "primary_expression_start"


        // $ANTLR start "primary_expression_part"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:345:1: primary_expression_part : ( access_identifier | brackets_or_arguments | '++' | '--' );
        public void primary_expression_part() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:345:24: ( access_identifier | brackets_or_arguments | '++' | '--' )
                int alt30 = 4;
                switch ( input.LA(1) ) 
                {
                case DOT:
                case PTR:
                	{
                    alt30 = 1;
                    }
                    break;
                case OPEN_BRACKET:
                case LPAREN:
                	{
                    alt30 = 2;
                    }
                    break;
                case 209:
                	{
                    alt30 = 3;
                    }
                    break;
                case 210:
                	{
                    alt30 = 4;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d30s0 =
                	        new NoViableAltException("", 30, 0, input);

                	    throw nvae_d30s0;
                }

                switch (alt30) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:346:3: access_identifier
                        {
                        	PushFollow(FOLLOW_access_identifier_in_primary_expression_part1212);
                        	access_identifier();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:347:4: brackets_or_arguments
                        {
                        	PushFollow(FOLLOW_brackets_or_arguments_in_primary_expression_part1217);
                        	brackets_or_arguments();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:348:4: '++'
                        {
                        	Match(input,209,FOLLOW_209_in_primary_expression_part1223); if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:349:4: '--'
                        {
                        	Match(input,210,FOLLOW_210_in_primary_expression_part1228); if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "primary_expression_part"


        // $ANTLR start "access_identifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:350:1: access_identifier : access_operator type_or_generic ;
        public void access_identifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:350:18: ( access_operator type_or_generic )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:351:2: access_operator type_or_generic
                {
                	PushFollow(FOLLOW_access_operator_in_access_identifier1236);
                	access_operator();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_type_or_generic_in_access_identifier1240);
                	type_or_generic();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "access_identifier"


        // $ANTLR start "access_operator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:352:1: access_operator : ( '.' | '->' );
        public void access_operator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:352:16: ( '.' | '->' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "access_operator"


        // $ANTLR start "brackets_or_arguments"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:354:1: brackets_or_arguments : ( brackets | arguments );
        public void brackets_or_arguments() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:354:22: ( brackets | arguments )
                int alt31 = 2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0 == OPEN_BRACKET) )
                {
                    alt31 = 1;
                }
                else if ( (LA31_0 == LPAREN) )
                {
                    alt31 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d31s0 =
                        new NoViableAltException("", 31, 0, input);

                    throw nvae_d31s0;
                }
                switch (alt31) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:355:2: brackets
                        {
                        	PushFollow(FOLLOW_brackets_in_brackets_or_arguments1262);
                        	brackets();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:355:13: arguments
                        {
                        	PushFollow(FOLLOW_arguments_in_brackets_or_arguments1266);
                        	arguments();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "brackets_or_arguments"


        // $ANTLR start "brackets"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:356:1: brackets : '[' ( expression_list )? ']' ;
        public void brackets() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:356:9: ( '[' ( expression_list )? ']' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:357:2: '[' ( expression_list )? ']'
                {
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_brackets1274); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:357:8: ( expression_list )?
                	int alt32 = 2;
                	int LA32_0 = input.LA(1);

                	if ( ((LA32_0 >= MONONOT && LA32_0 <= MONOTWIDDLE) || LA32_0 == NEW_ARRAY || (LA32_0 >= OBJECT && LA32_0 <= THIS) || LA32_0 == LPAREN || LA32_0 == BIT_AND || (LA32_0 >= PLUS && LA32_0 <= MINUS) || LA32_0 == STAR || (LA32_0 >= BOOL && LA32_0 <= NULL) || (LA32_0 >= ELIF && LA32_0 <= UNDEF) || LA32_0 == 195 || LA32_0 == 197 || LA32_0 == 207 || (LA32_0 >= 209 && LA32_0 <= 210) || (LA32_0 >= 214 && LA32_0 <= 219) || LA32_0 == 221 || (LA32_0 >= 224 && LA32_0 <= 239) || (LA32_0 >= 241 && LA32_0 <= 244) || (LA32_0 >= 247 && LA32_0 <= 254) || LA32_0 == 256 || (LA32_0 >= 263 && LA32_0 <= 264) || (LA32_0 >= 274 && LA32_0 <= 277)) )
                	{
                	    alt32 = 1;
                	}
                	switch (alt32) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:357:8: expression_list
                	        {
                	        	PushFollow(FOLLOW_expression_list_in_brackets1278);
                	        	expression_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_brackets1283); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "brackets"


        // $ANTLR start "paren_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:358:1: paren_expression : '(' expression ')' ;
        public void paren_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:358:17: ( '(' expression ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:359:2: '(' expression ')'
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_paren_expression1293); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_paren_expression1297);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_paren_expression1301); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "paren_expression"


        // $ANTLR start "arguments"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:360:1: arguments : '(' ( argument_list )? ')' ;
        public void arguments() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:360:10: ( '(' ( argument_list )? ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:361:2: '(' ( argument_list )? ')'
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_arguments1310); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:361:8: ( argument_list )?
                	int alt33 = 2;
                	int LA33_0 = input.LA(1);

                	if ( ((LA33_0 >= MONONOT && LA33_0 <= MONOTWIDDLE) || LA33_0 == NEW_ARRAY || (LA33_0 >= OBJECT && LA33_0 <= THIS) || LA33_0 == LPAREN || LA33_0 == BIT_AND || (LA33_0 >= PLUS && LA33_0 <= MINUS) || LA33_0 == STAR || (LA33_0 >= BOOL && LA33_0 <= NULL) || (LA33_0 >= ELIF && LA33_0 <= UNDEF) || LA33_0 == 195 || LA33_0 == 197 || LA33_0 == 207 || (LA33_0 >= 209 && LA33_0 <= 210) || (LA33_0 >= 212 && LA33_0 <= 219) || LA33_0 == 221 || (LA33_0 >= 224 && LA33_0 <= 239) || (LA33_0 >= 241 && LA33_0 <= 244) || (LA33_0 >= 247 && LA33_0 <= 254) || LA33_0 == 256 || (LA33_0 >= 263 && LA33_0 <= 264) || (LA33_0 >= 274 && LA33_0 <= 277)) )
                	{
                	    alt33 = 1;
                	}
                	switch (alt33) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:361:8: argument_list
                	        {
                	        	PushFollow(FOLLOW_argument_list_in_arguments1314);
                	        	argument_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_arguments1319); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "arguments"


        // $ANTLR start "argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:362:1: argument_list : argument ( ',' argument )* ;
        public void argument_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:362:14: ( argument ( ',' argument )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:363:2: argument ( ',' argument )*
                {
                	PushFollow(FOLLOW_argument_in_argument_list1328);
                	argument();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:363:11: ( ',' argument )*
                	do 
                	{
                	    int alt34 = 2;
                	    int LA34_0 = input.LA(1);

                	    if ( (LA34_0 == COMMA) )
                	    {
                	        alt34 = 1;
                	    }


                	    switch (alt34) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:363:12: ',' argument
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_argument_list1331); if (state.failed) return ;
                			    	PushFollow(FOLLOW_argument_in_argument_list1333);
                			    	argument();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop34;
                	    }
                	} while (true);

                	loop34:
                		;	// Stops C# compiler whining that label 'loop34' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "argument_list"


        // $ANTLR start "argument"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:365:1: argument : ( argument_name argument_value | argument_value );
        public void argument() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:365:9: ( argument_name argument_value | argument_value )
                int alt35 = 2;
                switch ( input.LA(1) ) 
                {
                case IDENTIFIER:
                	{
                    int LA35_1 = input.LA(2);

                    if ( (LA35_1 == OPEN_BRACKET || (LA35_1 >= LPAREN && LA35_1 <= NULL_COALESCE) || (LA35_1 >= ASSIGN && LA35_1 <= LEFT_SHIFT_ASSIGN) || (LA35_1 >= LOG_OR && LA35_1 <= LEFT_SHIFT) || (LA35_1 >= PLUS && LA35_1 <= COMMA) || (LA35_1 >= DOT && LA35_1 <= GT) || LA35_1 == RPAREN || (LA35_1 >= 208 && LA35_1 <= 210) || LA35_1 == 220 || (LA35_1 >= 222 && LA35_1 <= 223)) )
                    {
                        alt35 = 2;
                    }
                    else if ( (LA35_1 == 211) )
                    {
                        alt35 = 1;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d35s1 =
                            new NoViableAltException("", 35, 1, input);

                        throw nvae_d35s1;
                    }
                    }
                    break;
                case 225:
                	{
                    int LA35_2 = input.LA(2);

                    if ( (LA35_2 == OBJECT || LA35_2 == OPEN_BRACKET || (LA35_2 >= LPAREN && LA35_2 <= NULL_COALESCE) || (LA35_2 >= ASSIGN && LA35_2 <= LEFT_SHIFT_ASSIGN) || (LA35_2 >= LOG_OR && LA35_2 <= LEFT_SHIFT) || (LA35_2 >= PLUS && LA35_2 <= COMMA) || (LA35_2 >= BOOL && LA35_2 <= IDENTIFIER) || (LA35_2 >= DOT && LA35_2 <= GT) || (LA35_2 >= ELIF && LA35_2 <= UNDEF) || LA35_2 == RPAREN || LA35_2 == 195 || LA35_2 == 206 || (LA35_2 >= 208 && LA35_2 <= 210) || (LA35_2 >= 220 && LA35_2 <= 239) || (LA35_2 >= 241 && LA35_2 <= 244) || (LA35_2 >= 247 && LA35_2 <= 254) || LA35_2 == 256 || (LA35_2 >= 263 && LA35_2 <= 264) || (LA35_2 >= 274 && LA35_2 <= 277)) )
                    {
                        alt35 = 2;
                    }
                    else if ( (LA35_2 == 211) )
                    {
                        alt35 = 1;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d35s2 =
                            new NoViableAltException("", 35, 2, input);

                        throw nvae_d35s2;
                    }
                    }
                    break;
                case MONONOT:
                case MONOTWIDDLE:
                case NEW_ARRAY:
                case OBJECT:
                case THIS:
                case LPAREN:
                case BIT_AND:
                case PLUS:
                case MINUS:
                case STAR:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                case 197:
                case 207:
                case 209:
                case 210:
                case 212:
                case 213:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 251:
                case 252:
                case 253:
                case 254:
                case 275:
                case 276:
                	{
                    alt35 = 2;
                    }
                    break;
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 221:
                case 224:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 256:
                case 263:
                case 264:
                case 274:
                case 277:
                	{
                    int LA35_4 = input.LA(2);

                    if ( (LA35_4 == OPEN_BRACKET || (LA35_4 >= LPAREN && LA35_4 <= NULL_COALESCE) || (LA35_4 >= ASSIGN && LA35_4 <= LEFT_SHIFT_ASSIGN) || (LA35_4 >= LOG_OR && LA35_4 <= LEFT_SHIFT) || (LA35_4 >= PLUS && LA35_4 <= COMMA) || (LA35_4 >= DOT && LA35_4 <= GT) || LA35_4 == RPAREN || (LA35_4 >= 208 && LA35_4 <= 210) || LA35_4 == 220 || (LA35_4 >= 222 && LA35_4 <= 223)) )
                    {
                        alt35 = 2;
                    }
                    else if ( (LA35_4 == 211) )
                    {
                        alt35 = 1;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d35s4 =
                            new NoViableAltException("", 35, 4, input);

                        throw nvae_d35s4;
                    }
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d35s0 =
                	        new NoViableAltException("", 35, 0, input);

                	    throw nvae_d35s0;
                }

                switch (alt35) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:366:2: argument_name argument_value
                        {
                        	PushFollow(FOLLOW_argument_name_in_argument1343);
                        	argument_name();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	PushFollow(FOLLOW_argument_value_in_argument1347);
                        	argument_value();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:367:4: argument_value
                        {
                        	PushFollow(FOLLOW_argument_value_in_argument1352);
                        	argument_value();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "argument"


        // $ANTLR start "argument_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:368:1: argument_name : identifier ':' ;
        public void argument_name() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:368:14: ( identifier ':' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:369:2: identifier ':'
                {
                	PushFollow(FOLLOW_identifier_in_argument_name1359);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,211,FOLLOW_211_in_argument_name1363); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "argument_name"


        // $ANTLR start "argument_value"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:370:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
        public void argument_value() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:370:15: ( expression | ref_variable_reference | 'out' variable_reference )
                int alt36 = 3;
                switch ( input.LA(1) ) 
                {
                case MONONOT:
                case MONOTWIDDLE:
                case NEW_ARRAY:
                case OBJECT:
                case THIS:
                case LPAREN:
                case BIT_AND:
                case PLUS:
                case MINUS:
                case STAR:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case IDENTIFIER:
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 197:
                case 207:
                case 209:
                case 210:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 251:
                case 252:
                case 253:
                case 254:
                case 256:
                case 263:
                case 264:
                case 274:
                case 275:
                case 276:
                case 277:
                	{
                    alt36 = 1;
                    }
                    break;
                case 213:
                	{
                    alt36 = 2;
                    }
                    break;
                case 212:
                	{
                    alt36 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d36s0 =
                	        new NoViableAltException("", 36, 0, input);

                	    throw nvae_d36s0;
                }

                switch (alt36) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:371:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_argument_value1371);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:372:4: ref_variable_reference
                        {
                        	PushFollow(FOLLOW_ref_variable_reference_in_argument_value1377);
                        	ref_variable_reference();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:373:4: 'out' variable_reference
                        {
                        	Match(input,212,FOLLOW_212_in_argument_value1383); if (state.failed) return ;
                        	PushFollow(FOLLOW_variable_reference_in_argument_value1387);
                        	variable_reference();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "argument_value"


        // $ANTLR start "ref_variable_reference"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:374:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
        public void ref_variable_reference() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:374:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:375:2: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
                {
                	Match(input,213,FOLLOW_213_in_ref_variable_reference1395); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
                	int alt38 = 2;
                	alt38 = dfa38.Predict(input);
                	switch (alt38) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:4: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
                	        {
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_ref_variable_reference1417); if (state.failed) return ;
                	        	PushFollow(FOLLOW_type_in_ref_variable_reference1421);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_ref_variable_reference1425); if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:47: ( ref_variable_reference | variable_reference )
                	        	int alt37 = 2;
                	        	int LA37_0 = input.LA(1);

                	        	if ( (LA37_0 == 213) )
                	        	{
                	        	    alt37 = 1;
                	        	}
                	        	else if ( ((LA37_0 >= MONONOT && LA37_0 <= MONOTWIDDLE) || LA37_0 == NEW_ARRAY || (LA37_0 >= OBJECT && LA37_0 <= THIS) || LA37_0 == LPAREN || LA37_0 == BIT_AND || (LA37_0 >= PLUS && LA37_0 <= MINUS) || LA37_0 == STAR || (LA37_0 >= BOOL && LA37_0 <= NULL) || (LA37_0 >= ELIF && LA37_0 <= UNDEF) || LA37_0 == 195 || LA37_0 == 197 || LA37_0 == 207 || (LA37_0 >= 209 && LA37_0 <= 210) || (LA37_0 >= 214 && LA37_0 <= 219) || LA37_0 == 221 || (LA37_0 >= 224 && LA37_0 <= 239) || (LA37_0 >= 241 && LA37_0 <= 244) || (LA37_0 >= 247 && LA37_0 <= 254) || LA37_0 == 256 || (LA37_0 >= 263 && LA37_0 <= 264) || (LA37_0 >= 274 && LA37_0 <= 277)) )
                	        	{
                	        	    alt37 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        	    NoViableAltException nvae_d37s0 =
                	        	        new NoViableAltException("", 37, 0, input);

                	        	    throw nvae_d37s0;
                	        	}
                	        	switch (alt37) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:48: ref_variable_reference
                	        	        {
                	        	        	PushFollow(FOLLOW_ref_variable_reference_in_ref_variable_reference1430);
                	        	        	ref_variable_reference();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:73: variable_reference
                	        	        {
                	        	        	PushFollow(FOLLOW_variable_reference_in_ref_variable_reference1434);
                	        	        	variable_reference();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:378:5: variable_reference
                	        {
                	        	PushFollow(FOLLOW_variable_reference_in_ref_variable_reference1470);
                	        	variable_reference();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "ref_variable_reference"


        // $ANTLR start "variable_reference"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:380:1: variable_reference : expression ;
        public void variable_reference() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:380:19: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:381:2: expression
                {
                	PushFollow(FOLLOW_expression_in_variable_reference1480);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variable_reference"


        // $ANTLR start "rank_specifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:382:1: rank_specifiers returns [string thetext] : ( rank_specifier )+ ;
        public string rank_specifiers() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            string rank_specifier3 = default(string);



                thetext =  "";

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:385:2: ( ( rank_specifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:386:9: ( rank_specifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:386:9: ( rank_specifier )+
                	int cnt39 = 0;
                	do 
                	{
                	    int alt39 = 2;
                	    int LA39_0 = input.LA(1);

                	    if ( (LA39_0 == OPEN_BRACKET) )
                	    {
                	        int LA39_2 = input.LA(2);

                	        if ( (LA39_2 == CLOSE_BRACKET || LA39_2 == COMMA) )
                	        {
                	            alt39 = 1;
                	        }


                	    }


                	    switch (alt39) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:386:10: rank_specifier
                			    {
                			    	PushFollow(FOLLOW_rank_specifier_in_rank_specifiers1505);
                			    	rank_specifier3 = rank_specifier();
                			    	state._fsp--;
                			    	if (state.failed) return thetext;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   thetext += rank_specifier3; 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt39 >= 1 ) goto loop39;
                			    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                		            EarlyExitException eee39 =
                		                new EarlyExitException(39, input);
                		            throw eee39;
                	    }
                	    cnt39++;
                	} while (true);

                	loop39:
                		;	// Stops C# compiler whining that label 'loop39' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "rank_specifiers"


        // $ANTLR start "rank_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:387:1: rank_specifier returns [string thetext] : '[' ( dim_separators )? ']' ;
        public string rank_specifier() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            string dim_separators4 = default(string);



                thetext =  "[]";

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:390:2: ( '[' ( dim_separators )? ']' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:391:2: '[' ( dim_separators )? ']'
                {
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_rank_specifier1535); if (state.failed) return thetext;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:391:8: ( dim_separators )?
                	int alt40 = 2;
                	int LA40_0 = input.LA(1);

                	if ( (LA40_0 == COMMA) )
                	{
                	    alt40 = 1;
                	}
                	switch (alt40) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:391:10: dim_separators
                	        {
                	        	PushFollow(FOLLOW_dim_separators_in_rank_specifier1541);
                	        	dim_separators4 = dim_separators();
                	        	state._fsp--;
                	        	if (state.failed) return thetext;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   thetext += dim_separators4;
                	        	}

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_rank_specifier1550); if (state.failed) return thetext;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "rank_specifier"


        // $ANTLR start "dim_separators"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:392:1: dim_separators returns [string thetext] : ( ',' )+ ;
        public string dim_separators() // throws RecognitionException [1]
        {   
            string thetext = default(string);


                thetext =  "";

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:395:2: ( ( ',' )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:396:5: ( ',' )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:396:5: ( ',' )+
                	int cnt41 = 0;
                	do 
                	{
                	    int alt41 = 2;
                	    int LA41_0 = input.LA(1);

                	    if ( (LA41_0 == COMMA) )
                	    {
                	        alt41 = 1;
                	    }


                	    switch (alt41) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:396:6: ','
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_dim_separators1572); if (state.failed) return thetext;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   thetext += "[]"; 
                			    	}

                			    }
                			    break;

                			default:
                			    if ( cnt41 >= 1 ) goto loop41;
                			    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                		            EarlyExitException eee41 =
                		                new EarlyExitException(41, input);
                		            throw eee41;
                	    }
                	    cnt41++;
                	} while (true);

                	loop41:
                		;	// Stops C# compiler whining that label 'loop41' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "dim_separators"


        // $ANTLR start "delegate_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:398:1: delegate_creation_expression : type_name '(' type_name ')' ;
        public void delegate_creation_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:398:29: ( type_name '(' type_name ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:400:2: type_name '(' type_name ')'
                {
                	PushFollow(FOLLOW_type_name_in_delegate_creation_expression1589);
                	type_name();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_delegate_creation_expression1593); if (state.failed) return ;
                	PushFollow(FOLLOW_type_name_in_delegate_creation_expression1597);
                	type_name();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_delegate_creation_expression1601); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "delegate_creation_expression"


        // $ANTLR start "anonymous_object_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:401:1: anonymous_object_creation_expression : anonymous_object_initializer ;
        public void anonymous_object_creation_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:401:37: ( anonymous_object_initializer )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:403:2: anonymous_object_initializer
                {
                	PushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1612);
                	anonymous_object_initializer();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "anonymous_object_creation_expression"


        // $ANTLR start "anonymous_object_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:404:1: anonymous_object_initializer : '{' ( member_declarator_list ( ',' )? )? '}' ;
        public void anonymous_object_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:404:29: ( '{' ( member_declarator_list ( ',' )? )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:405:2: '{' ( member_declarator_list ( ',' )? )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_anonymous_object_initializer1621); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:405:8: ( member_declarator_list ( ',' )? )?
                	int alt43 = 2;
                	int LA43_0 = input.LA(1);

                	if ( (LA43_0 == OBJECT || (LA43_0 >= BOOL && LA43_0 <= NULL) || (LA43_0 >= ELIF && LA43_0 <= UNDEF) || LA43_0 == 195 || LA43_0 == 221 || (LA43_0 >= 224 && LA43_0 <= 239) || (LA43_0 >= 241 && LA43_0 <= 244) || (LA43_0 >= 247 && LA43_0 <= 254) || LA43_0 == 256 || (LA43_0 >= 263 && LA43_0 <= 264) || (LA43_0 >= 274 && LA43_0 <= 277)) )
                	{
                	    alt43 = 1;
                	}
                	switch (alt43) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:405:9: member_declarator_list ( ',' )?
                	        {
                	        	PushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer1626);
                	        	member_declarator_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:405:34: ( ',' )?
                	        	int alt42 = 2;
                	        	int LA42_0 = input.LA(1);

                	        	if ( (LA42_0 == COMMA) )
                	        	{
                	        	    alt42 = 1;
                	        	}
                	        	switch (alt42) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:405:34: ','
                	        	        {
                	        	        	Match(input,COMMA,FOLLOW_COMMA_in_anonymous_object_initializer1630); if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer1637); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "anonymous_object_initializer"


        // $ANTLR start "member_declarator_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:406:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
        public void member_declarator_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:406:23: ( member_declarator ( ',' member_declarator )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:407:2: member_declarator ( ',' member_declarator )*
                {
                	PushFollow(FOLLOW_member_declarator_in_member_declarator_list1645);
                	member_declarator();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:407:21: ( ',' member_declarator )*
                	do 
                	{
                	    int alt44 = 2;
                	    int LA44_0 = input.LA(1);

                	    if ( (LA44_0 == COMMA) )
                	    {
                	        int LA44_1 = input.LA(2);

                	        if ( (LA44_1 == OBJECT || (LA44_1 >= BOOL && LA44_1 <= NULL) || (LA44_1 >= ELIF && LA44_1 <= UNDEF) || LA44_1 == 195 || LA44_1 == 221 || (LA44_1 >= 224 && LA44_1 <= 239) || (LA44_1 >= 241 && LA44_1 <= 244) || (LA44_1 >= 247 && LA44_1 <= 254) || LA44_1 == 256 || (LA44_1 >= 263 && LA44_1 <= 264) || (LA44_1 >= 274 && LA44_1 <= 277)) )
                	        {
                	            alt44 = 1;
                	        }


                	    }


                	    switch (alt44) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:407:22: ',' member_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_member_declarator_list1649); if (state.failed) return ;
                			    	PushFollow(FOLLOW_member_declarator_in_member_declarator_list1651);
                			    	member_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop44;
                	    }
                	} while (true);

                	loop44:
                		;	// Stops C# compiler whining that label 'loop44' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "member_declarator_list"


        // $ANTLR start "member_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:408:1: member_declarator : qid ( '=' expression )? ;
        public void member_declarator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:408:18: ( qid ( '=' expression )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:409:2: qid ( '=' expression )?
                {
                	PushFollow(FOLLOW_qid_in_member_declarator1663);
                	qid();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:409:8: ( '=' expression )?
                	int alt45 = 2;
                	int LA45_0 = input.LA(1);

                	if ( (LA45_0 == ASSIGN) )
                	{
                	    alt45 = 1;
                	}
                	switch (alt45) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:409:9: '=' expression
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_member_declarator1668); if (state.failed) return ;
                	        	PushFollow(FOLLOW_expression_in_member_declarator1672);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "member_declarator"


        // $ANTLR start "primary_or_array_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:410:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
        public void primary_or_array_creation_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:410:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
                int alt46 = 2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0 == NEW_ARRAY) && (synpred11_TemplateExtracter()) )
                {
                    alt46 = 1;
                }
                else if ( ((LA46_0 >= OBJECT && LA46_0 <= THIS) || LA46_0 == LPAREN || (LA46_0 >= BOOL && LA46_0 <= NULL) || (LA46_0 >= ELIF && LA46_0 <= UNDEF) || LA46_0 == 195 || LA46_0 == 197 || LA46_0 == 207 || (LA46_0 >= 214 && LA46_0 <= 219) || LA46_0 == 221 || (LA46_0 >= 224 && LA46_0 <= 239) || (LA46_0 >= 241 && LA46_0 <= 244) || (LA46_0 >= 247 && LA46_0 <= 254) || LA46_0 == 256 || (LA46_0 >= 263 && LA46_0 <= 264) || (LA46_0 >= 274 && LA46_0 <= 277)) )
                {
                    alt46 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d46s0 =
                        new NoViableAltException("", 46, 0, input);

                    throw nvae_d46s0;
                }
                switch (alt46) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:411:2: ( array_creation_expression )=> array_creation_expression
                        {
                        	PushFollow(FOLLOW_array_creation_expression_in_primary_or_array_creation_expression1688);
                        	array_creation_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:412:4: primary_expression
                        {
                        	PushFollow(FOLLOW_primary_expression_in_primary_or_array_creation_expression1693);
                        	primary_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "primary_or_array_creation_expression"


        // $ANTLR start "array_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:415:1: array_creation_expression : NEW_ARRAY ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ( ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )? ) ;
        public void array_creation_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:415:26: ( NEW_ARRAY ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ( ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )? ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:416:2: NEW_ARRAY ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ( ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )? )
                {
                	Match(input,NEW_ARRAY,FOLLOW_NEW_ARRAY_in_array_creation_expression1704); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:417:3: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ( ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )? )
                	int alt54 = 2;
                	int LA54_0 = input.LA(1);

                	if ( (LA54_0 == OBJECT || (LA54_0 >= BOOL && LA54_0 <= IDENTIFIER) || (LA54_0 >= ELIF && LA54_0 <= UNDEF) || LA54_0 == 195 || LA54_0 == 206 || LA54_0 == 221 || (LA54_0 >= 224 && LA54_0 <= 239) || (LA54_0 >= 241 && LA54_0 <= 244) || (LA54_0 >= 247 && LA54_0 <= 254) || LA54_0 == 256 || (LA54_0 >= 263 && LA54_0 <= 264) || (LA54_0 >= 274 && LA54_0 <= 277)) )
                	{
                	    alt54 = 1;
                	}
                	else if ( (LA54_0 == OPEN_BRACKET) )
                	{
                	    alt54 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d54s0 =
                	        new NoViableAltException("", 54, 0, input);

                	    throw nvae_d54s0;
                	}
                	switch (alt54) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:417:4: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
                	        {
                	        	PushFollow(FOLLOW_type_in_array_creation_expression1712);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:417:11: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
                	        	int alt51 = 2;
                	        	int LA51_0 = input.LA(1);

                	        	if ( (LA51_0 == OPEN_BRACKET) )
                	        	{
                	        	    alt51 = 1;
                	        	}
                	        	else if ( (LA51_0 == OPEN_BRACE) )
                	        	{
                	        	    alt51 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        	    NoViableAltException nvae_d51s0 =
                	        	        new NoViableAltException("", 51, 0, input);

                	        	    throw nvae_d51s0;
                	        	}
                	        	switch (alt51) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:417:12: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
                	        	        {
                	        	        	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_array_creation_expression1717); if (state.failed) return ;
                	        	        	PushFollow(FOLLOW_expression_list_in_array_creation_expression1721);
                	        	        	expression_list();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;
                	        	        	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_array_creation_expression1725); if (state.failed) return ;
                	        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:418:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
                	        	        	int alt50 = 2;
                	        	        	alt50 = dfa50.Predict(input);
                	        	        	switch (alt50) 
                	        	        	{
                	        	        	    case 1 :
                	        	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:418:8: ( rank_specifiers )? ( array_initializer )?
                	        	        	        {
                	        	        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:418:8: ( rank_specifiers )?
                	        	        	        	int alt47 = 2;
                	        	        	        	int LA47_0 = input.LA(1);

                	        	        	        	if ( (LA47_0 == OPEN_BRACKET) )
                	        	        	        	{
                	        	        	        	    alt47 = 1;
                	        	        	        	}
                	        	        	        	switch (alt47) 
                	        	        	        	{
                	        	        	        	    case 1 :
                	        	        	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:418:8: rank_specifiers
                	        	        	        	        {
                	        	        	        	        	PushFollow(FOLLOW_rank_specifiers_in_array_creation_expression1737);
                	        	        	        	        	rank_specifiers();
                	        	        	        	        	state._fsp--;
                	        	        	        	        	if (state.failed) return ;

                	        	        	        	        }
                	        	        	        	        break;

                	        	        	        	}

                	        	        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:418:27: ( array_initializer )?
                	        	        	        	int alt48 = 2;
                	        	        	        	int LA48_0 = input.LA(1);

                	        	        	        	if ( (LA48_0 == OPEN_BRACE) )
                	        	        	        	{
                	        	        	        	    alt48 = 1;
                	        	        	        	}
                	        	        	        	switch (alt48) 
                	        	        	        	{
                	        	        	        	    case 1 :
                	        	        	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:418:27: array_initializer
                	        	        	        	        {
                	        	        	        	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression1742);
                	        	        	        	        	array_initializer();
                	        	        	        	        	state._fsp--;
                	        	        	        	        	if (state.failed) return ;

                	        	        	        	        }
                	        	        	        	        break;

                	        	        	        	}


                	        	        	        }
                	        	        	        break;
                	        	        	    case 2 :
                	        	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
                	        	        	        {
                	        	        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:8: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
                	        	        	        	do 
                	        	        	        	{
                	        	        	        	    int alt49 = 3;
                	        	        	        	    int LA49_0 = input.LA(1);

                	        	        	        	    if ( (LA49_0 == LPAREN) )
                	        	        	        	    {
                	        	        	        	        int LA49_1 = input.LA(2);

                	        	        	        	        if ( (synpred12_TemplateExtracter()) )
                	        	        	        	        {
                	        	        	        	            alt49 = 1;
                	        	        	        	        }


                	        	        	        	    }
                	        	        	        	    else if ( (LA49_0 == OPEN_BRACKET || (LA49_0 >= DOT && LA49_0 <= PTR)) )
                	        	        	        	    {
                	        	        	        	        alt49 = 2;
                	        	        	        	    }


                	        	        	        	    switch (alt49) 
                	        	        	        		{
                	        	        	        			case 1 :
                	        	        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                	        	        	        			    {
                	        	        	        			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:10: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                	        	        	        			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:11: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
                	        	        	        			    	{
                	        	        	        			    		PushFollow(FOLLOW_arguments_in_array_creation_expression1778);
                	        	        	        			    		arguments();
                	        	        	        			    		state._fsp--;
                	        	        	        			    		if (state.failed) return ;
                	        	        	        			    		PushFollow(FOLLOW_invocation_part_in_array_creation_expression1782);
                	        	        	        			    		invocation_part();
                	        	        	        			    		state._fsp--;
                	        	        	        			    		if (state.failed) return ;

                	        	        	        			    	}


                	        	        	        			    }
                	        	        	        			    break;
                	        	        	        			case 2 :
                	        	        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:421:10: invocation_part
                	        	        	        			    {
                	        	        	        			    	PushFollow(FOLLOW_invocation_part_in_array_creation_expression1794);
                	        	        	        			    	invocation_part();
                	        	        	        			    	state._fsp--;
                	        	        	        			    	if (state.failed) return ;

                	        	        	        			    }
                	        	        	        			    break;

                	        	        	        			default:
                	        	        	        			    goto loop49;
                	        	        	        	    }
                	        	        	        	} while (true);

                	        	        	        	loop49:
                	        	        	        		;	// Stops C# compiler whining that label 'loop49' has no statements

                	        	        	        	PushFollow(FOLLOW_arguments_in_array_creation_expression1800);
                	        	        	        	arguments();
                	        	        	        	state._fsp--;
                	        	        	        	if (state.failed) return ;

                	        	        	        }
                	        	        	        break;

                	        	        	}


                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:423:7: array_initializer
                	        	        {
                	        	        	PushFollow(FOLLOW_array_initializer_in_array_creation_expression1822);
                	        	        	array_initializer();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:425:5: rank_specifier ( array_initializer ) ( ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )?
                	        {
                	        	PushFollow(FOLLOW_rank_specifier_in_array_creation_expression1836);
                	        	rank_specifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:426:4: ( array_initializer )
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:426:5: array_initializer
                	        	{
                	        		PushFollow(FOLLOW_array_initializer_in_array_creation_expression1845);
                	        		array_initializer();
                	        		state._fsp--;
                	        		if (state.failed) return ;

                	        	}

                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:428:13: ( ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )?
                	        	int alt53 = 2;
                	        	int LA53_0 = input.LA(1);

                	        	if ( (LA53_0 == OPEN_BRACKET || LA53_0 == LPAREN || (LA53_0 >= DOT && LA53_0 <= PTR)) )
                	        	{
                	        	    alt53 = 1;
                	        	}
                	        	switch (alt53) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:15: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
                	        	        {
                	        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:15: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
                	        	        	do 
                	        	        	{
                	        	        	    int alt52 = 3;
                	        	        	    int LA52_0 = input.LA(1);

                	        	        	    if ( (LA52_0 == LPAREN) )
                	        	        	    {
                	        	        	        int LA52_1 = input.LA(2);

                	        	        	        if ( (synpred13_TemplateExtracter()) )
                	        	        	        {
                	        	        	            alt52 = 1;
                	        	        	        }


                	        	        	    }
                	        	        	    else if ( (LA52_0 == OPEN_BRACKET || (LA52_0 >= DOT && LA52_0 <= PTR)) )
                	        	        	    {
                	        	        	        alt52 = 2;
                	        	        	    }


                	        	        	    switch (alt52) 
                	        	        		{
                	        	        			case 1 :
                	        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:17: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                	        	        			    {
                	        	        			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:17: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                	        	        			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:18: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
                	        	        			    	{
                	        	        			    		PushFollow(FOLLOW_arguments_in_array_creation_expression1904);
                	        	        			    		arguments();
                	        	        			    		state._fsp--;
                	        	        			    		if (state.failed) return ;
                	        	        			    		PushFollow(FOLLOW_invocation_part_in_array_creation_expression1908);
                	        	        			    		invocation_part();
                	        	        			    		state._fsp--;
                	        	        			    		if (state.failed) return ;

                	        	        			    	}


                	        	        			    }
                	        	        			    break;
                	        	        			case 2 :
                	        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:430:10: invocation_part
                	        	        			    {
                	        	        			    	PushFollow(FOLLOW_invocation_part_in_array_creation_expression1920);
                	        	        			    	invocation_part();
                	        	        			    	state._fsp--;
                	        	        			    	if (state.failed) return ;

                	        	        			    }
                	        	        			    break;

                	        	        			default:
                	        	        			    goto loop52;
                	        	        	    }
                	        	        	} while (true);

                	        	        	loop52:
                	        	        		;	// Stops C# compiler whining that label 'loop52' has no statements

                	        	        	PushFollow(FOLLOW_arguments_in_array_creation_expression1926);
                	        	        	arguments();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "array_creation_expression"


        // $ANTLR start "array_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:433:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
        public void array_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:433:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:434:2: '{' ( variable_initializer_list )? ( ',' )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_array_initializer1953); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:434:8: ( variable_initializer_list )?
                	int alt55 = 2;
                	int LA55_0 = input.LA(1);

                	if ( ((LA55_0 >= MONONOT && LA55_0 <= MONOTWIDDLE) || LA55_0 == NEW_ARRAY || (LA55_0 >= OBJECT && LA55_0 <= THIS) || LA55_0 == OPEN_BRACE || LA55_0 == LPAREN || LA55_0 == BIT_AND || (LA55_0 >= PLUS && LA55_0 <= MINUS) || LA55_0 == STAR || (LA55_0 >= BOOL && LA55_0 <= NULL) || (LA55_0 >= ELIF && LA55_0 <= UNDEF) || LA55_0 == 195 || LA55_0 == 197 || LA55_0 == 207 || (LA55_0 >= 209 && LA55_0 <= 210) || (LA55_0 >= 214 && LA55_0 <= 219) || LA55_0 == 221 || (LA55_0 >= 224 && LA55_0 <= 239) || (LA55_0 >= 241 && LA55_0 <= 244) || (LA55_0 >= 247 && LA55_0 <= 254) || LA55_0 == 256 || (LA55_0 >= 263 && LA55_0 <= 264) || (LA55_0 >= 274 && LA55_0 <= 277)) )
                	{
                	    alt55 = 1;
                	}
                	switch (alt55) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:434:8: variable_initializer_list
                	        {
                	        	PushFollow(FOLLOW_variable_initializer_list_in_array_initializer1957);
                	        	variable_initializer_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:434:37: ( ',' )?
                	int alt56 = 2;
                	int LA56_0 = input.LA(1);

                	if ( (LA56_0 == COMMA) )
                	{
                	    alt56 = 1;
                	}
                	switch (alt56) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:434:37: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_array_initializer1962); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_array_initializer1967); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "array_initializer"


        // $ANTLR start "variable_initializer_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:435:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
        public void variable_initializer_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:435:26: ( variable_initializer ( ',' variable_initializer )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:436:2: variable_initializer ( ',' variable_initializer )*
                {
                	PushFollow(FOLLOW_variable_initializer_in_variable_initializer_list1975);
                	variable_initializer();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:436:23: ( ',' variable_initializer )*
                	do 
                	{
                	    int alt57 = 2;
                	    int LA57_0 = input.LA(1);

                	    if ( (LA57_0 == COMMA) )
                	    {
                	        int LA57_1 = input.LA(2);

                	        if ( ((LA57_1 >= MONONOT && LA57_1 <= MONOTWIDDLE) || LA57_1 == NEW_ARRAY || (LA57_1 >= OBJECT && LA57_1 <= THIS) || LA57_1 == OPEN_BRACE || LA57_1 == LPAREN || LA57_1 == BIT_AND || (LA57_1 >= PLUS && LA57_1 <= MINUS) || LA57_1 == STAR || (LA57_1 >= BOOL && LA57_1 <= NULL) || (LA57_1 >= ELIF && LA57_1 <= UNDEF) || LA57_1 == 195 || LA57_1 == 197 || LA57_1 == 207 || (LA57_1 >= 209 && LA57_1 <= 210) || (LA57_1 >= 214 && LA57_1 <= 219) || LA57_1 == 221 || (LA57_1 >= 224 && LA57_1 <= 239) || (LA57_1 >= 241 && LA57_1 <= 244) || (LA57_1 >= 247 && LA57_1 <= 254) || LA57_1 == 256 || (LA57_1 >= 263 && LA57_1 <= 264) || (LA57_1 >= 274 && LA57_1 <= 277)) )
                	        {
                	            alt57 = 1;
                	        }


                	    }


                	    switch (alt57) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:436:24: ',' variable_initializer
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_variable_initializer_list1978); if (state.failed) return ;
                			    	PushFollow(FOLLOW_variable_initializer_in_variable_initializer_list1980);
                			    	variable_initializer();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop57;
                	    }
                	} while (true);

                	loop57:
                		;	// Stops C# compiler whining that label 'loop57' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variable_initializer_list"


        // $ANTLR start "variable_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:437:1: variable_initializer : ( expression | array_initializer );
        public void variable_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:437:21: ( expression | array_initializer )
                int alt58 = 2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0 >= MONONOT && LA58_0 <= MONOTWIDDLE) || LA58_0 == NEW_ARRAY || (LA58_0 >= OBJECT && LA58_0 <= THIS) || LA58_0 == LPAREN || LA58_0 == BIT_AND || (LA58_0 >= PLUS && LA58_0 <= MINUS) || LA58_0 == STAR || (LA58_0 >= BOOL && LA58_0 <= NULL) || (LA58_0 >= ELIF && LA58_0 <= UNDEF) || LA58_0 == 195 || LA58_0 == 197 || LA58_0 == 207 || (LA58_0 >= 209 && LA58_0 <= 210) || (LA58_0 >= 214 && LA58_0 <= 219) || LA58_0 == 221 || (LA58_0 >= 224 && LA58_0 <= 239) || (LA58_0 >= 241 && LA58_0 <= 244) || (LA58_0 >= 247 && LA58_0 <= 254) || LA58_0 == 256 || (LA58_0 >= 263 && LA58_0 <= 264) || (LA58_0 >= 274 && LA58_0 <= 277)) )
                {
                    alt58 = 1;
                }
                else if ( (LA58_0 == OPEN_BRACE) )
                {
                    alt58 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d58s0 =
                        new NoViableAltException("", 58, 0, input);

                    throw nvae_d58s0;
                }
                switch (alt58) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:438:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_variable_initializer1990);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:438:15: array_initializer
                        {
                        	PushFollow(FOLLOW_array_initializer_in_variable_initializer1994);
                        	array_initializer();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variable_initializer"


        // $ANTLR start "sizeof_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:439:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
        public void sizeof_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:439:18: ( 'sizeof' '(' unmanaged_type ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:440:2: 'sizeof' '(' unmanaged_type ')'
                {
                	Match(input,214,FOLLOW_214_in_sizeof_expression2002); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_sizeof_expression2006); if (state.failed) return ;
                	PushFollow(FOLLOW_unmanaged_type_in_sizeof_expression2010);
                	unmanaged_type();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_sizeof_expression2014); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "sizeof_expression"


        // $ANTLR start "checked_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:441:1: checked_expression : 'checked' '(' expression ')' ;
        public void checked_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:441:19: ( 'checked' '(' expression ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:442:2: 'checked' '(' expression ')'
                {
                	Match(input,215,FOLLOW_215_in_checked_expression2022); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_checked_expression2026); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_checked_expression2030);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_checked_expression2034); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "checked_expression"


        // $ANTLR start "unchecked_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:443:1: unchecked_expression : 'unchecked' '(' expression ')' ;
        public void unchecked_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:443:21: ( 'unchecked' '(' expression ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:444:2: 'unchecked' '(' expression ')'
                {
                	Match(input,216,FOLLOW_216_in_unchecked_expression2043); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_unchecked_expression2047); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_unchecked_expression2051);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_unchecked_expression2055); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unchecked_expression"


        // $ANTLR start "default_value_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:445:1: default_value_expression : 'default' '(' type ')' ;
        public void default_value_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:445:25: ( 'default' '(' type ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:446:2: 'default' '(' type ')'
                {
                	Match(input,217,FOLLOW_217_in_default_value_expression2064); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_default_value_expression2068); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_default_value_expression2072);
                	type();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_default_value_expression2076); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "default_value_expression"


        // $ANTLR start "anonymous_method_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:447:1: anonymous_method_expression : 'delegate' ( explicit_anonymous_function_signature )? block ;
        public void anonymous_method_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:447:28: ( 'delegate' ( explicit_anonymous_function_signature )? block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:448:2: 'delegate' ( explicit_anonymous_function_signature )? block
                {
                	Match(input,218,FOLLOW_218_in_anonymous_method_expression2084); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:448:15: ( explicit_anonymous_function_signature )?
                	int alt59 = 2;
                	int LA59_0 = input.LA(1);

                	if ( (LA59_0 == LPAREN) )
                	{
                	    alt59 = 1;
                	}
                	switch (alt59) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:448:15: explicit_anonymous_function_signature
                	        {
                	        	PushFollow(FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression2088);
                	        	explicit_anonymous_function_signature();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_block_in_anonymous_method_expression2093);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "anonymous_method_expression"


        // $ANTLR start "explicit_anonymous_function_signature"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:449:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
        public void explicit_anonymous_function_signature() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:449:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:450:2: '(' ( explicit_anonymous_function_parameter_list )? ')'
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_explicit_anonymous_function_signature2100); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:450:8: ( explicit_anonymous_function_parameter_list )?
                	int alt60 = 2;
                	int LA60_0 = input.LA(1);

                	if ( (LA60_0 == OBJECT || (LA60_0 >= BOOL && LA60_0 <= IDENTIFIER) || (LA60_0 >= ELIF && LA60_0 <= UNDEF) || LA60_0 == 195 || LA60_0 == 206 || (LA60_0 >= 212 && LA60_0 <= 213) || LA60_0 == 221 || (LA60_0 >= 224 && LA60_0 <= 239) || (LA60_0 >= 241 && LA60_0 <= 244) || (LA60_0 >= 247 && LA60_0 <= 254) || LA60_0 == 256 || (LA60_0 >= 263 && LA60_0 <= 264) || (LA60_0 >= 274 && LA60_0 <= 277)) )
                	{
                	    alt60 = 1;
                	}
                	switch (alt60) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:450:8: explicit_anonymous_function_parameter_list
                	        {
                	        	PushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature2104);
                	        	explicit_anonymous_function_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_explicit_anonymous_function_signature2109); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "explicit_anonymous_function_signature"


        // $ANTLR start "explicit_anonymous_function_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:451:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
        public void explicit_anonymous_function_parameter_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:451:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:452:2: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
                {
                	PushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2117);
                	explicit_anonymous_function_parameter();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:452:42: ( ',' explicit_anonymous_function_parameter )*
                	do 
                	{
                	    int alt61 = 2;
                	    int LA61_0 = input.LA(1);

                	    if ( (LA61_0 == COMMA) )
                	    {
                	        alt61 = 1;
                	    }


                	    switch (alt61) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:452:43: ',' explicit_anonymous_function_parameter
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_explicit_anonymous_function_parameter_list2122); if (state.failed) return ;
                			    	PushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2126);
                			    	explicit_anonymous_function_parameter();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop61;
                	    }
                	} while (true);

                	loop61:
                		;	// Stops C# compiler whining that label 'loop61' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "explicit_anonymous_function_parameter_list"


        // $ANTLR start "explicit_anonymous_function_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:453:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
        public void explicit_anonymous_function_parameter() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:453:38: ( ( anonymous_function_parameter_modifier )? type identifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:454:2: ( anonymous_function_parameter_modifier )? type identifier
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:454:2: ( anonymous_function_parameter_modifier )?
                	int alt62 = 2;
                	int LA62_0 = input.LA(1);

                	if ( ((LA62_0 >= 212 && LA62_0 <= 213)) )
                	{
                	    alt62 = 1;
                	}
                	switch (alt62) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:454:2: anonymous_function_parameter_modifier
                	        {
                	        	PushFollow(FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter2137);
                	        	anonymous_function_parameter_modifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_type_in_explicit_anonymous_function_parameter2142);
                	type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_explicit_anonymous_function_parameter2146);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "explicit_anonymous_function_parameter"


        // $ANTLR start "anonymous_function_parameter_modifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:455:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
        public void anonymous_function_parameter_modifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:455:38: ( 'ref' | 'out' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= 212 && input.LA(1) <= 213) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "anonymous_function_parameter_modifier"


        // $ANTLR start "object_creation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:460:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
        public void object_creation_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:460:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:462:2: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
                {
                	PushFollow(FOLLOW_type_in_object_creation_expression2170);
                	type();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:463:3: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
                	int alt65 = 2;
                	int LA65_0 = input.LA(1);

                	if ( (LA65_0 == LPAREN) )
                	{
                	    alt65 = 1;
                	}
                	else if ( (LA65_0 == OPEN_BRACE) )
                	{
                	    alt65 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d65s0 =
                	        new NoViableAltException("", 65, 0, input);

                	    throw nvae_d65s0;
                	}
                	switch (alt65) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:463:5: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
                	        {
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_object_creation_expression2179); if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:463:11: ( argument_list )?
                	        	int alt63 = 2;
                	        	int LA63_0 = input.LA(1);

                	        	if ( ((LA63_0 >= MONONOT && LA63_0 <= MONOTWIDDLE) || LA63_0 == NEW_ARRAY || (LA63_0 >= OBJECT && LA63_0 <= THIS) || LA63_0 == LPAREN || LA63_0 == BIT_AND || (LA63_0 >= PLUS && LA63_0 <= MINUS) || LA63_0 == STAR || (LA63_0 >= BOOL && LA63_0 <= NULL) || (LA63_0 >= ELIF && LA63_0 <= UNDEF) || LA63_0 == 195 || LA63_0 == 197 || LA63_0 == 207 || (LA63_0 >= 209 && LA63_0 <= 210) || (LA63_0 >= 212 && LA63_0 <= 219) || LA63_0 == 221 || (LA63_0 >= 224 && LA63_0 <= 239) || (LA63_0 >= 241 && LA63_0 <= 244) || (LA63_0 >= 247 && LA63_0 <= 254) || LA63_0 == 256 || (LA63_0 >= 263 && LA63_0 <= 264) || (LA63_0 >= 274 && LA63_0 <= 277)) )
                	        	{
                	        	    alt63 = 1;
                	        	}
                	        	switch (alt63) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:463:11: argument_list
                	        	        {
                	        	        	PushFollow(FOLLOW_argument_list_in_object_creation_expression2183);
                	        	        	argument_list();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}

                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression2188); if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:463:34: ( object_or_collection_initializer )?
                	        	int alt64 = 2;
                	        	int LA64_0 = input.LA(1);

                	        	if ( (LA64_0 == OPEN_BRACE) )
                	        	{
                	        	    alt64 = 1;
                	        	}
                	        	switch (alt64) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:463:34: object_or_collection_initializer
                	        	        {
                	        	        	PushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression2192);
                	        	        	object_or_collection_initializer();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:464:7: object_or_collection_initializer
                	        {
                	        	PushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression2203);
                	        	object_or_collection_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "object_creation_expression"


        // $ANTLR start "object_or_collection_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:466:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
        public void object_or_collection_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:466:33: ( '{' ( object_initializer | collection_initializer ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:467:2: '{' ( object_initializer | collection_initializer )
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_object_or_collection_initializer2215); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:467:7: ( object_initializer | collection_initializer )
                	int alt66 = 2;
                	switch ( input.LA(1) ) 
                	{
                	case IDENTIFIER:
                		{
                	    int LA66_1 = input.LA(2);

                	    if ( (LA66_1 == OPEN_BRACKET || (LA66_1 >= CLOSE_BRACE && LA66_1 <= NULL_COALESCE) || (LA66_1 >= LOG_OR && LA66_1 <= LEFT_SHIFT) || (LA66_1 >= PLUS && LA66_1 <= COMMA) || (LA66_1 >= DOT && LA66_1 <= GT) || (LA66_1 >= 208 && LA66_1 <= 210) || LA66_1 == 220 || (LA66_1 >= 222 && LA66_1 <= 223)) )
                	    {
                	        alt66 = 2;
                	    }
                	    else if ( (LA66_1 == ASSIGN) )
                	    {
                	        alt66 = 1;
                	    }
                	    else 
                	    {
                	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        NoViableAltException nvae_d66s1 =
                	            new NoViableAltException("", 66, 1, input);

                	        throw nvae_d66s1;
                	    }
                	    }
                	    break;
                	case 225:
                		{
                	    int LA66_2 = input.LA(2);

                	    if ( (LA66_2 == OBJECT || LA66_2 == OPEN_BRACKET || (LA66_2 >= CLOSE_BRACE && LA66_2 <= NULL_COALESCE) || (LA66_2 >= LOG_OR && LA66_2 <= LEFT_SHIFT) || (LA66_2 >= PLUS && LA66_2 <= COMMA) || (LA66_2 >= BOOL && LA66_2 <= IDENTIFIER) || (LA66_2 >= DOT && LA66_2 <= GT) || (LA66_2 >= ELIF && LA66_2 <= UNDEF) || LA66_2 == 195 || LA66_2 == 206 || (LA66_2 >= 208 && LA66_2 <= 210) || (LA66_2 >= 220 && LA66_2 <= 239) || (LA66_2 >= 241 && LA66_2 <= 244) || (LA66_2 >= 247 && LA66_2 <= 254) || LA66_2 == 256 || (LA66_2 >= 263 && LA66_2 <= 264) || (LA66_2 >= 274 && LA66_2 <= 277)) )
                	    {
                	        alt66 = 2;
                	    }
                	    else if ( (LA66_2 == ASSIGN) )
                	    {
                	        alt66 = 1;
                	    }
                	    else 
                	    {
                	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        NoViableAltException nvae_d66s2 =
                	            new NoViableAltException("", 66, 2, input);

                	        throw nvae_d66s2;
                	    }
                	    }
                	    break;
                	case CLOSE_BRACE:
                	case COMMA:
                		{
                	    alt66 = 1;
                	    }
                	    break;
                	case MONONOT:
                	case MONOTWIDDLE:
                	case NEW_ARRAY:
                	case OBJECT:
                	case THIS:
                	case OPEN_BRACE:
                	case LPAREN:
                	case BIT_AND:
                	case PLUS:
                	case MINUS:
                	case STAR:
                	case BOOL:
                	case BYTE:
                	case CHAR:
                	case SHORT:
                	case INT:
                	case LONG:
                	case FLOAT:
                	case DOUBLE:
                	case Real_literal:
                	case NUMBER:
                	case Hex_number:
                	case Character_literal:
                	case STRINGLITERAL:
                	case Verbatim_string_literal:
                	case TRUE:
                	case FALSE:
                	case NULL:
                	case 197:
                	case 207:
                	case 209:
                	case 210:
                	case 214:
                	case 215:
                	case 216:
                	case 217:
                	case 218:
                	case 219:
                	case 251:
                	case 252:
                	case 253:
                	case 254:
                	case 275:
                	case 276:
                		{
                	    alt66 = 2;
                	    }
                	    break;
                	case ELIF:
                	case ENDIF:
                	case DEFINE:
                	case UNDEF:
                	case 195:
                	case 221:
                	case 224:
                	case 226:
                	case 227:
                	case 228:
                	case 229:
                	case 230:
                	case 231:
                	case 232:
                	case 233:
                	case 234:
                	case 235:
                	case 236:
                	case 237:
                	case 238:
                	case 239:
                	case 241:
                	case 242:
                	case 243:
                	case 244:
                	case 247:
                	case 248:
                	case 249:
                	case 250:
                	case 256:
                	case 263:
                	case 264:
                	case 274:
                	case 277:
                		{
                	    int LA66_5 = input.LA(2);

                	    if ( (LA66_5 == OPEN_BRACKET || (LA66_5 >= CLOSE_BRACE && LA66_5 <= NULL_COALESCE) || (LA66_5 >= LOG_OR && LA66_5 <= LEFT_SHIFT) || (LA66_5 >= PLUS && LA66_5 <= COMMA) || (LA66_5 >= DOT && LA66_5 <= GT) || (LA66_5 >= 208 && LA66_5 <= 210) || LA66_5 == 220 || (LA66_5 >= 222 && LA66_5 <= 223)) )
                	    {
                	        alt66 = 2;
                	    }
                	    else if ( (LA66_5 == ASSIGN) )
                	    {
                	        alt66 = 1;
                	    }
                	    else 
                	    {
                	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        NoViableAltException nvae_d66s5 =
                	            new NoViableAltException("", 66, 5, input);

                	        throw nvae_d66s5;
                	    }
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		    NoViableAltException nvae_d66s0 =
                		        new NoViableAltException("", 66, 0, input);

                		    throw nvae_d66s0;
                	}

                	switch (alt66) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:467:8: object_initializer
                	        {
                	        	PushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer2219);
                	        	object_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:468:5: collection_initializer
                	        {
                	        	PushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer2226);
                	        	collection_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "object_or_collection_initializer"


        // $ANTLR start "collection_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:469:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
        public void collection_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:469:23: ( element_initializer_list ( ',' )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:470:2: element_initializer_list ( ',' )? '}'
                {
                	PushFollow(FOLLOW_element_initializer_list_in_collection_initializer2236);
                	element_initializer_list();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:470:29: ( ',' )?
                	int alt67 = 2;
                	int LA67_0 = input.LA(1);

                	if ( (LA67_0 == COMMA) )
                	{
                	    alt67 = 1;
                	}
                	switch (alt67) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:470:29: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_collection_initializer2240); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_collection_initializer2245); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "collection_initializer"


        // $ANTLR start "element_initializer_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:471:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
        public void element_initializer_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:471:25: ( element_initializer ( ',' element_initializer )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:472:2: element_initializer ( ',' element_initializer )*
                {
                	PushFollow(FOLLOW_element_initializer_in_element_initializer_list2254);
                	element_initializer();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:472:23: ( ',' element_initializer )*
                	do 
                	{
                	    int alt68 = 2;
                	    int LA68_0 = input.LA(1);

                	    if ( (LA68_0 == COMMA) )
                	    {
                	        int LA68_1 = input.LA(2);

                	        if ( ((LA68_1 >= MONONOT && LA68_1 <= MONOTWIDDLE) || LA68_1 == NEW_ARRAY || (LA68_1 >= OBJECT && LA68_1 <= THIS) || LA68_1 == OPEN_BRACE || LA68_1 == LPAREN || LA68_1 == BIT_AND || (LA68_1 >= PLUS && LA68_1 <= MINUS) || LA68_1 == STAR || (LA68_1 >= BOOL && LA68_1 <= NULL) || (LA68_1 >= ELIF && LA68_1 <= UNDEF) || LA68_1 == 195 || LA68_1 == 197 || LA68_1 == 207 || (LA68_1 >= 209 && LA68_1 <= 210) || (LA68_1 >= 214 && LA68_1 <= 219) || LA68_1 == 221 || (LA68_1 >= 224 && LA68_1 <= 239) || (LA68_1 >= 241 && LA68_1 <= 244) || (LA68_1 >= 247 && LA68_1 <= 254) || LA68_1 == 256 || (LA68_1 >= 263 && LA68_1 <= 264) || (LA68_1 >= 274 && LA68_1 <= 277)) )
                	        {
                	            alt68 = 1;
                	        }


                	    }


                	    switch (alt68) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:472:24: ',' element_initializer
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_element_initializer_list2258); if (state.failed) return ;
                			    	PushFollow(FOLLOW_element_initializer_in_element_initializer_list2260);
                			    	element_initializer();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop68;
                	    }
                	} while (true);

                	loop68:
                		;	// Stops C# compiler whining that label 'loop68' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "element_initializer_list"


        // $ANTLR start "element_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:473:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
        public void element_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:473:20: ( non_assignment_expression | '{' expression_list '}' )
                int alt69 = 2;
                int LA69_0 = input.LA(1);

                if ( ((LA69_0 >= MONONOT && LA69_0 <= MONOTWIDDLE) || LA69_0 == NEW_ARRAY || (LA69_0 >= OBJECT && LA69_0 <= THIS) || LA69_0 == LPAREN || LA69_0 == BIT_AND || (LA69_0 >= PLUS && LA69_0 <= MINUS) || LA69_0 == STAR || (LA69_0 >= BOOL && LA69_0 <= NULL) || (LA69_0 >= ELIF && LA69_0 <= UNDEF) || LA69_0 == 195 || LA69_0 == 197 || LA69_0 == 207 || (LA69_0 >= 209 && LA69_0 <= 210) || (LA69_0 >= 214 && LA69_0 <= 219) || LA69_0 == 221 || (LA69_0 >= 224 && LA69_0 <= 239) || (LA69_0 >= 241 && LA69_0 <= 244) || (LA69_0 >= 247 && LA69_0 <= 254) || LA69_0 == 256 || (LA69_0 >= 263 && LA69_0 <= 264) || (LA69_0 >= 274 && LA69_0 <= 277)) )
                {
                    alt69 = 1;
                }
                else if ( (LA69_0 == OPEN_BRACE) )
                {
                    alt69 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d69s0 =
                        new NoViableAltException("", 69, 0, input);

                    throw nvae_d69s0;
                }
                switch (alt69) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:474:2: non_assignment_expression
                        {
                        	PushFollow(FOLLOW_non_assignment_expression_in_element_initializer2271);
                        	non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:475:4: '{' expression_list '}'
                        {
                        	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_element_initializer2277); if (state.failed) return ;
                        	PushFollow(FOLLOW_expression_list_in_element_initializer2281);
                        	expression_list();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_element_initializer2285); if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "element_initializer"


        // $ANTLR start "object_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:482:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
        public void object_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:482:19: ( ( member_initializer_list )? ( ',' )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:483:2: ( member_initializer_list )? ( ',' )? '}'
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:483:2: ( member_initializer_list )?
                	int alt70 = 2;
                	int LA70_0 = input.LA(1);

                	if ( (LA70_0 == IDENTIFIER || (LA70_0 >= ELIF && LA70_0 <= UNDEF) || LA70_0 == 195 || LA70_0 == 221 || (LA70_0 >= 224 && LA70_0 <= 239) || (LA70_0 >= 241 && LA70_0 <= 244) || (LA70_0 >= 247 && LA70_0 <= 250) || LA70_0 == 256 || (LA70_0 >= 263 && LA70_0 <= 264) || LA70_0 == 274 || LA70_0 == 277) )
                	{
                	    alt70 = 1;
                	}
                	switch (alt70) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:483:2: member_initializer_list
                	        {
                	        	PushFollow(FOLLOW_member_initializer_list_in_object_initializer2300);
                	        	member_initializer_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:483:29: ( ',' )?
                	int alt71 = 2;
                	int LA71_0 = input.LA(1);

                	if ( (LA71_0 == COMMA) )
                	{
                	    alt71 = 1;
                	}
                	switch (alt71) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:483:29: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_object_initializer2305); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_object_initializer2310); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "object_initializer"


        // $ANTLR start "member_initializer_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:484:1: member_initializer_list : member_initializer ( ',' member_initializer )* ;
        public void member_initializer_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:484:24: ( member_initializer ( ',' member_initializer )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:485:2: member_initializer ( ',' member_initializer )*
                {
                	PushFollow(FOLLOW_member_initializer_in_member_initializer_list2319);
                	member_initializer();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:485:22: ( ',' member_initializer )*
                	do 
                	{
                	    int alt72 = 2;
                	    int LA72_0 = input.LA(1);

                	    if ( (LA72_0 == COMMA) )
                	    {
                	        int LA72_1 = input.LA(2);

                	        if ( (LA72_1 == IDENTIFIER || (LA72_1 >= ELIF && LA72_1 <= UNDEF) || LA72_1 == 195 || LA72_1 == 221 || (LA72_1 >= 224 && LA72_1 <= 239) || (LA72_1 >= 241 && LA72_1 <= 244) || (LA72_1 >= 247 && LA72_1 <= 250) || LA72_1 == 256 || (LA72_1 >= 263 && LA72_1 <= 264) || LA72_1 == 274 || LA72_1 == 277) )
                	        {
                	            alt72 = 1;
                	        }


                	    }


                	    switch (alt72) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:485:23: ',' member_initializer
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_member_initializer_list2323); if (state.failed) return ;
                			    	PushFollow(FOLLOW_member_initializer_in_member_initializer_list2325);
                			    	member_initializer();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop72;
                	    }
                	} while (true);

                	loop72:
                		;	// Stops C# compiler whining that label 'loop72' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "member_initializer_list"


        // $ANTLR start "member_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:486:1: member_initializer : identifier '=' initializer_value ;
        public void member_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:486:19: ( identifier '=' initializer_value )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:487:2: identifier '=' initializer_value
                {
                	PushFollow(FOLLOW_identifier_in_member_initializer2336);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_member_initializer2340); if (state.failed) return ;
                	PushFollow(FOLLOW_initializer_value_in_member_initializer2344);
                	initializer_value();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "member_initializer"


        // $ANTLR start "initializer_value"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:488:1: initializer_value : ( expression | object_or_collection_initializer );
        public void initializer_value() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:488:18: ( expression | object_or_collection_initializer )
                int alt73 = 2;
                int LA73_0 = input.LA(1);

                if ( ((LA73_0 >= MONONOT && LA73_0 <= MONOTWIDDLE) || LA73_0 == NEW_ARRAY || (LA73_0 >= OBJECT && LA73_0 <= THIS) || LA73_0 == LPAREN || LA73_0 == BIT_AND || (LA73_0 >= PLUS && LA73_0 <= MINUS) || LA73_0 == STAR || (LA73_0 >= BOOL && LA73_0 <= NULL) || (LA73_0 >= ELIF && LA73_0 <= UNDEF) || LA73_0 == 195 || LA73_0 == 197 || LA73_0 == 207 || (LA73_0 >= 209 && LA73_0 <= 210) || (LA73_0 >= 214 && LA73_0 <= 219) || LA73_0 == 221 || (LA73_0 >= 224 && LA73_0 <= 239) || (LA73_0 >= 241 && LA73_0 <= 244) || (LA73_0 >= 247 && LA73_0 <= 254) || LA73_0 == 256 || (LA73_0 >= 263 && LA73_0 <= 264) || (LA73_0 >= 274 && LA73_0 <= 277)) )
                {
                    alt73 = 1;
                }
                else if ( (LA73_0 == OPEN_BRACE) )
                {
                    alt73 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d73s0 =
                        new NoViableAltException("", 73, 0, input);

                    throw nvae_d73s0;
                }
                switch (alt73) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:489:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_initializer_value2353);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:490:4: object_or_collection_initializer
                        {
                        	PushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value2359);
                        	object_or_collection_initializer();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "initializer_value"


        // $ANTLR start "typeof_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:494:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
        public void typeof_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:494:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:495:2: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
                {
                	Match(input,219,FOLLOW_219_in_typeof_expression2371); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_typeof_expression2375); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:495:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
                	int alt74 = 3;
                	alt74 = dfa74.Predict(input);
                	switch (alt74) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:495:20: ( unbound_type_name )=> unbound_type_name
                	        {
                	        	PushFollow(FOLLOW_unbound_type_name_in_typeof_expression2386);
                	        	unbound_type_name();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:496:10: type
                	        {
                	        	PushFollow(FOLLOW_type_in_typeof_expression2397);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:497:10: 'void'
                	        {
                	        	Match(input,206,FOLLOW_206_in_typeof_expression2409); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_typeof_expression2414); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "typeof_expression"


        // $ANTLR start "unbound_type_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:502:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
        public void unbound_type_name() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:502:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:504:2: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
                {
                	PushFollow(FOLLOW_unbound_type_name_start_in_unbound_type_name2429);
                	unbound_type_name_start();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:505:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
                	do 
                	{
                	    int alt75 = 3;
                	    alt75 = dfa75.Predict(input);
                	    switch (alt75) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:505:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:505:4: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:505:5: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
                			    	{
                			    		PushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name2448);
                			    		generic_dimension_specifier();
                			    		state._fsp--;
                			    		if (state.failed) return ;
                			    		PushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name2452);
                			    		unbound_type_name_part();
                			    		state._fsp--;
                			    		if (state.failed) return ;

                			    	}


                			    }
                			    break;
                			case 2 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:506:5: unbound_type_name_part
                			    {
                			    	PushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name2459);
                			    	unbound_type_name_part();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop75;
                	    }
                	} while (true);

                	loop75:
                		;	// Stops C# compiler whining that label 'loop75' has no statements

                	PushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name2469);
                	generic_dimension_specifier();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unbound_type_name"


        // $ANTLR start "unbound_type_name_start"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:510:1: unbound_type_name_start : identifier ( '::' identifier )? ;
        public void unbound_type_name_start() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:510:24: ( identifier ( '::' identifier )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:511:2: identifier ( '::' identifier )?
                {
                	PushFollow(FOLLOW_identifier_in_unbound_type_name_start2479);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:511:13: ( '::' identifier )?
                	int alt76 = 2;
                	int LA76_0 = input.LA(1);

                	if ( (LA76_0 == 208) )
                	{
                	    alt76 = 1;
                	}
                	switch (alt76) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:511:14: '::' identifier
                	        {
                	        	Match(input,208,FOLLOW_208_in_unbound_type_name_start2482); if (state.failed) return ;
                	        	PushFollow(FOLLOW_identifier_in_unbound_type_name_start2484);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unbound_type_name_start"


        // $ANTLR start "unbound_type_name_part"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:512:1: unbound_type_name_part : '.' identifier ;
        public void unbound_type_name_part() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:512:23: ( '.' identifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:513:2: '.' identifier
                {
                	Match(input,DOT,FOLLOW_DOT_in_unbound_type_name_part2493); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_unbound_type_name_part2497);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unbound_type_name_part"


        // $ANTLR start "generic_dimension_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:514:1: generic_dimension_specifier : '<' ( commas )? '>' ;
        public void generic_dimension_specifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:514:28: ( '<' ( commas )? '>' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:515:2: '<' ( commas )? '>'
                {
                	Match(input,LTHAN,FOLLOW_LTHAN_in_generic_dimension_specifier2505); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:515:8: ( commas )?
                	int alt77 = 2;
                	int LA77_0 = input.LA(1);

                	if ( (LA77_0 == COMMA) )
                	{
                	    alt77 = 1;
                	}
                	switch (alt77) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:515:8: commas
                	        {
                	        	PushFollow(FOLLOW_commas_in_generic_dimension_specifier2509);
                	        	commas();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,GT,FOLLOW_GT_in_generic_dimension_specifier2514); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "generic_dimension_specifier"


        // $ANTLR start "commas"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:516:1: commas : ( ',' )+ ;
        public void commas() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:516:7: ( ( ',' )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:517:2: ( ',' )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:517:2: ( ',' )+
                	int cnt78 = 0;
                	do 
                	{
                	    int alt78 = 2;
                	    int LA78_0 = input.LA(1);

                	    if ( (LA78_0 == COMMA) )
                	    {
                	        alt78 = 1;
                	    }


                	    switch (alt78) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:517:2: ','
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_commas2523); if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt78 >= 1 ) goto loop78;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee78 =
                		                new EarlyExitException(78, input);
                		            throw eee78;
                	    }
                	    cnt78++;
                	} while (true);

                	loop78:
                		;	// Stops C# compiler whining that label 'loop78' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "commas"

        public class type_name_return : TreeRuleReturnScope
        {
            public string thetext;
        };

        // $ANTLR start "type_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:523:1: type_name returns [string thetext] : namespace_or_type_name ;
        public TemplateExtracter.type_name_return type_name() // throws RecognitionException [1]
        {   
            TemplateExtracter.type_name_return retval = new TemplateExtracter.type_name_return();
            retval.start = input.LT(1);

            string namespace_or_type_name5 = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:523:35: ( namespace_or_type_name )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:524:2: namespace_or_type_name
                {
                	PushFollow(FOLLOW_namespace_or_type_name_in_type_name2543);
                	namespace_or_type_name5 = namespace_or_type_name();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.thetext =  namespace_or_type_name5; 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_name"


        // $ANTLR start "namespace_or_type_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:525:1: namespace_or_type_name returns [string thetext] : t1= type_or_generic ( '::' tc= type_or_generic )? ( '.' tn= type_or_generic )* ;
        public string namespace_or_type_name() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            TemplateExtracter.type_or_generic_return t1 = default(TemplateExtracter.type_or_generic_return);

            TemplateExtracter.type_or_generic_return tc = default(TemplateExtracter.type_or_generic_return);

            TemplateExtracter.type_or_generic_return tn = default(TemplateExtracter.type_or_generic_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:525:48: (t1= type_or_generic ( '::' tc= type_or_generic )? ( '.' tn= type_or_generic )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:526:3: t1= type_or_generic ( '::' tc= type_or_generic )? ( '.' tn= type_or_generic )*
                {
                	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2560);
                	t1 = type_or_generic();
                	state._fsp--;
                	if (state.failed) return thetext;
                	if ( (state.backtracking==0) )
                	{
                	   thetext = t1.type+formatTyargs(((t1 != null) ? t1.generic_arguments : default(List<string>))); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:526:81: ( '::' tc= type_or_generic )?
                	int alt79 = 2;
                	int LA79_0 = input.LA(1);

                	if ( (LA79_0 == 208) )
                	{
                	    alt79 = 1;
                	}
                	switch (alt79) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:526:82: '::' tc= type_or_generic
                	        {
                	        	Match(input,208,FOLLOW_208_in_namespace_or_type_name2566); if (state.failed) return thetext;
                	        	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2570);
                	        	tc = type_or_generic();
                	        	state._fsp--;
                	        	if (state.failed) return thetext;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   thetext+="::"+tc.type+formatTyargs(((tc != null) ? tc.generic_arguments : default(List<string>))); 
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:526:172: ( '.' tn= type_or_generic )*
                	do 
                	{
                	    int alt80 = 2;
                	    int LA80_0 = input.LA(1);

                	    if ( (LA80_0 == DOT) )
                	    {
                	        int LA80_2 = input.LA(2);

                	        if ( (LA80_2 == IDENTIFIER || (LA80_2 >= ELIF && LA80_2 <= UNDEF) || LA80_2 == 195 || LA80_2 == 221 || (LA80_2 >= 224 && LA80_2 <= 239) || (LA80_2 >= 241 && LA80_2 <= 244) || (LA80_2 >= 247 && LA80_2 <= 250) || LA80_2 == 256 || (LA80_2 >= 263 && LA80_2 <= 264) || LA80_2 == 274 || LA80_2 == 277) )
                	        {
                	            alt80 = 1;
                	        }


                	    }


                	    switch (alt80) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:526:173: '.' tn= type_or_generic
                			    {
                			    	Match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name2577); if (state.failed) return thetext;
                			    	PushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name2583);
                			    	tn = type_or_generic();
                			    	state._fsp--;
                			    	if (state.failed) return thetext;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   thetext+="."+tn.type+formatTyargs(((tn != null) ? tn.generic_arguments : default(List<string>))); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop80;
                	    }
                	} while (true);

                	loop80:
                		;	// Stops C# compiler whining that label 'loop80' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "namespace_or_type_name"

        public class type_or_generic_return : TreeRuleReturnScope
        {
            public string type;
            public List<string> generic_arguments;
        };

        // $ANTLR start "type_or_generic"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:527:1: type_or_generic returns [string type, List<string> generic_arguments] : ( ( identifier generic_argument_list )=>t= identifier ga= generic_argument_list | t= identifier );
        public TemplateExtracter.type_or_generic_return type_or_generic() // throws RecognitionException [1]
        {   
            TemplateExtracter.type_or_generic_return retval = new TemplateExtracter.type_or_generic_return();
            retval.start = input.LT(1);

            TemplateExtracter.identifier_return t = default(TemplateExtracter.identifier_return);

            List<string> ga = default(List<string>);



                retval.generic_arguments =  new List<String>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:533:2: ( ( identifier generic_argument_list )=>t= identifier ga= generic_argument_list | t= identifier )
                int alt81 = 2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0 == IDENTIFIER) )
                {
                    int LA81_1 = input.LA(2);

                    if ( (synpred16_TemplateExtracter()) )
                    {
                        alt81 = 1;
                    }
                    else if ( (true) )
                    {
                        alt81 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        NoViableAltException nvae_d81s1 =
                            new NoViableAltException("", 81, 1, input);

                        throw nvae_d81s1;
                    }
                }
                else if ( ((LA81_0 >= ELIF && LA81_0 <= UNDEF) || LA81_0 == 195 || LA81_0 == 221 || (LA81_0 >= 224 && LA81_0 <= 239) || (LA81_0 >= 241 && LA81_0 <= 244) || (LA81_0 >= 247 && LA81_0 <= 250) || LA81_0 == 256 || (LA81_0 >= 263 && LA81_0 <= 264) || LA81_0 == 274 || LA81_0 == 277) )
                {
                    int LA81_2 = input.LA(2);

                    if ( (synpred16_TemplateExtracter()) )
                    {
                        alt81 = 1;
                    }
                    else if ( (true) )
                    {
                        alt81 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        NoViableAltException nvae_d81s2 =
                            new NoViableAltException("", 81, 2, input);

                        throw nvae_d81s2;
                    }
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d81s0 =
                        new NoViableAltException("", 81, 0, input);

                    throw nvae_d81s0;
                }
                switch (alt81) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:534:2: ( identifier generic_argument_list )=>t= identifier ga= generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_type_or_generic2621);
                        	t = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_generic_argument_list_in_type_or_generic2627);
                        	ga = generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.generic_arguments =  ga; 
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:535:4: t= identifier
                        {
                        	PushFollow(FOLLOW_identifier_in_type_or_generic2636);
                        	t = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
                if ( (state.backtracking==0) )
                {

                      retval.type =  ((t != null) ? input.TokenStream.ToString(
                    input.TreeAdaptor.GetTokenStartIndex(t.Start),
                    input.TreeAdaptor.GetTokenStopIndex(t.Start)) : null);

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "type_or_generic"

        public class qid_return : TreeRuleReturnScope
        {
            public string name;
            public List<String> tyargs;
        };

        // $ANTLR start "qid"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:538:1: qid returns [string name, List<String> tyargs] : qid_start ( qid_part )* ;
        public TemplateExtracter.qid_return qid() // throws RecognitionException [1]
        {   
            TemplateExtracter.qid_return retval = new TemplateExtracter.qid_return();
            retval.start = input.LT(1);

            TemplateExtracter.qid_start_return qid_start6 = default(TemplateExtracter.qid_start_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:538:47: ( qid_start ( qid_part )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:539:2: qid_start ( qid_part )*
                {
                	PushFollow(FOLLOW_qid_start_in_qid2652);
                	qid_start6 = qid_start();
                	state._fsp--;
                	if (state.failed) return retval;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:539:14: ( qid_part )*
                	do 
                	{
                	    int alt82 = 2;
                	    int LA82_0 = input.LA(1);

                	    if ( (LA82_0 == DOT) )
                	    {
                	        int LA82_2 = input.LA(2);

                	        if ( (LA82_2 == IDENTIFIER || (LA82_2 >= ELIF && LA82_2 <= UNDEF) || LA82_2 == 195 || LA82_2 == 221 || (LA82_2 >= 224 && LA82_2 <= 239) || (LA82_2 >= 241 && LA82_2 <= 244) || (LA82_2 >= 247 && LA82_2 <= 250) || LA82_2 == 256 || (LA82_2 >= 263 && LA82_2 <= 264) || LA82_2 == 274 || LA82_2 == 277) )
                	        {
                	            alt82 = 1;
                	        }


                	    }
                	    else if ( (LA82_0 == PTR) )
                	    {
                	        alt82 = 1;
                	    }


                	    switch (alt82) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:539:14: qid_part
                			    {
                			    	PushFollow(FOLLOW_qid_part_in_qid2656);
                			    	qid_part();
                			    	state._fsp--;
                			    	if (state.failed) return retval;

                			    }
                			    break;

                			default:
                			    goto loop82;
                	    }
                	} while (true);

                	loop82:
                		;	// Stops C# compiler whining that label 'loop82' has no statements

                	if ( (state.backtracking==0) )
                	{
                	   retval.name = ((qid_start6 != null) ? qid_start6.name : default(string)); retval.tyargs =  ((qid_start6 != null) ? qid_start6.tyargs : default(List<String>)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "qid"

        public class qid_start_return : TreeRuleReturnScope
        {
            public string name;
            public List<String> tyargs;
        };

        // $ANTLR start "qid_start"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:541:1: qid_start returns [string name, List<String> tyargs] : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | i1= identifier ( '::' inext= identifier )? | literal );
        public TemplateExtracter.qid_start_return qid_start() // throws RecognitionException [1]
        {   
            TemplateExtracter.qid_start_return retval = new TemplateExtracter.qid_start_return();
            retval.start = input.LT(1);

            TemplateExtracter.identifier_return i1 = default(TemplateExtracter.identifier_return);

            TemplateExtracter.identifier_return inext = default(TemplateExtracter.identifier_return);

            string predefined_type7 = default(string);

            TemplateExtracter.identifier_return identifier8 = default(TemplateExtracter.identifier_return);

            List<string> generic_argument_list9 = default(List<string>);

            TemplateExtracter.literal_return literal10 = default(TemplateExtracter.literal_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:541:53: ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | i1= identifier ( '::' inext= identifier )? | literal )
                int alt84 = 4;
                switch ( input.LA(1) ) 
                {
                case OBJECT:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case 251:
                case 252:
                case 253:
                case 254:
                case 275:
                case 276:
                	{
                    alt84 = 1;
                    }
                    break;
                case IDENTIFIER:
                	{
                    int LA84_2 = input.LA(2);

                    if ( ((LA84_2 >= OPEN_BRACE && LA84_2 <= LPAREN) || LA84_2 == ASSIGN || LA84_2 == COMMA || (LA84_2 >= DOT && LA84_2 <= PTR) || LA84_2 == 208) )
                    {
                        alt84 = 3;
                    }
                    else if ( (LA84_2 == LTHAN) && (synpred17_TemplateExtracter()) )
                    {
                        alt84 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        NoViableAltException nvae_d84s2 =
                            new NoViableAltException("", 84, 2, input);

                        throw nvae_d84s2;
                    }
                    }
                    break;
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 256:
                case 263:
                case 264:
                case 274:
                case 277:
                	{
                    int LA84_3 = input.LA(2);

                    if ( (LA84_3 == LTHAN) && (synpred17_TemplateExtracter()) )
                    {
                        alt84 = 2;
                    }
                    else if ( ((LA84_3 >= OPEN_BRACE && LA84_3 <= LPAREN) || LA84_3 == ASSIGN || LA84_3 == COMMA || (LA84_3 >= DOT && LA84_3 <= PTR) || LA84_3 == 208) )
                    {
                        alt84 = 3;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        NoViableAltException nvae_d84s3 =
                            new NoViableAltException("", 84, 3, input);

                        throw nvae_d84s3;
                    }
                    }
                    break;
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                	{
                    alt84 = 4;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d84s0 =
                	        new NoViableAltException("", 84, 0, input);

                	    throw nvae_d84s0;
                }

                switch (alt84) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:542:2: predefined_type
                        {
                        	PushFollow(FOLLOW_predefined_type_in_qid_start2672);
                        	predefined_type7 = predefined_type();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.name =  predefined_type7; 
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:543:4: ( identifier generic_argument_list )=> identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_qid_start2690);
                        	identifier8 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	PushFollow(FOLLOW_generic_argument_list_in_qid_start2694);
                        	generic_argument_list9 = generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.name =  ((identifier8 != null) ? input.TokenStream.ToString(
                        	    input.TreeAdaptor.GetTokenStartIndex(identifier8.Start),
                        	    input.TreeAdaptor.GetTokenStopIndex(identifier8.Start)) : null); retval.tyargs =  generic_argument_list9; 
                        	}

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:546:4: i1= identifier ( '::' inext= identifier )?
                        {
                        	PushFollow(FOLLOW_identifier_in_qid_start2706);
                        	i1 = identifier();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.name =  ((i1 != null) ? input.TokenStream.ToString(
                        	    input.TreeAdaptor.GetTokenStartIndex(i1.Start),
                        	    input.TreeAdaptor.GetTokenStopIndex(i1.Start)) : null); 
                        	}
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:546:41: ( '::' inext= identifier )?
                        	int alt83 = 2;
                        	int LA83_0 = input.LA(1);

                        	if ( (LA83_0 == 208) )
                        	{
                        	    alt83 = 1;
                        	}
                        	switch (alt83) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:546:42: '::' inext= identifier
                        	        {
                        	        	Match(input,208,FOLLOW_208_in_qid_start2712); if (state.failed) return retval;
                        	        	PushFollow(FOLLOW_identifier_in_qid_start2718);
                        	        	inext = identifier();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   retval.name+="::" + ((inext != null) ? input.TokenStream.ToString(
                        	        	    input.TreeAdaptor.GetTokenStartIndex(inext.Start),
                        	        	    input.TreeAdaptor.GetTokenStopIndex(inext.Start)) : null); 
                        	        	}

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:547:4: literal
                        {
                        	PushFollow(FOLLOW_literal_in_qid_start2727);
                        	literal10 = literal();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.name =  ((literal10 != null) ? input.TokenStream.ToString(
                        	    input.TreeAdaptor.GetTokenStartIndex(literal10.Start),
                        	    input.TreeAdaptor.GetTokenStopIndex(literal10.Start)) : null); 
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "qid_start"


        // $ANTLR start "qid_part"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:551:1: qid_part : access_identifier ;
        public void qid_part() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:551:9: ( access_identifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:552:2: access_identifier
                {
                	PushFollow(FOLLOW_access_identifier_in_qid_part2742);
                	access_identifier();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "qid_part"


        // $ANTLR start "generic_argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:554:1: generic_argument_list returns [List<string> tyargs] : '<' ta= type_arguments '>' ;
        public List<string> generic_argument_list() // throws RecognitionException [1]
        {   
            List<string> tyargs = default(List<string>);

            List<string> ta = default(List<string>);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:558:1: ( '<' ta= type_arguments '>' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:559:2: '<' ta= type_arguments '>'
                {
                	Match(input,LTHAN,FOLLOW_LTHAN_in_generic_argument_list2762); if (state.failed) return tyargs;
                	PushFollow(FOLLOW_type_arguments_in_generic_argument_list2768);
                	ta = type_arguments();
                	state._fsp--;
                	if (state.failed) return tyargs;
                	Match(input,GT,FOLLOW_GT_in_generic_argument_list2772); if (state.failed) return tyargs;

                }

                if ( (state.backtracking==0) )
                {
                   
                      tyargs =  ta;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return tyargs;
        }
        // $ANTLR end "generic_argument_list"


        // $ANTLR start "type_arguments"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:560:1: type_arguments returns [List<string> tyargs] : t1= type ( ',' tn= type )* ;
        public List<string> type_arguments() // throws RecognitionException [1]
        {   
            List<string> tyargs = default(List<string>);

            string t1 = default(string);

            string tn = default(string);



                tyargs =  new List<string>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:564:1: (t1= type ( ',' tn= type )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:565:2: t1= type ( ',' tn= type )*
                {
                	PushFollow(FOLLOW_type_in_type_arguments2793);
                	t1 = type();
                	state._fsp--;
                	if (state.failed) return tyargs;
                	if ( (state.backtracking==0) )
                	{
                	   tyargs.Add(t1); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:565:40: ( ',' tn= type )*
                	do 
                	{
                	    int alt85 = 2;
                	    int LA85_0 = input.LA(1);

                	    if ( (LA85_0 == COMMA) )
                	    {
                	        alt85 = 1;
                	    }


                	    switch (alt85) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:565:41: ',' tn= type
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_type_arguments2798); if (state.failed) return tyargs;
                			    	PushFollow(FOLLOW_type_in_type_arguments2802);
                			    	tn = type();
                			    	state._fsp--;
                			    	if (state.failed) return tyargs;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   tyargs.Add(tn); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop85;
                	    }
                	} while (true);

                	loop85:
                		;	// Stops C# compiler whining that label 'loop85' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return tyargs;
        }
        // $ANTLR end "type_arguments"


        // $ANTLR start "type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:567:1: type returns [string thetext] : ( ( ( predefined_type | type_name ) rank_specifiers )=> (p1= predefined_type | tn1= type_name ) rs= rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> (p2= predefined_type | tn2= type_name ) ( ( '*' )+ | '?' ) | (p3= predefined_type | tn3= type_name ) | 'void' ( '*' )+ );
        public string type() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            string p1 = default(string);

            TemplateExtracter.type_name_return tn1 = default(TemplateExtracter.type_name_return);

            string rs = default(string);

            string p2 = default(string);

            TemplateExtracter.type_name_return tn2 = default(TemplateExtracter.type_name_return);

            string p3 = default(string);

            TemplateExtracter.type_name_return tn3 = default(TemplateExtracter.type_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:567:30: ( ( ( predefined_type | type_name ) rank_specifiers )=> (p1= predefined_type | tn1= type_name ) rs= rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> (p2= predefined_type | tn2= type_name ) ( ( '*' )+ | '?' ) | (p3= predefined_type | tn3= type_name ) | 'void' ( '*' )+ )
                int alt93 = 4;
                alt93 = dfa93.Predict(input);
                switch (alt93) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:4: ( ( predefined_type | type_name ) rank_specifiers )=> (p1= predefined_type | tn1= type_name ) rs= rank_specifiers ( '*' )*
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:56: (p1= predefined_type | tn1= type_name )
                        	int alt86 = 2;
                        	int LA86_0 = input.LA(1);

                        	if ( (LA86_0 == OBJECT || (LA86_0 >= BOOL && LA86_0 <= DOUBLE) || (LA86_0 >= 251 && LA86_0 <= 254) || (LA86_0 >= 275 && LA86_0 <= 276)) )
                        	{
                        	    alt86 = 1;
                        	}
                        	else if ( (LA86_0 == IDENTIFIER || (LA86_0 >= ELIF && LA86_0 <= UNDEF) || LA86_0 == 195 || LA86_0 == 221 || (LA86_0 >= 224 && LA86_0 <= 239) || (LA86_0 >= 241 && LA86_0 <= 244) || (LA86_0 >= 247 && LA86_0 <= 250) || LA86_0 == 256 || (LA86_0 >= 263 && LA86_0 <= 264) || LA86_0 == 274 || LA86_0 == 277) )
                        	{
                        	    alt86 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        	    NoViableAltException nvae_d86s0 =
                        	        new NoViableAltException("", 86, 0, input);

                        	    throw nvae_d86s0;
                        	}
                        	switch (alt86) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:57: p1= predefined_type
                        	        {
                        	        	PushFollow(FOLLOW_predefined_type_in_type2839);
                        	        	p1 = predefined_type();
                        	        	state._fsp--;
                        	        	if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext =  p1; 
                        	        	}

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:106: tn1= type_name
                        	        {
                        	        	PushFollow(FOLLOW_type_name_in_type2847);
                        	        	tn1 = type_name();
                        	        	state._fsp--;
                        	        	if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext =  ((tn1 != null) ? tn1.thetext : default(string)); 
                        	        	}

                        	        }
                        	        break;

                        	}

                        	PushFollow(FOLLOW_rank_specifiers_in_type2856);
                        	rs = rank_specifiers();
                        	state._fsp--;
                        	if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext += rs; 
                        	}
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:201: ( '*' )*
                        	do 
                        	{
                        	    int alt87 = 2;
                        	    int LA87_0 = input.LA(1);

                        	    if ( (LA87_0 == STAR) )
                        	    {
                        	        alt87 = 1;
                        	    }


                        	    switch (alt87) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:202: '*'
                        			    {
                        			    	Match(input,STAR,FOLLOW_STAR_in_type2862); if (state.failed) return thetext;
                        			    	if ( (state.backtracking==0) )
                        			    	{
                        			    	   thetext += "*"; 
                        			    	}

                        			    }
                        			    break;

                        			default:
                        			    goto loop87;
                        	    }
                        	} while (true);

                        	loop87:
                        		;	// Stops C# compiler whining that label 'loop87' has no statements


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:4: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> (p2= predefined_type | tn2= type_name ) ( ( '*' )+ | '?' )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:53: (p2= predefined_type | tn2= type_name )
                        	int alt88 = 2;
                        	int LA88_0 = input.LA(1);

                        	if ( (LA88_0 == OBJECT || (LA88_0 >= BOOL && LA88_0 <= DOUBLE) || (LA88_0 >= 251 && LA88_0 <= 254) || (LA88_0 >= 275 && LA88_0 <= 276)) )
                        	{
                        	    alt88 = 1;
                        	}
                        	else if ( (LA88_0 == IDENTIFIER || (LA88_0 >= ELIF && LA88_0 <= UNDEF) || LA88_0 == 195 || LA88_0 == 221 || (LA88_0 >= 224 && LA88_0 <= 239) || (LA88_0 >= 241 && LA88_0 <= 244) || (LA88_0 >= 247 && LA88_0 <= 250) || LA88_0 == 256 || (LA88_0 >= 263 && LA88_0 <= 264) || LA88_0 == 274 || LA88_0 == 277) )
                        	{
                        	    alt88 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        	    NoViableAltException nvae_d88s0 =
                        	        new NoViableAltException("", 88, 0, input);

                        	    throw nvae_d88s0;
                        	}
                        	switch (alt88) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:54: p2= predefined_type
                        	        {
                        	        	PushFollow(FOLLOW_predefined_type_in_type2896);
                        	        	p2 = predefined_type();
                        	        	state._fsp--;
                        	        	if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext =  p2; 
                        	        	}

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:103: tn2= type_name
                        	        {
                        	        	PushFollow(FOLLOW_type_name_in_type2904);
                        	        	tn2 = type_name();
                        	        	state._fsp--;
                        	        	if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext =  ((tn2 != null) ? tn2.thetext : default(string)); 
                        	        	}

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:149: ( ( '*' )+ | '?' )
                        	int alt90 = 2;
                        	int LA90_0 = input.LA(1);

                        	if ( (LA90_0 == STAR) )
                        	{
                        	    alt90 = 1;
                        	}
                        	else if ( (LA90_0 == 220) )
                        	{
                        	    alt90 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        	    NoViableAltException nvae_d90s0 =
                        	        new NoViableAltException("", 90, 0, input);

                        	    throw nvae_d90s0;
                        	}
                        	switch (alt90) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:150: ( '*' )+
                        	        {
                        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:150: ( '*' )+
                        	        	int cnt89 = 0;
                        	        	do 
                        	        	{
                        	        	    int alt89 = 2;
                        	        	    int LA89_0 = input.LA(1);

                        	        	    if ( (LA89_0 == STAR) )
                        	        	    {
                        	        	        alt89 = 1;
                        	        	    }


                        	        	    switch (alt89) 
                        	        		{
                        	        			case 1 :
                        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:151: '*'
                        	        			    {
                        	        			    	Match(input,STAR,FOLLOW_STAR_in_type2913); if (state.failed) return thetext;
                        	        			    	if ( (state.backtracking==0) )
                        	        			    	{
                        	        			    	   thetext += "*"; 
                        	        			    	}

                        	        			    }
                        	        			    break;

                        	        			default:
                        	        			    if ( cnt89 >= 1 ) goto loop89;
                        	        			    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        	        		            EarlyExitException eee89 =
                        	        		                new EarlyExitException(89, input);
                        	        		            throw eee89;
                        	        	    }
                        	        	    cnt89++;
                        	        	} while (true);

                        	        	loop89:
                        	        		;	// Stops C# compiler whining that label 'loop89' has no statements


                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:180: '?'
                        	        {
                        	        	Match(input,220,FOLLOW_220_in_type2921); if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext += "?"; 
                        	        	}

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:570:4: (p3= predefined_type | tn3= type_name )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:570:4: (p3= predefined_type | tn3= type_name )
                        	int alt91 = 2;
                        	int LA91_0 = input.LA(1);

                        	if ( (LA91_0 == OBJECT || (LA91_0 >= BOOL && LA91_0 <= DOUBLE) || (LA91_0 >= 251 && LA91_0 <= 254) || (LA91_0 >= 275 && LA91_0 <= 276)) )
                        	{
                        	    alt91 = 1;
                        	}
                        	else if ( (LA91_0 == IDENTIFIER || (LA91_0 >= ELIF && LA91_0 <= UNDEF) || LA91_0 == 195 || LA91_0 == 221 || (LA91_0 >= 224 && LA91_0 <= 239) || (LA91_0 >= 241 && LA91_0 <= 244) || (LA91_0 >= 247 && LA91_0 <= 250) || LA91_0 == 256 || (LA91_0 >= 263 && LA91_0 <= 264) || LA91_0 == 274 || LA91_0 == 277) )
                        	{
                        	    alt91 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        	    NoViableAltException nvae_d91s0 =
                        	        new NoViableAltException("", 91, 0, input);

                        	    throw nvae_d91s0;
                        	}
                        	switch (alt91) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:570:5: p3= predefined_type
                        	        {
                        	        	PushFollow(FOLLOW_predefined_type_in_type2932);
                        	        	p3 = predefined_type();
                        	        	state._fsp--;
                        	        	if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext =  p3; 
                        	        	}

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:570:54: tn3= type_name
                        	        {
                        	        	PushFollow(FOLLOW_type_name_in_type2940);
                        	        	tn3 = type_name();
                        	        	state._fsp--;
                        	        	if (state.failed) return thetext;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   thetext =  ((tn3 != null) ? tn3.thetext : default(string)); 
                        	        	}

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:571:4: 'void' ( '*' )+
                        {
                        	Match(input,206,FOLLOW_206_in_type2948); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Void"; 
                        	}
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:571:41: ( '*' )+
                        	int cnt92 = 0;
                        	do 
                        	{
                        	    int alt92 = 2;
                        	    int LA92_0 = input.LA(1);

                        	    if ( (LA92_0 == STAR) )
                        	    {
                        	        alt92 = 1;
                        	    }


                        	    switch (alt92) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:571:42: '*'
                        			    {
                        			    	Match(input,STAR,FOLLOW_STAR_in_type2953); if (state.failed) return thetext;
                        			    	if ( (state.backtracking==0) )
                        			    	{
                        			    	   thetext += "*"; 
                        			    	}

                        			    }
                        			    break;

                        			default:
                        			    if ( cnt92 >= 1 ) goto loop92;
                        			    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        		            EarlyExitException eee92 =
                        		                new EarlyExitException(92, input);
                        		            throw eee92;
                        	    }
                        	    cnt92++;
                        	} while (true);

                        	loop92:
                        		;	// Stops C# compiler whining that label 'loop92' has no statements


                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "type"


        // $ANTLR start "non_nullable_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:573:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
        public void non_nullable_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:573:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
                int alt100 = 2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0 == OBJECT || (LA100_0 >= BOOL && LA100_0 <= IDENTIFIER) || (LA100_0 >= ELIF && LA100_0 <= UNDEF) || LA100_0 == 195 || LA100_0 == 221 || (LA100_0 >= 224 && LA100_0 <= 239) || (LA100_0 >= 241 && LA100_0 <= 244) || (LA100_0 >= 247 && LA100_0 <= 254) || LA100_0 == 256 || (LA100_0 >= 263 && LA100_0 <= 264) || (LA100_0 >= 274 && LA100_0 <= 277)) )
                {
                    alt100 = 1;
                }
                else if ( (LA100_0 == 206) )
                {
                    alt100 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d100s0 =
                        new NoViableAltException("", 100, 0, input);

                    throw nvae_d100s0;
                }
                switch (alt100) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:574:2: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:574:2: ( predefined_type | type_name )
                        	int alt94 = 2;
                        	int LA94_0 = input.LA(1);

                        	if ( (LA94_0 == OBJECT || (LA94_0 >= BOOL && LA94_0 <= DOUBLE) || (LA94_0 >= 251 && LA94_0 <= 254) || (LA94_0 >= 275 && LA94_0 <= 276)) )
                        	{
                        	    alt94 = 1;
                        	}
                        	else if ( (LA94_0 == IDENTIFIER || (LA94_0 >= ELIF && LA94_0 <= UNDEF) || LA94_0 == 195 || LA94_0 == 221 || (LA94_0 >= 224 && LA94_0 <= 239) || (LA94_0 >= 241 && LA94_0 <= 244) || (LA94_0 >= 247 && LA94_0 <= 250) || LA94_0 == 256 || (LA94_0 >= 263 && LA94_0 <= 264) || LA94_0 == 274 || LA94_0 == 277) )
                        	{
                        	    alt94 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        	    NoViableAltException nvae_d94s0 =
                        	        new NoViableAltException("", 94, 0, input);

                        	    throw nvae_d94s0;
                        	}
                        	switch (alt94) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:574:3: predefined_type
                        	        {
                        	        	PushFollow(FOLLOW_predefined_type_in_non_nullable_type2967);
                        	        	predefined_type();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:574:21: type_name
                        	        {
                        	        	PushFollow(FOLLOW_type_name_in_non_nullable_type2971);
                        	        	type_name();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:575:3: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
                        	int alt98 = 2;
                        	int LA98_0 = input.LA(1);

                        	if ( (LA98_0 == OPEN_BRACKET) )
                        	{
                        	    alt98 = 1;
                        	}
                        	else if ( (LA98_0 == EOF || LA98_0 == CLOSE_BRACKET || LA98_0 == CLOSE_BRACE || LA98_0 == NULL_COALESCE || (LA98_0 >= LOG_OR && LA98_0 <= GTE) || LA98_0 == STAR || LA98_0 == COMMA || LA98_0 == IDENTIFIER || LA98_0 == GT || (LA98_0 >= ELIF && LA98_0 <= RPAREN) || LA98_0 == 195 || LA98_0 == 211 || (LA98_0 >= 220 && LA98_0 <= 239) || (LA98_0 >= 241 && LA98_0 <= 244) || (LA98_0 >= 247 && LA98_0 <= 250) || LA98_0 == 256 || (LA98_0 >= 263 && LA98_0 <= 264) || LA98_0 == 274 || LA98_0 == 277) )
                        	{
                        	    alt98 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        	    NoViableAltException nvae_d98s0 =
                        	        new NoViableAltException("", 98, 0, input);

                        	    throw nvae_d98s0;
                        	}
                        	switch (alt98) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:575:7: rank_specifiers ( '*' )*
                        	        {
                        	        	PushFollow(FOLLOW_rank_specifiers_in_non_nullable_type2980);
                        	        	rank_specifiers();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;
                        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:575:25: ( '*' )*
                        	        	do 
                        	        	{
                        	        	    int alt95 = 2;
                        	        	    int LA95_0 = input.LA(1);

                        	        	    if ( (LA95_0 == STAR) )
                        	        	    {
                        	        	        alt95 = 1;
                        	        	    }


                        	        	    switch (alt95) 
                        	        		{
                        	        			case 1 :
                        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:575:25: '*'
                        	        			    {
                        	        			    	Match(input,STAR,FOLLOW_STAR_in_non_nullable_type2984); if (state.failed) return ;

                        	        			    }
                        	        			    break;

                        	        			default:
                        	        			    goto loop95;
                        	        	    }
                        	        	} while (true);

                        	        	loop95:
                        	        		;	// Stops C# compiler whining that label 'loop95' has no statements


                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:576:6: ( ( '*' )+ )?
                        	        {
                        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:576:6: ( ( '*' )+ )?
                        	        	int alt97 = 2;
                        	        	int LA97_0 = input.LA(1);

                        	        	if ( (LA97_0 == STAR) )
                        	        	{
                        	        	    alt97 = 1;
                        	        	}
                        	        	switch (alt97) 
                        	        	{
                        	        	    case 1 :
                        	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:576:7: ( '*' )+
                        	        	        {
                        	        	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:576:7: ( '*' )+
                        	        	        	int cnt96 = 0;
                        	        	        	do 
                        	        	        	{
                        	        	        	    int alt96 = 2;
                        	        	        	    int LA96_0 = input.LA(1);

                        	        	        	    if ( (LA96_0 == STAR) )
                        	        	        	    {
                        	        	        	        alt96 = 1;
                        	        	        	    }


                        	        	        	    switch (alt96) 
                        	        	        		{
                        	        	        			case 1 :
                        	        	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:576:7: '*'
                        	        	        			    {
                        	        	        			    	Match(input,STAR,FOLLOW_STAR_in_non_nullable_type2993); if (state.failed) return ;

                        	        	        			    }
                        	        	        			    break;

                        	        	        			default:
                        	        	        			    if ( cnt96 >= 1 ) goto loop96;
                        	        	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        	        	        		            EarlyExitException eee96 =
                        	        	        		                new EarlyExitException(96, input);
                        	        	        		            throw eee96;
                        	        	        	    }
                        	        	        	    cnt96++;
                        	        	        	} while (true);

                        	        	        	loop96:
                        	        	        		;	// Stops C# compiler whining that label 'loop96' has no statements


                        	        	        }
                        	        	        break;

                        	        	}


                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:578:4: 'void' ( '*' )+
                        {
                        	Match(input,206,FOLLOW_206_in_non_nullable_type3005); if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:578:13: ( '*' )+
                        	int cnt99 = 0;
                        	do 
                        	{
                        	    int alt99 = 2;
                        	    int LA99_0 = input.LA(1);

                        	    if ( (LA99_0 == STAR) )
                        	    {
                        	        alt99 = 1;
                        	    }


                        	    switch (alt99) 
                        		{
                        			case 1 :
                        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:578:13: '*'
                        			    {
                        			    	Match(input,STAR,FOLLOW_STAR_in_non_nullable_type3009); if (state.failed) return ;

                        			    }
                        			    break;

                        			default:
                        			    if ( cnt99 >= 1 ) goto loop99;
                        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        		            EarlyExitException eee99 =
                        		                new EarlyExitException(99, input);
                        		            throw eee99;
                        	    }
                        	    cnt99++;
                        	} while (true);

                        	loop99:
                        		;	// Stops C# compiler whining that label 'loop99' has no statements


                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "non_nullable_type"


        // $ANTLR start "non_array_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:580:1: non_array_type : type ;
        public void non_array_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:580:15: ( type )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:581:2: type
                {
                	PushFollow(FOLLOW_type_in_non_array_type3020);
                	type();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "non_array_type"


        // $ANTLR start "array_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:582:1: array_type : type ;
        public void array_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:582:11: ( type )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:583:2: type
                {
                	PushFollow(FOLLOW_type_in_array_type3027);
                	type();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "array_type"


        // $ANTLR start "unmanaged_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:584:1: unmanaged_type : type ;
        public void unmanaged_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:584:15: ( type )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:585:2: type
                {
                	PushFollow(FOLLOW_type_in_unmanaged_type3034);
                	type();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unmanaged_type"


        // $ANTLR start "class_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:586:1: class_type : type ;
        public void class_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:586:11: ( type )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:587:2: type
                {
                	PushFollow(FOLLOW_type_in_class_type3041);
                	type();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "class_type"


        // $ANTLR start "pointer_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:588:1: pointer_type : type ;
        public void pointer_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:588:13: ( type )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:589:2: type
                {
                	PushFollow(FOLLOW_type_in_pointer_type3048);
                	type();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "pointer_type"


        // $ANTLR start "block"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:595:1: block returns [bool isEmpty] : ( ';' | '{' ( statement_list )? '}' );
        public bool block() // throws RecognitionException [1]
        {   
            bool isEmpty = default(bool);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:595:29: ( ';' | '{' ( statement_list )? '}' )
                int alt102 = 2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0 == SEMI) )
                {
                    alt102 = 1;
                }
                else if ( (LA102_0 == OPEN_BRACE) )
                {
                    alt102 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return isEmpty;}
                    NoViableAltException nvae_d102s0 =
                        new NoViableAltException("", 102, 0, input);

                    throw nvae_d102s0;
                }
                switch (alt102) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:596:2: ';'
                        {
                        	Match(input,SEMI,FOLLOW_SEMI_in_block3064); if (state.failed) return isEmpty;
                        	if ( (state.backtracking==0) )
                        	{
                        	  isEmpty =  true;
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:597:4: '{' ( statement_list )? '}'
                        {
                        	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_block3071); if (state.failed) return isEmpty;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:597:10: ( statement_list )?
                        	int alt101 = 2;
                        	int LA101_0 = input.LA(1);

                        	if ( ((LA101_0 >= MONONOT && LA101_0 <= MONOTWIDDLE) || LA101_0 == NEW_ARRAY || (LA101_0 >= RETURN && LA101_0 <= TRY) || LA101_0 == THROW || (LA101_0 >= BREAK && LA101_0 <= FOREACH) || LA101_0 == OPEN_BRACE || LA101_0 == LPAREN || LA101_0 == IF || LA101_0 == BIT_AND || (LA101_0 >= PLUS && LA101_0 <= MINUS) || LA101_0 == STAR || (LA101_0 >= BOOL && LA101_0 <= NULL) || (LA101_0 >= USING && LA101_0 <= SEMI) || LA101_0 == 195 || (LA101_0 >= 197 && LA101_0 <= 198) || (LA101_0 >= 205 && LA101_0 <= 207) || (LA101_0 >= 209 && LA101_0 <= 210) || (LA101_0 >= 214 && LA101_0 <= 219) || LA101_0 == 221 || (LA101_0 >= 224 && LA101_0 <= 239) || (LA101_0 >= 241 && LA101_0 <= 244) || (LA101_0 >= 247 && LA101_0 <= 254) || LA101_0 == 256 || (LA101_0 >= 262 && LA101_0 <= 264) || LA101_0 == 266 || (LA101_0 >= 268 && LA101_0 <= 277)) )
                        	{
                        	    alt101 = 1;
                        	}
                        	switch (alt101) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:597:10: statement_list
                        	        {
                        	        	PushFollow(FOLLOW_statement_list_in_block3075);
                        	        	statement_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return isEmpty;

                        	        }
                        	        break;

                        	}

                        	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_block3080); if (state.failed) return isEmpty;
                        	if ( (state.backtracking==0) )
                        	{
                        	  isEmpty =  false;
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return isEmpty;
        }
        // $ANTLR end "block"


        // $ANTLR start "statement_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:598:1: statement_list : ( statement )+ ;
        public void statement_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:598:15: ( ( statement )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:599:2: ( statement )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:599:2: ( statement )+
                	int cnt103 = 0;
                	do 
                	{
                	    int alt103 = 2;
                	    int LA103_0 = input.LA(1);

                	    if ( (LA103_0 == 217) )
                	    {
                	        int LA103_2 = input.LA(2);

                	        if ( (LA103_2 == LPAREN) )
                	        {
                	            alt103 = 1;
                	        }


                	    }
                	    else if ( ((LA103_0 >= MONONOT && LA103_0 <= MONOTWIDDLE) || LA103_0 == NEW_ARRAY || (LA103_0 >= RETURN && LA103_0 <= TRY) || LA103_0 == THROW || (LA103_0 >= BREAK && LA103_0 <= FOREACH) || LA103_0 == OPEN_BRACE || LA103_0 == LPAREN || LA103_0 == IF || LA103_0 == BIT_AND || (LA103_0 >= PLUS && LA103_0 <= MINUS) || LA103_0 == STAR || (LA103_0 >= BOOL && LA103_0 <= NULL) || (LA103_0 >= USING && LA103_0 <= SEMI) || LA103_0 == 195 || (LA103_0 >= 197 && LA103_0 <= 198) || (LA103_0 >= 205 && LA103_0 <= 207) || (LA103_0 >= 209 && LA103_0 <= 210) || (LA103_0 >= 214 && LA103_0 <= 216) || (LA103_0 >= 218 && LA103_0 <= 219) || LA103_0 == 221 || (LA103_0 >= 224 && LA103_0 <= 239) || (LA103_0 >= 241 && LA103_0 <= 244) || (LA103_0 >= 247 && LA103_0 <= 254) || LA103_0 == 256 || (LA103_0 >= 262 && LA103_0 <= 264) || LA103_0 == 266 || (LA103_0 >= 268 && LA103_0 <= 277)) )
                	    {
                	        alt103 = 1;
                	    }


                	    switch (alt103) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:599:2: statement
                			    {
                			    	PushFollow(FOLLOW_statement_in_statement_list3089);
                			    	statement();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt103 >= 1 ) goto loop103;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee103 =
                		                new EarlyExitException(103, input);
                		            throw eee103;
                	    }
                	    cnt103++;
                	} while (true);

                	loop103:
                		;	// Stops C# compiler whining that label 'loop103' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "statement_list"

        public class expression_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:604:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
        public TemplateExtracter.expression_return expression() // throws RecognitionException [1]
        {   
            TemplateExtracter.expression_return retval = new TemplateExtracter.expression_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:604:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
                int alt104 = 2;
                alt104 = dfa104.Predict(input);
                switch (alt104) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:605:2: ( unary_expression assignment_operator )=> assignment
                        {
                        	PushFollow(FOLLOW_assignment_in_expression3114);
                        	assignment();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:606:4: non_assignment_expression
                        {
                        	PushFollow(FOLLOW_non_assignment_expression_in_expression3120);
                        	non_assignment_expression();
                        	state._fsp--;
                        	if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "expression"


        // $ANTLR start "expression_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:608:1: expression_list : expression ( ',' expression )* ;
        public void expression_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:608:16: ( expression ( ',' expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:609:2: expression ( ',' expression )*
                {
                	PushFollow(FOLLOW_expression_in_expression_list3129);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:609:14: ( ',' expression )*
                	do 
                	{
                	    int alt105 = 2;
                	    int LA105_0 = input.LA(1);

                	    if ( (LA105_0 == COMMA) )
                	    {
                	        alt105 = 1;
                	    }


                	    switch (alt105) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:609:15: ',' expression
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_expression_list3133); if (state.failed) return ;
                			    	PushFollow(FOLLOW_expression_in_expression_list3137);
                			    	expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop105;
                	    }
                	} while (true);

                	loop105:
                		;	// Stops C# compiler whining that label 'loop105' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "expression_list"


        // $ANTLR start "assignment"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:610:1: assignment : unary_expression assignment_operator expression ;
        public void assignment() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:610:11: ( unary_expression assignment_operator expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:611:2: unary_expression assignment_operator expression
                {
                	PushFollow(FOLLOW_unary_expression_in_assignment3147);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_assignment_operator_in_assignment3151);
                	assignment_operator();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_assignment3155);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "assignment"


        // $ANTLR start "unary_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:612:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );
        public void unary_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:612:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression )
                int alt106 = 10;
                alt106 = dfa106.Predict(input);
                switch (alt106) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:614:2: ( cast_expression )=> cast_expression
                        {
                        	PushFollow(FOLLOW_cast_expression_in_unary_expression3172);
                        	cast_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:615:4: primary_or_array_creation_expression
                        {
                        	PushFollow(FOLLOW_primary_or_array_creation_expression_in_unary_expression3177);
                        	primary_or_array_creation_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:616:4: '+' unary_expression
                        {
                        	Match(input,PLUS,FOLLOW_PLUS_in_unary_expression3182); if (state.failed) return ;
                        	PushFollow(FOLLOW_unary_expression_in_unary_expression3186);
                        	unary_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:617:4: '-' unary_expression
                        {
                        	Match(input,MINUS,FOLLOW_MINUS_in_unary_expression3192); if (state.failed) return ;
                        	PushFollow(FOLLOW_unary_expression_in_unary_expression3196);
                        	unary_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:618:4: '!' unary_expression
                        {
                        	Match(input,MONONOT,FOLLOW_MONONOT_in_unary_expression3202); if (state.failed) return ;
                        	PushFollow(FOLLOW_unary_expression_in_unary_expression3206);
                        	unary_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:619:4: '~' unary_expression
                        {
                        	Match(input,MONOTWIDDLE,FOLLOW_MONOTWIDDLE_in_unary_expression3212); if (state.failed) return ;
                        	PushFollow(FOLLOW_unary_expression_in_unary_expression3216);
                        	unary_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:620:4: pre_increment_expression
                        {
                        	PushFollow(FOLLOW_pre_increment_expression_in_unary_expression3222);
                        	pre_increment_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:621:4: pre_decrement_expression
                        {
                        	PushFollow(FOLLOW_pre_decrement_expression_in_unary_expression3228);
                        	pre_decrement_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:622:4: pointer_indirection_expression
                        {
                        	PushFollow(FOLLOW_pointer_indirection_expression_in_unary_expression3234);
                        	pointer_indirection_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:623:4: addressof_expression
                        {
                        	PushFollow(FOLLOW_addressof_expression_in_unary_expression3239);
                        	addressof_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unary_expression"


        // $ANTLR start "cast_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:625:1: cast_expression : '(' type ')' unary_expression ;
        public void cast_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:625:16: ( '(' type ')' unary_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:626:2: '(' type ')' unary_expression
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_cast_expression3249); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_cast_expression3253);
                	type();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_cast_expression3257); if (state.failed) return ;
                	PushFollow(FOLLOW_unary_expression_in_cast_expression3261);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "cast_expression"


        // $ANTLR start "assignment_operator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:627:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
        public void assignment_operator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:627:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
                int alt107 = 11;
                switch ( input.LA(1) ) 
                {
                case ASSIGN:
                	{
                    alt107 = 1;
                    }
                    break;
                case PLUS_ASSIGN:
                	{
                    alt107 = 2;
                    }
                    break;
                case MINUS_ASSIGN:
                	{
                    alt107 = 3;
                    }
                    break;
                case STAR_ASSIGN:
                	{
                    alt107 = 4;
                    }
                    break;
                case DIV_ASSIGN:
                	{
                    alt107 = 5;
                    }
                    break;
                case MOD_ASSIGN:
                	{
                    alt107 = 6;
                    }
                    break;
                case BIT_AND_ASSIGN:
                	{
                    alt107 = 7;
                    }
                    break;
                case BIT_OR_ASSIGN:
                	{
                    alt107 = 8;
                    }
                    break;
                case BIT_XOR_ASSIGN:
                	{
                    alt107 = 9;
                    }
                    break;
                case LEFT_SHIFT_ASSIGN:
                	{
                    alt107 = 10;
                    }
                    break;
                case GT:
                	{
                    alt107 = 11;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d107s0 =
                	        new NoViableAltException("", 107, 0, input);

                	    throw nvae_d107s0;
                }

                switch (alt107) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:2: '='
                        {
                        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_assignment_operator3269); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:8: '+='
                        {
                        	Match(input,PLUS_ASSIGN,FOLLOW_PLUS_ASSIGN_in_assignment_operator3273); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:15: '-='
                        {
                        	Match(input,MINUS_ASSIGN,FOLLOW_MINUS_ASSIGN_in_assignment_operator3277); if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:22: '*='
                        {
                        	Match(input,STAR_ASSIGN,FOLLOW_STAR_ASSIGN_in_assignment_operator3281); if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:29: '/='
                        {
                        	Match(input,DIV_ASSIGN,FOLLOW_DIV_ASSIGN_in_assignment_operator3285); if (state.failed) return ;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:36: '%='
                        {
                        	Match(input,MOD_ASSIGN,FOLLOW_MOD_ASSIGN_in_assignment_operator3289); if (state.failed) return ;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:43: '&='
                        {
                        	Match(input,BIT_AND_ASSIGN,FOLLOW_BIT_AND_ASSIGN_in_assignment_operator3293); if (state.failed) return ;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:50: '|='
                        {
                        	Match(input,BIT_OR_ASSIGN,FOLLOW_BIT_OR_ASSIGN_in_assignment_operator3297); if (state.failed) return ;

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:57: '^='
                        {
                        	Match(input,BIT_XOR_ASSIGN,FOLLOW_BIT_XOR_ASSIGN_in_assignment_operator3301); if (state.failed) return ;

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:64: '<<='
                        {
                        	Match(input,LEFT_SHIFT_ASSIGN,FOLLOW_LEFT_SHIFT_ASSIGN_in_assignment_operator3305); if (state.failed) return ;

                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:628:72: '>' '>='
                        {
                        	Match(input,GT,FOLLOW_GT_in_assignment_operator3309); if (state.failed) return ;
                        	Match(input,GTE,FOLLOW_GTE_in_assignment_operator3311); if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "assignment_operator"


        // $ANTLR start "pre_increment_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:629:1: pre_increment_expression : '++' unary_expression ;
        public void pre_increment_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:629:25: ( '++' unary_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:630:2: '++' unary_expression
                {
                	Match(input,209,FOLLOW_209_in_pre_increment_expression3320); if (state.failed) return ;
                	PushFollow(FOLLOW_unary_expression_in_pre_increment_expression3324);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "pre_increment_expression"


        // $ANTLR start "pre_decrement_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:631:1: pre_decrement_expression : '--' unary_expression ;
        public void pre_decrement_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:631:25: ( '--' unary_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:632:2: '--' unary_expression
                {
                	Match(input,210,FOLLOW_210_in_pre_decrement_expression3333); if (state.failed) return ;
                	PushFollow(FOLLOW_unary_expression_in_pre_decrement_expression3337);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "pre_decrement_expression"


        // $ANTLR start "pointer_indirection_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:633:1: pointer_indirection_expression : '*' unary_expression ;
        public void pointer_indirection_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:633:31: ( '*' unary_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:634:2: '*' unary_expression
                {
                	Match(input,STAR,FOLLOW_STAR_in_pointer_indirection_expression3345); if (state.failed) return ;
                	PushFollow(FOLLOW_unary_expression_in_pointer_indirection_expression3349);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "pointer_indirection_expression"


        // $ANTLR start "addressof_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:635:1: addressof_expression : '&' unary_expression ;
        public void addressof_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:635:21: ( '&' unary_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:636:2: '&' unary_expression
                {
                	Match(input,BIT_AND,FOLLOW_BIT_AND_in_addressof_expression3357); if (state.failed) return ;
                	PushFollow(FOLLOW_unary_expression_in_addressof_expression3361);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "addressof_expression"


        // $ANTLR start "non_assignment_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:638:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
        public void non_assignment_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:638:26: ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
                int alt108 = 3;
                alt108 = dfa108.Predict(input);
                switch (alt108) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:640:2: ( anonymous_function_signature '=>' )=> lambda_expression
                        {
                        	PushFollow(FOLLOW_lambda_expression_in_non_assignment_expression3382);
                        	lambda_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:641:4: ( query_expression )=> query_expression
                        {
                        	PushFollow(FOLLOW_query_expression_in_non_assignment_expression3393);
                        	query_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:642:4: conditional_expression
                        {
                        	PushFollow(FOLLOW_conditional_expression_in_non_assignment_expression3399);
                        	conditional_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "non_assignment_expression"


        // $ANTLR start "multiplicative_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:649:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
        public void multiplicative_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:649:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:650:2: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
                {
                	PushFollow(FOLLOW_unary_expression_in_multiplicative_expression3413);
                	unary_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:650:19: ( ( '*' | '/' | '%' ) unary_expression )*
                	do 
                	{
                	    int alt109 = 2;
                	    int LA109_0 = input.LA(1);

                	    if ( ((LA109_0 >= DIV && LA109_0 <= STAR)) )
                	    {
                	        alt109 = 1;
                	    }


                	    switch (alt109) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:650:22: ( '*' | '/' | '%' ) unary_expression
                			    {
                			    	if ( (input.LA(1) >= DIV && input.LA(1) <= STAR) ) 
                			    	{
                			    	    input.Consume();
                			    	    state.errorRecovery = false;state.failed = false;
                			    	}
                			    	else 
                			    	{
                			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    	    MismatchedSetException mse = new MismatchedSetException(null,input);
                			    	    throw mse;
                			    	}

                			    	PushFollow(FOLLOW_unary_expression_in_multiplicative_expression3428);
                			    	unary_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop109;
                	    }
                	} while (true);

                	loop109:
                		;	// Stops C# compiler whining that label 'loop109' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "multiplicative_expression"


        // $ANTLR start "additive_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:651:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
        public void additive_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:651:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:652:2: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
                {
                	PushFollow(FOLLOW_multiplicative_expression_in_additive_expression3438);
                	multiplicative_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:652:28: ( ( '+' | '-' ) multiplicative_expression )*
                	do 
                	{
                	    int alt110 = 2;
                	    int LA110_0 = input.LA(1);

                	    if ( ((LA110_0 >= PLUS && LA110_0 <= MINUS)) )
                	    {
                	        alt110 = 1;
                	    }


                	    switch (alt110) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:652:29: ( '+' | '-' ) multiplicative_expression
                			    {
                			    	if ( (input.LA(1) >= PLUS && input.LA(1) <= MINUS) ) 
                			    	{
                			    	    input.Consume();
                			    	    state.errorRecovery = false;state.failed = false;
                			    	}
                			    	else 
                			    	{
                			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    	    MismatchedSetException mse = new MismatchedSetException(null,input);
                			    	    throw mse;
                			    	}

                			    	PushFollow(FOLLOW_multiplicative_expression_in_additive_expression3449);
                			    	multiplicative_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop110;
                	    }
                	} while (true);

                	loop110:
                		;	// Stops C# compiler whining that label 'loop110' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "additive_expression"


        // $ANTLR start "shift_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:654:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
        public void shift_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:654:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:655:2: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
                {
                	PushFollow(FOLLOW_additive_expression_in_shift_expression3460);
                	additive_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:655:22: ( ( '<<' | '>' '>' ) additive_expression )*
                	do 
                	{
                	    int alt112 = 2;
                	    int LA112_0 = input.LA(1);

                	    if ( (LA112_0 == GT) )
                	    {
                	        int LA112_1 = input.LA(2);

                	        if ( (LA112_1 == GT) )
                	        {
                	            alt112 = 1;
                	        }


                	    }
                	    else if ( (LA112_0 == LEFT_SHIFT) )
                	    {
                	        alt112 = 1;
                	    }


                	    switch (alt112) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:655:23: ( '<<' | '>' '>' ) additive_expression
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:655:23: ( '<<' | '>' '>' )
                			    	int alt111 = 2;
                			    	int LA111_0 = input.LA(1);

                			    	if ( (LA111_0 == LEFT_SHIFT) )
                			    	{
                			    	    alt111 = 1;
                			    	}
                			    	else if ( (LA111_0 == GT) )
                			    	{
                			    	    alt111 = 2;
                			    	}
                			    	else 
                			    	{
                			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    	    NoViableAltException nvae_d111s0 =
                			    	        new NoViableAltException("", 111, 0, input);

                			    	    throw nvae_d111s0;
                			    	}
                			    	switch (alt111) 
                			    	{
                			    	    case 1 :
                			    	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:655:24: '<<'
                			    	        {
                			    	        	Match(input,LEFT_SHIFT,FOLLOW_LEFT_SHIFT_in_shift_expression3464); if (state.failed) return ;

                			    	        }
                			    	        break;
                			    	    case 2 :
                			    	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:655:29: '>' '>'
                			    	        {
                			    	        	Match(input,GT,FOLLOW_GT_in_shift_expression3466); if (state.failed) return ;
                			    	        	Match(input,GT,FOLLOW_GT_in_shift_expression3468); if (state.failed) return ;

                			    	        }
                			    	        break;

                			    	}

                			    	PushFollow(FOLLOW_additive_expression_in_shift_expression3471);
                			    	additive_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop112;
                	    }
                	} while (true);

                	loop112:
                		;	// Stops C# compiler whining that label 'loop112' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "shift_expression"


        // $ANTLR start "relational_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:656:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
        public void relational_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:656:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:657:2: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
                {
                	PushFollow(FOLLOW_shift_expression_in_relational_expression3481);
                	shift_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:658:3: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
                	do 
                	{
                	    int alt113 = 3;
                	    int LA113_0 = input.LA(1);

                	    if ( ((LA113_0 >= LTHAN && LA113_0 <= GTE) || LA113_0 == GT) )
                	    {
                	        alt113 = 1;
                	    }
                	    else if ( ((LA113_0 >= 222 && LA113_0 <= 223)) )
                	    {
                	        alt113 = 2;
                	    }


                	    switch (alt113) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:658:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:658:5: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:658:6: ( '<' | '>' | '>=' | '<=' ) shift_expression
                			    	{
                			    		if ( (input.LA(1) >= LTHAN && input.LA(1) <= GTE) || input.LA(1) == GT ) 
                			    		{
                			    		    input.Consume();
                			    		    state.errorRecovery = false;state.failed = false;
                			    		}
                			    		else 
                			    		{
                			    		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    		    MismatchedSetException mse = new MismatchedSetException(null,input);
                			    		    throw mse;
                			    		}

                			    		PushFollow(FOLLOW_shift_expression_in_relational_expression3498);
                			    		shift_expression();
                			    		state._fsp--;
                			    		if (state.failed) return ;

                			    	}


                			    }
                			    break;
                			case 2 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:659:6: ( ( 'is' | 'as' ) non_nullable_type )
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:659:6: ( ( 'is' | 'as' ) non_nullable_type )
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:659:7: ( 'is' | 'as' ) non_nullable_type
                			    	{
                			    		if ( (input.LA(1) >= 222 && input.LA(1) <= 223) ) 
                			    		{
                			    		    input.Consume();
                			    		    state.errorRecovery = false;state.failed = false;
                			    		}
                			    		else 
                			    		{
                			    		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    		    MismatchedSetException mse = new MismatchedSetException(null,input);
                			    		    throw mse;
                			    		}

                			    		PushFollow(FOLLOW_non_nullable_type_in_relational_expression3515);
                			    		non_nullable_type();
                			    		state._fsp--;
                			    		if (state.failed) return ;

                			    	}


                			    }
                			    break;

                			default:
                			    goto loop113;
                	    }
                	} while (true);

                	loop113:
                		;	// Stops C# compiler whining that label 'loop113' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "relational_expression"


        // $ANTLR start "equality_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:661:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
        public void equality_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:661:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:662:2: relational_expression ( ( '==' | '!=' ) relational_expression )*
                {
                	PushFollow(FOLLOW_relational_expression_in_equality_expression3529);
                	relational_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:663:5: ( ( '==' | '!=' ) relational_expression )*
                	do 
                	{
                	    int alt114 = 2;
                	    int LA114_0 = input.LA(1);

                	    if ( ((LA114_0 >= NOT_EQUAL && LA114_0 <= EQUAL)) )
                	    {
                	        alt114 = 1;
                	    }


                	    switch (alt114) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:663:6: ( '==' | '!=' ) relational_expression
                			    {
                			    	if ( (input.LA(1) >= NOT_EQUAL && input.LA(1) <= EQUAL) ) 
                			    	{
                			    	    input.Consume();
                			    	    state.errorRecovery = false;state.failed = false;
                			    	}
                			    	else 
                			    	{
                			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    	    MismatchedSetException mse = new MismatchedSetException(null,input);
                			    	    throw mse;
                			    	}

                			    	PushFollow(FOLLOW_relational_expression_in_equality_expression3544);
                			    	relational_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop114;
                	    }
                	} while (true);

                	loop114:
                		;	// Stops C# compiler whining that label 'loop114' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "equality_expression"


        // $ANTLR start "and_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:664:1: and_expression : equality_expression ( '&' equality_expression )* ;
        public void and_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:664:15: ( equality_expression ( '&' equality_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:665:2: equality_expression ( '&' equality_expression )*
                {
                	PushFollow(FOLLOW_equality_expression_in_and_expression3554);
                	equality_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:665:22: ( '&' equality_expression )*
                	do 
                	{
                	    int alt115 = 2;
                	    int LA115_0 = input.LA(1);

                	    if ( (LA115_0 == BIT_AND) )
                	    {
                	        alt115 = 1;
                	    }


                	    switch (alt115) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:665:23: '&' equality_expression
                			    {
                			    	Match(input,BIT_AND,FOLLOW_BIT_AND_in_and_expression3557); if (state.failed) return ;
                			    	PushFollow(FOLLOW_equality_expression_in_and_expression3561);
                			    	equality_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop115;
                	    }
                	} while (true);

                	loop115:
                		;	// Stops C# compiler whining that label 'loop115' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "and_expression"


        // $ANTLR start "exclusive_or_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:666:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
        public void exclusive_or_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:666:24: ( and_expression ( '^' and_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:667:2: and_expression ( '^' and_expression )*
                {
                	PushFollow(FOLLOW_and_expression_in_exclusive_or_expression3571);
                	and_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:667:17: ( '^' and_expression )*
                	do 
                	{
                	    int alt116 = 2;
                	    int LA116_0 = input.LA(1);

                	    if ( (LA116_0 == BIT_XOR) )
                	    {
                	        alt116 = 1;
                	    }


                	    switch (alt116) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:667:18: '^' and_expression
                			    {
                			    	Match(input,BIT_XOR,FOLLOW_BIT_XOR_in_exclusive_or_expression3574); if (state.failed) return ;
                			    	PushFollow(FOLLOW_and_expression_in_exclusive_or_expression3578);
                			    	and_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop116;
                	    }
                	} while (true);

                	loop116:
                		;	// Stops C# compiler whining that label 'loop116' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "exclusive_or_expression"


        // $ANTLR start "inclusive_or_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:668:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
        public void inclusive_or_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:668:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:669:2: exclusive_or_expression ( '|' exclusive_or_expression )*
                {
                	PushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression3588);
                	exclusive_or_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:669:28: ( '|' exclusive_or_expression )*
                	do 
                	{
                	    int alt117 = 2;
                	    int LA117_0 = input.LA(1);

                	    if ( (LA117_0 == BIT_OR) )
                	    {
                	        alt117 = 1;
                	    }


                	    switch (alt117) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:669:29: '|' exclusive_or_expression
                			    {
                			    	Match(input,BIT_OR,FOLLOW_BIT_OR_in_inclusive_or_expression3593); if (state.failed) return ;
                			    	PushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression3597);
                			    	exclusive_or_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop117;
                	    }
                	} while (true);

                	loop117:
                		;	// Stops C# compiler whining that label 'loop117' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "inclusive_or_expression"


        // $ANTLR start "conditional_and_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:670:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
        public void conditional_and_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:670:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:671:2: inclusive_or_expression ( '&&' inclusive_or_expression )*
                {
                	PushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression3607);
                	inclusive_or_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:671:28: ( '&&' inclusive_or_expression )*
                	do 
                	{
                	    int alt118 = 2;
                	    int LA118_0 = input.LA(1);

                	    if ( (LA118_0 == LOG_AND) )
                	    {
                	        alt118 = 1;
                	    }


                	    switch (alt118) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:671:29: '&&' inclusive_or_expression
                			    {
                			    	Match(input,LOG_AND,FOLLOW_LOG_AND_in_conditional_and_expression3612); if (state.failed) return ;
                			    	PushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression3616);
                			    	inclusive_or_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop118;
                	    }
                	} while (true);

                	loop118:
                		;	// Stops C# compiler whining that label 'loop118' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "conditional_and_expression"


        // $ANTLR start "conditional_or_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:672:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
        public void conditional_or_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:672:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:673:2: conditional_and_expression ( '||' conditional_and_expression )*
                {
                	PushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression3626);
                	conditional_and_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:673:30: ( '||' conditional_and_expression )*
                	do 
                	{
                	    int alt119 = 2;
                	    int LA119_0 = input.LA(1);

                	    if ( (LA119_0 == LOG_OR) )
                	    {
                	        alt119 = 1;
                	    }


                	    switch (alt119) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:673:31: '||' conditional_and_expression
                			    {
                			    	Match(input,LOG_OR,FOLLOW_LOG_OR_in_conditional_or_expression3630); if (state.failed) return ;
                			    	PushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression3634);
                			    	conditional_and_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop119;
                	    }
                	} while (true);

                	loop119:
                		;	// Stops C# compiler whining that label 'loop119' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "conditional_or_expression"


        // $ANTLR start "null_coalescing_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:675:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
        public void null_coalescing_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:675:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:676:2: conditional_or_expression ( '??' conditional_or_expression )*
                {
                	PushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression3645);
                	conditional_or_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:676:30: ( '??' conditional_or_expression )*
                	do 
                	{
                	    int alt120 = 2;
                	    int LA120_0 = input.LA(1);

                	    if ( (LA120_0 == NULL_COALESCE) )
                	    {
                	        alt120 = 1;
                	    }


                	    switch (alt120) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:676:31: '??' conditional_or_expression
                			    {
                			    	Match(input,NULL_COALESCE,FOLLOW_NULL_COALESCE_in_null_coalescing_expression3650); if (state.failed) return ;
                			    	PushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression3654);
                			    	conditional_or_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop120;
                	    }
                	} while (true);

                	loop120:
                		;	// Stops C# compiler whining that label 'loop120' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "null_coalescing_expression"


        // $ANTLR start "conditional_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:677:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
        public void conditional_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:677:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:678:2: null_coalescing_expression ( '?' expression ':' expression )?
                {
                	PushFollow(FOLLOW_null_coalescing_expression_in_conditional_expression3664);
                	null_coalescing_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:678:31: ( '?' expression ':' expression )?
                	int alt121 = 2;
                	int LA121_0 = input.LA(1);

                	if ( (LA121_0 == 220) )
                	{
                	    alt121 = 1;
                	}
                	switch (alt121) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:678:32: '?' expression ':' expression
                	        {
                	        	Match(input,220,FOLLOW_220_in_conditional_expression3669); if (state.failed) return ;
                	        	PushFollow(FOLLOW_expression_in_conditional_expression3673);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,211,FOLLOW_211_in_conditional_expression3677); if (state.failed) return ;
                	        	PushFollow(FOLLOW_expression_in_conditional_expression3681);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "conditional_expression"


        // $ANTLR start "lambda_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:683:1: lambda_expression : anonymous_function_signature '=>' anonymous_function_body ;
        public void lambda_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:683:18: ( anonymous_function_signature '=>' anonymous_function_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:684:2: anonymous_function_signature '=>' anonymous_function_body
                {
                	PushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression3701);
                	anonymous_function_signature();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,LAMBDA,FOLLOW_LAMBDA_in_lambda_expression3705); if (state.failed) return ;
                	PushFollow(FOLLOW_anonymous_function_body_in_lambda_expression3709);
                	anonymous_function_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "lambda_expression"


        // $ANTLR start "anonymous_function_signature"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:685:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
        public void anonymous_function_signature() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:685:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
                int alt123 = 2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0 == LPAREN) )
                {
                    alt123 = 1;
                }
                else if ( (LA123_0 == IDENTIFIER || (LA123_0 >= ELIF && LA123_0 <= UNDEF) || LA123_0 == 195 || LA123_0 == 221 || (LA123_0 >= 224 && LA123_0 <= 239) || (LA123_0 >= 241 && LA123_0 <= 244) || (LA123_0 >= 247 && LA123_0 <= 250) || LA123_0 == 256 || (LA123_0 >= 263 && LA123_0 <= 264) || LA123_0 == 274 || LA123_0 == 277) )
                {
                    alt123 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d123s0 =
                        new NoViableAltException("", 123, 0, input);

                    throw nvae_d123s0;
                }
                switch (alt123) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:686:2: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
                        {
                        	Match(input,LPAREN,FOLLOW_LPAREN_in_anonymous_function_signature3716); if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:686:6: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
                        	int alt122 = 3;
                        	switch ( input.LA(1) ) 
                        	{
                        	    case OBJECT:
                        	    case BOOL:
                        	    case BYTE:
                        	    case CHAR:
                        	    case SHORT:
                        	    case INT:
                        	    case LONG:
                        	    case FLOAT:
                        	    case DOUBLE:
                        	    case 206:
                        	    case 212:
                        	    case 213:
                        	    case 251:
                        	    case 252:
                        	    case 253:
                        	    case 254:
                        	    case 275:
                        	    case 276:
                        	    	{
                        	        alt122 = 1;
                        	        }
                        	        break;
                        	    case IDENTIFIER:
                        	    	{
                        	        int LA122_2 = input.LA(2);

                        	        if ( (LA122_2 == OPEN_BRACKET || LA122_2 == LTHAN || LA122_2 == STAR || LA122_2 == IDENTIFIER || LA122_2 == DOT || (LA122_2 >= ELIF && LA122_2 <= UNDEF) || LA122_2 == 195 || LA122_2 == 208 || (LA122_2 >= 220 && LA122_2 <= 221) || (LA122_2 >= 224 && LA122_2 <= 239) || (LA122_2 >= 241 && LA122_2 <= 244) || (LA122_2 >= 247 && LA122_2 <= 250) || LA122_2 == 256 || (LA122_2 >= 263 && LA122_2 <= 264) || LA122_2 == 274 || LA122_2 == 277) )
                        	        {
                        	            alt122 = 1;
                        	        }
                        	        else if ( (LA122_2 == COMMA || LA122_2 == RPAREN) )
                        	        {
                        	            alt122 = 2;
                        	        }
                        	        }
                        	        break;
                        	    case ELIF:
                        	    case ENDIF:
                        	    case DEFINE:
                        	    case UNDEF:
                        	    case 195:
                        	    case 221:
                        	    case 224:
                        	    case 225:
                        	    case 226:
                        	    case 227:
                        	    case 228:
                        	    case 229:
                        	    case 230:
                        	    case 231:
                        	    case 232:
                        	    case 233:
                        	    case 234:
                        	    case 235:
                        	    case 236:
                        	    case 237:
                        	    case 238:
                        	    case 239:
                        	    case 241:
                        	    case 242:
                        	    case 243:
                        	    case 244:
                        	    case 247:
                        	    case 248:
                        	    case 249:
                        	    case 250:
                        	    case 256:
                        	    case 263:
                        	    case 264:
                        	    case 274:
                        	    case 277:
                        	    	{
                        	        int LA122_3 = input.LA(2);

                        	        if ( (LA122_3 == OPEN_BRACKET || LA122_3 == LTHAN || LA122_3 == STAR || LA122_3 == IDENTIFIER || LA122_3 == DOT || (LA122_3 >= ELIF && LA122_3 <= UNDEF) || LA122_3 == 195 || LA122_3 == 208 || (LA122_3 >= 220 && LA122_3 <= 221) || (LA122_3 >= 224 && LA122_3 <= 239) || (LA122_3 >= 241 && LA122_3 <= 244) || (LA122_3 >= 247 && LA122_3 <= 250) || LA122_3 == 256 || (LA122_3 >= 263 && LA122_3 <= 264) || LA122_3 == 274 || LA122_3 == 277) )
                        	        {
                        	            alt122 = 1;
                        	        }
                        	        else if ( (LA122_3 == COMMA || LA122_3 == RPAREN) )
                        	        {
                        	            alt122 = 2;
                        	        }
                        	        }
                        	        break;
                        	}

                        	switch (alt122) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:686:7: explicit_anonymous_function_parameter_list
                        	        {
                        	        	PushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature3719);
                        	        	explicit_anonymous_function_parameter_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:687:5: implicit_anonymous_function_parameter_list
                        	        {
                        	        	PushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3725);
                        	        	implicit_anonymous_function_parameter_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}

                        	Match(input,RPAREN,FOLLOW_RPAREN_in_anonymous_function_signature3729); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:688:4: implicit_anonymous_function_parameter_list
                        {
                        	PushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3734);
                        	implicit_anonymous_function_parameter_list();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "anonymous_function_signature"


        // $ANTLR start "implicit_anonymous_function_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:690:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
        public void implicit_anonymous_function_parameter_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:690:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:691:2: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
                {
                	PushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3743);
                	implicit_anonymous_function_parameter();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:691:42: ( ',' implicit_anonymous_function_parameter )*
                	do 
                	{
                	    int alt124 = 2;
                	    int LA124_0 = input.LA(1);

                	    if ( (LA124_0 == COMMA) )
                	    {
                	        alt124 = 1;
                	    }


                	    switch (alt124) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:691:43: ',' implicit_anonymous_function_parameter
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_implicit_anonymous_function_parameter_list3748); if (state.failed) return ;
                			    	PushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3752);
                			    	implicit_anonymous_function_parameter();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop124;
                	    }
                	} while (true);

                	loop124:
                		;	// Stops C# compiler whining that label 'loop124' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "implicit_anonymous_function_parameter_list"


        // $ANTLR start "implicit_anonymous_function_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:692:1: implicit_anonymous_function_parameter : identifier ;
        public void implicit_anonymous_function_parameter() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:692:38: ( identifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:693:2: identifier
                {
                	PushFollow(FOLLOW_identifier_in_implicit_anonymous_function_parameter3762);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "implicit_anonymous_function_parameter"


        // $ANTLR start "anonymous_function_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:694:1: anonymous_function_body : ( expression | block );
        public void anonymous_function_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:694:24: ( expression | block )
                int alt125 = 2;
                int LA125_0 = input.LA(1);

                if ( ((LA125_0 >= MONONOT && LA125_0 <= MONOTWIDDLE) || LA125_0 == NEW_ARRAY || (LA125_0 >= OBJECT && LA125_0 <= THIS) || LA125_0 == LPAREN || LA125_0 == BIT_AND || (LA125_0 >= PLUS && LA125_0 <= MINUS) || LA125_0 == STAR || (LA125_0 >= BOOL && LA125_0 <= NULL) || (LA125_0 >= ELIF && LA125_0 <= UNDEF) || LA125_0 == 195 || LA125_0 == 197 || LA125_0 == 207 || (LA125_0 >= 209 && LA125_0 <= 210) || (LA125_0 >= 214 && LA125_0 <= 219) || LA125_0 == 221 || (LA125_0 >= 224 && LA125_0 <= 239) || (LA125_0 >= 241 && LA125_0 <= 244) || (LA125_0 >= 247 && LA125_0 <= 254) || LA125_0 == 256 || (LA125_0 >= 263 && LA125_0 <= 264) || (LA125_0 >= 274 && LA125_0 <= 277)) )
                {
                    alt125 = 1;
                }
                else if ( (LA125_0 == OPEN_BRACE || LA125_0 == SEMI) )
                {
                    alt125 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d125s0 =
                        new NoViableAltException("", 125, 0, input);

                    throw nvae_d125s0;
                }
                switch (alt125) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:695:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_anonymous_function_body3769);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:696:4: block
                        {
                        	PushFollow(FOLLOW_block_in_anonymous_function_body3774);
                        	block();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "anonymous_function_body"


        // $ANTLR start "query_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:701:1: query_expression : from_clause query_body ;
        public void query_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:701:17: ( from_clause query_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:702:2: from_clause query_body
                {
                	PushFollow(FOLLOW_from_clause_in_query_expression3786);
                	from_clause();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_query_body_in_query_expression3790);
                	query_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "query_expression"


        // $ANTLR start "query_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:703:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
        public void query_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:703:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:2: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:2: ( query_body_clauses )?
                	int alt126 = 2;
                	int LA126_0 = input.LA(1);

                	if ( ((LA126_0 >= 225 && LA126_0 <= 226) || (LA126_0 >= 229 && LA126_0 <= 230) || LA126_0 == 236) )
                	{
                	    alt126 = 1;
                	}
                	switch (alt126) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:2: query_body_clauses
                	        {
                	        	PushFollow(FOLLOW_query_body_clauses_in_query_body3800);
                	        	query_body_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_select_or_group_clause_in_query_body3805);
                	select_or_group_clause();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:49: ( ( 'into' )=> query_continuation )?
                	int alt127 = 2;
                	int LA127_0 = input.LA(1);

                	if ( (LA127_0 == 224) )
                	{
                	    int LA127_1 = input.LA(2);

                	    if ( (synpred24_TemplateExtracter()) )
                	    {
                	        alt127 = 1;
                	    }
                	}
                	switch (alt127) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:50: ( 'into' )=> query_continuation
                	        {
                	        	PushFollow(FOLLOW_query_continuation_in_query_body3816);
                	        	query_continuation();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "query_body"


        // $ANTLR start "query_continuation"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:706:1: query_continuation : 'into' identifier query_body ;
        public void query_continuation() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:706:19: ( 'into' identifier query_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:707:2: 'into' identifier query_body
                {
                	Match(input,224,FOLLOW_224_in_query_continuation3826); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_query_continuation3830);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_query_body_in_query_continuation3834);
                	query_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "query_continuation"


        // $ANTLR start "query_body_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:708:1: query_body_clauses : ( query_body_clause )+ ;
        public void query_body_clauses() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:708:19: ( ( query_body_clause )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:709:2: ( query_body_clause )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:709:2: ( query_body_clause )+
                	int cnt128 = 0;
                	do 
                	{
                	    int alt128 = 2;
                	    int LA128_0 = input.LA(1);

                	    if ( ((LA128_0 >= 225 && LA128_0 <= 226) || (LA128_0 >= 229 && LA128_0 <= 230) || LA128_0 == 236) )
                	    {
                	        alt128 = 1;
                	    }


                	    switch (alt128) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:709:2: query_body_clause
                			    {
                			    	PushFollow(FOLLOW_query_body_clause_in_query_body_clauses3841);
                			    	query_body_clause();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt128 >= 1 ) goto loop128;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee128 =
                		                new EarlyExitException(128, input);
                		            throw eee128;
                	    }
                	    cnt128++;
                	} while (true);

                	loop128:
                		;	// Stops C# compiler whining that label 'loop128' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "query_body_clauses"


        // $ANTLR start "query_body_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:710:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
        public void query_body_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:710:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
                int alt129 = 5;
                switch ( input.LA(1) ) 
                {
                case 225:
                	{
                    alt129 = 1;
                    }
                    break;
                case 229:
                	{
                    alt129 = 2;
                    }
                    break;
                case 236:
                	{
                    alt129 = 3;
                    }
                    break;
                case 226:
                	{
                    alt129 = 4;
                    }
                    break;
                case 230:
                	{
                    alt129 = 5;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d129s0 =
                	        new NoViableAltException("", 129, 0, input);

                	    throw nvae_d129s0;
                }

                switch (alt129) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:711:2: from_clause
                        {
                        	PushFollow(FOLLOW_from_clause_in_query_body_clause3850);
                        	from_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:712:4: let_clause
                        {
                        	PushFollow(FOLLOW_let_clause_in_query_body_clause3855);
                        	let_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:713:4: where_clause
                        {
                        	PushFollow(FOLLOW_where_clause_in_query_body_clause3860);
                        	where_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:714:4: join_clause
                        {
                        	PushFollow(FOLLOW_join_clause_in_query_body_clause3865);
                        	join_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:715:4: orderby_clause
                        {
                        	PushFollow(FOLLOW_orderby_clause_in_query_body_clause3870);
                        	orderby_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "query_body_clause"


        // $ANTLR start "from_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:716:1: from_clause : 'from' ( type )? identifier 'in' expression ;
        public void from_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:716:12: ( 'from' ( type )? identifier 'in' expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:717:2: 'from' ( type )? identifier 'in' expression
                {
                	Match(input,225,FOLLOW_225_in_from_clause3877); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:717:11: ( type )?
                	int alt130 = 2;
                	switch ( input.LA(1) ) 
                	{
                	    case OBJECT:
                	    case BOOL:
                	    case BYTE:
                	    case CHAR:
                	    case SHORT:
                	    case INT:
                	    case LONG:
                	    case FLOAT:
                	    case DOUBLE:
                	    case 206:
                	    case 251:
                	    case 252:
                	    case 253:
                	    case 254:
                	    case 275:
                	    case 276:
                	    	{
                	        alt130 = 1;
                	        }
                	        break;
                	    case IDENTIFIER:
                	    	{
                	        int LA130_2 = input.LA(2);

                	        if ( (LA130_2 == OPEN_BRACKET || LA130_2 == LTHAN || LA130_2 == STAR || LA130_2 == IDENTIFIER || LA130_2 == DOT || (LA130_2 >= ELIF && LA130_2 <= UNDEF) || LA130_2 == 195 || LA130_2 == 208 || (LA130_2 >= 220 && LA130_2 <= 221) || (LA130_2 >= 224 && LA130_2 <= 239) || (LA130_2 >= 241 && LA130_2 <= 244) || (LA130_2 >= 247 && LA130_2 <= 250) || LA130_2 == 256 || (LA130_2 >= 263 && LA130_2 <= 264) || LA130_2 == 274 || LA130_2 == 277) )
                	        {
                	            alt130 = 1;
                	        }
                	        }
                	        break;
                	    case ELIF:
                	    case ENDIF:
                	    case DEFINE:
                	    case UNDEF:
                	    case 195:
                	    case 221:
                	    case 224:
                	    case 225:
                	    case 226:
                	    case 227:
                	    case 228:
                	    case 229:
                	    case 230:
                	    case 231:
                	    case 232:
                	    case 233:
                	    case 234:
                	    case 235:
                	    case 236:
                	    case 237:
                	    case 238:
                	    case 239:
                	    case 241:
                	    case 242:
                	    case 243:
                	    case 244:
                	    case 247:
                	    case 248:
                	    case 249:
                	    case 250:
                	    case 256:
                	    case 263:
                	    case 264:
                	    case 274:
                	    case 277:
                	    	{
                	        int LA130_3 = input.LA(2);

                	        if ( (LA130_3 == OPEN_BRACKET || LA130_3 == LTHAN || LA130_3 == STAR || LA130_3 == IDENTIFIER || LA130_3 == DOT || (LA130_3 >= ELIF && LA130_3 <= UNDEF) || LA130_3 == 195 || LA130_3 == 208 || (LA130_3 >= 220 && LA130_3 <= 221) || (LA130_3 >= 224 && LA130_3 <= 239) || (LA130_3 >= 241 && LA130_3 <= 244) || (LA130_3 >= 247 && LA130_3 <= 250) || LA130_3 == 256 || (LA130_3 >= 263 && LA130_3 <= 264) || LA130_3 == 274 || LA130_3 == 277) )
                	        {
                	            alt130 = 1;
                	        }
                	        }
                	        break;
                	}

                	switch (alt130) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:717:11: type
                	        {
                	        	PushFollow(FOLLOW_type_in_from_clause3881);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_from_clause3886);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,IN,FOLLOW_IN_in_from_clause3890); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_from_clause3894);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "from_clause"


        // $ANTLR start "join_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:718:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
        public void join_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:718:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:719:2: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
                {
                	Match(input,226,FOLLOW_226_in_join_clause3902); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:719:11: ( type )?
                	int alt131 = 2;
                	switch ( input.LA(1) ) 
                	{
                	    case OBJECT:
                	    case BOOL:
                	    case BYTE:
                	    case CHAR:
                	    case SHORT:
                	    case INT:
                	    case LONG:
                	    case FLOAT:
                	    case DOUBLE:
                	    case 206:
                	    case 251:
                	    case 252:
                	    case 253:
                	    case 254:
                	    case 275:
                	    case 276:
                	    	{
                	        alt131 = 1;
                	        }
                	        break;
                	    case IDENTIFIER:
                	    	{
                	        int LA131_2 = input.LA(2);

                	        if ( (LA131_2 == OPEN_BRACKET || LA131_2 == LTHAN || LA131_2 == STAR || LA131_2 == IDENTIFIER || LA131_2 == DOT || (LA131_2 >= ELIF && LA131_2 <= UNDEF) || LA131_2 == 195 || LA131_2 == 208 || (LA131_2 >= 220 && LA131_2 <= 221) || (LA131_2 >= 224 && LA131_2 <= 239) || (LA131_2 >= 241 && LA131_2 <= 244) || (LA131_2 >= 247 && LA131_2 <= 250) || LA131_2 == 256 || (LA131_2 >= 263 && LA131_2 <= 264) || LA131_2 == 274 || LA131_2 == 277) )
                	        {
                	            alt131 = 1;
                	        }
                	        }
                	        break;
                	    case ELIF:
                	    case ENDIF:
                	    case DEFINE:
                	    case UNDEF:
                	    case 195:
                	    case 221:
                	    case 224:
                	    case 225:
                	    case 226:
                	    case 227:
                	    case 228:
                	    case 229:
                	    case 230:
                	    case 231:
                	    case 232:
                	    case 233:
                	    case 234:
                	    case 235:
                	    case 236:
                	    case 237:
                	    case 238:
                	    case 239:
                	    case 241:
                	    case 242:
                	    case 243:
                	    case 244:
                	    case 247:
                	    case 248:
                	    case 249:
                	    case 250:
                	    case 256:
                	    case 263:
                	    case 264:
                	    case 274:
                	    case 277:
                	    	{
                	        int LA131_3 = input.LA(2);

                	        if ( (LA131_3 == OPEN_BRACKET || LA131_3 == LTHAN || LA131_3 == STAR || LA131_3 == IDENTIFIER || LA131_3 == DOT || (LA131_3 >= ELIF && LA131_3 <= UNDEF) || LA131_3 == 195 || LA131_3 == 208 || (LA131_3 >= 220 && LA131_3 <= 221) || (LA131_3 >= 224 && LA131_3 <= 239) || (LA131_3 >= 241 && LA131_3 <= 244) || (LA131_3 >= 247 && LA131_3 <= 250) || LA131_3 == 256 || (LA131_3 >= 263 && LA131_3 <= 264) || LA131_3 == 274 || LA131_3 == 277) )
                	        {
                	            alt131 = 1;
                	        }
                	        }
                	        break;
                	}

                	switch (alt131) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:719:11: type
                	        {
                	        	PushFollow(FOLLOW_type_in_join_clause3906);
                	        	type();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_join_clause3911);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,IN,FOLLOW_IN_in_join_clause3915); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_join_clause3919);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,227,FOLLOW_227_in_join_clause3923); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_join_clause3927);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,228,FOLLOW_228_in_join_clause3931); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_join_clause3935);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:719:94: ( 'into' identifier )?
                	int alt132 = 2;
                	int LA132_0 = input.LA(1);

                	if ( (LA132_0 == 224) )
                	{
                	    alt132 = 1;
                	}
                	switch (alt132) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:719:95: 'into' identifier
                	        {
                	        	Match(input,224,FOLLOW_224_in_join_clause3938); if (state.failed) return ;
                	        	PushFollow(FOLLOW_identifier_in_join_clause3940);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "join_clause"


        // $ANTLR start "let_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:720:1: let_clause : 'let' identifier '=' expression ;
        public void let_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:720:11: ( 'let' identifier '=' expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:721:2: 'let' identifier '=' expression
                {
                	Match(input,229,FOLLOW_229_in_let_clause3950); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_let_clause3954);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_let_clause3958); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_let_clause3962);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "let_clause"


        // $ANTLR start "orderby_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:722:1: orderby_clause : 'orderby' ordering_list ;
        public void orderby_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:722:15: ( 'orderby' ordering_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:723:2: 'orderby' ordering_list
                {
                	Match(input,230,FOLLOW_230_in_orderby_clause3969); if (state.failed) return ;
                	PushFollow(FOLLOW_ordering_list_in_orderby_clause3973);
                	ordering_list();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "orderby_clause"


        // $ANTLR start "ordering_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:724:1: ordering_list : ordering ( ',' ordering )* ;
        public void ordering_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:724:14: ( ordering ( ',' ordering )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:725:2: ordering ( ',' ordering )*
                {
                	PushFollow(FOLLOW_ordering_in_ordering_list3981);
                	ordering();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:725:13: ( ',' ordering )*
                	do 
                	{
                	    int alt133 = 2;
                	    int LA133_0 = input.LA(1);

                	    if ( (LA133_0 == COMMA) )
                	    {
                	        alt133 = 1;
                	    }


                	    switch (alt133) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:725:14: ',' ordering
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_ordering_list3986); if (state.failed) return ;
                			    	PushFollow(FOLLOW_ordering_in_ordering_list3990);
                			    	ordering();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop133;
                	    }
                	} while (true);

                	loop133:
                		;	// Stops C# compiler whining that label 'loop133' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "ordering_list"


        // $ANTLR start "ordering"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:726:1: ordering : expression ( ordering_direction )? ;
        public void ordering() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:726:9: ( expression ( ordering_direction )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:727:2: expression ( ordering_direction )?
                {
                	PushFollow(FOLLOW_expression_in_ordering4000);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:727:16: ( ordering_direction )?
                	int alt134 = 2;
                	int LA134_0 = input.LA(1);

                	if ( ((LA134_0 >= 231 && LA134_0 <= 232)) )
                	{
                	    alt134 = 1;
                	}
                	switch (alt134) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:727:16: ordering_direction
                	        {
                	        	PushFollow(FOLLOW_ordering_direction_in_ordering4005);
                	        	ordering_direction();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "ordering"


        // $ANTLR start "ordering_direction"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:729:1: ordering_direction : ( 'ascending' | 'descending' );
        public void ordering_direction() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:729:19: ( 'ascending' | 'descending' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= 231 && input.LA(1) <= 232) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "ordering_direction"


        // $ANTLR start "select_or_group_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:732:1: select_or_group_clause : ( select_clause | group_clause );
        public void select_or_group_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:732:23: ( select_clause | group_clause )
                int alt135 = 2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0 == 233) )
                {
                    alt135 = 1;
                }
                else if ( (LA135_0 == 234) )
                {
                    alt135 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d135s0 =
                        new NoViableAltException("", 135, 0, input);

                    throw nvae_d135s0;
                }
                switch (alt135) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:733:2: select_clause
                        {
                        	PushFollow(FOLLOW_select_clause_in_select_or_group_clause4028);
                        	select_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:734:4: group_clause
                        {
                        	PushFollow(FOLLOW_group_clause_in_select_or_group_clause4033);
                        	group_clause();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "select_or_group_clause"


        // $ANTLR start "select_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:735:1: select_clause : 'select' expression ;
        public void select_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:735:14: ( 'select' expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:736:2: 'select' expression
                {
                	Match(input,233,FOLLOW_233_in_select_clause4041); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_select_clause4045);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "select_clause"


        // $ANTLR start "group_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:737:1: group_clause : 'group' expression 'by' expression ;
        public void group_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:737:13: ( 'group' expression 'by' expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:738:2: 'group' expression 'by' expression
                {
                	Match(input,234,FOLLOW_234_in_group_clause4053); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_group_clause4057);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,235,FOLLOW_235_in_group_clause4061); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_group_clause4065);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "group_clause"


        // $ANTLR start "where_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:739:1: where_clause : 'where' boolean_expression ;
        public void where_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:739:13: ( 'where' boolean_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:740:2: 'where' boolean_expression
                {
                	Match(input,236,FOLLOW_236_in_where_clause4073); if (state.failed) return ;
                	PushFollow(FOLLOW_boolean_expression_in_where_clause4077);
                	boolean_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "where_clause"


        // $ANTLR start "boolean_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:741:1: boolean_expression : expression ;
        public void boolean_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:741:19: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:742:2: expression
                {
                	PushFollow(FOLLOW_expression_in_boolean_expression4085);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "boolean_expression"


        // $ANTLR start "global_attributes"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:747:1: global_attributes : ( global_attribute )+ ;
        public void global_attributes() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:747:18: ( ( global_attribute )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:748:2: ( global_attribute )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:748:2: ( global_attribute )+
                	int cnt136 = 0;
                	do 
                	{
                	    int alt136 = 2;
                	    int LA136_0 = input.LA(1);

                	    if ( (LA136_0 == OPEN_BRACKET) )
                	    {
                	        int LA136_2 = input.LA(2);

                	        if ( ((LA136_2 >= 237 && LA136_2 <= 238)) )
                	        {
                	            int LA136_3 = input.LA(3);

                	            if ( (LA136_3 == 211) )
                	            {
                	                alt136 = 1;
                	            }


                	        }


                	    }


                	    switch (alt136) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:748:2: global_attribute
                			    {
                			    	PushFollow(FOLLOW_global_attribute_in_global_attributes4097);
                			    	global_attribute();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt136 >= 1 ) goto loop136;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee136 =
                		                new EarlyExitException(136, input);
                		            throw eee136;
                	    }
                	    cnt136++;
                	} while (true);

                	loop136:
                		;	// Stops C# compiler whining that label 'loop136' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "global_attributes"


        // $ANTLR start "global_attribute"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:749:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
        public void global_attribute() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:749:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:750:2: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
                {
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_global_attribute4107); if (state.failed) return ;
                	PushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute4111);
                	global_attribute_target_specifier();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_attribute_list_in_global_attribute4115);
                	attribute_list();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:750:61: ( ',' )?
                	int alt137 = 2;
                	int LA137_0 = input.LA(1);

                	if ( (LA137_0 == COMMA) )
                	{
                	    alt137 = 1;
                	}
                	switch (alt137) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:750:61: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_global_attribute4119); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_global_attribute4124); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "global_attribute"


        // $ANTLR start "global_attribute_target_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:751:1: global_attribute_target_specifier : global_attribute_target ':' ;
        public void global_attribute_target_specifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:751:34: ( global_attribute_target ':' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:752:2: global_attribute_target ':'
                {
                	PushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier4133);
                	global_attribute_target();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,211,FOLLOW_211_in_global_attribute_target_specifier4137); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "global_attribute_target_specifier"


        // $ANTLR start "global_attribute_target"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:753:1: global_attribute_target : ( 'assembly' | 'module' );
        public void global_attribute_target() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:753:24: ( 'assembly' | 'module' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= 237 && input.LA(1) <= 238) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "global_attribute_target"


        // $ANTLR start "attributes"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:755:1: attributes : attribute_sections ;
        public void attributes() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:755:11: ( attribute_sections )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:756:2: attribute_sections
                {
                	PushFollow(FOLLOW_attribute_sections_in_attributes4159);
                	attribute_sections();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attributes"


        // $ANTLR start "attribute_sections"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:757:1: attribute_sections : ( attribute_section )+ ;
        public void attribute_sections() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:757:19: ( ( attribute_section )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:758:2: ( attribute_section )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:758:2: ( attribute_section )+
                	int cnt138 = 0;
                	do 
                	{
                	    int alt138 = 2;
                	    int LA138_0 = input.LA(1);

                	    if ( (LA138_0 == OPEN_BRACKET) )
                	    {
                	        alt138 = 1;
                	    }


                	    switch (alt138) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:758:2: attribute_section
                			    {
                			    	PushFollow(FOLLOW_attribute_section_in_attribute_sections4168);
                			    	attribute_section();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt138 >= 1 ) goto loop138;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee138 =
                		                new EarlyExitException(138, input);
                		            throw eee138;
                	    }
                	    cnt138++;
                	} while (true);

                	loop138:
                		;	// Stops C# compiler whining that label 'loop138' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_sections"


        // $ANTLR start "attribute_section"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:759:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
        public void attribute_section() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:759:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:760:2: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
                {
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_attribute_section4178); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:760:8: ( attribute_target_specifier )?
                	int alt139 = 2;
                	int LA139_0 = input.LA(1);

                	if ( (LA139_0 == 239 || (LA139_0 >= 241 && LA139_0 <= 244)) )
                	{
                	    int LA139_1 = input.LA(2);

                	    if ( (LA139_1 == 211) )
                	    {
                	        alt139 = 1;
                	    }
                	}
                	else if ( (LA139_0 == RETURN || LA139_0 == 240) )
                	{
                	    alt139 = 1;
                	}
                	switch (alt139) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:760:8: attribute_target_specifier
                	        {
                	        	PushFollow(FOLLOW_attribute_target_specifier_in_attribute_section4182);
                	        	attribute_target_specifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_attribute_list_in_attribute_section4187);
                	attribute_list();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:760:55: ( ',' )?
                	int alt140 = 2;
                	int LA140_0 = input.LA(1);

                	if ( (LA140_0 == COMMA) )
                	{
                	    alt140 = 1;
                	}
                	switch (alt140) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:760:55: ','
                	        {
                	        	Match(input,COMMA,FOLLOW_COMMA_in_attribute_section4191); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_attribute_section4196); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_section"


        // $ANTLR start "attribute_target_specifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:761:1: attribute_target_specifier : attribute_target ':' ;
        public void attribute_target_specifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:761:27: ( attribute_target ':' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:762:2: attribute_target ':'
                {
                	PushFollow(FOLLOW_attribute_target_in_attribute_target_specifier4205);
                	attribute_target();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,211,FOLLOW_211_in_attribute_target_specifier4209); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_target_specifier"


        // $ANTLR start "attribute_target"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:763:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
        public void attribute_target() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:763:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( input.LA(1) == RETURN || (input.LA(1) >= 239 && input.LA(1) <= 244) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_target"


        // $ANTLR start "attribute_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:765:1: attribute_list : attribute ( ',' attribute )* ;
        public void attribute_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:765:15: ( attribute ( ',' attribute )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:766:2: attribute ( ',' attribute )*
                {
                	PushFollow(FOLLOW_attribute_in_attribute_list4251);
                	attribute();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:766:12: ( ',' attribute )*
                	do 
                	{
                	    int alt141 = 2;
                	    int LA141_0 = input.LA(1);

                	    if ( (LA141_0 == COMMA) )
                	    {
                	        int LA141_1 = input.LA(2);

                	        if ( (LA141_1 == IDENTIFIER || (LA141_1 >= ELIF && LA141_1 <= UNDEF) || LA141_1 == 195 || LA141_1 == 221 || (LA141_1 >= 224 && LA141_1 <= 239) || (LA141_1 >= 241 && LA141_1 <= 244) || (LA141_1 >= 247 && LA141_1 <= 250) || LA141_1 == 256 || (LA141_1 >= 263 && LA141_1 <= 264) || LA141_1 == 274 || LA141_1 == 277) )
                	        {
                	            alt141 = 1;
                	        }


                	    }


                	    switch (alt141) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:766:13: ',' attribute
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_attribute_list4254); if (state.failed) return ;
                			    	PushFollow(FOLLOW_attribute_in_attribute_list4256);
                			    	attribute();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop141;
                	    }
                	} while (true);

                	loop141:
                		;	// Stops C# compiler whining that label 'loop141' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_list"


        // $ANTLR start "attribute"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:767:1: attribute : type_name ( attribute_arguments )? ;
        public void attribute() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:767:10: ( type_name ( attribute_arguments )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:768:2: type_name ( attribute_arguments )?
                {
                	PushFollow(FOLLOW_type_name_in_attribute4268);
                	type_name();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:768:14: ( attribute_arguments )?
                	int alt142 = 2;
                	int LA142_0 = input.LA(1);

                	if ( (LA142_0 == LPAREN) )
                	{
                	    alt142 = 1;
                	}
                	switch (alt142) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:768:14: attribute_arguments
                	        {
                	        	PushFollow(FOLLOW_attribute_arguments_in_attribute4272);
                	        	attribute_arguments();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute"


        // $ANTLR start "attribute_arguments"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:770:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
        public void attribute_arguments() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:770:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:771:2: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_attribute_arguments4283); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:771:8: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
                	int alt144 = 2;
                	int LA144_0 = input.LA(1);

                	if ( (LA144_0 == RPAREN) )
                	{
                	    alt144 = 1;
                	}
                	else if ( ((LA144_0 >= MONONOT && LA144_0 <= MONOTWIDDLE) || LA144_0 == NEW_ARRAY || (LA144_0 >= OBJECT && LA144_0 <= THIS) || LA144_0 == LPAREN || LA144_0 == BIT_AND || (LA144_0 >= PLUS && LA144_0 <= MINUS) || LA144_0 == STAR || (LA144_0 >= BOOL && LA144_0 <= NULL) || (LA144_0 >= ELIF && LA144_0 <= UNDEF) || LA144_0 == 195 || LA144_0 == 197 || LA144_0 == 207 || (LA144_0 >= 209 && LA144_0 <= 210) || (LA144_0 >= 214 && LA144_0 <= 219) || LA144_0 == 221 || (LA144_0 >= 224 && LA144_0 <= 239) || (LA144_0 >= 241 && LA144_0 <= 244) || (LA144_0 >= 247 && LA144_0 <= 254) || LA144_0 == 256 || (LA144_0 >= 263 && LA144_0 <= 264) || (LA144_0 >= 274 && LA144_0 <= 277)) )
                	{
                	    alt144 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d144s0 =
                	        new NoViableAltException("", 144, 0, input);

                	    throw nvae_d144s0;
                	}
                	switch (alt144) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:771:9: ')'
                	        {
                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments4288); if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:8: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:9: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
                	        	{
                	        		PushFollow(FOLLOW_positional_argument_in_attribute_arguments4308);
                	        		positional_argument();
                	        		state._fsp--;
                	        		if (state.failed) return ;
                	        		// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:31: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
                	        		do 
                	        		{
                	        		    int alt143 = 3;
                	        		    int LA143_0 = input.LA(1);

                	        		    if ( (LA143_0 == IDENTIFIER) && (synpred25_TemplateExtracter()) )
                	        		    {
                	        		        alt143 = 1;
                	        		    }
                	        		    else if ( ((LA143_0 >= ELIF && LA143_0 <= UNDEF) || LA143_0 == 195 || LA143_0 == 221 || (LA143_0 >= 224 && LA143_0 <= 239) || (LA143_0 >= 241 && LA143_0 <= 244) || (LA143_0 >= 247 && LA143_0 <= 250) || LA143_0 == 256 || (LA143_0 >= 263 && LA143_0 <= 264) || LA143_0 == 274 || LA143_0 == 277) && (synpred25_TemplateExtracter()) )
                	        		    {
                	        		        alt143 = 1;
                	        		    }
                	        		    else if ( (LA143_0 == COMMA) )
                	        		    {
                	        		        alt143 = 2;
                	        		    }


                	        		    switch (alt143) 
                	        			{
                	        				case 1 :
                	        				    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:32: ( ',' identifier '=' )=> named_argument
                	        				    {
                	        				    	PushFollow(FOLLOW_named_argument_in_attribute_arguments4327);
                	        				    	named_argument();
                	        				    	state._fsp--;
                	        				    	if (state.failed) return ;

                	        				    }
                	        				    break;
                	        				case 2 :
                	        				    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:773:15: ',' positional_argument
                	        				    {
                	        				    	Match(input,COMMA,FOLLOW_COMMA_in_attribute_arguments4343); if (state.failed) return ;
                	        				    	PushFollow(FOLLOW_positional_argument_in_attribute_arguments4345);
                	        				    	positional_argument();
                	        				    	state._fsp--;
                	        				    	if (state.failed) return ;

                	        				    }
                	        				    break;

                	        				default:
                	        				    goto loop143;
                	        		    }
                	        		} while (true);

                	        		loop143:
                	        			;	// Stops C# compiler whining that label 'loop143' has no statements


                	        	}

                	        	Match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments4356); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_arguments"


        // $ANTLR start "positional_argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:776:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
        public void positional_argument_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:776:25: ( positional_argument ( ',' positional_argument )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:777:2: positional_argument ( ',' positional_argument )*
                {
                	PushFollow(FOLLOW_positional_argument_in_positional_argument_list4370);
                	positional_argument();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:777:22: ( ',' positional_argument )*
                	do 
                	{
                	    int alt145 = 2;
                	    int LA145_0 = input.LA(1);

                	    if ( (LA145_0 == COMMA) )
                	    {
                	        alt145 = 1;
                	    }


                	    switch (alt145) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:777:23: ',' positional_argument
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_positional_argument_list4373); if (state.failed) return ;
                			    	PushFollow(FOLLOW_positional_argument_in_positional_argument_list4375);
                			    	positional_argument();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop145;
                	    }
                	} while (true);

                	loop145:
                		;	// Stops C# compiler whining that label 'loop145' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "positional_argument_list"


        // $ANTLR start "positional_argument"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:778:1: positional_argument : attribute_argument_expression ;
        public void positional_argument() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:778:20: ( attribute_argument_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:779:2: attribute_argument_expression
                {
                	PushFollow(FOLLOW_attribute_argument_expression_in_positional_argument4386);
                	attribute_argument_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "positional_argument"


        // $ANTLR start "named_argument_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:780:1: named_argument_list : named_argument ( ',' named_argument )* ;
        public void named_argument_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:780:20: ( named_argument ( ',' named_argument )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:781:2: named_argument ( ',' named_argument )*
                {
                	PushFollow(FOLLOW_named_argument_in_named_argument_list4395);
                	named_argument();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:781:17: ( ',' named_argument )*
                	do 
                	{
                	    int alt146 = 2;
                	    int LA146_0 = input.LA(1);

                	    if ( (LA146_0 == COMMA) )
                	    {
                	        alt146 = 1;
                	    }


                	    switch (alt146) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:781:18: ',' named_argument
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_named_argument_list4398); if (state.failed) return ;
                			    	PushFollow(FOLLOW_named_argument_in_named_argument_list4400);
                			    	named_argument();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop146;
                	    }
                	} while (true);

                	loop146:
                		;	// Stops C# compiler whining that label 'loop146' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "named_argument_list"


        // $ANTLR start "named_argument"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:782:1: named_argument : identifier '=' attribute_argument_expression ;
        public void named_argument() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:782:15: ( identifier '=' attribute_argument_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:783:2: identifier '=' attribute_argument_expression
                {
                	PushFollow(FOLLOW_identifier_in_named_argument4411);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_named_argument4415); if (state.failed) return ;
                	PushFollow(FOLLOW_attribute_argument_expression_in_named_argument4419);
                	attribute_argument_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "named_argument"


        // $ANTLR start "attribute_argument_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:784:1: attribute_argument_expression : expression ;
        public void attribute_argument_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:784:30: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:785:2: expression
                {
                	PushFollow(FOLLOW_expression_in_attribute_argument_expression4428);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "attribute_argument_expression"


        // $ANTLR start "class_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:791:1: class_declaration[bool isPartial] : c= 'class' type_or_generic (cb= class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? ;
        public void class_declaration(bool isPartial) // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());

            CommonTree c = null;
            List<string> cb = default(List<string>);

            TemplateExtracter.type_or_generic_return type_or_generic11 = default(TemplateExtracter.type_or_generic_return);



                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                ClassRepTemplate klass = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:798:1: (c= 'class' type_or_generic (cb= class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:799:2: c= 'class' type_or_generic (cb= class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )?
                {
                	c=(CommonTree)Match(input,245,FOLLOW_245_in_class_declaration4455); if (state.failed) return ;
                	PushFollow(FOLLOW_type_or_generic_in_class_declaration4458);
                	type_or_generic11 = type_or_generic();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   
                	              DebugDetail("Processing " + (isPartial ? "partial" : "") + " class: " + ((type_or_generic11 != null) ? type_or_generic11.type : default(string)));
                	              // For class System.Dictionary<K,V>
                	              // The Type Rep has TypeName "System.Dictionary", TypeArgs "K","V" is stored at System/Dictionary'2.xml 
                	              // and will be used as [System.]Dictionary[Type1,Type2] 
                	              String genericNameSpace = NSPrefix(ParentNameSpace) + mkGenericTypeAlias(((type_or_generic11 != null) ? type_or_generic11.type : default(string)), ((type_or_generic11 != null) ? type_or_generic11.generic_arguments : default(List<string>)));
                	              TypeRepTemplate tmpTyRep;
                	              bool exists = AppEnv.TryGetValue(genericNameSpace, out tmpTyRep);
                	              if (exists && !isPartial) {
                	                    { Error(((c != null) ? c.Line : 0), "Found multiple definitions for " + genericNameSpace); }
                	              }
                	              if (exists) {
                	                 klass = tmpTyRep as ClassRepTemplate;
                	                 if (klass == null) {
                	                    { Error(((c != null) ? c.Line : 0), "Found conflicting type definitions for " + genericNameSpace); }
                	                    // This klass is not put in AppEnv so its just thrown away in this case
                	                    klass = new ClassRepTemplate();
                	                 }
                	              }
                	              else {
                	                 klass = new ClassRepTemplate();
                	                 AppEnv[genericNameSpace] = klass;
                	              }
                	              klass.TypeName = NSPrefix(ParentNameSpace) + ((type_or_generic11 != null) ? type_or_generic11.type : default(string));
                	              if (((type_or_generic11 != null) ? type_or_generic11.generic_arguments : default(List<string>)).Count > 0) {
                	                 // If we already have klass.TypeParams then they must match
                	                 klass.TypeParams = ((type_or_generic11 != null) ? type_or_generic11.generic_arguments : default(List<string>)).ToArray();
                	              }
                	              // Nested types can see things in this space
                	              ((NSContext_scope)NSContext_stack.Peek()).searchpath.Add(genericNameSpace);
                	              ((NSContext_scope)NSContext_stack.Peek()).currentNS =  genericNameSpace;
                	              ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep =  klass;
                	              klass.Uses = MergeArray(klass.Uses, this.CollectUses);
                	              klass.Aliases = MergeArray(klass.Aliases, this.CollectAliases);
                	              klass.Imports = new string[] {klass.TypeName};
                	          
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:836:9: (cb= class_base )?
                	int alt147 = 2;
                	int LA147_0 = input.LA(1);

                	if ( (LA147_0 == 211) )
                	{
                	    alt147 = 1;
                	}
                	switch (alt147) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:836:10: cb= class_base
                	        {
                	        	PushFollow(FOLLOW_class_base_in_class_declaration4484);
                	        	cb = class_base();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   klass.Inherits =  MergeArray(cb.ToArray(), klass.Inherits); 
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:837:9: ( type_parameter_constraints_clauses )?
                	int alt148 = 2;
                	int LA148_0 = input.LA(1);

                	if ( (LA148_0 == 236) )
                	{
                	    alt148 = 1;
                	}
                	switch (alt148) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:837:9: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration4502);
                	        	type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_class_body_in_class_declaration4505);
                	class_body();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:837:57: ( ';' )?
                	int alt149 = 2;
                	int LA149_0 = input.LA(1);

                	if ( (LA149_0 == SEMI) )
                	{
                	    alt149 = 1;
                	}
                	switch (alt149) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:837:57: ';'
                	        {
                	        	Match(input,SEMI,FOLLOW_SEMI_in_class_declaration4508); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();

            }
            return ;
        }
        // $ANTLR end "class_declaration"


        // $ANTLR start "class_base"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:839:1: class_base returns [List<string> typeList] : ':' i= interface_type_list ;
        public List<string> class_base() // throws RecognitionException [1]
        {   
            List<string> typeList = default(List<string>);

            List<string> i = default(List<string>);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:843:1: ( ':' i= interface_type_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:846:2: ':' i= interface_type_list
                {
                	Match(input,211,FOLLOW_211_in_class_base4532); if (state.failed) return typeList;
                	PushFollow(FOLLOW_interface_type_list_in_class_base4538);
                	i = interface_type_list();
                	state._fsp--;
                	if (state.failed) return typeList;

                }

                if ( (state.backtracking==0) )
                {

                      typeList =  i;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return typeList;
        }
        // $ANTLR end "class_base"


        // $ANTLR start "interface_type_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:848:1: interface_type_list returns [List<string> typeList] : t1= type ( ',' tn= type )* ;
        public List<string> interface_type_list() // throws RecognitionException [1]
        {   
            List<string> typeList = default(List<string>);

            string t1 = default(string);

            string tn = default(string);



                typeList =  new List<string>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:852:1: (t1= type ( ',' tn= type )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:853:2: t1= type ( ',' tn= type )*
                {
                	PushFollow(FOLLOW_type_in_interface_type_list4560);
                	t1 = type();
                	state._fsp--;
                	if (state.failed) return typeList;
                	if ( (state.backtracking==0) )
                	{
                	   typeList.Add(t1); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:853:41: ( ',' tn= type )*
                	do 
                	{
                	    int alt150 = 2;
                	    int LA150_0 = input.LA(1);

                	    if ( (LA150_0 == COMMA) )
                	    {
                	        alt150 = 1;
                	    }


                	    switch (alt150) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:853:42: ',' tn= type
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_interface_type_list4565); if (state.failed) return typeList;
                			    	PushFollow(FOLLOW_type_in_interface_type_list4571);
                			    	tn = type();
                			    	state._fsp--;
                			    	if (state.failed) return typeList;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   typeList.Add(tn); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop150;
                	    }
                	} while (true);

                	loop150:
                		;	// Stops C# compiler whining that label 'loop150' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return typeList;
        }
        // $ANTLR end "interface_type_list"


        // $ANTLR start "class_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:855:1: class_body : '{' ( class_member_declarations )? '}' ;
        public void class_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:855:11: ( '{' ( class_member_declarations )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:856:2: '{' ( class_member_declarations )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_class_body4585); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:856:8: ( class_member_declarations )?
                	int alt151 = 2;
                	int LA151_0 = input.LA(1);

                	if ( (LA151_0 == ENUM || LA151_0 == MONOTWIDDLE || (LA151_0 >= PUBLIC && LA151_0 <= STATIC) || LA151_0 == OBJECT || LA151_0 == OPEN_BRACKET || (LA151_0 >= BOOL && LA151_0 <= IDENTIFIER) || (LA151_0 >= ELIF && LA151_0 <= UNDEF) || (LA151_0 >= 194 && LA151_0 <= 206) || LA151_0 == 218 || LA151_0 == 221 || (LA151_0 >= 224 && LA151_0 <= 245) || (LA151_0 >= 247 && LA151_0 <= 256) || LA151_0 == 258 || (LA151_0 >= 260 && LA151_0 <= 261) || (LA151_0 >= 263 && LA151_0 <= 264) || (LA151_0 >= 274 && LA151_0 <= 277)) )
                	{
                	    alt151 = 1;
                	}
                	switch (alt151) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:856:8: class_member_declarations
                	        {
                	        	PushFollow(FOLLOW_class_member_declarations_in_class_body4589);
                	        	class_member_declarations();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_class_body4594); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "class_body"


        // $ANTLR start "class_member_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:857:1: class_member_declarations : ( class_member_declaration )+ ;
        public void class_member_declarations() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:857:26: ( ( class_member_declaration )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:858:2: ( class_member_declaration )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:858:2: ( class_member_declaration )+
                	int cnt152 = 0;
                	do 
                	{
                	    int alt152 = 2;
                	    int LA152_0 = input.LA(1);

                	    if ( (LA152_0 == ENUM || LA152_0 == MONOTWIDDLE || (LA152_0 >= PUBLIC && LA152_0 <= STATIC) || LA152_0 == OBJECT || LA152_0 == OPEN_BRACKET || (LA152_0 >= BOOL && LA152_0 <= IDENTIFIER) || (LA152_0 >= ELIF && LA152_0 <= UNDEF) || (LA152_0 >= 194 && LA152_0 <= 206) || LA152_0 == 218 || LA152_0 == 221 || (LA152_0 >= 224 && LA152_0 <= 245) || (LA152_0 >= 247 && LA152_0 <= 256) || LA152_0 == 258 || (LA152_0 >= 260 && LA152_0 <= 261) || (LA152_0 >= 263 && LA152_0 <= 264) || (LA152_0 >= 274 && LA152_0 <= 277)) )
                	    {
                	        alt152 = 1;
                	    }


                	    switch (alt152) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:858:2: class_member_declaration
                			    {
                			    	PushFollow(FOLLOW_class_member_declaration_in_class_member_declarations4602);
                			    	class_member_declaration();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt152 >= 1 ) goto loop152;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee152 =
                		                new EarlyExitException(152, input);
                		            throw eee152;
                	    }
                	    cnt152++;
                	} while (true);

                	loop152:
                		;	// Stops C# compiler whining that label 'loop152' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "class_member_declarations"


        // $ANTLR start "constant_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:861:1: constant_declaration : 'const' type constant_declarators[$type.thetext] ';' ;
        public void constant_declaration() // throws RecognitionException [1]
        {   
            string type12 = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:861:21: ( 'const' type constant_declarators[$type.thetext] ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:862:2: 'const' type constant_declarators[$type.thetext] ';'
                {
                	Match(input,205,FOLLOW_205_in_constant_declaration4613); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_constant_declaration4617);
                	type12 = type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_constant_declarators_in_constant_declaration4621);
                	constant_declarators(type12);
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_constant_declaration4626); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constant_declaration"


        // $ANTLR start "constant_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:863:1: constant_declarators[string type] : constant_declarator[$type] ( ',' constant_declarator[$type] )* ;
        public void constant_declarators(string type) // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:863:35: ( constant_declarator[$type] ( ',' constant_declarator[$type] )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:864:2: constant_declarator[$type] ( ',' constant_declarator[$type] )*
                {
                	PushFollow(FOLLOW_constant_declarator_in_constant_declarators4636);
                	constant_declarator(type);
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:864:29: ( ',' constant_declarator[$type] )*
                	do 
                	{
                	    int alt153 = 2;
                	    int LA153_0 = input.LA(1);

                	    if ( (LA153_0 == COMMA) )
                	    {
                	        alt153 = 1;
                	    }


                	    switch (alt153) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:864:30: ',' constant_declarator[$type]
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_constant_declarators4640); if (state.failed) return ;
                			    	PushFollow(FOLLOW_constant_declarator_in_constant_declarators4642);
                			    	constant_declarator(type);
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop153;
                	    }
                	} while (true);

                	loop153:
                		;	// Stops C# compiler whining that label 'loop153' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constant_declarators"


        // $ANTLR start "constant_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:865:1: constant_declarator[string type] : identifier ( '=' constant_expression )? ;
        public void constant_declarator(string type) // throws RecognitionException [1]
        {   
            TemplateExtracter.identifier_return identifier13 = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:865:34: ( identifier ( '=' constant_expression )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:866:2: identifier ( '=' constant_expression )?
                {
                	PushFollow(FOLLOW_identifier_in_constant_declarator4655);
                	identifier13 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Fields.Add(new FieldRepTemplate(type, ((identifier13 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier13.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier13.Start)) : null))); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:866:125: ( '=' constant_expression )?
                	int alt154 = 2;
                	int LA154_0 = input.LA(1);

                	if ( (LA154_0 == ASSIGN) )
                	{
                	    alt154 = 1;
                	}
                	switch (alt154) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:866:126: '=' constant_expression
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_constant_declarator4662); if (state.failed) return ;
                	        	PushFollow(FOLLOW_constant_expression_in_constant_declarator4666);
                	        	constant_expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing constant declaration: " + ((identifier13 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier13.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier13.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constant_declarator"


        // $ANTLR start "constant_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:869:1: constant_expression : expression ;
        public void constant_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:869:20: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:870:2: expression
                {
                	PushFollow(FOLLOW_expression_in_constant_expression4687);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constant_expression"


        // $ANTLR start "field_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:873:1: field_declaration[string type] : variable_declarators[$type, false] ';' ;
        public void field_declaration(string type) // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:873:32: ( variable_declarators[$type, false] ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:874:2: variable_declarators[$type, false] ';'
                {
                	PushFollow(FOLLOW_variable_declarators_in_field_declaration4698);
                	variable_declarators(type, false);
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_field_declaration4703); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "field_declaration"


        // $ANTLR start "variable_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:875:1: variable_declarators[string type, bool isEvent] : variable_declarator[$type, $isEvent] ( ',' variable_declarator[$type, $isEvent] )* ;
        public void variable_declarators(string type, bool isEvent) // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:875:49: ( variable_declarator[$type, $isEvent] ( ',' variable_declarator[$type, $isEvent] )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:876:2: variable_declarator[$type, $isEvent] ( ',' variable_declarator[$type, $isEvent] )*
                {
                	PushFollow(FOLLOW_variable_declarator_in_variable_declarators4713);
                	variable_declarator(type, isEvent);
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:876:39: ( ',' variable_declarator[$type, $isEvent] )*
                	do 
                	{
                	    int alt155 = 2;
                	    int LA155_0 = input.LA(1);

                	    if ( (LA155_0 == COMMA) )
                	    {
                	        alt155 = 1;
                	    }


                	    switch (alt155) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:876:40: ',' variable_declarator[$type, $isEvent]
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_variable_declarators4717); if (state.failed) return ;
                			    	PushFollow(FOLLOW_variable_declarator_in_variable_declarators4721);
                			    	variable_declarator(type, isEvent);
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop155;
                	    }
                	} while (true);

                	loop155:
                		;	// Stops C# compiler whining that label 'loop155' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variable_declarators"


        // $ANTLR start "variable_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:877:1: variable_declarator[string type, bool isEvent] : type_name ( '=' variable_initializer )? ;
        public void variable_declarator(string type, bool isEvent) // throws RecognitionException [1]
        {   
            TemplateExtracter.type_name_return type_name14 = default(TemplateExtracter.type_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:877:48: ( type_name ( '=' variable_initializer )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:878:2: type_name ( '=' variable_initializer )?
                {
                	PushFollow(FOLLOW_type_name_in_variable_declarator4734);
                	type_name14 = type_name();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   FieldRepTemplate f = new FieldRepTemplate(type, ((type_name14 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(type_name14.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(type_name14.Start)) : null));
                	           if (isEvent) {
                	               ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Events.Add(f);
                	           }
                	          else {
                	               ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Fields.Add(f);
                	          }; 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:885:14: ( '=' variable_initializer )?
                	int alt156 = 2;
                	int LA156_0 = input.LA(1);

                	if ( (LA156_0 == ASSIGN) )
                	{
                	    alt156 = 1;
                	}
                	switch (alt156) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:885:15: '=' variable_initializer
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_variable_declarator4747); if (state.failed) return ;
                	        	PushFollow(FOLLOW_variable_initializer_in_variable_declarator4751);
                	        	variable_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing " + (isEvent ? "event" : "field") + " declaration: " + ((type_name14 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(type_name14.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(type_name14.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variable_declarator"


        // $ANTLR start "method_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:890:1: method_declaration[bool isPartial, string returnType] : method_header[$returnType] method_body ;
        public void method_declaration(bool isPartial, string returnType) // throws RecognitionException [1]
        {   
            bool method_body15 = default(bool);

            MethodRepTemplate method_header16 = default(MethodRepTemplate);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:890:55: ( method_header[$returnType] method_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:891:2: method_header[$returnType] method_body
                {
                	PushFollow(FOLLOW_method_header_in_method_declaration4774);
                	method_header16 = method_header(returnType);
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_method_body_in_method_declaration4779);
                	method_body15 = method_body();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{

                	           if (isPartial && method_body15) {
                	              method_header16.IsPartialDefiner = true;
                	           }
                	           ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Methods.Add(method_header16);
                	        
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "method_declaration"


        // $ANTLR start "method_header"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:899:1: method_header[string returnType] returns [MethodRepTemplate meth] : member_name '(' (fpl= formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
        public MethodRepTemplate method_header(string returnType) // throws RecognitionException [1]
        {   
            MethodRepTemplate meth = default(MethodRepTemplate);

            TemplateExtracter.formal_parameter_list_return fpl = default(TemplateExtracter.formal_parameter_list_return);

            TemplateExtracter.member_name_return member_name17 = default(TemplateExtracter.member_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:899:67: ( member_name '(' (fpl= formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:900:2: member_name '(' (fpl= formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
                {
                	PushFollow(FOLLOW_member_name_in_method_header4806);
                	member_name17 = member_name();
                	state._fsp--;
                	if (state.failed) return meth;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_method_header4809); if (state.failed) return meth;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:900:24: (fpl= formal_parameter_list )?
                	int alt157 = 2;
                	int LA157_0 = input.LA(1);

                	if ( ((LA157_0 >= OBJECT && LA157_0 <= THIS) || LA157_0 == OPEN_BRACKET || (LA157_0 >= BOOL && LA157_0 <= IDENTIFIER) || (LA157_0 >= ELIF && LA157_0 <= UNDEF) || LA157_0 == 195 || LA157_0 == 206 || (LA157_0 >= 212 && LA157_0 <= 213) || LA157_0 == 221 || (LA157_0 >= 224 && LA157_0 <= 239) || (LA157_0 >= 241 && LA157_0 <= 244) || (LA157_0 >= 247 && LA157_0 <= 254) || (LA157_0 >= 256 && LA157_0 <= 257) || (LA157_0 >= 263 && LA157_0 <= 264) || (LA157_0 >= 274 && LA157_0 <= 277)) )
                	{
                	    alt157 = 1;
                	}
                	switch (alt157) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:900:24: fpl= formal_parameter_list
                	        {
                	        	PushFollow(FOLLOW_formal_parameter_list_in_method_header4815);
                	        	fpl = formal_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return meth;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_method_header4820); if (state.failed) return meth;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:901:5: ( type_parameter_constraints_clauses )?
                	int alt158 = 2;
                	int LA158_0 = input.LA(1);

                	if ( (LA158_0 == 236) )
                	{
                	    alt158 = 1;
                	}
                	switch (alt158) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:901:5: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_header4829);
                	        	type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return meth;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing method declaration: " + ((member_name17 != null) ? member_name17.name : default(string))); 
                	}
                	if ( (state.backtracking==0) )
                	{
                	    
                	           meth =  new MethodRepTemplate(returnType, ((member_name17 != null) ? member_name17.name : default(string)), (((member_name17 != null) ? member_name17.tyargs : default(List<String>)) == null ? null : ((member_name17 != null) ? member_name17.tyargs : default(List<String>)).ToArray()), ((fpl != null) ? fpl.paramlist : default(List<ParamRepTemplate>)));
                	           meth.ParamArray = ((fpl != null) ? fpl.paramarr : default(ParamArrayRepTemplate));
                	           if (MethodRenames.ContainsKey(((member_name17 != null) ? member_name17.name : default(string)))) {
                	              meth.JavaName = MethodRenames[((member_name17 != null) ? member_name17.name : default(string))];
                	           }
                	           else {
                	              meth.JavaName = rewriteMethodName(((member_name17 != null) ? member_name17.name : default(string)));
                	           }
                	        
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return meth;
        }
        // $ANTLR end "method_header"


        // $ANTLR start "method_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:914:1: method_body returns [bool isEmpty] : block ;
        public bool method_body() // throws RecognitionException [1]
        {   
            bool isEmpty = default(bool);

            bool block18 = default(bool);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:914:34: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:915:2: block
                {
                	PushFollow(FOLLOW_block_in_method_body4858);
                	block18 = block();
                	state._fsp--;
                	if (state.failed) return isEmpty;
                	if ( (state.backtracking==0) )
                	{
                	  isEmpty =  block18; 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return isEmpty;
        }
        // $ANTLR end "method_body"

        public class member_name_return : TreeRuleReturnScope
        {
            public string name;
            public List<String> tyargs;
        };

        // $ANTLR start "member_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:916:1: member_name returns [string name, List<String> tyargs] : qid ;
        public TemplateExtracter.member_name_return member_name() // throws RecognitionException [1]
        {   
            TemplateExtracter.member_name_return retval = new TemplateExtracter.member_name_return();
            retval.start = input.LT(1);

            TemplateExtracter.qid_return qid19 = default(TemplateExtracter.qid_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:916:55: ( qid )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:917:2: qid
                {
                	PushFollow(FOLLOW_qid_in_member_name4871);
                	qid19 = qid();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.name =  ((qid19 != null) ? qid19.name : default(string)); retval.tyargs =  ((qid19 != null) ? qid19.tyargs : default(List<String>)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "member_name"


        // $ANTLR start "property_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:920:1: property_declaration[string type] : member_name '{' accessor_declarations '}' ;
        public void property_declaration(string type) // throws RecognitionException [1]
        {   
            TemplateExtracter.member_name_return member_name20 = default(TemplateExtracter.member_name_return);

            TemplateExtracter.accessor_declarations_return accessor_declarations21 = default(TemplateExtracter.accessor_declarations_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:920:34: ( member_name '{' accessor_declarations '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:921:2: member_name '{' accessor_declarations '}'
                {
                	PushFollow(FOLLOW_member_name_in_property_declaration4886);
                	member_name20 = member_name();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_property_declaration4890); if (state.failed) return ;
                	PushFollow(FOLLOW_accessor_declarations_in_property_declaration4894);
                	accessor_declarations21 = accessor_declarations();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_property_declaration4898); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   PropRepTemplate propRep = new PropRepTemplate(type, ((member_name20 != null) ? member_name20.name : default(string)));
                	              propRep.CanRead = ((accessor_declarations21 != null) ? accessor_declarations21.hasGetter : default(bool));
                	              propRep.CanWrite = ((accessor_declarations21 != null) ? accessor_declarations21.hasSetter : default(bool));
                	              ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Properties.Add(propRep); 
                	}
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing property declaration: " + ((member_name20 != null) ? member_name20.name : default(string))); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "property_declaration"

        public class accessor_declarations_return : TreeRuleReturnScope
        {
            public bool hasGetter;
            public bool hasSetter;
        };

        // $ANTLR start "accessor_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:928:1: accessor_declarations returns [bool hasGetter, bool hasSetter] : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
        public TemplateExtracter.accessor_declarations_return accessor_declarations() // throws RecognitionException [1]
        {   
            TemplateExtracter.accessor_declarations_return retval = new TemplateExtracter.accessor_declarations_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:933:1: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:934:2: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:934:2: ( attributes )?
                	int alt159 = 2;
                	int LA159_0 = input.LA(1);

                	if ( (LA159_0 == OPEN_BRACKET) )
                	{
                	    alt159 = 1;
                	}
                	switch (alt159) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:934:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_accessor_declarations4940);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:935:3: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
                	int alt164 = 2;
                	switch ( input.LA(1) ) 
                	{
                	case PROTECTED:
                		{
                	    switch ( input.LA(2) ) 
                	    {
                	    case INTERNAL:
                	    	{
                	        int LA164_6 = input.LA(3);

                	        if ( (LA164_6 == 247) )
                	        {
                	            alt164 = 1;
                	        }
                	        else if ( (LA164_6 == 248) )
                	        {
                	            alt164 = 2;
                	        }
                	        else 
                	        {
                	            if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	            NoViableAltException nvae_d164s6 =
                	                new NoViableAltException("", 164, 6, input);

                	            throw nvae_d164s6;
                	        }
                	        }
                	        break;
                	    case 247:
                	    	{
                	        alt164 = 1;
                	        }
                	        break;
                	    case 248:
                	    	{
                	        alt164 = 2;
                	        }
                	        break;
                	    	default:
                	    	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    	    NoViableAltException nvae_d164s1 =
                	    	        new NoViableAltException("", 164, 1, input);

                	    	    throw nvae_d164s1;
                	    }

                	    }
                	    break;
                	case PRIVATE:
                		{
                	    int LA164_2 = input.LA(2);

                	    if ( (LA164_2 == 248) )
                	    {
                	        alt164 = 2;
                	    }
                	    else if ( (LA164_2 == 247) )
                	    {
                	        alt164 = 1;
                	    }
                	    else 
                	    {
                	        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	        NoViableAltException nvae_d164s2 =
                	            new NoViableAltException("", 164, 2, input);

                	        throw nvae_d164s2;
                	    }
                	    }
                	    break;
                	case INTERNAL:
                		{
                	    switch ( input.LA(2) ) 
                	    {
                	    case PROTECTED:
                	    	{
                	        int LA164_7 = input.LA(3);

                	        if ( (LA164_7 == 248) )
                	        {
                	            alt164 = 2;
                	        }
                	        else if ( (LA164_7 == 247) )
                	        {
                	            alt164 = 1;
                	        }
                	        else 
                	        {
                	            if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	            NoViableAltException nvae_d164s7 =
                	                new NoViableAltException("", 164, 7, input);

                	            throw nvae_d164s7;
                	        }
                	        }
                	        break;
                	    case 248:
                	    	{
                	        alt164 = 2;
                	        }
                	        break;
                	    case 247:
                	    	{
                	        alt164 = 1;
                	        }
                	        break;
                	    	default:
                	    	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    	    NoViableAltException nvae_d164s3 =
                	    	        new NoViableAltException("", 164, 3, input);

                	    	    throw nvae_d164s3;
                	    }

                	    }
                	    break;
                	case 247:
                		{
                	    alt164 = 1;
                	    }
                	    break;
                	case 248:
                		{
                	    alt164 = 2;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                		    NoViableAltException nvae_d164s0 =
                		        new NoViableAltException("", 164, 0, input);

                		    throw nvae_d164s0;
                	}

                	switch (alt164) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:935:4: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
                	        {
                	        	PushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations4946);
                	        	get_accessor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.hasGetter =  true; 
                	        	}
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:935:53: ( attributes )?
                	        	int alt160 = 2;
                	        	int LA160_0 = input.LA(1);

                	        	if ( (LA160_0 == OPEN_BRACKET) )
                	        	{
                	        	    alt160 = 1;
                	        	}
                	        	switch (alt160) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:935:53: attributes
                	        	        {
                	        	        	PushFollow(FOLLOW_attributes_in_accessor_declarations4951);
                	        	        	attributes();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}

                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:935:67: ( set_accessor_declaration )?
                	        	int alt161 = 2;
                	        	int LA161_0 = input.LA(1);

                	        	if ( ((LA161_0 >= PROTECTED && LA161_0 <= INTERNAL) || LA161_0 == 248) )
                	        	{
                	        	    alt161 = 1;
                	        	}
                	        	switch (alt161) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:935:68: set_accessor_declaration
                	        	        {
                	        	        	PushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations4957);
                	        	        	set_accessor_declaration();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   retval.hasSetter =  true; 
                	        	        	}

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:936:5: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
                	        {
                	        	PushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations4967);
                	        	set_accessor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.hasSetter =  true; 
                	        	}
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:936:54: ( attributes )?
                	        	int alt162 = 2;
                	        	int LA162_0 = input.LA(1);

                	        	if ( (LA162_0 == OPEN_BRACKET) )
                	        	{
                	        	    alt162 = 1;
                	        	}
                	        	switch (alt162) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:936:54: attributes
                	        	        {
                	        	        	PushFollow(FOLLOW_attributes_in_accessor_declarations4972);
                	        	        	attributes();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}

                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:936:68: ( get_accessor_declaration )?
                	        	int alt163 = 2;
                	        	int LA163_0 = input.LA(1);

                	        	if ( ((LA163_0 >= PROTECTED && LA163_0 <= INTERNAL) || LA163_0 == 247) )
                	        	{
                	        	    alt163 = 1;
                	        	}
                	        	switch (alt163) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:936:69: get_accessor_declaration
                	        	        {
                	        	        	PushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations4978);
                	        	        	get_accessor_declaration();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   retval.hasGetter =  true; 
                	        	        	}

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "accessor_declarations"


        // $ANTLR start "get_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:937:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
        public void get_accessor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:937:25: ( ( accessor_modifier )? 'get' accessor_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:938:2: ( accessor_modifier )? 'get' accessor_body
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:938:2: ( accessor_modifier )?
                	int alt165 = 2;
                	int LA165_0 = input.LA(1);

                	if ( ((LA165_0 >= PROTECTED && LA165_0 <= INTERNAL)) )
                	{
                	    alt165 = 1;
                	}
                	switch (alt165) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:938:2: accessor_modifier
                	        {
                	        	PushFollow(FOLLOW_accessor_modifier_in_get_accessor_declaration4991);
                	        	accessor_modifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,247,FOLLOW_247_in_get_accessor_declaration4996); if (state.failed) return ;
                	PushFollow(FOLLOW_accessor_body_in_get_accessor_declaration5000);
                	accessor_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "get_accessor_declaration"


        // $ANTLR start "set_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:939:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
        public void set_accessor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:939:25: ( ( accessor_modifier )? 'set' accessor_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:940:2: ( accessor_modifier )? 'set' accessor_body
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:940:2: ( accessor_modifier )?
                	int alt166 = 2;
                	int LA166_0 = input.LA(1);

                	if ( ((LA166_0 >= PROTECTED && LA166_0 <= INTERNAL)) )
                	{
                	    alt166 = 1;
                	}
                	switch (alt166) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:940:2: accessor_modifier
                	        {
                	        	PushFollow(FOLLOW_accessor_modifier_in_set_accessor_declaration5008);
                	        	accessor_modifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,248,FOLLOW_248_in_set_accessor_declaration5013); if (state.failed) return ;
                	PushFollow(FOLLOW_accessor_body_in_set_accessor_declaration5017);
                	accessor_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "set_accessor_declaration"


        // $ANTLR start "accessor_modifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:941:1: accessor_modifier : ( 'protected' ( 'internal' )? | 'private' | 'internal' ( 'protected' )? );
        public void accessor_modifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:941:18: ( 'protected' ( 'internal' )? | 'private' | 'internal' ( 'protected' )? )
                int alt169 = 3;
                switch ( input.LA(1) ) 
                {
                case PROTECTED:
                	{
                    alt169 = 1;
                    }
                    break;
                case PRIVATE:
                	{
                    alt169 = 2;
                    }
                    break;
                case INTERNAL:
                	{
                    alt169 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d169s0 =
                	        new NoViableAltException("", 169, 0, input);

                	    throw nvae_d169s0;
                }

                switch (alt169) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:2: 'protected' ( 'internal' )?
                        {
                        	Match(input,PROTECTED,FOLLOW_PROTECTED_in_accessor_modifier5025); if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:14: ( 'internal' )?
                        	int alt167 = 2;
                        	int LA167_0 = input.LA(1);

                        	if ( (LA167_0 == INTERNAL) )
                        	{
                        	    alt167 = 1;
                        	}
                        	switch (alt167) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:14: 'internal'
                        	        {
                        	        	Match(input,INTERNAL,FOLLOW_INTERNAL_in_accessor_modifier5027); if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:28: 'private'
                        {
                        	Match(input,PRIVATE,FOLLOW_PRIVATE_in_accessor_modifier5032); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:40: 'internal' ( 'protected' )?
                        {
                        	Match(input,INTERNAL,FOLLOW_INTERNAL_in_accessor_modifier5036); if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:51: ( 'protected' )?
                        	int alt168 = 2;
                        	int LA168_0 = input.LA(1);

                        	if ( (LA168_0 == PROTECTED) )
                        	{
                        	    alt168 = 1;
                        	}
                        	switch (alt168) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:942:51: 'protected'
                        	        {
                        	        	Match(input,PROTECTED,FOLLOW_PROTECTED_in_accessor_modifier5038); if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "accessor_modifier"


        // $ANTLR start "accessor_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:943:1: accessor_body : block ;
        public void accessor_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:943:14: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:944:2: block
                {
                	PushFollow(FOLLOW_block_in_accessor_body5047);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "accessor_body"


        // $ANTLR start "event_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:947:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators[$type.thetext, false] ';' ) ;
        public void event_declaration() // throws RecognitionException [1]
        {   
            string type22 = default(string);

            TemplateExtracter.member_name_return member_name23 = default(TemplateExtracter.member_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:947:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators[$type.thetext, false] ';' ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:948:2: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators[$type.thetext, false] ';' )
                {
                	Match(input,240,FOLLOW_240_in_event_declaration5057); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_event_declaration5061);
                	type22 = type();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:949:3: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators[$type.thetext, false] ';' )
                	int alt170 = 2;
                	alt170 = dfa170.Predict(input);
                	switch (alt170) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:949:4: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
                	        {
                	        	PushFollow(FOLLOW_member_name_in_event_declaration5076);
                	        	member_name23 = member_name();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_event_declaration5078); if (state.failed) return ;
                	        	PushFollow(FOLLOW_event_accessor_declarations_in_event_declaration5080);
                	        	event_accessor_declarations();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_event_declaration5082); if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Events.Add(new FieldRepTemplate(type22, ((member_name23 != null) ? member_name23.name : default(string)))); 
                	        	}

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:950:5: variable_declarators[$type.thetext, false] ';'
                	        {
                	        	PushFollow(FOLLOW_variable_declarators_in_event_declaration5091);
                	        	variable_declarators(type22, false);
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,SEMI,FOLLOW_SEMI_in_event_declaration5096); if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing event declaration: " + ((member_name23 != null) ? member_name23.name : default(string))); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "event_declaration"


        // $ANTLR start "event_modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:953:1: event_modifiers : ( modifier )+ ;
        public void event_modifiers() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:953:16: ( ( modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:954:2: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:954:2: ( modifier )+
                	int cnt171 = 0;
                	do 
                	{
                	    int alt171 = 2;
                	    int LA171_0 = input.LA(1);

                	    if ( ((LA171_0 >= PUBLIC && LA171_0 <= STATIC) || LA171_0 == 194 || (LA171_0 >= 197 && LA171_0 <= 204)) )
                	    {
                	        alt171 = 1;
                	    }


                	    switch (alt171) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:954:2: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_event_modifiers5118);
                			    	modifier();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt171 >= 1 ) goto loop171;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee171 =
                		                new EarlyExitException(171, input);
                		            throw eee171;
                	    }
                	    cnt171++;
                	} while (true);

                	loop171:
                		;	// Stops C# compiler whining that label 'loop171' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "event_modifiers"


        // $ANTLR start "event_accessor_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:955:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
        public void event_accessor_declarations() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:955:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:2: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:2: ( attributes )?
                	int alt172 = 2;
                	int LA172_0 = input.LA(1);

                	if ( (LA172_0 == OPEN_BRACKET) )
                	{
                	    alt172 = 1;
                	}
                	switch (alt172) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations5127);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:16: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
                	int alt175 = 2;
                	int LA175_0 = input.LA(1);

                	if ( (LA175_0 == 249) )
                	{
                	    alt175 = 1;
                	}
                	else if ( (LA175_0 == 250) )
                	{
                	    alt175 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d175s0 =
                	        new NoViableAltException("", 175, 0, input);

                	    throw nvae_d175s0;
                	}
                	switch (alt175) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:17: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:18: add_accessor_declaration ( attributes )? remove_accessor_declaration
                	        	{
                	        		PushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations5134);
                	        		add_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return ;
                	        		// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:45: ( attributes )?
                	        		int alt173 = 2;
                	        		int LA173_0 = input.LA(1);

                	        		if ( (LA173_0 == OPEN_BRACKET) )
                	        		{
                	        		    alt173 = 1;
                	        		}
                	        		switch (alt173) 
                	        		{
                	        		    case 1 :
                	        		        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:956:45: attributes
                	        		        {
                	        		        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations5138);
                	        		        	attributes();
                	        		        	state._fsp--;
                	        		        	if (state.failed) return ;

                	        		        }
                	        		        break;

                	        		}

                	        		PushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations5143);
                	        		remove_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return ;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:957:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:957:18: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:957:19: remove_accessor_declaration ( attributes )? add_accessor_declaration
                	        	{
                	        		PushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations5164);
                	        		remove_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return ;
                	        		// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:957:49: ( attributes )?
                	        		int alt174 = 2;
                	        		int LA174_0 = input.LA(1);

                	        		if ( (LA174_0 == OPEN_BRACKET) )
                	        		{
                	        		    alt174 = 1;
                	        		}
                	        		switch (alt174) 
                	        		{
                	        		    case 1 :
                	        		        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:957:49: attributes
                	        		        {
                	        		        	PushFollow(FOLLOW_attributes_in_event_accessor_declarations5168);
                	        		        	attributes();
                	        		        	state._fsp--;
                	        		        	if (state.failed) return ;

                	        		        }
                	        		        break;

                	        		}

                	        		PushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations5173);
                	        		add_accessor_declaration();
                	        		state._fsp--;
                	        		if (state.failed) return ;

                	        	}


                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "event_accessor_declarations"


        // $ANTLR start "add_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:958:1: add_accessor_declaration : 'add' block ;
        public void add_accessor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:958:25: ( 'add' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:959:2: 'add' block
                {
                	Match(input,249,FOLLOW_249_in_add_accessor_declaration5183); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_add_accessor_declaration5187);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "add_accessor_declaration"


        // $ANTLR start "remove_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:960:1: remove_accessor_declaration : 'remove' block ;
        public void remove_accessor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:960:28: ( 'remove' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:961:2: 'remove' block
                {
                	Match(input,250,FOLLOW_250_in_remove_accessor_declaration5195); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_remove_accessor_declaration5199);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "remove_accessor_declaration"

        protected class enum_declaration_scope 
        {
            protected internal String baseType;
        }
        protected Stack enum_declaration_stack = new Stack();


        // $ANTLR start "enum_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:966:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
        public void enum_declaration() // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());
            enum_declaration_stack.Push(new enum_declaration_scope());
            TemplateExtracter.identifier_return identifier24 = default(TemplateExtracter.identifier_return);

            TemplateExtracter.enum_base_return enum_base25 = default(TemplateExtracter.enum_base_return);



                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                TypeRepTemplate eenum = Cfg.EnumsAsNumericConsts ? (TypeRepTemplate)new ClassRepTemplate() : (TypeRepTemplate)new EnumRepTemplate();
                ((enum_declaration_scope)enum_declaration_stack.Peek()).baseType =  "System.Int32";
                string javatype = "int";

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:978:1: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:979:2: 'enum' identifier ( enum_base )? enum_body ( ';' )?
                {
                	Match(input,ENUM,FOLLOW_ENUM_in_enum_declaration5226); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_enum_declaration5230);
                	identifier24 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:979:24: ( enum_base )?
                	int alt176 = 2;
                	int LA176_0 = input.LA(1);

                	if ( (LA176_0 == 211) )
                	{
                	    alt176 = 1;
                	}
                	switch (alt176) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:979:24: enum_base
                	        {
                	        	PushFollow(FOLLOW_enum_base_in_enum_declaration5234);
                	        	enum_base25 = enum_base();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   
                	              DebugDetail("Processing enum: " + ((identifier24 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier24.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier24.Start)) : null));
                	              eenum.TypeName = NSPrefix(ParentNameSpace) + ((identifier24 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier24.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier24.Start)) : null);
                	              // Nested types can see things in this space
                	              ((NSContext_scope)NSContext_stack.Peek()).searchpath.Add(eenum.TypeName);
                	              ((NSContext_scope)NSContext_stack.Peek()).currentNS =  eenum.TypeName;
                	              ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep =  eenum;
                	              AppEnv[eenum.TypeName] = eenum;
                	              eenum.Uses = this.CollectUses;
                	              eenum.Aliases = this.CollectAliases;
                	              eenum.Imports = new string[] {NSPrefix(ParentNameSpace) + ((identifier24 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier24.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier24.Start)) : null)};
                	              if (Cfg.EnumsAsNumericConsts) {
                	                 if (!String.IsNullOrEmpty(((enum_base25 != null) ? enum_base25.thetext : default(string)))) {
                	                    ((enum_declaration_scope)enum_declaration_stack.Peek()).baseType =  ((enum_base25 != null) ? enum_base25.thetext : default(string));
                	                    javatype = ((enum_base25 != null) ? enum_base25.javatype : default(string));
                	                 }
                	                 eenum.Java = javatype;
                	                 eenum.Inherits = new String[] { "System.EnumAsNumber" };
                	              }
                	          
                	}
                	PushFollow(FOLLOW_enum_body_in_enum_declaration5253);
                	enum_body();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1000:17: ( ';' )?
                	int alt177 = 2;
                	int LA177_0 = input.LA(1);

                	if ( (LA177_0 == SEMI) )
                	{
                	    alt177 = 1;
                	}
                	switch (alt177) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1000:17: ';'
                	        {
                	        	Match(input,SEMI,FOLLOW_SEMI_in_enum_declaration5257); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();
                enum_declaration_stack.Pop();
            }
            return ;
        }
        // $ANTLR end "enum_declaration"

        public class enum_base_return : TreeRuleReturnScope
        {
            public string thetext;
            public string javatype;
        };

        // $ANTLR start "enum_base"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1001:1: enum_base returns [string thetext, string javatype] : ':' integral_type ;
        public TemplateExtracter.enum_base_return enum_base() // throws RecognitionException [1]
        {   
            TemplateExtracter.enum_base_return retval = new TemplateExtracter.enum_base_return();
            retval.start = input.LT(1);

            TemplateExtracter.integral_type_return integral_type26 = default(TemplateExtracter.integral_type_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1001:52: ( ':' integral_type )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1002:2: ':' integral_type
                {
                	Match(input,211,FOLLOW_211_in_enum_base5270); if (state.failed) return retval;
                	PushFollow(FOLLOW_integral_type_in_enum_base5274);
                	integral_type26 = integral_type();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   retval.thetext =  ((integral_type26 != null) ? integral_type26.thetext : default(string)); retval.javatype =  ((integral_type26 != null) ? integral_type26.javatype : default(string)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "enum_base"


        // $ANTLR start "enum_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1003:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
        public void enum_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1003:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1004:2: '{' ( enum_member_declarations ( ',' )? )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_enum_body5284); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1004:6: ( enum_member_declarations ( ',' )? )?
                	int alt179 = 2;
                	int LA179_0 = input.LA(1);

                	if ( (LA179_0 == OPEN_BRACKET || LA179_0 == IDENTIFIER || (LA179_0 >= ELIF && LA179_0 <= UNDEF) || LA179_0 == 195 || LA179_0 == 221 || (LA179_0 >= 224 && LA179_0 <= 239) || (LA179_0 >= 241 && LA179_0 <= 244) || (LA179_0 >= 247 && LA179_0 <= 250) || LA179_0 == 256 || (LA179_0 >= 263 && LA179_0 <= 264) || LA179_0 == 274 || LA179_0 == 277) )
                	{
                	    alt179 = 1;
                	}
                	switch (alt179) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1004:7: enum_member_declarations ( ',' )?
                	        {
                	        	PushFollow(FOLLOW_enum_member_declarations_in_enum_body5287);
                	        	enum_member_declarations();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1004:32: ( ',' )?
                	        	int alt178 = 2;
                	        	int LA178_0 = input.LA(1);

                	        	if ( (LA178_0 == COMMA) )
                	        	{
                	        	    alt178 = 1;
                	        	}
                	        	switch (alt178) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1004:32: ','
                	        	        {
                	        	        	Match(input,COMMA,FOLLOW_COMMA_in_enum_body5289); if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_enum_body5296); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "enum_body"


        // $ANTLR start "enum_member_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1005:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
        public void enum_member_declarations() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1005:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1006:2: enum_member_declaration ( ',' enum_member_declaration )*
                {
                	PushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations5304);
                	enum_member_declaration();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1006:26: ( ',' enum_member_declaration )*
                	do 
                	{
                	    int alt180 = 2;
                	    int LA180_0 = input.LA(1);

                	    if ( (LA180_0 == COMMA) )
                	    {
                	        int LA180_1 = input.LA(2);

                	        if ( (LA180_1 == OPEN_BRACKET || LA180_1 == IDENTIFIER || (LA180_1 >= ELIF && LA180_1 <= UNDEF) || LA180_1 == 195 || LA180_1 == 221 || (LA180_1 >= 224 && LA180_1 <= 239) || (LA180_1 >= 241 && LA180_1 <= 244) || (LA180_1 >= 247 && LA180_1 <= 250) || LA180_1 == 256 || (LA180_1 >= 263 && LA180_1 <= 264) || LA180_1 == 274 || LA180_1 == 277) )
                	        {
                	            alt180 = 1;
                	        }


                	    }


                	    switch (alt180) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1006:27: ',' enum_member_declaration
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_enum_member_declarations5307); if (state.failed) return ;
                			    	PushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations5309);
                			    	enum_member_declaration();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop180;
                	    }
                	} while (true);

                	loop180:
                		;	// Stops C# compiler whining that label 'loop180' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "enum_member_declarations"


        // $ANTLR start "enum_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1007:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
        public void enum_member_declaration() // throws RecognitionException [1]
        {   
            TemplateExtracter.identifier_return identifier27 = default(TemplateExtracter.identifier_return);

            TemplateExtracter.expression_return expression28 = default(TemplateExtracter.expression_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1007:24: ( ( attributes )? identifier ( '=' expression )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1008:2: ( attributes )? identifier ( '=' expression )?
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1008:2: ( attributes )?
                	int alt181 = 2;
                	int LA181_0 = input.LA(1);

                	if ( (LA181_0 == OPEN_BRACKET) )
                	{
                	    alt181 = 1;
                	}
                	switch (alt181) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1008:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_enum_member_declaration5319);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_identifier_in_enum_member_declaration5324);
                	identifier27 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1008:29: ( '=' expression )?
                	int alt182 = 2;
                	int LA182_0 = input.LA(1);

                	if ( (LA182_0 == ASSIGN) )
                	{
                	    alt182 = 1;
                	}
                	switch (alt182) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1008:30: '=' expression
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_enum_member_declaration5329); if (state.failed) return ;
                	        	PushFollow(FOLLOW_expression_in_enum_member_declaration5333);
                	        	expression28 = expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   if (Cfg.EnumsAsNumericConsts) {
                	              ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Fields.Add(new FieldRepTemplate(((enum_declaration_scope)enum_declaration_stack.Peek()).baseType, ((identifier27 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier27.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier27.Start)) : null))); 
                	           }
                	           else {
                	              ((EnumRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Members.Add(new EnumMemberRepTemplate(((identifier27 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier27.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier27.Start)) : null), ((expression28 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(expression28.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(expression28.Start)) : null))); 
                	           } 
                	        
                	}
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing enum member: " + ((identifier27 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier27.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier27.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "enum_member_declaration"

        public class integral_type_return : TreeRuleReturnScope
        {
            public string thetext;
            public string javatype;
        };

        // $ANTLR start "integral_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1022:1: integral_type returns [string thetext, string javatype] : ( 'byte' | 'char' | 'int' | 'long' | 'sbyte' | 'short' | 'uint' | 'ulong' | 'ushort' );
        public TemplateExtracter.integral_type_return integral_type() // throws RecognitionException [1]
        {   
            TemplateExtracter.integral_type_return retval = new TemplateExtracter.integral_type_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1022:56: ( 'byte' | 'char' | 'int' | 'long' | 'sbyte' | 'short' | 'uint' | 'ulong' | 'ushort' )
                int alt183 = 9;
                switch ( input.LA(1) ) 
                {
                case BYTE:
                	{
                    alt183 = 1;
                    }
                    break;
                case CHAR:
                	{
                    alt183 = 2;
                    }
                    break;
                case INT:
                	{
                    alt183 = 3;
                    }
                    break;
                case LONG:
                	{
                    alt183 = 4;
                    }
                    break;
                case 251:
                	{
                    alt183 = 5;
                    }
                    break;
                case SHORT:
                	{
                    alt183 = 6;
                    }
                    break;
                case 253:
                	{
                    alt183 = 7;
                    }
                    break;
                case 254:
                	{
                    alt183 = 8;
                    }
                    break;
                case 252:
                	{
                    alt183 = 9;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d183s0 =
                	        new NoViableAltException("", 183, 0, input);

                	    throw nvae_d183s0;
                }

                switch (alt183) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1023:7: 'byte'
                        {
                        	Match(input,BYTE,FOLLOW_BYTE_in_integral_type5376); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.Byte"; retval.javatype =  "byte"; 
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1024:7: 'char'
                        {
                        	Match(input,CHAR,FOLLOW_CHAR_in_integral_type5393); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.Char"; retval.javatype =  "char"; 
                        	}

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1025:7: 'int'
                        {
                        	Match(input,INT,FOLLOW_INT_in_integral_type5407); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.Int32"; retval.javatype =  "int"; 
                        	}

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1026:7: 'long'
                        {
                        	Match(input,LONG,FOLLOW_LONG_in_integral_type5424); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.Int64"; retval.javatype =  "long"; 
                        	}

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1027:7: 'sbyte'
                        {
                        	Match(input,251,FOLLOW_251_in_integral_type5438); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.SByte"; retval.javatype =  "byte"; 
                        	}

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1028:4: 'short'
                        {
                        	Match(input,SHORT,FOLLOW_SHORT_in_integral_type5448); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.Int16"; retval.javatype =  "short"; 
                        	}

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1029:7: 'uint'
                        {
                        	Match(input,253,FOLLOW_253_in_integral_type5461); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.UInt32"; retval.javatype =  "int"; 
                        	}

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1030:7: 'ulong'
                        {
                        	Match(input,254,FOLLOW_254_in_integral_type5475); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.UInt64"; retval.javatype =  "long"; 
                        	}

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1031:7: 'ushort'
                        {
                        	Match(input,252,FOLLOW_252_in_integral_type5488); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  "System.UInt16"; retval.javatype =  "short"; 
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "integral_type"


        // $ANTLR start "delegate_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1035:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
        public void delegate_declaration() // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());

            TemplateExtracter.identifier_return identifier29 = default(TemplateExtracter.identifier_return);

            List<string> variant_generic_parameter_list30 = default(List<string>);

            string return_type31 = default(string);

            TemplateExtracter.formal_parameter_list_return formal_parameter_list32 = default(TemplateExtracter.formal_parameter_list_return);



                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                DelegateRepTemplate dlegate = new DelegateRepTemplate();
                ClassRepTemplate multiDelegateClass = new ClassRepTemplate();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1043:1: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1044:2: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
                {
                	Match(input,218,FOLLOW_218_in_delegate_declaration5517); if (state.failed) return ;
                	PushFollow(FOLLOW_return_type_in_delegate_declaration5521);
                	return_type31 = return_type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_delegate_declaration5525);
                	identifier29 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1044:41: ( variant_generic_parameter_list )?
                	int alt184 = 2;
                	int LA184_0 = input.LA(1);

                	if ( (LA184_0 == LTHAN) )
                	{
                	    alt184 = 1;
                	}
                	switch (alt184) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1044:41: variant_generic_parameter_list
                	        {
                	        	PushFollow(FOLLOW_variant_generic_parameter_list_in_delegate_declaration5528);
                	        	variant_generic_parameter_list30 = variant_generic_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,LPAREN,FOLLOW_LPAREN_in_delegate_declaration5536); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1045:9: ( formal_parameter_list )?
                	int alt185 = 2;
                	int LA185_0 = input.LA(1);

                	if ( ((LA185_0 >= OBJECT && LA185_0 <= THIS) || LA185_0 == OPEN_BRACKET || (LA185_0 >= BOOL && LA185_0 <= IDENTIFIER) || (LA185_0 >= ELIF && LA185_0 <= UNDEF) || LA185_0 == 195 || LA185_0 == 206 || (LA185_0 >= 212 && LA185_0 <= 213) || LA185_0 == 221 || (LA185_0 >= 224 && LA185_0 <= 239) || (LA185_0 >= 241 && LA185_0 <= 244) || (LA185_0 >= 247 && LA185_0 <= 254) || (LA185_0 >= 256 && LA185_0 <= 257) || (LA185_0 >= 263 && LA185_0 <= 264) || (LA185_0 >= 274 && LA185_0 <= 277)) )
                	{
                	    alt185 = 1;
                	}
                	switch (alt185) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1045:9: formal_parameter_list
                	        {
                	        	PushFollow(FOLLOW_formal_parameter_list_in_delegate_declaration5540);
                	        	formal_parameter_list32 = formal_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_delegate_declaration5545); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1045:40: ( type_parameter_constraints_clauses )?
                	int alt186 = 2;
                	int LA186_0 = input.LA(1);

                	if ( (LA186_0 == 236) )
                	{
                	    alt186 = 1;
                	}
                	switch (alt186) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1045:40: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration5549);
                	        	type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_delegate_declaration5554); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   
                	              DebugDetail("Processing delegate: " + ((identifier29 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier29.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier29.Start)) : null));

                	              // Add a class for the MultiDelegateClass that we will be generating
                	              String genericNameSpace = NSPrefix(ParentNameSpace) + mkGenericTypeAlias("__Multi"+((identifier29 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier29.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier29.Start)) : null), variant_generic_parameter_list30);
                	              multiDelegateClass.TypeName = NSPrefix(ParentNameSpace) + "__Multi" + ((identifier29 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier29.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier29.Start)) : null);
                	              String delIfaceName = mkTypeString(NSPrefix(ParentNameSpace) + ((identifier29 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier29.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier29.Start)) : null), variant_generic_parameter_list30);
                	              multiDelegateClass.Inherits = new String[] { delIfaceName };
                	              if (variant_generic_parameter_list30 != null && variant_generic_parameter_list30.Count > 0) {
                	                  multiDelegateClass.TypeParams = variant_generic_parameter_list30.ToArray();
                	              }
                	              MethodRepTemplate invokeMethodRep = new MethodRepTemplate(return_type31, "Invoke", null, ((formal_parameter_list32 != null) ? formal_parameter_list32.paramlist : default(List<ParamRepTemplate>)));
                	              invokeMethodRep.JavaName = rewriteMethodName(invokeMethodRep.Name);
                	              invokeMethodRep.ParamArray = ((formal_parameter_list32 != null) ? formal_parameter_list32.paramarr : default(ParamArrayRepTemplate));
                	              multiDelegateClass.Methods.Add(invokeMethodRep);
                	              MethodRepTemplate getInvListMethodRep = new MethodRepTemplate("System.Collections.Generic.List*[" + delIfaceName + "]*", "GetInvocationList", null, null);
                	              getInvListMethodRep.JavaName = rewriteMethodName(getInvListMethodRep.Name);
                	              multiDelegateClass.Methods.Add(getInvListMethodRep);
                	              AppEnv[genericNameSpace] = multiDelegateClass;
                	              multiDelegateClass.Uses = this.CollectUses;
                	              multiDelegateClass.Aliases = this.CollectAliases;
                	              multiDelegateClass.Imports = new string[] {multiDelegateClass.TypeName};

                	              // Add Combine and Remove translations
                	              MethodRepTemplate adder = new MethodRepTemplate();
                	              adder.Name = "Combine";
                	              adder.JavaName = rewriteMethodName(adder.Name);
                	              if (variant_generic_parameter_list30 != null && variant_generic_parameter_list30.Count > 0) {
                	                  adder.TypeParams = variant_generic_parameter_list30.ToArray();
                	              }
                	              ParamRepTemplate param = new ParamRepTemplate();
                	              param.Name = "a";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              adder.Params.Add(param);
                	              param = new ParamRepTemplate();
                	              param.Name = "b";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              adder.Params.Add(param);

                	              adder.Return = new TypeRepRef(delIfaceName);
                	              adder.IsStatic = true;
                	              adder.SurroundingType = multiDelegateClass;
                	              multiDelegateClass.Methods.Add(adder);

                	              MethodRepTemplate remover = new MethodRepTemplate();
                	              remover.Name = "Remove";
                	              remover.JavaName = rewriteMethodName(remover.Name);
                	              if (variant_generic_parameter_list30 != null && variant_generic_parameter_list30.Count > 0) {
                	                  remover.TypeParams = variant_generic_parameter_list30.ToArray();
                	              }
                	              param = new ParamRepTemplate();
                	              param.Name = "a";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              remover.Params.Add(param);
                	              param = new ParamRepTemplate();
                	              param.Name = "b";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              remover.Params.Add(param);

                	              remover.Return = new TypeRepRef(delIfaceName);
                	              remover.IsStatic = true;
                	              remover.SurroundingType = multiDelegateClass;
                	              multiDelegateClass.Methods.Add(remover);

                	              // Set up delegate
                	              genericNameSpace = NSPrefix(ParentNameSpace) + mkGenericTypeAlias(((identifier29 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier29.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier29.Start)) : null), variant_generic_parameter_list30);
                	              dlegate.TypeName = NSPrefix(ParentNameSpace) + ((identifier29 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier29.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier29.Start)) : null);
                	              if (variant_generic_parameter_list30 != null && variant_generic_parameter_list30.Count > 0) {
                	                  dlegate.TypeParams = variant_generic_parameter_list30.ToArray();
                	              }
                	              dlegate.Invoke = new InvokeRepTemplate(return_type31, "Invoke", null, ((formal_parameter_list32 != null) ? formal_parameter_list32.paramlist : default(List<ParamRepTemplate>)));
                	              dlegate.Invoke.ParamArray = ((formal_parameter_list32 != null) ? formal_parameter_list32.paramarr : default(ParamArrayRepTemplate));
                	              dlegate.Invoke.JavaName = rewriteMethodName(dlegate.Invoke.Name);
                	              AppEnv[genericNameSpace] = dlegate;
                	              dlegate.Uses = this.CollectUses;
                	              dlegate.Aliases = this.CollectAliases;
                	              dlegate.Imports = new string[] {dlegate.TypeName};
                	              // Add Combine and Remove translations
                	              adder = new MethodRepTemplate();
                	              adder.Name = "Combine";
                	              adder.JavaName = rewriteMethodName(adder.Name);
                	              if (variant_generic_parameter_list30 != null && variant_generic_parameter_list30.Count > 0) {
                	                  adder.TypeParams = variant_generic_parameter_list30.ToArray();
                	              }
                	              param = new ParamRepTemplate();
                	              param.Name = "a";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              adder.Params.Add(param);
                	              param = new ParamRepTemplate();
                	              param.Name = "b";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              adder.Params.Add(param);

                	              adder.Return = new TypeRepRef(delIfaceName);
                	              adder.IsStatic = true;
                	              adder.SurroundingType = multiDelegateClass;
                	              dlegate.Methods.Add(adder);

                	              remover = new MethodRepTemplate();
                	              remover.Name = "Remove";
                	              remover.JavaName = rewriteMethodName(remover.Name);
                	              if (variant_generic_parameter_list30 != null && variant_generic_parameter_list30.Count > 0) {
                	                  remover.TypeParams = variant_generic_parameter_list30.ToArray();
                	              }
                	              param = new ParamRepTemplate();
                	              param.Name = "a";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              remover.Params.Add(param);
                	              param = new ParamRepTemplate();
                	              param.Name = "b";
                	              param.Type = new TypeRepRef(delIfaceName);
                	              remover.Params.Add(param);

                	              remover.Return = new TypeRepRef(delIfaceName);
                	              remover.IsStatic = true;
                	              remover.SurroundingType = multiDelegateClass;
                	              dlegate.Methods.Add(remover);
                	          
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();

            }
            return ;
        }
        // $ANTLR end "delegate_declaration"


        // $ANTLR start "delegate_modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1165:1: delegate_modifiers : ( modifier )+ ;
        public void delegate_modifiers() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1165:19: ( ( modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1166:2: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1166:2: ( modifier )+
                	int cnt187 = 0;
                	do 
                	{
                	    int alt187 = 2;
                	    int LA187_0 = input.LA(1);

                	    if ( ((LA187_0 >= PUBLIC && LA187_0 <= STATIC) || LA187_0 == 194 || (LA187_0 >= 197 && LA187_0 <= 204)) )
                	    {
                	        alt187 = 1;
                	    }


                	    switch (alt187) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1166:2: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_delegate_modifiers5574);
                			    	modifier();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt187 >= 1 ) goto loop187;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee187 =
                		                new EarlyExitException(187, input);
                		            throw eee187;
                	    }
                	    cnt187++;
                	} while (true);

                	loop187:
                		;	// Stops C# compiler whining that label 'loop187' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "delegate_modifiers"


        // $ANTLR start "variant_generic_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1168:1: variant_generic_parameter_list returns [List<string> tyargs] : '<' variant_type_parameters[$tyargs] '>' ;
        public List<string> variant_generic_parameter_list() // throws RecognitionException [1]
        {   
            List<string> tyargs = default(List<string>);


                tyargs =  new List<string>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1171:2: ( '<' variant_type_parameters[$tyargs] '>' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1172:2: '<' variant_type_parameters[$tyargs] '>'
                {
                	Match(input,LTHAN,FOLLOW_LTHAN_in_variant_generic_parameter_list5593); if (state.failed) return tyargs;
                	PushFollow(FOLLOW_variant_type_parameters_in_variant_generic_parameter_list5597);
                	variant_type_parameters(tyargs);
                	state._fsp--;
                	if (state.failed) return tyargs;
                	Match(input,GT,FOLLOW_GT_in_variant_generic_parameter_list5602); if (state.failed) return tyargs;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return tyargs;
        }
        // $ANTLR end "variant_generic_parameter_list"


        // $ANTLR start "variant_type_parameters"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1173:1: variant_type_parameters[List<String> tyargs] : v1= variant_type_variable_name ( ',' vn= variant_type_variable_name )* ;
        public void variant_type_parameters(List<String> tyargs) // throws RecognitionException [1]
        {   
            TemplateExtracter.variant_type_variable_name_return v1 = default(TemplateExtracter.variant_type_variable_name_return);

            TemplateExtracter.variant_type_variable_name_return vn = default(TemplateExtracter.variant_type_variable_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1173:46: (v1= variant_type_variable_name ( ',' vn= variant_type_variable_name )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1174:2: v1= variant_type_variable_name ( ',' vn= variant_type_variable_name )*
                {
                	PushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters5614);
                	v1 = variant_type_variable_name();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   tyargs.Add(((v1 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(v1.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(v1.Start)) : null)); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1174:58: ( ',' vn= variant_type_variable_name )*
                	do 
                	{
                	    int alt188 = 2;
                	    int LA188_0 = input.LA(1);

                	    if ( (LA188_0 == COMMA) )
                	    {
                	        alt188 = 1;
                	    }


                	    switch (alt188) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1174:59: ',' vn= variant_type_variable_name
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_variant_type_parameters5619); if (state.failed) return ;
                			    	PushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters5623);
                			    	vn = variant_type_variable_name();
                			    	state._fsp--;
                			    	if (state.failed) return ;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   tyargs.Add(((vn != null) ? input.TokenStream.ToString(
                			    	    input.TreeAdaptor.GetTokenStartIndex(vn.Start),
                			    	    input.TreeAdaptor.GetTokenStopIndex(vn.Start)) : null)); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop188;
                	    }
                	} while (true);

                	loop188:
                		;	// Stops C# compiler whining that label 'loop188' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variant_type_parameters"

        public class variant_type_variable_name_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "variant_type_variable_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1175:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
        public TemplateExtracter.variant_type_variable_name_return variant_type_variable_name() // throws RecognitionException [1]
        {   
            TemplateExtracter.variant_type_variable_name_return retval = new TemplateExtracter.variant_type_variable_name_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1175:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1176:2: ( attributes )? ( variance_annotation )? type_variable_name
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1176:2: ( attributes )?
                	int alt189 = 2;
                	int LA189_0 = input.LA(1);

                	if ( (LA189_0 == OPEN_BRACKET) )
                	{
                	    alt189 = 1;
                	}
                	switch (alt189) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1176:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_variant_type_variable_name5636);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1176:16: ( variance_annotation )?
                	int alt190 = 2;
                	int LA190_0 = input.LA(1);

                	if ( (LA190_0 == IN || LA190_0 == 212) )
                	{
                	    alt190 = 1;
                	}
                	switch (alt190) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1176:16: variance_annotation
                	        {
                	        	PushFollow(FOLLOW_variance_annotation_in_variant_type_variable_name5641);
                	        	variance_annotation();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_type_variable_name_in_variant_type_variable_name5646);
                	type_variable_name();
                	state._fsp--;
                	if (state.failed) return retval;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "variant_type_variable_name"


        // $ANTLR start "variance_annotation"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1177:1: variance_annotation : ( 'in' | 'out' );
        public void variance_annotation() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1177:20: ( 'in' | 'out' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( input.LA(1) == IN || input.LA(1) == 212 ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "variance_annotation"


        // $ANTLR start "type_parameter_constraints_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1180:1: type_parameter_constraints_clauses : ( type_parameter_constraints_clause )+ ;
        public void type_parameter_constraints_clauses() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1180:35: ( ( type_parameter_constraints_clause )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1181:2: ( type_parameter_constraints_clause )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1181:2: ( type_parameter_constraints_clause )+
                	int cnt191 = 0;
                	do 
                	{
                	    int alt191 = 2;
                	    int LA191_0 = input.LA(1);

                	    if ( (LA191_0 == 236) )
                	    {
                	        alt191 = 1;
                	    }


                	    switch (alt191) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1181:2: type_parameter_constraints_clause
                			    {
                			    	PushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5667);
                			    	type_parameter_constraints_clause();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt191 >= 1 ) goto loop191;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee191 =
                		                new EarlyExitException(191, input);
                		            throw eee191;
                	    }
                	    cnt191++;
                	} while (true);

                	loop191:
                		;	// Stops C# compiler whining that label 'loop191' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "type_parameter_constraints_clauses"


        // $ANTLR start "type_parameter_constraints_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1182:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
        public void type_parameter_constraints_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1182:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1183:2: 'where' type_variable_name ':' type_parameter_constraint_list
                {
                	Match(input,236,FOLLOW_236_in_type_parameter_constraints_clause5677); if (state.failed) return ;
                	PushFollow(FOLLOW_type_variable_name_in_type_parameter_constraints_clause5681);
                	type_variable_name();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,211,FOLLOW_211_in_type_parameter_constraints_clause5685); if (state.failed) return ;
                	PushFollow(FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause5689);
                	type_parameter_constraint_list();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "type_parameter_constraints_clause"


        // $ANTLR start "type_parameter_constraint_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1185:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
        public void type_parameter_constraint_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1185:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
                int alt195 = 3;
                switch ( input.LA(1) ) 
                {
                case 245:
                case 255:
                	{
                    alt195 = 1;
                    }
                    break;
                case IDENTIFIER:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 256:
                case 263:
                case 264:
                case 274:
                case 277:
                	{
                    alt195 = 2;
                    }
                    break;
                case 197:
                	{
                    alt195 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d195s0 =
                	        new NoViableAltException("", 195, 0, input);

                	    throw nvae_d195s0;
                }

                switch (alt195) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1186:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
                        {
                        	if ( input.LA(1) == 245 || input.LA(1) == 255 ) 
                        	{
                        	    input.Consume();
                        	    state.errorRecovery = false;state.failed = false;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        	    MismatchedSetException mse = new MismatchedSetException(null,input);
                        	    throw mse;
                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1186:28: ( ',' secondary_constraint_list )?
                        	int alt192 = 2;
                        	int LA192_0 = input.LA(1);

                        	if ( (LA192_0 == COMMA) )
                        	{
                        	    int LA192_1 = input.LA(2);

                        	    if ( (LA192_1 == IDENTIFIER || (LA192_1 >= ELIF && LA192_1 <= UNDEF) || LA192_1 == 195 || LA192_1 == 221 || (LA192_1 >= 224 && LA192_1 <= 239) || (LA192_1 >= 241 && LA192_1 <= 244) || (LA192_1 >= 247 && LA192_1 <= 250) || LA192_1 == 256 || (LA192_1 >= 263 && LA192_1 <= 264) || LA192_1 == 274 || LA192_1 == 277) )
                        	    {
                        	        alt192 = 1;
                        	    }
                        	}
                        	switch (alt192) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1186:29: ',' secondary_constraint_list
                        	        {
                        	        	Match(input,COMMA,FOLLOW_COMMA_in_type_parameter_constraint_list5763); if (state.failed) return ;
                        	        	PushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5767);
                        	        	secondary_constraint_list();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1186:65: ( ',' constructor_constraint )?
                        	int alt193 = 2;
                        	int LA193_0 = input.LA(1);

                        	if ( (LA193_0 == COMMA) )
                        	{
                        	    alt193 = 1;
                        	}
                        	switch (alt193) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1186:66: ',' constructor_constraint
                        	        {
                        	        	Match(input,COMMA,FOLLOW_COMMA_in_type_parameter_constraint_list5774); if (state.failed) return ;
                        	        	PushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list5778);
                        	        	constructor_constraint();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1187:4: secondary_constraint_list ( ',' constructor_constraint )?
                        {
                        	PushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5785);
                        	secondary_constraint_list();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1187:32: ( ',' constructor_constraint )?
                        	int alt194 = 2;
                        	int LA194_0 = input.LA(1);

                        	if ( (LA194_0 == COMMA) )
                        	{
                        	    alt194 = 1;
                        	}
                        	switch (alt194) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1187:33: ',' constructor_constraint
                        	        {
                        	        	Match(input,COMMA,FOLLOW_COMMA_in_type_parameter_constraint_list5790); if (state.failed) return ;
                        	        	PushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list5794);
                        	        	constructor_constraint();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1188:4: constructor_constraint
                        {
                        	PushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list5801);
                        	constructor_constraint();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "type_parameter_constraint_list"


        // $ANTLR start "secondary_constraint_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1193:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
        public void secondary_constraint_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1193:26: ( secondary_constraint ( ',' secondary_constraint )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1194:2: secondary_constraint ( ',' secondary_constraint )*
                {
                	PushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list5813);
                	secondary_constraint();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1194:23: ( ',' secondary_constraint )*
                	do 
                	{
                	    int alt196 = 2;
                	    int LA196_0 = input.LA(1);

                	    if ( (LA196_0 == COMMA) )
                	    {
                	        int LA196_1 = input.LA(2);

                	        if ( (LA196_1 == IDENTIFIER || (LA196_1 >= ELIF && LA196_1 <= UNDEF) || LA196_1 == 195 || LA196_1 == 221 || (LA196_1 >= 224 && LA196_1 <= 239) || (LA196_1 >= 241 && LA196_1 <= 244) || (LA196_1 >= 247 && LA196_1 <= 250) || LA196_1 == 256 || (LA196_1 >= 263 && LA196_1 <= 264) || LA196_1 == 274 || LA196_1 == 277) )
                	        {
                	            alt196 = 1;
                	        }


                	    }


                	    switch (alt196) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1194:24: ',' secondary_constraint
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_secondary_constraint_list5816); if (state.failed) return ;
                			    	PushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list5818);
                			    	secondary_constraint();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop196;
                	    }
                	} while (true);

                	loop196:
                		;	// Stops C# compiler whining that label 'loop196' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "secondary_constraint_list"


        // $ANTLR start "secondary_constraint"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1195:1: secondary_constraint : type_name ;
        public void secondary_constraint() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1195:21: ( type_name )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1196:2: type_name
                {
                	PushFollow(FOLLOW_type_name_in_secondary_constraint5828);
                	type_name();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "secondary_constraint"


        // $ANTLR start "type_variable_name"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1197:1: type_variable_name : identifier ;
        public void type_variable_name() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1197:19: ( identifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1198:2: identifier
                {
                	PushFollow(FOLLOW_identifier_in_type_variable_name5838);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "type_variable_name"


        // $ANTLR start "constructor_constraint"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1199:1: constructor_constraint : 'new' '(' ')' ;
        public void constructor_constraint() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1199:23: ( 'new' '(' ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1200:2: 'new' '(' ')'
                {
                	Match(input,197,FOLLOW_197_in_constructor_constraint5846); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_constructor_constraint5850); if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_constructor_constraint5854); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constructor_constraint"


        // $ANTLR start "return_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1201:1: return_type returns [string thetext] : ( type | v= 'void' );
        public string return_type() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            CommonTree v = null;
            string type33 = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1201:37: ( type | v= 'void' )
                int alt197 = 2;
                int LA197_0 = input.LA(1);

                if ( (LA197_0 == OBJECT || (LA197_0 >= BOOL && LA197_0 <= IDENTIFIER) || (LA197_0 >= ELIF && LA197_0 <= UNDEF) || LA197_0 == 195 || LA197_0 == 221 || (LA197_0 >= 224 && LA197_0 <= 239) || (LA197_0 >= 241 && LA197_0 <= 244) || (LA197_0 >= 247 && LA197_0 <= 254) || LA197_0 == 256 || (LA197_0 >= 263 && LA197_0 <= 264) || (LA197_0 >= 274 && LA197_0 <= 277)) )
                {
                    alt197 = 1;
                }
                else if ( (LA197_0 == 206) )
                {
                    int LA197_2 = input.LA(2);

                    if ( (LA197_2 == IDENTIFIER || (LA197_2 >= ELIF && LA197_2 <= UNDEF) || LA197_2 == 195 || LA197_2 == 221 || (LA197_2 >= 224 && LA197_2 <= 239) || (LA197_2 >= 241 && LA197_2 <= 244) || (LA197_2 >= 247 && LA197_2 <= 250) || LA197_2 == 256 || (LA197_2 >= 263 && LA197_2 <= 264) || LA197_2 == 274 || LA197_2 == 277) )
                    {
                        alt197 = 2;
                    }
                    else if ( (LA197_2 == STAR) )
                    {
                        alt197 = 1;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                        NoViableAltException nvae_d197s2 =
                            new NoViableAltException("", 197, 2, input);

                        throw nvae_d197s2;
                    }
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                    NoViableAltException nvae_d197s0 =
                        new NoViableAltException("", 197, 0, input);

                    throw nvae_d197s0;
                }
                switch (alt197) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1202:2: type
                        {
                        	PushFollow(FOLLOW_type_in_return_type5866);
                        	type33 = type();
                        	state._fsp--;
                        	if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  type33; 
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1203:5: v= 'void'
                        {
                        	v=(CommonTree)Match(input,206,FOLLOW_206_in_return_type5876); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  ((v != null) ? v.Text : null); 
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "return_type"

        public class formal_parameter_list_return : TreeRuleReturnScope
        {
            public List<ParamRepTemplate> paramlist;
            public ParamArrayRepTemplate paramarr;
        };

        // $ANTLR start "formal_parameter_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1204:1: formal_parameter_list returns [List<ParamRepTemplate> paramlist, ParamArrayRepTemplate paramarr] : p1= formal_parameter ( ',' pn= formal_parameter )* ;
        public TemplateExtracter.formal_parameter_list_return formal_parameter_list() // throws RecognitionException [1]
        {   
            TemplateExtracter.formal_parameter_list_return retval = new TemplateExtracter.formal_parameter_list_return();
            retval.start = input.LT(1);

            TemplateExtracter.formal_parameter_return p1 = default(TemplateExtracter.formal_parameter_return);

            TemplateExtracter.formal_parameter_return pn = default(TemplateExtracter.formal_parameter_return);



                retval.paramlist =  new List<ParamRepTemplate>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1207:2: (p1= formal_parameter ( ',' pn= formal_parameter )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1208:2: p1= formal_parameter ( ',' pn= formal_parameter )*
                {
                	PushFollow(FOLLOW_formal_parameter_in_formal_parameter_list5897);
                	p1 = formal_parameter();
                	state._fsp--;
                	if (state.failed) return retval;
                	if ( (state.backtracking==0) )
                	{
                	   if (((p1 != null) ? p1.param : default(ParamRepTemplate)) != null) retval.paramlist.Add(((p1 != null) ? p1.param : default(ParamRepTemplate))); if (((p1 != null) ? p1.paramarr : default(ParamArrayRepTemplate)) != null) retval.paramarr =  ((p1 != null) ? p1.paramarr : default(ParamArrayRepTemplate)); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1209:9: ( ',' pn= formal_parameter )*
                	do 
                	{
                	    int alt198 = 2;
                	    int LA198_0 = input.LA(1);

                	    if ( (LA198_0 == COMMA) )
                	    {
                	        alt198 = 1;
                	    }


                	    switch (alt198) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1209:10: ',' pn= formal_parameter
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_formal_parameter_list5911); if (state.failed) return retval;
                			    	PushFollow(FOLLOW_formal_parameter_in_formal_parameter_list5915);
                			    	pn = formal_parameter();
                			    	state._fsp--;
                			    	if (state.failed) return retval;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   if (((pn != null) ? pn.param : default(ParamRepTemplate)) != null) retval.paramlist.Add(((pn != null) ? pn.param : default(ParamRepTemplate))); if (((pn != null) ? pn.paramarr : default(ParamArrayRepTemplate)) != null) retval.paramarr =  ((pn != null) ? pn.paramarr : default(ParamArrayRepTemplate)); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop198;
                	    }
                	} while (true);

                	loop198:
                		;	// Stops C# compiler whining that label 'loop198' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "formal_parameter_list"

        public class formal_parameter_return : TreeRuleReturnScope
        {
            public ParamRepTemplate param;
            public ParamArrayRepTemplate paramarr;
        };

        // $ANTLR start "formal_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1211:1: formal_parameter returns [ParamRepTemplate param, ParamArrayRepTemplate paramarr] : ( ( attributes )? (fp= fixed_parameter | pa= parameter_array ) | a= '__arglist' );
        public TemplateExtracter.formal_parameter_return formal_parameter() // throws RecognitionException [1]
        {   
            TemplateExtracter.formal_parameter_return retval = new TemplateExtracter.formal_parameter_return();
            retval.start = input.LT(1);

            CommonTree a = null;
            ParamRepTemplate fp = default(ParamRepTemplate);

            ParamArrayRepTemplate pa = default(ParamArrayRepTemplate);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1211:82: ( ( attributes )? (fp= fixed_parameter | pa= parameter_array ) | a= '__arglist' )
                int alt201 = 2;
                int LA201_0 = input.LA(1);

                if ( ((LA201_0 >= OBJECT && LA201_0 <= THIS) || LA201_0 == OPEN_BRACKET || (LA201_0 >= BOOL && LA201_0 <= IDENTIFIER) || (LA201_0 >= ELIF && LA201_0 <= UNDEF) || LA201_0 == 195 || LA201_0 == 206 || (LA201_0 >= 212 && LA201_0 <= 213) || LA201_0 == 221 || (LA201_0 >= 224 && LA201_0 <= 239) || (LA201_0 >= 241 && LA201_0 <= 244) || (LA201_0 >= 247 && LA201_0 <= 254) || LA201_0 == 257 || (LA201_0 >= 263 && LA201_0 <= 264) || (LA201_0 >= 274 && LA201_0 <= 277)) )
                {
                    alt201 = 1;
                }
                else if ( (LA201_0 == 256) )
                {
                    int LA201_2 = input.LA(2);

                    if ( (LA201_2 == OPEN_BRACKET || LA201_2 == LTHAN || LA201_2 == STAR || LA201_2 == IDENTIFIER || LA201_2 == DOT || (LA201_2 >= ELIF && LA201_2 <= UNDEF) || LA201_2 == 195 || LA201_2 == 208 || (LA201_2 >= 220 && LA201_2 <= 221) || (LA201_2 >= 224 && LA201_2 <= 239) || (LA201_2 >= 241 && LA201_2 <= 244) || (LA201_2 >= 247 && LA201_2 <= 250) || LA201_2 == 256 || (LA201_2 >= 263 && LA201_2 <= 264) || LA201_2 == 274 || LA201_2 == 277) )
                    {
                        alt201 = 1;
                    }
                    else if ( (LA201_2 == CLOSE_BRACKET || LA201_2 == COMMA || LA201_2 == RPAREN) )
                    {
                        alt201 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        NoViableAltException nvae_d201s2 =
                            new NoViableAltException("", 201, 2, input);

                        throw nvae_d201s2;
                    }
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d201s0 =
                        new NoViableAltException("", 201, 0, input);

                    throw nvae_d201s0;
                }
                switch (alt201) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1212:2: ( attributes )? (fp= fixed_parameter | pa= parameter_array )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1212:2: ( attributes )?
                        	int alt199 = 2;
                        	int LA199_0 = input.LA(1);

                        	if ( (LA199_0 == OPEN_BRACKET) )
                        	{
                        	    alt199 = 1;
                        	}
                        	switch (alt199) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1212:2: attributes
                        	        {
                        	        	PushFollow(FOLLOW_attributes_in_formal_parameter5932);
                        	        	attributes();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;

                        	        }
                        	        break;

                        	}

                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1212:16: (fp= fixed_parameter | pa= parameter_array )
                        	int alt200 = 2;
                        	int LA200_0 = input.LA(1);

                        	if ( ((LA200_0 >= OBJECT && LA200_0 <= THIS) || (LA200_0 >= BOOL && LA200_0 <= IDENTIFIER) || (LA200_0 >= ELIF && LA200_0 <= UNDEF) || LA200_0 == 195 || LA200_0 == 206 || (LA200_0 >= 212 && LA200_0 <= 213) || LA200_0 == 221 || (LA200_0 >= 224 && LA200_0 <= 239) || (LA200_0 >= 241 && LA200_0 <= 244) || (LA200_0 >= 247 && LA200_0 <= 254) || LA200_0 == 256 || (LA200_0 >= 263 && LA200_0 <= 264) || (LA200_0 >= 274 && LA200_0 <= 277)) )
                        	{
                        	    alt200 = 1;
                        	}
                        	else if ( (LA200_0 == 257) )
                        	{
                        	    alt200 = 2;
                        	}
                        	else 
                        	{
                        	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                        	    NoViableAltException nvae_d200s0 =
                        	        new NoViableAltException("", 200, 0, input);

                        	    throw nvae_d200s0;
                        	}
                        	switch (alt200) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1212:17: fp= fixed_parameter
                        	        {
                        	        	PushFollow(FOLLOW_fixed_parameter_in_formal_parameter5940);
                        	        	fp = fixed_parameter();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   retval.param =  fp; 
                        	        	}

                        	        }
                        	        break;
                        	    case 2 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1212:62: pa= parameter_array
                        	        {
                        	        	PushFollow(FOLLOW_parameter_array_in_formal_parameter5948);
                        	        	pa = parameter_array();
                        	        	state._fsp--;
                        	        	if (state.failed) return retval;
                        	        	if ( (state.backtracking==0) )
                        	        	{
                        	        	   retval.paramarr =  pa; 
                        	        	}

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1213:4: a= '__arglist'
                        {
                        	a=(CommonTree)Match(input,256,FOLLOW_256_in_formal_parameter5959); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   Warning(((a != null) ? a.Line : 0), "[UNSUPPORTED] __arglist");  retval.param = new ParamRepTemplate("System.Object[]", "__arglist", false); 
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "formal_parameter"


        // $ANTLR start "fixed_parameters"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1214:1: fixed_parameters returns [List<ParamRepTemplate> paramlist] : p1= fixed_parameter ( ',' pn= fixed_parameter )* ;
        public List<ParamRepTemplate> fixed_parameters() // throws RecognitionException [1]
        {   
            List<ParamRepTemplate> paramlist = default(List<ParamRepTemplate>);

            ParamRepTemplate p1 = default(ParamRepTemplate);

            ParamRepTemplate pn = default(ParamRepTemplate);



                paramlist =  new List<ParamRepTemplate>();

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1217:2: (p1= fixed_parameter ( ',' pn= fixed_parameter )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1218:2: p1= fixed_parameter ( ',' pn= fixed_parameter )*
                {
                	PushFollow(FOLLOW_fixed_parameter_in_fixed_parameters5981);
                	p1 = fixed_parameter();
                	state._fsp--;
                	if (state.failed) return paramlist;
                	if ( (state.backtracking==0) )
                	{
                	   paramlist.Add(p1); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1218:53: ( ',' pn= fixed_parameter )*
                	do 
                	{
                	    int alt202 = 2;
                	    int LA202_0 = input.LA(1);

                	    if ( (LA202_0 == COMMA) )
                	    {
                	        alt202 = 1;
                	    }


                	    switch (alt202) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1218:54: ',' pn= fixed_parameter
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_fixed_parameters5987); if (state.failed) return paramlist;
                			    	PushFollow(FOLLOW_fixed_parameter_in_fixed_parameters5993);
                			    	pn = fixed_parameter();
                			    	state._fsp--;
                			    	if (state.failed) return paramlist;
                			    	if ( (state.backtracking==0) )
                			    	{
                			    	   paramlist.Add(pn); 
                			    	}

                			    }
                			    break;

                			default:
                			    goto loop202;
                	    }
                	} while (true);

                	loop202:
                		;	// Stops C# compiler whining that label 'loop202' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return paramlist;
        }
        // $ANTLR end "fixed_parameters"


        // $ANTLR start "fixed_parameter"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1220:1: fixed_parameter returns [ParamRepTemplate param] : (pm= parameter_modifier )? t= type i= identifier ( default_argument )? ;
        public ParamRepTemplate fixed_parameter() // throws RecognitionException [1]
        {   
            ParamRepTemplate param = default(ParamRepTemplate);

            TemplateExtracter.parameter_modifier_return pm = default(TemplateExtracter.parameter_modifier_return);

            string t = default(string);

            TemplateExtracter.identifier_return i = default(TemplateExtracter.identifier_return);



                bool isByRef = false;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1224:1: ( (pm= parameter_modifier )? t= type i= identifier ( default_argument )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1225:9: (pm= parameter_modifier )? t= type i= identifier ( default_argument )?
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1225:9: (pm= parameter_modifier )?
                	int alt203 = 2;
                	int LA203_0 = input.LA(1);

                	if ( (LA203_0 == THIS || (LA203_0 >= 212 && LA203_0 <= 213)) )
                	{
                	    alt203 = 1;
                	}
                	switch (alt203) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1225:10: pm= parameter_modifier
                	        {
                	        	PushFollow(FOLLOW_parameter_modifier_in_fixed_parameter6026);
                	        	pm = parameter_modifier();
                	        	state._fsp--;
                	        	if (state.failed) return param;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   isByRef = (((pm != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(pm.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(pm.Start)) : null) == "ref" || ((pm != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(pm.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(pm.Start)) : null) == "out");  
                	        	}

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_type_in_fixed_parameter6036);
                	t = type();
                	state._fsp--;
                	if (state.failed) return param;
                	PushFollow(FOLLOW_identifier_in_fixed_parameter6042);
                	i = identifier();
                	state._fsp--;
                	if (state.failed) return param;
                	if ( (state.backtracking==0) )
                	{
                	   param = new ParamRepTemplate(t, ((i != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(i.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(i.Start)) : null), isByRef); 
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1225:179: ( default_argument )?
                	int alt204 = 2;
                	int LA204_0 = input.LA(1);

                	if ( (LA204_0 == ASSIGN) )
                	{
                	    alt204 = 1;
                	}
                	switch (alt204) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1225:179: default_argument
                	        {
                	        	PushFollow(FOLLOW_default_argument_in_fixed_parameter6047);
                	        	default_argument();
                	        	state._fsp--;
                	        	if (state.failed) return param;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return param;
        }
        // $ANTLR end "fixed_parameter"


        // $ANTLR start "default_argument"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1227:1: default_argument : '=' expression ;
        public void default_argument() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1227:17: ( '=' expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1228:2: '=' expression
                {
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_default_argument6057); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_default_argument6059);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "default_argument"

        public class parameter_modifier_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "parameter_modifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1229:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
        public TemplateExtracter.parameter_modifier_return parameter_modifier() // throws RecognitionException [1]
        {   
            TemplateExtracter.parameter_modifier_return retval = new TemplateExtracter.parameter_modifier_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1229:19: ( 'ref' | 'out' | 'this' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( input.LA(1) == THIS || (input.LA(1) >= 212 && input.LA(1) <= 213) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "parameter_modifier"


        // $ANTLR start "parameter_array"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1231:1: parameter_array returns [ParamArrayRepTemplate param] : 'params' t= type i= identifier ;
        public ParamArrayRepTemplate parameter_array() // throws RecognitionException [1]
        {   
            ParamArrayRepTemplate param = default(ParamArrayRepTemplate);

            string t = default(string);

            TemplateExtracter.identifier_return i = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1231:54: ( 'params' t= type i= identifier )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1232:2: 'params' t= type i= identifier
                {
                	Match(input,257,FOLLOW_257_in_parameter_array6086); if (state.failed) return param;
                	PushFollow(FOLLOW_type_in_parameter_array6092);
                	t = type();
                	state._fsp--;
                	if (state.failed) return param;
                	PushFollow(FOLLOW_identifier_in_parameter_array6098);
                	i = identifier();
                	state._fsp--;
                	if (state.failed) return param;
                	if ( (state.backtracking==0) )
                	{
                	   param = new ParamArrayRepTemplate(t, ((i != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(i.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(i.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return param;
        }
        // $ANTLR end "parameter_array"


        // $ANTLR start "interface_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1235:1: interface_declaration[bool isPartial] : i= 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
        public void interface_declaration(bool isPartial) // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());

            CommonTree i = null;
            TemplateExtracter.identifier_return identifier34 = default(TemplateExtracter.identifier_return);

            List<string> variant_generic_parameter_list35 = default(List<string>);

            List<string> interface_base36 = default(List<string>);



                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                InterfaceRepTemplate iface = null;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1242:1: (i= 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1243:2: i= 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
                {
                	i=(CommonTree)Match(input,258,FOLLOW_258_in_interface_declaration6125); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_interface_declaration6129);
                	identifier34 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1243:31: ( variant_generic_parameter_list )?
                	int alt205 = 2;
                	int LA205_0 = input.LA(1);

                	if ( (LA205_0 == LTHAN) )
                	{
                	    alt205 = 1;
                	}
                	switch (alt205) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1243:31: variant_generic_parameter_list
                	        {
                	        	PushFollow(FOLLOW_variant_generic_parameter_list_in_interface_declaration6133);
                	        	variant_generic_parameter_list35 = variant_generic_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	   
                	              DebugDetail("Processing interface: " + ((identifier34 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier34.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier34.Start)) : null));
                	              String genericNameSpace = NSPrefix(ParentNameSpace) + mkGenericTypeAlias(((identifier34 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier34.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier34.Start)) : null), variant_generic_parameter_list35);
                	              TypeRepTemplate tmpTyRep;
                	              bool exists = AppEnv.TryGetValue(genericNameSpace, out tmpTyRep);
                	              if (exists && !isPartial) {
                	                    { Error(((i != null) ? i.Line : 0), "Found multiple definitions for " + genericNameSpace); }
                	              }
                	              if (exists) {
                	                 iface = tmpTyRep as InterfaceRepTemplate;
                	                 if (iface == null) {
                	                    { Error(((i != null) ? i.Line : 0), "Found conflicting type definitions for " + genericNameSpace); }
                	                    // This iface is not put in AppEnv so its just thrown away in this case
                	                    iface = new InterfaceRepTemplate();
                	                 }
                	              }
                	              else {
                	                 iface = new InterfaceRepTemplate();
                	                 AppEnv[genericNameSpace] = iface;
                	              }
                	              iface.TypeName = NSPrefix(ParentNameSpace) + ((identifier34 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier34.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier34.Start)) : null);
                	              if (variant_generic_parameter_list35 != null && variant_generic_parameter_list35.Count > 0) {
                	                  iface.TypeParams = variant_generic_parameter_list35.ToArray();
                	              }
                	              // Nested types can see things in this space
                	              ((NSContext_scope)NSContext_stack.Peek()).searchpath.Add(iface.TypeName);
                	              ((NSContext_scope)NSContext_stack.Peek()).currentNS =  iface.TypeName;
                	              ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep =  iface;
                	              iface.Uses = MergeArray(iface.Uses, this.CollectUses);
                	              iface.Aliases = MergeArray(iface.Aliases, this.CollectAliases);
                	              iface.Imports = new string[] {iface.TypeName};
                	          
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1276:6: ( interface_base )?
                	int alt206 = 2;
                	int LA206_0 = input.LA(1);

                	if ( (LA206_0 == 211) )
                	{
                	    alt206 = 1;
                	}
                	switch (alt206) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1276:7: interface_base
                	        {
                	        	PushFollow(FOLLOW_interface_base_in_interface_declaration6153);
                	        	interface_base36 = interface_base();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   iface.Inherits = MergeArray(interface_base36.ToArray(), iface.Inherits); 
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1277:9: ( type_parameter_constraints_clauses )?
                	int alt207 = 2;
                	int LA207_0 = input.LA(1);

                	if ( (LA207_0 == 236) )
                	{
                	    alt207 = 1;
                	}
                	switch (alt207) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1277:9: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration6171);
                	        	type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_interface_body_in_interface_declaration6176);
                	interface_body();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1277:64: ( ';' )?
                	int alt208 = 2;
                	int LA208_0 = input.LA(1);

                	if ( (LA208_0 == SEMI) )
                	{
                	    alt208 = 1;
                	}
                	switch (alt208) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1277:64: ';'
                	        {
                	        	Match(input,SEMI,FOLLOW_SEMI_in_interface_declaration6180); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();

            }
            return ;
        }
        // $ANTLR end "interface_declaration"


        // $ANTLR start "interface_modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1278:1: interface_modifiers : ( modifier )+ ;
        public void interface_modifiers() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1278:20: ( ( modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1279:2: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1279:2: ( modifier )+
                	int cnt209 = 0;
                	do 
                	{
                	    int alt209 = 2;
                	    int LA209_0 = input.LA(1);

                	    if ( ((LA209_0 >= PUBLIC && LA209_0 <= STATIC) || LA209_0 == 194 || (LA209_0 >= 197 && LA209_0 <= 204)) )
                	    {
                	        alt209 = 1;
                	    }


                	    switch (alt209) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1279:2: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_interface_modifiers6190);
                			    	modifier();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt209 >= 1 ) goto loop209;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee209 =
                		                new EarlyExitException(209, input);
                		            throw eee209;
                	    }
                	    cnt209++;
                	} while (true);

                	loop209:
                		;	// Stops C# compiler whining that label 'loop209' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_modifiers"


        // $ANTLR start "interface_base"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1280:1: interface_base returns [List<string> typeList] : ':' interface_type_list ;
        public List<string> interface_base() // throws RecognitionException [1]
        {   
            List<string> typeList = default(List<string>);

            List<string> interface_type_list37 = default(List<string>);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1280:47: ( ':' interface_type_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1281:5: ':' interface_type_list
                {
                	Match(input,211,FOLLOW_211_in_interface_base6207); if (state.failed) return typeList;
                	PushFollow(FOLLOW_interface_type_list_in_interface_base6209);
                	interface_type_list37 = interface_type_list();
                	state._fsp--;
                	if (state.failed) return typeList;
                	if ( (state.backtracking==0) )
                	{
                	   typeList =  interface_type_list37; 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return typeList;
        }
        // $ANTLR end "interface_base"


        // $ANTLR start "interface_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1282:1: interface_body : '{' ( interface_member_declarations )? '}' ;
        public void interface_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1282:15: ( '{' ( interface_member_declarations )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1283:2: '{' ( interface_member_declarations )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_body6219); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1283:8: ( interface_member_declarations )?
                	int alt210 = 2;
                	int LA210_0 = input.LA(1);

                	if ( ((LA210_0 >= PUBLIC && LA210_0 <= STATIC) || LA210_0 == OBJECT || LA210_0 == OPEN_BRACKET || (LA210_0 >= BOOL && LA210_0 <= IDENTIFIER) || (LA210_0 >= ELIF && LA210_0 <= UNDEF) || (LA210_0 >= 194 && LA210_0 <= 195) || (LA210_0 >= 197 && LA210_0 <= 204) || LA210_0 == 206 || LA210_0 == 221 || (LA210_0 >= 224 && LA210_0 <= 244) || (LA210_0 >= 247 && LA210_0 <= 254) || LA210_0 == 256 || (LA210_0 >= 263 && LA210_0 <= 264) || (LA210_0 >= 274 && LA210_0 <= 277)) )
                	{
                	    alt210 = 1;
                	}
                	switch (alt210) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1283:8: interface_member_declarations
                	        {
                	        	PushFollow(FOLLOW_interface_member_declarations_in_interface_body6223);
                	        	interface_member_declarations();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_body6228); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_body"


        // $ANTLR start "interface_member_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1284:1: interface_member_declarations : ( interface_member_declaration )+ ;
        public void interface_member_declarations() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1284:30: ( ( interface_member_declaration )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1285:2: ( interface_member_declaration )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1285:2: ( interface_member_declaration )+
                	int cnt211 = 0;
                	do 
                	{
                	    int alt211 = 2;
                	    int LA211_0 = input.LA(1);

                	    if ( ((LA211_0 >= PUBLIC && LA211_0 <= STATIC) || LA211_0 == OBJECT || LA211_0 == OPEN_BRACKET || (LA211_0 >= BOOL && LA211_0 <= IDENTIFIER) || (LA211_0 >= ELIF && LA211_0 <= UNDEF) || (LA211_0 >= 194 && LA211_0 <= 195) || (LA211_0 >= 197 && LA211_0 <= 204) || LA211_0 == 206 || LA211_0 == 221 || (LA211_0 >= 224 && LA211_0 <= 244) || (LA211_0 >= 247 && LA211_0 <= 254) || LA211_0 == 256 || (LA211_0 >= 263 && LA211_0 <= 264) || (LA211_0 >= 274 && LA211_0 <= 277)) )
                	    {
                	        alt211 = 1;
                	    }


                	    switch (alt211) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1285:2: interface_member_declaration
                			    {
                			    	PushFollow(FOLLOW_interface_member_declaration_in_interface_member_declarations6236);
                			    	interface_member_declaration();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt211 >= 1 ) goto loop211;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee211 =
                		                new EarlyExitException(211, input);
                		            throw eee211;
                	    }
                	    cnt211++;
                	} while (true);

                	loop211:
                		;	// Stops C# compiler whining that label 'loop211' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_member_declarations"


        // $ANTLR start "interface_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1286:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration[\"System.Void\"] | interface_event_declaration | rt= type ( ( member_name '(' )=> interface_method_declaration[$rt.thetext] | ( member_name '{' )=> interface_property_declaration[$rt.thetext] | interface_indexer_declaration[$rt.thetext] ) ) ;
        public void interface_member_declaration() // throws RecognitionException [1]
        {   
            string rt = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1286:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration[\"System.Void\"] | interface_event_declaration | rt= type ( ( member_name '(' )=> interface_method_declaration[$rt.thetext] | ( member_name '{' )=> interface_property_declaration[$rt.thetext] | interface_indexer_declaration[$rt.thetext] ) ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1287:2: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration[\"System.Void\"] | interface_event_declaration | rt= type ( ( member_name '(' )=> interface_method_declaration[$rt.thetext] | ( member_name '{' )=> interface_property_declaration[$rt.thetext] | interface_indexer_declaration[$rt.thetext] ) )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1287:2: ( attributes )?
                	int alt212 = 2;
                	int LA212_0 = input.LA(1);

                	if ( (LA212_0 == OPEN_BRACKET) )
                	{
                	    alt212 = 1;
                	}
                	switch (alt212) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1287:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_interface_member_declaration6245);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1287:17: ( modifiers )?
                	int alt213 = 2;
                	int LA213_0 = input.LA(1);

                	if ( ((LA213_0 >= PUBLIC && LA213_0 <= STATIC) || LA213_0 == 194 || (LA213_0 >= 197 && LA213_0 <= 204)) )
                	{
                	    alt213 = 1;
                	}
                	switch (alt213) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1287:17: modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_interface_member_declaration6251);
                	        	modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1288:3: ( 'void' interface_method_declaration[\"System.Void\"] | interface_event_declaration | rt= type ( ( member_name '(' )=> interface_method_declaration[$rt.thetext] | ( member_name '{' )=> interface_property_declaration[$rt.thetext] | interface_indexer_declaration[$rt.thetext] ) )
                	int alt215 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case 206:
                		{
                	    int LA215_1 = input.LA(2);

                	    if ( (LA215_1 == IDENTIFIER || (LA215_1 >= ELIF && LA215_1 <= UNDEF) || LA215_1 == 195 || LA215_1 == 221 || (LA215_1 >= 224 && LA215_1 <= 239) || (LA215_1 >= 241 && LA215_1 <= 244) || (LA215_1 >= 247 && LA215_1 <= 250) || LA215_1 == 256 || (LA215_1 >= 263 && LA215_1 <= 264) || LA215_1 == 274 || LA215_1 == 277) )
                	    {
                	        alt215 = 1;
                	    }
                	    else if ( (LA215_1 == STAR) )
                	    {
                	        alt215 = 3;
                	    }
                	    else 
                	    {
                	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        NoViableAltException nvae_d215s1 =
                	            new NoViableAltException("", 215, 1, input);

                	        throw nvae_d215s1;
                	    }
                	    }
                	    break;
                	case 240:
                		{
                	    alt215 = 2;
                	    }
                	    break;
                	case OBJECT:
                	case BOOL:
                	case BYTE:
                	case CHAR:
                	case SHORT:
                	case INT:
                	case LONG:
                	case FLOAT:
                	case DOUBLE:
                	case IDENTIFIER:
                	case ELIF:
                	case ENDIF:
                	case DEFINE:
                	case UNDEF:
                	case 195:
                	case 221:
                	case 224:
                	case 225:
                	case 226:
                	case 227:
                	case 228:
                	case 229:
                	case 230:
                	case 231:
                	case 232:
                	case 233:
                	case 234:
                	case 235:
                	case 236:
                	case 237:
                	case 238:
                	case 239:
                	case 241:
                	case 242:
                	case 243:
                	case 244:
                	case 247:
                	case 248:
                	case 249:
                	case 250:
                	case 251:
                	case 252:
                	case 253:
                	case 254:
                	case 256:
                	case 263:
                	case 264:
                	case 274:
                	case 275:
                	case 276:
                	case 277:
                		{
                	    alt215 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		    NoViableAltException nvae_d215s0 =
                		        new NoViableAltException("", 215, 0, input);

                		    throw nvae_d215s0;
                	}

                	switch (alt215) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1288:4: 'void' interface_method_declaration[\"System.Void\"]
                	        {
                	        	Match(input,206,FOLLOW_206_in_interface_member_declaration6257); if (state.failed) return ;
                	        	PushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration6261);
                	        	interface_method_declaration("System.Void");
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1289:5: interface_event_declaration
                	        {
                	        	PushFollow(FOLLOW_interface_event_declaration_in_interface_member_declaration6268);
                	        	interface_event_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1290:5: rt= type ( ( member_name '(' )=> interface_method_declaration[$rt.thetext] | ( member_name '{' )=> interface_property_declaration[$rt.thetext] | interface_indexer_declaration[$rt.thetext] )
                	        {
                	        	PushFollow(FOLLOW_type_in_interface_member_declaration6276);
                	        	rt = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1290:15: ( ( member_name '(' )=> interface_method_declaration[$rt.thetext] | ( member_name '{' )=> interface_property_declaration[$rt.thetext] | interface_indexer_declaration[$rt.thetext] )
                	        	int alt214 = 3;
                	        	switch ( input.LA(1) ) 
                	        	{
                	        	case IDENTIFIER:
                	        		{
                	        	    int LA214_1 = input.LA(2);

                	        	    if ( (LA214_1 == OPEN_BRACE) && (synpred28_TemplateExtracter()) )
                	        	    {
                	        	        alt214 = 2;
                	        	    }
                	        	    else if ( (LA214_1 == LTHAN) && (synpred27_TemplateExtracter()) )
                	        	    {
                	        	        alt214 = 1;
                	        	    }
                	        	    else if ( (LA214_1 == LPAREN) && (synpred27_TemplateExtracter()) )
                	        	    {
                	        	        alt214 = 1;
                	        	    }
                	        	    else 
                	        	    {
                	        	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        	        NoViableAltException nvae_d214s1 =
                	        	            new NoViableAltException("", 214, 1, input);

                	        	        throw nvae_d214s1;
                	        	    }
                	        	    }
                	        	    break;
                	        	case ELIF:
                	        	case ENDIF:
                	        	case DEFINE:
                	        	case UNDEF:
                	        	case 195:
                	        	case 221:
                	        	case 224:
                	        	case 225:
                	        	case 226:
                	        	case 227:
                	        	case 228:
                	        	case 229:
                	        	case 230:
                	        	case 231:
                	        	case 232:
                	        	case 233:
                	        	case 234:
                	        	case 235:
                	        	case 236:
                	        	case 237:
                	        	case 238:
                	        	case 239:
                	        	case 241:
                	        	case 242:
                	        	case 243:
                	        	case 244:
                	        	case 247:
                	        	case 248:
                	        	case 249:
                	        	case 250:
                	        	case 256:
                	        	case 263:
                	        	case 264:
                	        	case 274:
                	        	case 277:
                	        		{
                	        	    int LA214_2 = input.LA(2);

                	        	    if ( (LA214_2 == OPEN_BRACE) && (synpred28_TemplateExtracter()) )
                	        	    {
                	        	        alt214 = 2;
                	        	    }
                	        	    else if ( (LA214_2 == LTHAN) && (synpred27_TemplateExtracter()) )
                	        	    {
                	        	        alt214 = 1;
                	        	    }
                	        	    else if ( (LA214_2 == LPAREN) && (synpred27_TemplateExtracter()) )
                	        	    {
                	        	        alt214 = 1;
                	        	    }
                	        	    else 
                	        	    {
                	        	        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        	        NoViableAltException nvae_d214s2 =
                	        	            new NoViableAltException("", 214, 2, input);

                	        	        throw nvae_d214s2;
                	        	    }
                	        	    }
                	        	    break;
                	        	case THIS:
                	        		{
                	        	    alt214 = 3;
                	        	    }
                	        	    break;
                	        		default:
                	        		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        		    NoViableAltException nvae_d214s0 =
                	        		        new NoViableAltException("", 214, 0, input);

                	        		    throw nvae_d214s0;
                	        	}

                	        	switch (alt214) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1290:17: ( member_name '(' )=> interface_method_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration6292);
                	        	        	interface_method_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1291:14: ( member_name '{' )=> interface_property_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_property_declaration_in_interface_member_declaration6318);
                	        	        	interface_property_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 3 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1292:8: interface_indexer_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_indexer_declaration_in_interface_member_declaration6329);
                	        	        	interface_indexer_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_member_declaration"


        // $ANTLR start "interface_property_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1295:1: interface_property_declaration[string returnType] : identifier '{' interface_accessor_declarations '}' ;
        public void interface_property_declaration(string returnType) // throws RecognitionException [1]
        {   
            TemplateExtracter.identifier_return identifier38 = default(TemplateExtracter.identifier_return);

            TemplateExtracter.interface_accessor_declarations_return interface_accessor_declarations39 = default(TemplateExtracter.interface_accessor_declarations_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1295:51: ( identifier '{' interface_accessor_declarations '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1296:2: identifier '{' interface_accessor_declarations '}'
                {
                	PushFollow(FOLLOW_identifier_in_interface_property_declaration6349);
                	identifier38 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_property_declaration6353); if (state.failed) return ;
                	PushFollow(FOLLOW_interface_accessor_declarations_in_interface_property_declaration6357);
                	interface_accessor_declarations39 = interface_accessor_declarations();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_property_declaration6361); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   PropRepTemplate propRep = new PropRepTemplate(returnType, ((identifier38 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier38.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier38.Start)) : null));
                	              propRep.CanRead = ((interface_accessor_declarations39 != null) ? interface_accessor_declarations39.hasGetter : default(bool));
                	              propRep.CanWrite = ((interface_accessor_declarations39 != null) ? interface_accessor_declarations39.hasSetter : default(bool));
                	              ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Properties.Add(propRep); 
                	}
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing interface property declaration: " + ((identifier38 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier38.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier38.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_property_declaration"


        // $ANTLR start "interface_method_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1303:1: interface_method_declaration[string returnType] : identifier (gal= generic_argument_list )? '(' (fpl= formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
        public void interface_method_declaration(string returnType) // throws RecognitionException [1]
        {   
            List<string> gal = default(List<string>);

            TemplateExtracter.formal_parameter_list_return fpl = default(TemplateExtracter.formal_parameter_list_return);

            TemplateExtracter.identifier_return identifier40 = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1303:49: ( identifier (gal= generic_argument_list )? '(' (fpl= formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1304:2: identifier (gal= generic_argument_list )? '(' (fpl= formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
                {
                	PushFollow(FOLLOW_identifier_in_interface_method_declaration6399);
                	identifier40 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1304:18: (gal= generic_argument_list )?
                	int alt216 = 2;
                	int LA216_0 = input.LA(1);

                	if ( (LA216_0 == LTHAN) )
                	{
                	    alt216 = 1;
                	}
                	switch (alt216) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1304:18: gal= generic_argument_list
                	        {
                	        	PushFollow(FOLLOW_generic_argument_list_in_interface_method_declaration6405);
                	        	gal = generic_argument_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,LPAREN,FOLLOW_LPAREN_in_interface_method_declaration6413); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1305:15: (fpl= formal_parameter_list )?
                	int alt217 = 2;
                	int LA217_0 = input.LA(1);

                	if ( ((LA217_0 >= OBJECT && LA217_0 <= THIS) || LA217_0 == OPEN_BRACKET || (LA217_0 >= BOOL && LA217_0 <= IDENTIFIER) || (LA217_0 >= ELIF && LA217_0 <= UNDEF) || LA217_0 == 195 || LA217_0 == 206 || (LA217_0 >= 212 && LA217_0 <= 213) || LA217_0 == 221 || (LA217_0 >= 224 && LA217_0 <= 239) || (LA217_0 >= 241 && LA217_0 <= 244) || (LA217_0 >= 247 && LA217_0 <= 254) || (LA217_0 >= 256 && LA217_0 <= 257) || (LA217_0 >= 263 && LA217_0 <= 264) || (LA217_0 >= 274 && LA217_0 <= 277)) )
                	{
                	    alt217 = 1;
                	}
                	switch (alt217) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1305:15: fpl= formal_parameter_list
                	        {
                	        	PushFollow(FOLLOW_formal_parameter_list_in_interface_method_declaration6419);
                	        	fpl = formal_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_interface_method_declaration6424); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	    MethodRepTemplate meth = new MethodRepTemplate(returnType, ((identifier40 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier40.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier40.Start)) : null), (gal == null ? null : gal.ToArray()), ((fpl != null) ? fpl.paramlist : default(List<ParamRepTemplate>)));
                	             meth.ParamArray = ((fpl != null) ? fpl.paramarr : default(ParamArrayRepTemplate));
                	             if (MethodRenames.ContainsKey(((identifier40 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier40.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier40.Start)) : null))) {
                	                meth.JavaName = MethodRenames[((identifier40 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier40.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier40.Start)) : null)];
                	             }
                	             else {
                	                meth.JavaName = rewriteMethodName(((identifier40 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier40.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier40.Start)) : null));
                	             }
                	             ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Methods.Add(meth); 
                	          
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1316:9: ( type_parameter_constraints_clauses )?
                	int alt218 = 2;
                	int LA218_0 = input.LA(1);

                	if ( (LA218_0 == 236) )
                	{
                	    alt218 = 1;
                	}
                	switch (alt218) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1316:9: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration6446);
                	        	type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_interface_method_declaration6451); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing interface method declaration: " + ((identifier40 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier40.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier40.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_method_declaration"


        // $ANTLR start "interface_event_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1319:1: interface_event_declaration : 'event' type identifier ';' ;
        public void interface_event_declaration() // throws RecognitionException [1]
        {   
            string type41 = default(string);

            TemplateExtracter.identifier_return identifier42 = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1319:28: ( 'event' type identifier ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1321:2: 'event' type identifier ';'
                {
                	Match(input,240,FOLLOW_240_in_interface_event_declaration6473); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_interface_event_declaration6477);
                	type41 = type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_interface_event_declaration6481);
                	identifier42 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Events.Add(new FieldRepTemplate(type41, ((identifier42 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier42.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier42.Start)) : null))); 
                	}
                	Match(input,SEMI,FOLLOW_SEMI_in_interface_event_declaration6487); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing interface event declaration: " + ((identifier42 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier42.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier42.Start)) : null)); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_event_declaration"


        // $ANTLR start "interface_indexer_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1324:1: interface_indexer_declaration[string returnType] : 'this' '[' fpl= formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
        public void interface_indexer_declaration(string returnType) // throws RecognitionException [1]
        {   
            TemplateExtracter.formal_parameter_list_return fpl = default(TemplateExtracter.formal_parameter_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1324:50: ( 'this' '[' fpl= formal_parameter_list ']' '{' interface_accessor_declarations '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1326:2: 'this' '[' fpl= formal_parameter_list ']' '{' interface_accessor_declarations '}'
                {
                	Match(input,THIS,FOLLOW_THIS_in_interface_indexer_declaration6512); if (state.failed) return ;
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_interface_indexer_declaration6516); if (state.failed) return ;
                	PushFollow(FOLLOW_formal_parameter_list_in_interface_indexer_declaration6522);
                	fpl = formal_parameter_list();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_interface_indexer_declaration6526); if (state.failed) return ;
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_interface_indexer_declaration6530); if (state.failed) return ;
                	PushFollow(FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration6534);
                	interface_accessor_declarations();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_interface_indexer_declaration6538); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   IndexerRepTemplate indexer = new IndexerRepTemplate(returnType, ((fpl != null) ? fpl.paramlist : default(List<ParamRepTemplate>)));
                	             indexer.ParamArray = ((fpl != null) ? fpl.paramarr : default(ParamArrayRepTemplate));
                	             ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Indexers.Add(indexer); 
                	}
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing interface indexer declaration"); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_indexer_declaration"

        public class interface_accessor_declarations_return : TreeRuleReturnScope
        {
            public bool hasGetter;
            public bool hasSetter;
        };

        // $ANTLR start "interface_accessor_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1332:1: interface_accessor_declarations returns [bool hasGetter, bool hasSetter] : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
        public TemplateExtracter.interface_accessor_declarations_return interface_accessor_declarations() // throws RecognitionException [1]
        {   
            TemplateExtracter.interface_accessor_declarations_return retval = new TemplateExtracter.interface_accessor_declarations_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1337:1: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1338:2: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1338:2: ( attributes )?
                	int alt219 = 2;
                	int LA219_0 = input.LA(1);

                	if ( (LA219_0 == OPEN_BRACKET) )
                	{
                	    alt219 = 1;
                	}
                	switch (alt219) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1338:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_interface_accessor_declarations6582);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return retval;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1339:3: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
                	int alt224 = 2;
                	int LA224_0 = input.LA(1);

                	if ( (LA224_0 == 247) )
                	{
                	    alt224 = 1;
                	}
                	else if ( (LA224_0 == 248) )
                	{
                	    alt224 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    NoViableAltException nvae_d224s0 =
                	        new NoViableAltException("", 224, 0, input);

                	    throw nvae_d224s0;
                	}
                	switch (alt224) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1339:4: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
                	        {
                	        	PushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6591);
                	        	interface_get_accessor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.hasGetter =  true; 
                	        	}
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1339:63: ( attributes )?
                	        	int alt220 = 2;
                	        	int LA220_0 = input.LA(1);

                	        	if ( (LA220_0 == OPEN_BRACKET) )
                	        	{
                	        	    alt220 = 1;
                	        	}
                	        	switch (alt220) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1339:63: attributes
                	        	        {
                	        	        	PushFollow(FOLLOW_attributes_in_interface_accessor_declarations6596);
                	        	        	attributes();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}

                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1339:77: ( interface_set_accessor_declaration )?
                	        	int alt221 = 2;
                	        	int LA221_0 = input.LA(1);

                	        	if ( (LA221_0 == 248) )
                	        	{
                	        	    alt221 = 1;
                	        	}
                	        	switch (alt221) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1339:78: interface_set_accessor_declaration
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6602);
                	        	        	interface_set_accessor_declaration();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   retval.hasSetter =  true; 
                	        	        	}

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1340:5: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
                	        {
                	        	PushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6612);
                	        	interface_set_accessor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return retval;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   retval.hasSetter =  true; 
                	        	}
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1340:64: ( attributes )?
                	        	int alt222 = 2;
                	        	int LA222_0 = input.LA(1);

                	        	if ( (LA222_0 == OPEN_BRACKET) )
                	        	{
                	        	    alt222 = 1;
                	        	}
                	        	switch (alt222) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1340:64: attributes
                	        	        {
                	        	        	PushFollow(FOLLOW_attributes_in_interface_accessor_declarations6617);
                	        	        	attributes();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;

                	        	        }
                	        	        break;

                	        	}

                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1340:78: ( interface_get_accessor_declaration )?
                	        	int alt223 = 2;
                	        	int LA223_0 = input.LA(1);

                	        	if ( (LA223_0 == 247) )
                	        	{
                	        	    alt223 = 1;
                	        	}
                	        	switch (alt223) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1340:79: interface_get_accessor_declaration
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6623);
                	        	        	interface_get_accessor_declaration();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return retval;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   retval.hasGetter =  true; 
                	        	        	}

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "interface_accessor_declarations"


        // $ANTLR start "interface_get_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1341:1: interface_get_accessor_declaration : 'get' ';' ;
        public void interface_get_accessor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1341:35: ( 'get' ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1342:2: 'get' ';'
                {
                	Match(input,247,FOLLOW_247_in_interface_get_accessor_declaration6636); if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_interface_get_accessor_declaration6640); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_get_accessor_declaration"


        // $ANTLR start "interface_set_accessor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1343:1: interface_set_accessor_declaration : 'set' ';' ;
        public void interface_set_accessor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1343:35: ( 'set' ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1344:2: 'set' ';'
                {
                	Match(input,248,FOLLOW_248_in_interface_set_accessor_declaration6650); if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_interface_set_accessor_declaration6654); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "interface_set_accessor_declaration"


        // $ANTLR start "method_modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1345:1: method_modifiers : ( modifier )+ ;
        public void method_modifiers() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1345:17: ( ( modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1346:2: ( modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1346:2: ( modifier )+
                	int cnt225 = 0;
                	do 
                	{
                	    int alt225 = 2;
                	    int LA225_0 = input.LA(1);

                	    if ( ((LA225_0 >= PUBLIC && LA225_0 <= STATIC) || LA225_0 == 194 || (LA225_0 >= 197 && LA225_0 <= 204)) )
                	    {
                	        alt225 = 1;
                	    }


                	    switch (alt225) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1346:2: modifier
                			    {
                			    	PushFollow(FOLLOW_modifier_in_method_modifiers6664);
                			    	modifier();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt225 >= 1 ) goto loop225;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee225 =
                		                new EarlyExitException(225, input);
                		            throw eee225;
                	    }
                	    cnt225++;
                	} while (true);

                	loop225:
                		;	// Stops C# compiler whining that label 'loop225' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "method_modifiers"


        // $ANTLR start "struct_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1349:1: struct_declaration[bool isPartial] : s= 'struct' type_or_generic (si= struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
        public void struct_declaration(bool isPartial) // throws RecognitionException [1]
        {   
            NSContext_stack.Push(new NSContext_scope());

            CommonTree s = null;
            List<string> si = default(List<string>);

            TemplateExtracter.type_or_generic_return type_or_generic43 = default(TemplateExtracter.type_or_generic_return);



                ((NSContext_scope)NSContext_stack.Peek()).searchpath =  new List<string>();
                ((NSContext_scope)NSContext_stack.Peek()).aliases =  new List<AliasRepTemplate>();
                StructRepTemplate strukt = null; 

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1356:5: (s= 'struct' type_or_generic (si= struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1357:2: s= 'struct' type_or_generic (si= struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
                {
                	s=(CommonTree)Match(input,255,FOLLOW_255_in_struct_declaration6694); if (state.failed) return ;
                	PushFollow(FOLLOW_type_or_generic_in_struct_declaration6698);
                	type_or_generic43 = type_or_generic();
                	state._fsp--;
                	if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   
                	              DebugDetail("Processing struct: " + ((type_or_generic43 != null) ? type_or_generic43.type : default(string)));
                	              String genericNameSpace = NSPrefix(ParentNameSpace) + mkGenericTypeAlias(((type_or_generic43 != null) ? type_or_generic43.type : default(string)), ((type_or_generic43 != null) ? type_or_generic43.generic_arguments : default(List<string>)));
                	              TypeRepTemplate tmpTyRep;
                	              bool exists = AppEnv.TryGetValue(genericNameSpace, out tmpTyRep);
                	              if (exists && !isPartial) {
                	                    { Error(((s != null) ? s.Line : 0), "Found multiple definitions for " + genericNameSpace); }
                	              }
                	              if (exists) {
                	                 strukt = tmpTyRep as StructRepTemplate;
                	                 if (strukt == null) {
                	                    { Error(((s != null) ? s.Line : 0), "Found conflicting type definitions for " + genericNameSpace); }
                	                    // This strukt is not put in AppEnv so its just thrown away in this case
                	                    strukt = new StructRepTemplate();
                	                 }
                	              }
                	              else {
                	                 strukt = new StructRepTemplate();
                	                 AppEnv[genericNameSpace] = strukt;
                	              }

                	              strukt.TypeName = NSPrefix(ParentNameSpace) + ((type_or_generic43 != null) ? type_or_generic43.type : default(string));
                	              if (((type_or_generic43 != null) ? type_or_generic43.generic_arguments : default(List<string>)).Count > 0) {
                	                  strukt.TypeParams = ((type_or_generic43 != null) ? type_or_generic43.generic_arguments : default(List<string>)).ToArray();
                	              }
                	              // Nested types can see things in this space
                	              ((NSContext_scope)NSContext_stack.Peek()).searchpath.Add(strukt.TypeName);
                	              ((NSContext_scope)NSContext_stack.Peek()).currentNS =  strukt.TypeName;
                	              ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep =  strukt;
                	              strukt.Uses = MergeArray(strukt.Uses, this.CollectUses);
                	              strukt.Aliases = MergeArray(strukt.Aliases, this.CollectAliases);
                	              strukt.Imports = new string[] {strukt.TypeName};
                	          
                	}
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1390:11: (si= struct_interfaces )?
                	int alt226 = 2;
                	int LA226_0 = input.LA(1);

                	if ( (LA226_0 == 211) )
                	{
                	    alt226 = 1;
                	}
                	switch (alt226) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1390:12: si= struct_interfaces
                	        {
                	        	PushFollow(FOLLOW_struct_interfaces_in_struct_declaration6716);
                	        	si = struct_interfaces();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   strukt.Inherits = MergeArray(si.ToArray(), strukt.Inherits); 
                	        	}

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1391:10: ( type_parameter_constraints_clauses )?
                	int alt227 = 2;
                	int LA227_0 = input.LA(1);

                	if ( (LA227_0 == 236) )
                	{
                	    alt227 = 1;
                	}
                	switch (alt227) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1391:10: type_parameter_constraints_clauses
                	        {
                	        	PushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_declaration6731);
                	        	type_parameter_constraints_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	PushFollow(FOLLOW_struct_body_in_struct_declaration6736);
                	struct_body();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1391:62: ( ';' )?
                	int alt228 = 2;
                	int LA228_0 = input.LA(1);

                	if ( (LA228_0 == SEMI) )
                	{
                	    alt228 = 1;
                	}
                	switch (alt228) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1391:62: ';'
                	        {
                	        	Match(input,SEMI,FOLLOW_SEMI_in_struct_declaration6740); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
                NSContext_stack.Pop();

            }
            return ;
        }
        // $ANTLR end "struct_declaration"


        // $ANTLR start "struct_modifiers"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1392:1: struct_modifiers : ( struct_modifier )+ ;
        public void struct_modifiers() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1392:17: ( ( struct_modifier )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1393:2: ( struct_modifier )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1393:2: ( struct_modifier )+
                	int cnt229 = 0;
                	do 
                	{
                	    int alt229 = 2;
                	    int LA229_0 = input.LA(1);

                	    if ( ((LA229_0 >= PUBLIC && LA229_0 <= INTERNAL) || (LA229_0 >= 197 && LA229_0 <= 198)) )
                	    {
                	        alt229 = 1;
                	    }


                	    switch (alt229) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1393:2: struct_modifier
                			    {
                			    	PushFollow(FOLLOW_struct_modifier_in_struct_modifiers6749);
                			    	struct_modifier();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt229 >= 1 ) goto loop229;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee229 =
                		                new EarlyExitException(229, input);
                		            throw eee229;
                	    }
                	    cnt229++;
                	} while (true);

                	loop229:
                		;	// Stops C# compiler whining that label 'loop229' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "struct_modifiers"


        // $ANTLR start "struct_modifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1394:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
        public void struct_modifier() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1394:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= PUBLIC && input.LA(1) <= INTERNAL) || (input.LA(1) >= 197 && input.LA(1) <= 198) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "struct_modifier"


        // $ANTLR start "struct_interfaces"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1396:1: struct_interfaces returns [List<string> typeList] : ':' interface_type_list ;
        public List<string> struct_interfaces() // throws RecognitionException [1]
        {   
            List<string> typeList = default(List<string>);

            List<string> interface_type_list44 = default(List<string>);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1396:50: ( ':' interface_type_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1397:2: ':' interface_type_list
                {
                	Match(input,211,FOLLOW_211_in_struct_interfaces6790); if (state.failed) return typeList;
                	PushFollow(FOLLOW_interface_type_list_in_struct_interfaces6794);
                	interface_type_list44 = interface_type_list();
                	state._fsp--;
                	if (state.failed) return typeList;
                	if ( (state.backtracking==0) )
                	{
                	   typeList = interface_type_list44; 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return typeList;
        }
        // $ANTLR end "struct_interfaces"


        // $ANTLR start "struct_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1398:1: struct_body : '{' ( struct_member_declarations )? '}' ;
        public void struct_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1398:12: ( '{' ( struct_member_declarations )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1399:2: '{' ( struct_member_declarations )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_struct_body6804); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1399:8: ( struct_member_declarations )?
                	int alt230 = 2;
                	int LA230_0 = input.LA(1);

                	if ( (LA230_0 == ENUM || (LA230_0 >= PUBLIC && LA230_0 <= STATIC) || LA230_0 == OBJECT || LA230_0 == OPEN_BRACKET || (LA230_0 >= BOOL && LA230_0 <= IDENTIFIER) || (LA230_0 >= ELIF && LA230_0 <= UNDEF) || (LA230_0 >= 194 && LA230_0 <= 206) || LA230_0 == 218 || LA230_0 == 221 || (LA230_0 >= 224 && LA230_0 <= 245) || (LA230_0 >= 247 && LA230_0 <= 256) || LA230_0 == 258 || (LA230_0 >= 260 && LA230_0 <= 261) || (LA230_0 >= 263 && LA230_0 <= 264) || (LA230_0 >= 274 && LA230_0 <= 277)) )
                	{
                	    alt230 = 1;
                	}
                	switch (alt230) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1399:8: struct_member_declarations
                	        {
                	        	PushFollow(FOLLOW_struct_member_declarations_in_struct_body6808);
                	        	struct_member_declarations();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_struct_body6813); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "struct_body"


        // $ANTLR start "struct_member_declarations"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1400:1: struct_member_declarations : ( struct_member_declaration )+ ;
        public void struct_member_declarations() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1400:27: ( ( struct_member_declaration )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1401:2: ( struct_member_declaration )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1401:2: ( struct_member_declaration )+
                	int cnt231 = 0;
                	do 
                	{
                	    int alt231 = 2;
                	    int LA231_0 = input.LA(1);

                	    if ( (LA231_0 == ENUM || (LA231_0 >= PUBLIC && LA231_0 <= STATIC) || LA231_0 == OBJECT || LA231_0 == OPEN_BRACKET || (LA231_0 >= BOOL && LA231_0 <= IDENTIFIER) || (LA231_0 >= ELIF && LA231_0 <= UNDEF) || (LA231_0 >= 194 && LA231_0 <= 206) || LA231_0 == 218 || LA231_0 == 221 || (LA231_0 >= 224 && LA231_0 <= 245) || (LA231_0 >= 247 && LA231_0 <= 256) || LA231_0 == 258 || (LA231_0 >= 260 && LA231_0 <= 261) || (LA231_0 >= 263 && LA231_0 <= 264) || (LA231_0 >= 274 && LA231_0 <= 277)) )
                	    {
                	        alt231 = 1;
                	    }


                	    switch (alt231) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1401:2: struct_member_declaration
                			    {
                			    	PushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations6820);
                			    	struct_member_declaration();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt231 >= 1 ) goto loop231;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee231 =
                		                new EarlyExitException(231, input);
                		            throw eee231;
                	    }
                	    cnt231++;
                	} while (true);

                	loop231:
                		;	// Stops C# compiler whining that label 'loop231' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "struct_member_declarations"


        // $ANTLR start "struct_member_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1402:1: struct_member_declaration : ( attributes )? (m= modifiers )? ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | class_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
        public void struct_member_declaration() // throws RecognitionException [1]
        {   
            CommonTree p = null;
            string ct = default(string);

            string rt = default(string);

            TemplateExtracter.type_name_return type_name45 = default(TemplateExtracter.type_name_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1402:26: ( ( attributes )? (m= modifiers )? ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | class_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1403:2: ( attributes )? (m= modifiers )? ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | class_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1403:2: ( attributes )?
                	int alt232 = 2;
                	int LA232_0 = input.LA(1);

                	if ( (LA232_0 == OPEN_BRACKET) )
                	{
                	    alt232 = 1;
                	}
                	switch (alt232) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1403:2: attributes
                	        {
                	        	PushFollow(FOLLOW_attributes_in_struct_member_declaration6829);
                	        	attributes();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1403:17: (m= modifiers )?
                	int alt233 = 2;
                	int LA233_0 = input.LA(1);

                	if ( ((LA233_0 >= PUBLIC && LA233_0 <= STATIC) || LA233_0 == 194 || (LA233_0 >= 197 && LA233_0 <= 204)) )
                	{
                	    alt233 = 1;
                	}
                	switch (alt233) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1403:17: m= modifiers
                	        {
                	        	PushFollow(FOLLOW_modifiers_in_struct_member_declaration6836);
                	        	modifiers();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1404:2: ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | class_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
                	int alt236 = 12;
                	alt236 = dfa236.Predict(input);
                	switch (alt236) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1404:4: 'const' ct= type constant_declarators[$ct.thetext] ';'
                	        {
                	        	Match(input,205,FOLLOW_205_in_struct_member_declaration6842); if (state.failed) return ;
                	        	PushFollow(FOLLOW_type_in_struct_member_declaration6848);
                	        	ct = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	PushFollow(FOLLOW_constant_declarators_in_struct_member_declaration6852);
                	        	constant_declarators(ct);
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,SEMI,FOLLOW_SEMI_in_struct_member_declaration6857); if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1405:4: event_declaration
                	        {
                	        	PushFollow(FOLLOW_event_declaration_in_struct_member_declaration6862);
                	        	event_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1406:4: p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] )
                	        {
                	        	p=(CommonTree)Match(input,196,FOLLOW_196_in_struct_member_declaration6871); if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1406:16: ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] )
                	        	int alt234 = 4;
                	        	switch ( input.LA(1) ) 
                	        	{
                	        	case 206:
                	        		{
                	        	    alt234 = 1;
                	        	    }
                	        	    break;
                	        	case 258:
                	        		{
                	        	    alt234 = 2;
                	        	    }
                	        	    break;
                	        	case 245:
                	        		{
                	        	    alt234 = 3;
                	        	    }
                	        	    break;
                	        	case 255:
                	        		{
                	        	    alt234 = 4;
                	        	    }
                	        	    break;
                	        		default:
                	        		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        		    NoViableAltException nvae_d234s0 =
                	        		        new NoViableAltException("", 234, 0, input);

                	        		    throw nvae_d234s0;
                	        	}

                	        	switch (alt234) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1406:17: 'void' method_declaration[true, \"System.Void\"]
                	        	        {
                	        	        	Match(input,206,FOLLOW_206_in_struct_member_declaration6874); if (state.failed) return ;
                	        	        	PushFollow(FOLLOW_method_declaration_in_struct_member_declaration6876);
                	        	        	method_declaration(true, "System.Void");
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1407:9: interface_declaration[true]
                	        	        {
                	        	        	PushFollow(FOLLOW_interface_declaration_in_struct_member_declaration6888);
                	        	        	interface_declaration(true);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 3 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1408:9: class_declaration[true]
                	        	        {
                	        	        	PushFollow(FOLLOW_class_declaration_in_struct_member_declaration6900);
                	        	        	class_declaration(true);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 4 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1409:9: struct_declaration[true]
                	        	        {
                	        	        	PushFollow(FOLLOW_struct_declaration_in_struct_member_declaration6912);
                	        	        	struct_declaration(true);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 4 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1411:4: interface_declaration[false]
                	        {
                	        	PushFollow(FOLLOW_interface_declaration_in_struct_member_declaration6920);
                	        	interface_declaration(false);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 5 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1412:4: class_declaration[false]
                	        {
                	        	PushFollow(FOLLOW_class_declaration_in_struct_member_declaration6927);
                	        	class_declaration(false);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 6 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1413:4: 'void' method_declaration[false, \"System.Void\"]
                	        {
                	        	Match(input,206,FOLLOW_206_in_struct_member_declaration6935); if (state.failed) return ;
                	        	PushFollow(FOLLOW_method_declaration_in_struct_member_declaration6939);
                	        	method_declaration(false, "System.Void");
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 7 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1414:4: rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] )
                	        {
                	        	PushFollow(FOLLOW_type_in_struct_member_declaration6947);
                	        	rt = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1414:12: ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] )
                	        	int alt235 = 6;
                	        	alt235 = dfa235.Predict(input);
                	        	switch (alt235) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1414:14: ( member_name '(' )=> method_declaration[false, $rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_method_declaration_in_struct_member_declaration6961);
                	        	        	method_declaration(false, rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1415:8: ( member_name '{' )=> property_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_property_declaration_in_struct_member_declaration6981);
                	        	        	property_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 3 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1416:8: ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"]
                	        	        {
                	        	        	PushFollow(FOLLOW_type_name_in_struct_member_declaration7005);
                	        	        	type_name45 = type_name();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;
                	        	        	Match(input,DOT,FOLLOW_DOT_in_struct_member_declaration7007); if (state.failed) return ;
                	        	        	PushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration7009);
                	        	        	indexer_declaration(rt, ((type_name45 != null) ? type_name45.thetext : default(string))+".");
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 4 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1417:8: indexer_declaration[$rt.thetext, \"\"]
                	        	        {
                	        	        	PushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration7019);
                	        	        	indexer_declaration(rt, "");
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 5 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1418:11: field_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_field_declaration_in_struct_member_declaration7033);
                	        	        	field_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 6 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1419:11: operator_declaration[$rt.thetext]
                	        	        {
                	        	        	PushFollow(FOLLOW_operator_declaration_in_struct_member_declaration7052);
                	        	        	operator_declaration(rt);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 8 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1423:4: struct_declaration[false]
                	        {
                	        	PushFollow(FOLLOW_struct_declaration_in_struct_member_declaration7071);
                	        	struct_declaration(false);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 9 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1424:4: enum_declaration
                	        {
                	        	PushFollow(FOLLOW_enum_declaration_in_struct_member_declaration7078);
                	        	enum_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 10 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1425:4: delegate_declaration
                	        {
                	        	PushFollow(FOLLOW_delegate_declaration_in_struct_member_declaration7085);
                	        	delegate_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 11 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1426:4: conversion_operator_declaration
                	        {
                	        	PushFollow(FOLLOW_conversion_operator_declaration_in_struct_member_declaration7091);
                	        	conversion_operator_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 12 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1427:4: constructor_declaration
                	        {
                	        	PushFollow(FOLLOW_constructor_declaration_in_struct_member_declaration7096);
                	        	constructor_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "struct_member_declaration"


        // $ANTLR start "indexer_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1433:1: indexer_declaration[string returnType, string prefix] : indexer_declarator[$returnType, $prefix] '{' accessor_declarations '}' ;
        public void indexer_declaration(string returnType, string prefix) // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1433:55: ( indexer_declarator[$returnType, $prefix] '{' accessor_declarations '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1434:2: indexer_declarator[$returnType, $prefix] '{' accessor_declarations '}'
                {
                	PushFollow(FOLLOW_indexer_declarator_in_indexer_declaration7115);
                	indexer_declarator(returnType, prefix);
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_indexer_declaration7120); if (state.failed) return ;
                	PushFollow(FOLLOW_accessor_declarations_in_indexer_declaration7124);
                	accessor_declarations();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_indexer_declaration7128); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "indexer_declaration"


        // $ANTLR start "indexer_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1435:1: indexer_declarator[string returnType, string prefix] : 'this' '[' fpl= formal_parameter_list ']' ;
        public void indexer_declarator(string returnType, string prefix) // throws RecognitionException [1]
        {   
            TemplateExtracter.formal_parameter_list_return fpl = default(TemplateExtracter.formal_parameter_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1435:54: ( 'this' '[' fpl= formal_parameter_list ']' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1437:2: 'this' '[' fpl= formal_parameter_list ']'
                {
                	Match(input,THIS,FOLLOW_THIS_in_indexer_declarator7140); if (state.failed) return ;
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_indexer_declarator7144); if (state.failed) return ;
                	PushFollow(FOLLOW_formal_parameter_list_in_indexer_declarator7150);
                	fpl = formal_parameter_list();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_indexer_declarator7154); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   IndexerRepTemplate indexer = new IndexerRepTemplate(returnType, ((fpl != null) ? fpl.paramlist : default(List<ParamRepTemplate>)));
                	             indexer.ParamArray = ((fpl != null) ? fpl.paramarr : default(ParamArrayRepTemplate));
                	             ((InterfaceRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Indexers.Add(indexer); 
                	}
                	if ( (state.backtracking==0) )
                	{
                	   DebugDetail("Processing indexer declaration"); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "indexer_declarator"


        // $ANTLR start "operator_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1445:1: operator_declaration[string returnType] : operator_declarator[$returnType] operator_body ;
        public void operator_declaration(string returnType) // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1445:41: ( operator_declarator[$returnType] operator_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1446:2: operator_declarator[$returnType] operator_body
                {
                	PushFollow(FOLLOW_operator_declarator_in_operator_declaration7193);
                	operator_declarator(returnType);
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_operator_body_in_operator_declaration7198);
                	operator_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "operator_declaration"


        // $ANTLR start "operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1447:1: operator_declarator[string returnType] : 'operator' ( ( '+' | '-' ) '(' t0= type i0= identifier ( binary_operator_declarator[paramList] | unary_operator_declarator ) | overloadable_unary_operator '(' t1= type i1= identifier unary_operator_declarator | overloadable_binary_operator '(' t2= type i2= identifier binary_operator_declarator[paramList] ) ;
        public void operator_declarator(string returnType) // throws RecognitionException [1]
        {   
            string t0 = default(string);

            TemplateExtracter.identifier_return i0 = default(TemplateExtracter.identifier_return);

            string t1 = default(string);

            TemplateExtracter.identifier_return i1 = default(TemplateExtracter.identifier_return);

            string t2 = default(string);

            TemplateExtracter.identifier_return i2 = default(TemplateExtracter.identifier_return);

            TemplateExtracter.overloadable_unary_operator_return overloadable_unary_operator46 = default(TemplateExtracter.overloadable_unary_operator_return);

            TemplateExtracter.overloadable_binary_operator_return overloadable_binary_operator47 = default(TemplateExtracter.overloadable_binary_operator_return);



                string opText = "";
                List<ParamRepTemplate> paramList = new List<ParamRepTemplate>();
                bool unaryOp = false;

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1462:2: ( 'operator' ( ( '+' | '-' ) '(' t0= type i0= identifier ( binary_operator_declarator[paramList] | unary_operator_declarator ) | overloadable_unary_operator '(' t1= type i1= identifier unary_operator_declarator | overloadable_binary_operator '(' t2= type i2= identifier binary_operator_declarator[paramList] ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1463:2: 'operator' ( ( '+' | '-' ) '(' t0= type i0= identifier ( binary_operator_declarator[paramList] | unary_operator_declarator ) | overloadable_unary_operator '(' t1= type i1= identifier unary_operator_declarator | overloadable_binary_operator '(' t2= type i2= identifier binary_operator_declarator[paramList] )
                {
                	Match(input,259,FOLLOW_259_in_operator_declarator7218); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:3: ( ( '+' | '-' ) '(' t0= type i0= identifier ( binary_operator_declarator[paramList] | unary_operator_declarator ) | overloadable_unary_operator '(' t1= type i1= identifier unary_operator_declarator | overloadable_binary_operator '(' t2= type i2= identifier binary_operator_declarator[paramList] )
                	int alt239 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case PLUS:
                	case MINUS:
                		{
                	    alt239 = 1;
                	    }
                	    break;
                	case MONONOT:
                	case MONOTWIDDLE:
                	case TRUE:
                	case FALSE:
                	case 209:
                	case 210:
                		{
                	    alt239 = 2;
                	    }
                	    break;
                	case BIT_OR:
                	case BIT_XOR:
                	case BIT_AND:
                	case NOT_EQUAL:
                	case EQUAL:
                	case LTHAN:
                	case LTE:
                	case GTE:
                	case LEFT_SHIFT:
                	case DIV:
                	case MOD:
                	case STAR:
                	case GT:
                		{
                	    alt239 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		    NoViableAltException nvae_d239s0 =
                		        new NoViableAltException("", 239, 0, input);

                		    throw nvae_d239s0;
                	}

                	switch (alt239) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:4: ( '+' | '-' ) '(' t0= type i0= identifier ( binary_operator_declarator[paramList] | unary_operator_declarator )
                	        {
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:4: ( '+' | '-' )
                	        	int alt237 = 2;
                	        	int LA237_0 = input.LA(1);

                	        	if ( (LA237_0 == PLUS) )
                	        	{
                	        	    alt237 = 1;
                	        	}
                	        	else if ( (LA237_0 == MINUS) )
                	        	{
                	        	    alt237 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        	    NoViableAltException nvae_d237s0 =
                	        	        new NoViableAltException("", 237, 0, input);

                	        	    throw nvae_d237s0;
                	        	}
                	        	switch (alt237) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:5: '+'
                	        	        {
                	        	        	Match(input,PLUS,FOLLOW_PLUS_in_operator_declarator7227); if (state.failed) return ;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   opText = "+"; 
                	        	        	}

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:29: '-'
                	        	        {
                	        	        	Match(input,MINUS,FOLLOW_MINUS_in_operator_declarator7233); if (state.failed) return ;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   opText = "-"; 
                	        	        	}

                	        	        }
                	        	        break;

                	        	}

                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_operator_declarator7240); if (state.failed) return ;
                	        	PushFollow(FOLLOW_type_in_operator_declarator7246);
                	        	t0 = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	PushFollow(FOLLOW_identifier_in_operator_declarator7252);
                	        	i0 = identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   paramList.Add(new ParamRepTemplate(t0, ((i0 != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(i0.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(i0.Start)) : null))); 
                	        	}
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:148: ( binary_operator_declarator[paramList] | unary_operator_declarator )
                	        	int alt238 = 2;
                	        	int LA238_0 = input.LA(1);

                	        	if ( (LA238_0 == COMMA) )
                	        	{
                	        	    alt238 = 1;
                	        	}
                	        	else if ( (LA238_0 == RPAREN) )
                	        	{
                	        	    alt238 = 2;
                	        	}
                	        	else 
                	        	{
                	        	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	        	    NoViableAltException nvae_d238s0 =
                	        	        new NoViableAltException("", 238, 0, input);

                	        	    throw nvae_d238s0;
                	        	}
                	        	switch (alt238) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:149: binary_operator_declarator[paramList]
                	        	        {
                	        	        	PushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator7257);
                	        	        	binary_operator_declarator(paramList);
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;
                	        	    case 2 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1464:189: unary_operator_declarator
                	        	        {
                	        	        	PushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator7262);
                	        	        	unary_operator_declarator();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;
                	        	        	if ( (state.backtracking==0) )
                	        	        	{
                	        	        	   unaryOp = true; 
                	        	        	}

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1465:5: overloadable_unary_operator '(' t1= type i1= identifier unary_operator_declarator
                	        {
                	        	PushFollow(FOLLOW_overloadable_unary_operator_in_operator_declarator7271);
                	        	overloadable_unary_operator46 = overloadable_unary_operator();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   opText = ((overloadable_unary_operator46 != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(overloadable_unary_operator46.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(overloadable_unary_operator46.Start)) : null); 
                	        	}
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_operator_declarator7275); if (state.failed) return ;
                	        	PushFollow(FOLLOW_type_in_operator_declarator7281);
                	        	t1 = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	PushFollow(FOLLOW_identifier_in_operator_declarator7287);
                	        	i1 = identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   paramList.Add(new ParamRepTemplate(t1, ((i1 != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(i1.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(i1.Start)) : null))); 
                	        	}
                	        	PushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator7291);
                	        	unary_operator_declarator();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   unaryOp = true;  
                	        	}

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1466:5: overloadable_binary_operator '(' t2= type i2= identifier binary_operator_declarator[paramList]
                	        {
                	        	PushFollow(FOLLOW_overloadable_binary_operator_in_operator_declarator7300);
                	        	overloadable_binary_operator47 = overloadable_binary_operator();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   opText = ((overloadable_binary_operator47 != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(overloadable_binary_operator47.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(overloadable_binary_operator47.Start)) : null); 
                	        	}
                	        	Match(input,LPAREN,FOLLOW_LPAREN_in_operator_declarator7304); if (state.failed) return ;
                	        	PushFollow(FOLLOW_type_in_operator_declarator7308);
                	        	t2 = type();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	PushFollow(FOLLOW_identifier_in_operator_declarator7314);
                	        	i2 = identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   paramList.Add(new ParamRepTemplate(t2, ((i2 != null) ? input.TokenStream.ToString(
                	        	    input.TreeAdaptor.GetTokenStartIndex(i2.Start),
                	        	    input.TreeAdaptor.GetTokenStopIndex(i2.Start)) : null))); 
                	        	}
                	        	PushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator7318);
                	        	binary_operator_declarator(paramList);
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

                if ( (state.backtracking==0) )
                {

                      MethodRepTemplate meth = new MethodRepTemplate(returnType, opText, null, paramList); 
                      if (unaryOp) {
                          ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).UnaryOps.Add(meth);
                      }
                      else {
                          ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).BinaryOps.Add(meth);
                      } 
                      DebugDetail("Processing operator declaration: " + meth.Name);

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "operator_declarator"


        // $ANTLR start "unary_operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1467:1: unary_operator_declarator : ')' ;
        public void unary_operator_declarator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1467:26: ( ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1468:5: ')'
                {
                	Match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator_declarator7332); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unary_operator_declarator"

        public class overloadable_unary_operator_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "overloadable_unary_operator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1469:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
        public TemplateExtracter.overloadable_unary_operator_return overloadable_unary_operator() // throws RecognitionException [1]
        {   
            TemplateExtracter.overloadable_unary_operator_return retval = new TemplateExtracter.overloadable_unary_operator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1469:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= MONONOT && input.LA(1) <= MONOTWIDDLE) || (input.LA(1) >= TRUE && input.LA(1) <= FALSE) || (input.LA(1) >= 209 && input.LA(1) <= 210) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "overloadable_unary_operator"


        // $ANTLR start "binary_operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1471:1: binary_operator_declarator[List<ParamRepTemplate> paramList] : ',' type identifier ')' ;
        public void binary_operator_declarator(List<ParamRepTemplate> paramList) // throws RecognitionException [1]
        {   
            string type48 = default(string);

            TemplateExtracter.identifier_return identifier49 = default(TemplateExtracter.identifier_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1471:62: ( ',' type identifier ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1472:2: ',' type identifier ')'
                {
                	Match(input,COMMA,FOLLOW_COMMA_in_binary_operator_declarator7377); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_binary_operator_declarator7381);
                	type48 = type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_binary_operator_declarator7385);
                	identifier49 = identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_binary_operator_declarator7389); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	   paramList.Add(new ParamRepTemplate(type48, ((identifier49 != null) ? input.TokenStream.ToString(
                	    input.TreeAdaptor.GetTokenStartIndex(identifier49.Start),
                	    input.TreeAdaptor.GetTokenStopIndex(identifier49.Start)) : null))); 
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "binary_operator_declarator"

        public class overloadable_binary_operator_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "overloadable_binary_operator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1474:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
        public TemplateExtracter.overloadable_binary_operator_return overloadable_binary_operator() // throws RecognitionException [1]
        {   
            TemplateExtracter.overloadable_binary_operator_return retval = new TemplateExtracter.overloadable_binary_operator_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1474:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
                int alt240 = 14;
                alt240 = dfa240.Predict(input);
                switch (alt240) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:19: '*'
                        {
                        	Match(input,STAR,FOLLOW_STAR_in_overloadable_binary_operator7402); if (state.failed) return retval;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:25: '/'
                        {
                        	Match(input,DIV,FOLLOW_DIV_in_overloadable_binary_operator7406); if (state.failed) return retval;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:31: '%'
                        {
                        	Match(input,MOD,FOLLOW_MOD_in_overloadable_binary_operator7410); if (state.failed) return retval;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:37: '&'
                        {
                        	Match(input,BIT_AND,FOLLOW_BIT_AND_in_overloadable_binary_operator7414); if (state.failed) return retval;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:43: '|'
                        {
                        	Match(input,BIT_OR,FOLLOW_BIT_OR_in_overloadable_binary_operator7418); if (state.failed) return retval;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:49: '^'
                        {
                        	Match(input,BIT_XOR,FOLLOW_BIT_XOR_in_overloadable_binary_operator7422); if (state.failed) return retval;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:55: '<<'
                        {
                        	Match(input,LEFT_SHIFT,FOLLOW_LEFT_SHIFT_in_overloadable_binary_operator7426); if (state.failed) return retval;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:62: '>' '>'
                        {
                        	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator7430); if (state.failed) return retval;
                        	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator7432); if (state.failed) return retval;

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:72: '=='
                        {
                        	Match(input,EQUAL,FOLLOW_EQUAL_in_overloadable_binary_operator7436); if (state.failed) return retval;

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:79: '!='
                        {
                        	Match(input,NOT_EQUAL,FOLLOW_NOT_EQUAL_in_overloadable_binary_operator7440); if (state.failed) return retval;

                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:86: '>'
                        {
                        	Match(input,GT,FOLLOW_GT_in_overloadable_binary_operator7444); if (state.failed) return retval;

                        }
                        break;
                    case 12 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:92: '<'
                        {
                        	Match(input,LTHAN,FOLLOW_LTHAN_in_overloadable_binary_operator7448); if (state.failed) return retval;

                        }
                        break;
                    case 13 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:98: '>='
                        {
                        	Match(input,GTE,FOLLOW_GTE_in_overloadable_binary_operator7452); if (state.failed) return retval;

                        }
                        break;
                    case 14 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1475:105: '<='
                        {
                        	Match(input,LTE,FOLLOW_LTE_in_overloadable_binary_operator7456); if (state.failed) return retval;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "overloadable_binary_operator"


        // $ANTLR start "conversion_operator_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1477:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
        public void conversion_operator_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1477:32: ( conversion_operator_declarator operator_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1478:2: conversion_operator_declarator operator_body
                {
                	PushFollow(FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration7466);
                	conversion_operator_declarator();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_operator_body_in_conversion_operator_declaration7470);
                	operator_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "conversion_operator_declaration"


        // $ANTLR start "conversion_operator_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1479:1: conversion_operator_declarator : (i= 'implicit' | 'explicit' ) 'operator' tt= type '(' tf= type identifier ')' ;
        public void conversion_operator_declarator() // throws RecognitionException [1]
        {   
            CommonTree i = null;
            string tt = default(string);

            string tf = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1479:31: ( (i= 'implicit' | 'explicit' ) 'operator' tt= type '(' tf= type identifier ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1480:2: (i= 'implicit' | 'explicit' ) 'operator' tt= type '(' tf= type identifier ')'
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1480:2: (i= 'implicit' | 'explicit' )
                	int alt241 = 2;
                	int LA241_0 = input.LA(1);

                	if ( (LA241_0 == 260) )
                	{
                	    alt241 = 1;
                	}
                	else if ( (LA241_0 == 261) )
                	{
                	    alt241 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d241s0 =
                	        new NoViableAltException("", 241, 0, input);

                	    throw nvae_d241s0;
                	}
                	switch (alt241) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1480:3: i= 'implicit'
                	        {
                	        	i=(CommonTree)Match(input,260,FOLLOW_260_in_conversion_operator_declarator7481); if (state.failed) return ;
                	        	if ( (state.backtracking==0) )
                	        	{
                	        	   Warning(((i != null) ? i.Line : 0), "[UNSUPPORTED] implicit user defined casts,  an explicit cast is always required."); 
                	        	}

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1480:124: 'explicit'
                	        {
                	        	Match(input,261,FOLLOW_261_in_conversion_operator_declarator7487); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,259,FOLLOW_259_in_conversion_operator_declarator7491); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_conversion_operator_declarator7497);
                	tt = type();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_conversion_operator_declarator7501); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_conversion_operator_declarator7507);
                	tf = type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_conversion_operator_declarator7511);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_conversion_operator_declarator7515); if (state.failed) return ;
                	if ( (state.backtracking==0) )
                	{
                	    
                	              CastRepTemplate kast = new CastRepTemplate(tf, tt); 
                	              kast.SurroundingType = ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep;
                	              ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Casts.Add(kast);
                	              DebugDetail("Processing conversion declaration");
                	          
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "conversion_operator_declarator"


        // $ANTLR start "operator_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1488:1: operator_body : block ;
        public void operator_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1488:14: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1489:2: block
                {
                	PushFollow(FOLLOW_block_in_operator_body7539);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "operator_body"


        // $ANTLR start "constructor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1492:1: constructor_declaration : constructor_declarator constructor_body ;
        public void constructor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1492:24: ( constructor_declarator constructor_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1493:2: constructor_declarator constructor_body
                {
                	PushFollow(FOLLOW_constructor_declarator_in_constructor_declaration7549);
                	constructor_declarator();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_constructor_body_in_constructor_declaration7553);
                	constructor_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constructor_declaration"


        // $ANTLR start "constructor_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1494:1: constructor_declarator : identifier '(' (fpl= formal_parameter_list )? ')' ( constructor_initializer )? ;
        public void constructor_declarator() // throws RecognitionException [1]
        {   
            TemplateExtracter.formal_parameter_list_return fpl = default(TemplateExtracter.formal_parameter_list_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1494:23: ( identifier '(' (fpl= formal_parameter_list )? ')' ( constructor_initializer )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1495:2: identifier '(' (fpl= formal_parameter_list )? ')' ( constructor_initializer )?
                {
                	PushFollow(FOLLOW_identifier_in_constructor_declarator7561);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_constructor_declarator7565); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1495:24: (fpl= formal_parameter_list )?
                	int alt242 = 2;
                	int LA242_0 = input.LA(1);

                	if ( ((LA242_0 >= OBJECT && LA242_0 <= THIS) || LA242_0 == OPEN_BRACKET || (LA242_0 >= BOOL && LA242_0 <= IDENTIFIER) || (LA242_0 >= ELIF && LA242_0 <= UNDEF) || LA242_0 == 195 || LA242_0 == 206 || (LA242_0 >= 212 && LA242_0 <= 213) || LA242_0 == 221 || (LA242_0 >= 224 && LA242_0 <= 239) || (LA242_0 >= 241 && LA242_0 <= 244) || (LA242_0 >= 247 && LA242_0 <= 254) || (LA242_0 >= 256 && LA242_0 <= 257) || (LA242_0 >= 263 && LA242_0 <= 264) || (LA242_0 >= 274 && LA242_0 <= 277)) )
                	{
                	    alt242 = 1;
                	}
                	switch (alt242) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1495:24: fpl= formal_parameter_list
                	        {
                	        	PushFollow(FOLLOW_formal_parameter_list_in_constructor_declarator7571);
                	        	fpl = formal_parameter_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_constructor_declarator7576); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1495:56: ( constructor_initializer )?
                	int alt243 = 2;
                	int LA243_0 = input.LA(1);

                	if ( (LA243_0 == 211) )
                	{
                	    alt243 = 1;
                	}
                	switch (alt243) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1495:56: constructor_initializer
                	        {
                	        	PushFollow(FOLLOW_constructor_initializer_in_constructor_declarator7580);
                	        	constructor_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	if ( (state.backtracking==0) )
                	{
                	    
                	                ConstructorRepTemplate cRep = new ConstructorRepTemplate(((fpl != null) ? fpl.paramlist : default(List<ParamRepTemplate>)));
                	                cRep.ParamArray = ((fpl != null) ? fpl.paramarr : default(ParamArrayRepTemplate));
                	                cRep.SurroundingType = ((NSContext_scope)NSContext_stack.Peek()).currentTypeRep;
                	                ((ClassRepTemplate)((NSContext_scope)NSContext_stack.Peek()).currentTypeRep).Constructors.Add(cRep);
                	                DebugDetail("Processing constructor declaration");
                	   
                	}

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constructor_declarator"


        // $ANTLR start "constructor_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1504:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
        public void constructor_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1504:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1505:2: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
                {
                	Match(input,211,FOLLOW_211_in_constructor_initializer7601); if (state.failed) return ;
                	if ( input.LA(1) == THIS || input.LA(1) == 207 ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}

                	Match(input,LPAREN,FOLLOW_LPAREN_in_constructor_initializer7615); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1505:34: ( argument_list )?
                	int alt244 = 2;
                	int LA244_0 = input.LA(1);

                	if ( ((LA244_0 >= MONONOT && LA244_0 <= MONOTWIDDLE) || LA244_0 == NEW_ARRAY || (LA244_0 >= OBJECT && LA244_0 <= THIS) || LA244_0 == LPAREN || LA244_0 == BIT_AND || (LA244_0 >= PLUS && LA244_0 <= MINUS) || LA244_0 == STAR || (LA244_0 >= BOOL && LA244_0 <= NULL) || (LA244_0 >= ELIF && LA244_0 <= UNDEF) || LA244_0 == 195 || LA244_0 == 197 || LA244_0 == 207 || (LA244_0 >= 209 && LA244_0 <= 210) || (LA244_0 >= 212 && LA244_0 <= 219) || LA244_0 == 221 || (LA244_0 >= 224 && LA244_0 <= 239) || (LA244_0 >= 241 && LA244_0 <= 244) || (LA244_0 >= 247 && LA244_0 <= 254) || LA244_0 == 256 || (LA244_0 >= 263 && LA244_0 <= 264) || (LA244_0 >= 274 && LA244_0 <= 277)) )
                	{
                	    alt244 = 1;
                	}
                	switch (alt244) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1505:34: argument_list
                	        {
                	        	PushFollow(FOLLOW_argument_list_in_constructor_initializer7619);
                	        	argument_list();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_constructor_initializer7624); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constructor_initializer"


        // $ANTLR start "constructor_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1506:1: constructor_body : block ;
        public void constructor_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1506:17: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1507:2: block
                {
                	PushFollow(FOLLOW_block_in_constructor_body7632);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "constructor_body"


        // $ANTLR start "destructor_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1516:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
        public void destructor_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1516:23: ( '~' identifier '(' ')' destructor_body )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1517:2: '~' identifier '(' ')' destructor_body
                {
                	Match(input,MONOTWIDDLE,FOLLOW_MONOTWIDDLE_in_destructor_declaration7648); if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_destructor_declaration7651);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_destructor_declaration7655); if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_destructor_declaration7659); if (state.failed) return ;
                	PushFollow(FOLLOW_destructor_body_in_destructor_declaration7664);
                	destructor_body();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "destructor_declaration"


        // $ANTLR start "destructor_body"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1518:1: destructor_body : block ;
        public void destructor_body() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1518:16: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1519:2: block
                {
                	PushFollow(FOLLOW_block_in_destructor_body7672);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "destructor_body"


        // $ANTLR start "invocation_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1522:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
        public void invocation_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1522:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:2: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
                {
                	PushFollow(FOLLOW_invocation_start_in_invocation_expression7682);
                	invocation_start();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:21: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
                	do 
                	{
                	    int alt245 = 3;
                	    int LA245_0 = input.LA(1);

                	    if ( (LA245_0 == LPAREN) )
                	    {
                	        int LA245_1 = input.LA(2);

                	        if ( (synpred32_TemplateExtracter()) )
                	        {
                	            alt245 = 1;
                	        }


                	    }
                	    else if ( (LA245_0 == OPEN_BRACKET || (LA245_0 >= DOT && LA245_0 <= PTR)) )
                	    {
                	        alt245 = 2;
                	    }


                	    switch (alt245) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                			    {
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:22: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:23: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
                			    	{
                			    		PushFollow(FOLLOW_arguments_in_invocation_expression7704);
                			    		arguments();
                			    		state._fsp--;
                			    		if (state.failed) return ;
                			    		PushFollow(FOLLOW_invocation_part_in_invocation_expression7708);
                			    		invocation_part();
                			    		state._fsp--;
                			    		if (state.failed) return ;

                			    	}


                			    }
                			    break;
                			case 2 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1524:9: invocation_part
                			    {
                			    	PushFollow(FOLLOW_invocation_part_in_invocation_expression7719);
                			    	invocation_part();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop245;
                	    }
                	} while (true);

                	loop245:
                		;	// Stops C# compiler whining that label 'loop245' has no statements

                	PushFollow(FOLLOW_arguments_in_invocation_expression7725);
                	arguments();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "invocation_expression"


        // $ANTLR start "invocation_start"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1525:1: invocation_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
        public void invocation_start() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1525:17: ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
                int alt247 = 6;
                switch ( input.LA(1) ) 
                {
                case OBJECT:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case 251:
                case 252:
                case 253:
                case 254:
                case 275:
                case 276:
                	{
                    alt247 = 1;
                    }
                    break;
                case IDENTIFIER:
                	{
                    int LA247_2 = input.LA(2);

                    if ( (LA247_2 == OPEN_BRACKET || LA247_2 == LPAREN || (LA247_2 >= DOT && LA247_2 <= PTR) || LA247_2 == 208) )
                    {
                        alt247 = 5;
                    }
                    else if ( (LA247_2 == LTHAN) && (synpred33_TemplateExtracter()) )
                    {
                        alt247 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d247s2 =
                            new NoViableAltException("", 247, 2, input);

                        throw nvae_d247s2;
                    }
                    }
                    break;
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 256:
                case 263:
                case 264:
                case 274:
                case 277:
                	{
                    int LA247_3 = input.LA(2);

                    if ( (LA247_3 == OPEN_BRACKET || LA247_3 == LPAREN || (LA247_3 >= DOT && LA247_3 <= PTR) || LA247_3 == 208) )
                    {
                        alt247 = 5;
                    }
                    else if ( (LA247_3 == LTHAN) && (synpred33_TemplateExtracter()) )
                    {
                        alt247 = 2;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d247s3 =
                            new NoViableAltException("", 247, 3, input);

                        throw nvae_d247s3;
                    }
                    }
                    break;
                case THIS:
                	{
                    alt247 = 3;
                    }
                    break;
                case 207:
                	{
                    alt247 = 4;
                    }
                    break;
                case 219:
                	{
                    alt247 = 6;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d247s0 =
                	        new NoViableAltException("", 247, 0, input);

                	    throw nvae_d247s0;
                }

                switch (alt247) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1526:2: predefined_type
                        {
                        	PushFollow(FOLLOW_predefined_type_in_invocation_start7733);
                        	predefined_type();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1527:4: ( identifier generic_argument_list )=> identifier generic_argument_list
                        {
                        	PushFollow(FOLLOW_identifier_in_invocation_start7750);
                        	identifier();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	PushFollow(FOLLOW_generic_argument_list_in_invocation_start7754);
                        	generic_argument_list();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1528:4: 'this'
                        {
                        	Match(input,THIS,FOLLOW_THIS_in_invocation_start7759); if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1529:4: 'base'
                        {
                        	Match(input,207,FOLLOW_207_in_invocation_start7765); if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1530:4: identifier ( '::' identifier )?
                        {
                        	PushFollow(FOLLOW_identifier_in_invocation_start7770);
                        	identifier();
                        	state._fsp--;
                        	if (state.failed) return ;
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1530:17: ( '::' identifier )?
                        	int alt246 = 2;
                        	int LA246_0 = input.LA(1);

                        	if ( (LA246_0 == 208) )
                        	{
                        	    alt246 = 1;
                        	}
                        	switch (alt246) 
                        	{
                        	    case 1 :
                        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1530:18: '::' identifier
                        	        {
                        	        	Match(input,208,FOLLOW_208_in_invocation_start7775); if (state.failed) return ;
                        	        	PushFollow(FOLLOW_identifier_in_invocation_start7779);
                        	        	identifier();
                        	        	state._fsp--;
                        	        	if (state.failed) return ;

                        	        }
                        	        break;

                        	}


                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1531:4: typeof_expression
                        {
                        	PushFollow(FOLLOW_typeof_expression_in_invocation_start7786);
                        	typeof_expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "invocation_start"


        // $ANTLR start "invocation_part"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1533:1: invocation_part : ( access_identifier | brackets );
        public void invocation_part() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1533:16: ( access_identifier | brackets )
                int alt248 = 2;
                int LA248_0 = input.LA(1);

                if ( ((LA248_0 >= DOT && LA248_0 <= PTR)) )
                {
                    alt248 = 1;
                }
                else if ( (LA248_0 == OPEN_BRACKET) )
                {
                    alt248 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d248s0 =
                        new NoViableAltException("", 248, 0, input);

                    throw nvae_d248s0;
                }
                switch (alt248) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1534:3: access_identifier
                        {
                        	PushFollow(FOLLOW_access_identifier_in_invocation_part7809);
                        	access_identifier();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1535:4: brackets
                        {
                        	PushFollow(FOLLOW_brackets_in_invocation_part7814);
                        	brackets();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "invocation_part"


        // $ANTLR start "statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1539:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
        public void statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1539:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
                int alt249 = 3;
                alt249 = dfa249.Predict(input);
                switch (alt249) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1540:2: ( declaration_statement )=> declaration_statement
                        {
                        	PushFollow(FOLLOW_declaration_statement_in_statement7831);
                        	declaration_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1541:4: ( identifier ':' )=> labeled_statement
                        {
                        	PushFollow(FOLLOW_labeled_statement_in_statement7846);
                        	labeled_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1542:4: embedded_statement
                        {
                        	PushFollow(FOLLOW_embedded_statement_in_statement7851);
                        	embedded_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "statement"


        // $ANTLR start "embedded_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1544:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
        public void embedded_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1544:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
                int alt250 = 13;
                alt250 = dfa250.Predict(input);
                switch (alt250) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1545:2: block
                        {
                        	PushFollow(FOLLOW_block_in_embedded_statement7861);
                        	block();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1546:4: selection_statement
                        {
                        	PushFollow(FOLLOW_selection_statement_in_embedded_statement7866);
                        	selection_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1547:4: iteration_statement
                        {
                        	PushFollow(FOLLOW_iteration_statement_in_embedded_statement7872);
                        	iteration_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1548:4: jump_statement
                        {
                        	PushFollow(FOLLOW_jump_statement_in_embedded_statement7878);
                        	jump_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1549:4: try_statement
                        {
                        	PushFollow(FOLLOW_try_statement_in_embedded_statement7885);
                        	try_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1550:4: checked_statement
                        {
                        	PushFollow(FOLLOW_checked_statement_in_embedded_statement7890);
                        	checked_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1551:4: unchecked_statement
                        {
                        	PushFollow(FOLLOW_unchecked_statement_in_embedded_statement7895);
                        	unchecked_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1552:4: lock_statement
                        {
                        	PushFollow(FOLLOW_lock_statement_in_embedded_statement7900);
                        	lock_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1553:4: using_statement
                        {
                        	PushFollow(FOLLOW_using_statement_in_embedded_statement7905);
                        	using_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1554:4: yield_statement
                        {
                        	PushFollow(FOLLOW_yield_statement_in_embedded_statement7911);
                        	yield_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1555:4: unsafe_statement
                        {
                        	PushFollow(FOLLOW_unsafe_statement_in_embedded_statement7917);
                        	unsafe_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 12 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1556:4: fixed_statement
                        {
                        	PushFollow(FOLLOW_fixed_statement_in_embedded_statement7922);
                        	fixed_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 13 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1557:4: expression_statement
                        {
                        	PushFollow(FOLLOW_expression_statement_in_embedded_statement7927);
                        	expression_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "embedded_statement"


        // $ANTLR start "fixed_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1559:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
        public void fixed_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1559:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1560:2: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
                {
                	Match(input,262,FOLLOW_262_in_fixed_statement7937); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_fixed_statement7941); if (state.failed) return ;
                	PushFollow(FOLLOW_pointer_type_in_fixed_statement7945);
                	pointer_type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement7947);
                	fixed_pointer_declarators();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_fixed_statement7951); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_fixed_statement7955);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "fixed_statement"


        // $ANTLR start "fixed_pointer_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1561:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
        public void fixed_pointer_declarators() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1561:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1562:2: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
                {
                	PushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7963);
                	fixed_pointer_declarator();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1562:29: ( ',' fixed_pointer_declarator )*
                	do 
                	{
                	    int alt251 = 2;
                	    int LA251_0 = input.LA(1);

                	    if ( (LA251_0 == COMMA) )
                	    {
                	        alt251 = 1;
                	    }


                	    switch (alt251) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1562:30: ',' fixed_pointer_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_fixed_pointer_declarators7968); if (state.failed) return ;
                			    	PushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7972);
                			    	fixed_pointer_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop251;
                	    }
                	} while (true);

                	loop251:
                		;	// Stops C# compiler whining that label 'loop251' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "fixed_pointer_declarators"


        // $ANTLR start "fixed_pointer_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1563:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
        public void fixed_pointer_declarator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1563:25: ( identifier '=' fixed_pointer_initializer )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1564:2: identifier '=' fixed_pointer_initializer
                {
                	PushFollow(FOLLOW_identifier_in_fixed_pointer_declarator7982);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,ASSIGN,FOLLOW_ASSIGN_in_fixed_pointer_declarator7986); if (state.failed) return ;
                	PushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator7990);
                	fixed_pointer_initializer();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "fixed_pointer_declarator"


        // $ANTLR start "fixed_pointer_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1565:1: fixed_pointer_initializer : expression ;
        public void fixed_pointer_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1565:26: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1567:2: expression
                {
                	PushFollow(FOLLOW_expression_in_fixed_pointer_initializer8000);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "fixed_pointer_initializer"


        // $ANTLR start "unsafe_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1568:1: unsafe_statement : 'unsafe' block ;
        public void unsafe_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1568:17: ( 'unsafe' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1569:2: 'unsafe' block
                {
                	Match(input,198,FOLLOW_198_in_unsafe_statement8007); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_unsafe_statement8011);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unsafe_statement"


        // $ANTLR start "labeled_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1570:1: labeled_statement : identifier ':' statement ;
        public void labeled_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1570:18: ( identifier ':' statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1571:2: identifier ':' statement
                {
                	PushFollow(FOLLOW_identifier_in_labeled_statement8018);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,211,FOLLOW_211_in_labeled_statement8022); if (state.failed) return ;
                	PushFollow(FOLLOW_statement_in_labeled_statement8026);
                	statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "labeled_statement"


        // $ANTLR start "declaration_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1572:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
        public void declaration_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1572:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1573:2: ( local_variable_declaration | local_constant_declaration ) ';'
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1573:2: ( local_variable_declaration | local_constant_declaration )
                	int alt252 = 2;
                	int LA252_0 = input.LA(1);

                	if ( (LA252_0 == OBJECT || (LA252_0 >= BOOL && LA252_0 <= IDENTIFIER) || (LA252_0 >= ELIF && LA252_0 <= UNDEF) || LA252_0 == 195 || LA252_0 == 206 || LA252_0 == 221 || (LA252_0 >= 224 && LA252_0 <= 239) || (LA252_0 >= 241 && LA252_0 <= 244) || (LA252_0 >= 247 && LA252_0 <= 254) || LA252_0 == 256 || (LA252_0 >= 263 && LA252_0 <= 264) || (LA252_0 >= 274 && LA252_0 <= 277)) )
                	{
                	    alt252 = 1;
                	}
                	else if ( (LA252_0 == 205) )
                	{
                	    alt252 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d252s0 =
                	        new NoViableAltException("", 252, 0, input);

                	    throw nvae_d252s0;
                	}
                	switch (alt252) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1573:3: local_variable_declaration
                	        {
                	        	PushFollow(FOLLOW_local_variable_declaration_in_declaration_statement8035);
                	        	local_variable_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1574:4: local_constant_declaration
                	        {
                	        	PushFollow(FOLLOW_local_constant_declaration_in_declaration_statement8041);
                	        	local_constant_declaration();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_declaration_statement8044); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "declaration_statement"


        // $ANTLR start "local_variable_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1575:1: local_variable_declaration : local_variable_type local_variable_declarators ;
        public void local_variable_declaration() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1575:27: ( local_variable_type local_variable_declarators )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1576:2: local_variable_type local_variable_declarators
                {
                	PushFollow(FOLLOW_local_variable_type_in_local_variable_declaration8052);
                	local_variable_type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration8056);
                	local_variable_declarators();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "local_variable_declaration"


        // $ANTLR start "local_variable_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1577:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
        public void local_variable_type() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1577:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
                int alt253 = 3;
                switch ( input.LA(1) ) 
                {
                case 263:
                	{
                    int LA253_1 = input.LA(2);

                    if ( (synpred36_TemplateExtracter()) )
                    {
                        alt253 = 1;
                    }
                    else if ( (true) )
                    {
                        alt253 = 3;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d253s1 =
                            new NoViableAltException("", 253, 1, input);

                        throw nvae_d253s1;
                    }
                    }
                    break;
                case 264:
                	{
                    int LA253_2 = input.LA(2);

                    if ( (synpred37_TemplateExtracter()) )
                    {
                        alt253 = 2;
                    }
                    else if ( (true) )
                    {
                        alt253 = 3;
                    }
                    else 
                    {
                        if ( state.backtracking > 0 ) {state.failed = true; return ;}
                        NoViableAltException nvae_d253s2 =
                            new NoViableAltException("", 253, 2, input);

                        throw nvae_d253s2;
                    }
                    }
                    break;
                case OBJECT:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case IDENTIFIER:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 206:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 251:
                case 252:
                case 253:
                case 254:
                case 256:
                case 274:
                case 275:
                case 276:
                case 277:
                	{
                    alt253 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d253s0 =
                	        new NoViableAltException("", 253, 0, input);

                	    throw nvae_d253s0;
                }

                switch (alt253) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1578:2: ( 'var' )=> 'var'
                        {
                        	Match(input,263,FOLLOW_263_in_local_variable_type8070); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1579:4: ( 'dynamic' )=> 'dynamic'
                        {
                        	Match(input,264,FOLLOW_264_in_local_variable_type8081); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1580:4: type
                        {
                        	PushFollow(FOLLOW_type_in_local_variable_type8086);
                        	type();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "local_variable_type"


        // $ANTLR start "local_variable_declarators"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1581:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
        public void local_variable_declarators() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1581:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1582:2: local_variable_declarator ( ',' local_variable_declarator )*
                {
                	PushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators8094);
                	local_variable_declarator();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1582:28: ( ',' local_variable_declarator )*
                	do 
                	{
                	    int alt254 = 2;
                	    int LA254_0 = input.LA(1);

                	    if ( (LA254_0 == COMMA) )
                	    {
                	        alt254 = 1;
                	    }


                	    switch (alt254) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1582:29: ',' local_variable_declarator
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_local_variable_declarators8097); if (state.failed) return ;
                			    	PushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators8099);
                			    	local_variable_declarator();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop254;
                	    }
                	} while (true);

                	loop254:
                		;	// Stops C# compiler whining that label 'loop254' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "local_variable_declarators"


        // $ANTLR start "local_variable_declarator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1583:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
        public void local_variable_declarator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1583:26: ( identifier ( '=' local_variable_initializer )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1584:2: identifier ( '=' local_variable_initializer )?
                {
                	PushFollow(FOLLOW_identifier_in_local_variable_declarator8109);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1584:13: ( '=' local_variable_initializer )?
                	int alt255 = 2;
                	int LA255_0 = input.LA(1);

                	if ( (LA255_0 == ASSIGN) )
                	{
                	    alt255 = 1;
                	}
                	switch (alt255) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1584:14: '=' local_variable_initializer
                	        {
                	        	Match(input,ASSIGN,FOLLOW_ASSIGN_in_local_variable_declarator8112); if (state.failed) return ;
                	        	PushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator8116);
                	        	local_variable_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "local_variable_declarator"


        // $ANTLR start "local_variable_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1585:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
        public void local_variable_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1585:27: ( expression | array_initializer | stackalloc_initializer )
                int alt256 = 3;
                switch ( input.LA(1) ) 
                {
                case MONONOT:
                case MONOTWIDDLE:
                case NEW_ARRAY:
                case OBJECT:
                case THIS:
                case LPAREN:
                case BIT_AND:
                case PLUS:
                case MINUS:
                case STAR:
                case BOOL:
                case BYTE:
                case CHAR:
                case SHORT:
                case INT:
                case LONG:
                case FLOAT:
                case DOUBLE:
                case IDENTIFIER:
                case Real_literal:
                case NUMBER:
                case Hex_number:
                case Character_literal:
                case STRINGLITERAL:
                case Verbatim_string_literal:
                case TRUE:
                case FALSE:
                case NULL:
                case ELIF:
                case ENDIF:
                case DEFINE:
                case UNDEF:
                case 195:
                case 197:
                case 207:
                case 209:
                case 210:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                case 219:
                case 221:
                case 224:
                case 225:
                case 226:
                case 227:
                case 228:
                case 229:
                case 230:
                case 231:
                case 232:
                case 233:
                case 234:
                case 235:
                case 236:
                case 237:
                case 238:
                case 239:
                case 241:
                case 242:
                case 243:
                case 244:
                case 247:
                case 248:
                case 249:
                case 250:
                case 251:
                case 252:
                case 253:
                case 254:
                case 256:
                case 263:
                case 264:
                case 274:
                case 275:
                case 276:
                case 277:
                	{
                    alt256 = 1;
                    }
                    break;
                case OPEN_BRACE:
                	{
                    alt256 = 2;
                    }
                    break;
                case 265:
                	{
                    alt256 = 3;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d256s0 =
                	        new NoViableAltException("", 256, 0, input);

                	    throw nvae_d256s0;
                }

                switch (alt256) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1586:2: expression
                        {
                        	PushFollow(FOLLOW_expression_in_local_variable_initializer8127);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1587:4: array_initializer
                        {
                        	PushFollow(FOLLOW_array_initializer_in_local_variable_initializer8132);
                        	array_initializer();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1588:4: stackalloc_initializer
                        {
                        	PushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer8138);
                        	stackalloc_initializer();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "local_variable_initializer"


        // $ANTLR start "stackalloc_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1589:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
        public void stackalloc_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1589:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1590:2: 'stackalloc' unmanaged_type '[' expression ']'
                {
                	Match(input,265,FOLLOW_265_in_stackalloc_initializer8145); if (state.failed) return ;
                	PushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer8149);
                	unmanaged_type();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,OPEN_BRACKET,FOLLOW_OPEN_BRACKET_in_stackalloc_initializer8153); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_stackalloc_initializer8157);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,CLOSE_BRACKET,FOLLOW_CLOSE_BRACKET_in_stackalloc_initializer8161); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "stackalloc_initializer"


        // $ANTLR start "local_constant_declaration"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1591:1: local_constant_declaration : 'const' type constant_declarators[$type.thetext] ;
        public void local_constant_declaration() // throws RecognitionException [1]
        {   
            string type50 = default(string);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1591:27: ( 'const' type constant_declarators[$type.thetext] )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1592:2: 'const' type constant_declarators[$type.thetext]
                {
                	Match(input,205,FOLLOW_205_in_local_constant_declaration8169); if (state.failed) return ;
                	PushFollow(FOLLOW_type_in_local_constant_declaration8173);
                	type50 = type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_constant_declarators_in_local_constant_declaration8177);
                	constant_declarators(type50);
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "local_constant_declaration"


        // $ANTLR start "expression_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1593:1: expression_statement : expression ';' ;
        public void expression_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1593:21: ( expression ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1594:2: expression ';'
                {
                	PushFollow(FOLLOW_expression_in_expression_statement8186);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_expression_statement8190); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "expression_statement"


        // $ANTLR start "statement_expression"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1597:1: statement_expression : expression ;
        public void statement_expression() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1597:21: ( expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1598:2: expression
                {
                	PushFollow(FOLLOW_expression_in_statement_expression8200);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "statement_expression"


        // $ANTLR start "selection_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1600:1: selection_statement : ( if_statement | switch_statement );
        public void selection_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1600:20: ( if_statement | switch_statement )
                int alt257 = 2;
                int LA257_0 = input.LA(1);

                if ( (LA257_0 == IF) )
                {
                    alt257 = 1;
                }
                else if ( (LA257_0 == 266) )
                {
                    alt257 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d257s0 =
                        new NoViableAltException("", 257, 0, input);

                    throw nvae_d257s0;
                }
                switch (alt257) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1601:2: if_statement
                        {
                        	PushFollow(FOLLOW_if_statement_in_selection_statement8209);
                        	if_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1602:4: switch_statement
                        {
                        	PushFollow(FOLLOW_switch_statement_in_selection_statement8214);
                        	switch_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "selection_statement"


        // $ANTLR start "if_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1603:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
        public void if_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1603:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1605:2: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
                {
                	Match(input,IF,FOLLOW_IF_in_if_statement8224); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_if_statement8228); if (state.failed) return ;
                	PushFollow(FOLLOW_boolean_expression_in_if_statement8232);
                	boolean_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_if_statement8236); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_if_statement8240);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1605:61: ( ( 'else' )=> else_statement )?
                	int alt258 = 2;
                	int LA258_0 = input.LA(1);

                	if ( (LA258_0 == ELSE) )
                	{
                	    int LA258_1 = input.LA(2);

                	    if ( (synpred38_TemplateExtracter()) )
                	    {
                	        alt258 = 1;
                	    }
                	}
                	switch (alt258) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1605:62: ( 'else' )=> else_statement
                	        {
                	        	PushFollow(FOLLOW_else_statement_in_if_statement8249);
                	        	else_statement();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "if_statement"


        // $ANTLR start "else_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1607:1: else_statement : 'else' embedded_statement ;
        public void else_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1607:15: ( 'else' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1608:2: 'else' embedded_statement
                {
                	Match(input,ELSE,FOLLOW_ELSE_in_else_statement8260); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_else_statement8264);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "else_statement"


        // $ANTLR start "switch_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1609:1: switch_statement : 'switch' '(' expression ')' switch_block ;
        public void switch_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1609:17: ( 'switch' '(' expression ')' switch_block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1610:2: 'switch' '(' expression ')' switch_block
                {
                	Match(input,266,FOLLOW_266_in_switch_statement8272); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_switch_statement8276); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_switch_statement8280);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_switch_statement8284); if (state.failed) return ;
                	PushFollow(FOLLOW_switch_block_in_switch_statement8288);
                	switch_block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "switch_statement"


        // $ANTLR start "switch_block"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1611:1: switch_block : '{' ( switch_sections )? '}' ;
        public void switch_block() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1611:13: ( '{' ( switch_sections )? '}' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1612:2: '{' ( switch_sections )? '}'
                {
                	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_switch_block8296); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1612:8: ( switch_sections )?
                	int alt259 = 2;
                	int LA259_0 = input.LA(1);

                	if ( (LA259_0 == 217 || LA259_0 == 267) )
                	{
                	    alt259 = 1;
                	}
                	switch (alt259) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1612:8: switch_sections
                	        {
                	        	PushFollow(FOLLOW_switch_sections_in_switch_block8300);
                	        	switch_sections();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,CLOSE_BRACE,FOLLOW_CLOSE_BRACE_in_switch_block8305); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "switch_block"


        // $ANTLR start "switch_sections"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1613:1: switch_sections : ( switch_section )+ ;
        public void switch_sections() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1613:16: ( ( switch_section )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1614:2: ( switch_section )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1614:2: ( switch_section )+
                	int cnt260 = 0;
                	do 
                	{
                	    int alt260 = 2;
                	    int LA260_0 = input.LA(1);

                	    if ( (LA260_0 == 217 || LA260_0 == 267) )
                	    {
                	        alt260 = 1;
                	    }


                	    switch (alt260) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1614:2: switch_section
                			    {
                			    	PushFollow(FOLLOW_switch_section_in_switch_sections8313);
                			    	switch_section();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt260 >= 1 ) goto loop260;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee260 =
                		                new EarlyExitException(260, input);
                		            throw eee260;
                	    }
                	    cnt260++;
                	} while (true);

                	loop260:
                		;	// Stops C# compiler whining that label 'loop260' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "switch_sections"


        // $ANTLR start "switch_section"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1615:1: switch_section : switch_labels statement_list ;
        public void switch_section() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1615:15: ( switch_labels statement_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1616:2: switch_labels statement_list
                {
                	PushFollow(FOLLOW_switch_labels_in_switch_section8322);
                	switch_labels();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_statement_list_in_switch_section8326);
                	statement_list();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "switch_section"


        // $ANTLR start "switch_labels"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1617:1: switch_labels : ( switch_label )+ ;
        public void switch_labels() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1617:14: ( ( switch_label )+ )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1618:2: ( switch_label )+
                {
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1618:2: ( switch_label )+
                	int cnt261 = 0;
                	do 
                	{
                	    int alt261 = 2;
                	    int LA261_0 = input.LA(1);

                	    if ( (LA261_0 == 217) )
                	    {
                	        int LA261_2 = input.LA(2);

                	        if ( (LA261_2 == 211) )
                	        {
                	            alt261 = 1;
                	        }


                	    }
                	    else if ( (LA261_0 == 267) )
                	    {
                	        alt261 = 1;
                	    }


                	    switch (alt261) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1618:2: switch_label
                			    {
                			    	PushFollow(FOLLOW_switch_label_in_switch_labels8334);
                			    	switch_label();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    if ( cnt261 >= 1 ) goto loop261;
                			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		            EarlyExitException eee261 =
                		                new EarlyExitException(261, input);
                		            throw eee261;
                	    }
                	    cnt261++;
                	} while (true);

                	loop261:
                		;	// Stops C# compiler whining that label 'loop261' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "switch_labels"


        // $ANTLR start "switch_label"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1619:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
        public void switch_label() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1619:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
                int alt262 = 2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0 == 267) )
                {
                    alt262 = 1;
                }
                else if ( (LA262_0 == 217) )
                {
                    alt262 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                    NoViableAltException nvae_d262s0 =
                        new NoViableAltException("", 262, 0, input);

                    throw nvae_d262s0;
                }
                switch (alt262) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1620:2: ( 'case' constant_expression ':' )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1620:2: ( 'case' constant_expression ':' )
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1620:3: 'case' constant_expression ':'
                        	{
                        		Match(input,267,FOLLOW_267_in_switch_label8344); if (state.failed) return ;
                        		PushFollow(FOLLOW_constant_expression_in_switch_label8348);
                        		constant_expression();
                        		state._fsp--;
                        		if (state.failed) return ;
                        		Match(input,211,FOLLOW_211_in_switch_label8352); if (state.failed) return ;

                        	}


                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1621:4: ( 'default' ':' )
                        {
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1621:4: ( 'default' ':' )
                        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1621:5: 'default' ':'
                        	{
                        		Match(input,217,FOLLOW_217_in_switch_label8359); if (state.failed) return ;
                        		Match(input,211,FOLLOW_211_in_switch_label8363); if (state.failed) return ;

                        	}


                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "switch_label"


        // $ANTLR start "iteration_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1622:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
        public void iteration_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1622:20: ( while_statement | do_statement | for_statement | foreach_statement )
                int alt263 = 4;
                switch ( input.LA(1) ) 
                {
                case 268:
                	{
                    alt263 = 1;
                    }
                    break;
                case 269:
                	{
                    alt263 = 2;
                    }
                    break;
                case 270:
                	{
                    alt263 = 3;
                    }
                    break;
                case FOREACH:
                	{
                    alt263 = 4;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d263s0 =
                	        new NoViableAltException("", 263, 0, input);

                	    throw nvae_d263s0;
                }

                switch (alt263) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1623:2: while_statement
                        {
                        	PushFollow(FOLLOW_while_statement_in_iteration_statement8372);
                        	while_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1624:4: do_statement
                        {
                        	PushFollow(FOLLOW_do_statement_in_iteration_statement8377);
                        	do_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1625:4: for_statement
                        {
                        	PushFollow(FOLLOW_for_statement_in_iteration_statement8382);
                        	for_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1626:4: foreach_statement
                        {
                        	PushFollow(FOLLOW_foreach_statement_in_iteration_statement8387);
                        	foreach_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "iteration_statement"


        // $ANTLR start "while_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1627:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
        public void while_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1627:16: ( 'while' '(' boolean_expression ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1628:2: 'while' '(' boolean_expression ')' embedded_statement
                {
                	Match(input,268,FOLLOW_268_in_while_statement8395); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_while_statement8399); if (state.failed) return ;
                	PushFollow(FOLLOW_boolean_expression_in_while_statement8403);
                	boolean_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_while_statement8407); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_while_statement8411);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "while_statement"


        // $ANTLR start "do_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1629:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
        public void do_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1629:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1630:2: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
                {
                	Match(input,269,FOLLOW_269_in_do_statement8419); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_do_statement8423);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,268,FOLLOW_268_in_do_statement8427); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_do_statement8431); if (state.failed) return ;
                	PushFollow(FOLLOW_boolean_expression_in_do_statement8435);
                	boolean_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_do_statement8439); if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_do_statement8443); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "do_statement"


        // $ANTLR start "for_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1631:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
        public void for_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1631:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:2: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
                {
                	Match(input,270,FOLLOW_270_in_for_statement8451); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_for_statement8455); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:16: ( for_initializer )?
                	int alt264 = 2;
                	int LA264_0 = input.LA(1);

                	if ( ((LA264_0 >= MONONOT && LA264_0 <= MONOTWIDDLE) || LA264_0 == NEW_ARRAY || (LA264_0 >= OBJECT && LA264_0 <= THIS) || LA264_0 == LPAREN || LA264_0 == BIT_AND || (LA264_0 >= PLUS && LA264_0 <= MINUS) || LA264_0 == STAR || (LA264_0 >= BOOL && LA264_0 <= NULL) || (LA264_0 >= ELIF && LA264_0 <= UNDEF) || LA264_0 == 195 || LA264_0 == 197 || (LA264_0 >= 206 && LA264_0 <= 207) || (LA264_0 >= 209 && LA264_0 <= 210) || (LA264_0 >= 214 && LA264_0 <= 219) || LA264_0 == 221 || (LA264_0 >= 224 && LA264_0 <= 239) || (LA264_0 >= 241 && LA264_0 <= 244) || (LA264_0 >= 247 && LA264_0 <= 254) || LA264_0 == 256 || (LA264_0 >= 263 && LA264_0 <= 264) || (LA264_0 >= 274 && LA264_0 <= 277)) )
                	{
                	    alt264 = 1;
                	}
                	switch (alt264) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:16: for_initializer
                	        {
                	        	PushFollow(FOLLOW_for_initializer_in_for_statement8459);
                	        	for_initializer();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_for_statement8464); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:41: ( for_condition )?
                	int alt265 = 2;
                	int LA265_0 = input.LA(1);

                	if ( ((LA265_0 >= MONONOT && LA265_0 <= MONOTWIDDLE) || LA265_0 == NEW_ARRAY || (LA265_0 >= OBJECT && LA265_0 <= THIS) || LA265_0 == LPAREN || LA265_0 == BIT_AND || (LA265_0 >= PLUS && LA265_0 <= MINUS) || LA265_0 == STAR || (LA265_0 >= BOOL && LA265_0 <= NULL) || (LA265_0 >= ELIF && LA265_0 <= UNDEF) || LA265_0 == 195 || LA265_0 == 197 || LA265_0 == 207 || (LA265_0 >= 209 && LA265_0 <= 210) || (LA265_0 >= 214 && LA265_0 <= 219) || LA265_0 == 221 || (LA265_0 >= 224 && LA265_0 <= 239) || (LA265_0 >= 241 && LA265_0 <= 244) || (LA265_0 >= 247 && LA265_0 <= 254) || LA265_0 == 256 || (LA265_0 >= 263 && LA265_0 <= 264) || (LA265_0 >= 274 && LA265_0 <= 277)) )
                	{
                	    alt265 = 1;
                	}
                	switch (alt265) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:41: for_condition
                	        {
                	        	PushFollow(FOLLOW_for_condition_in_for_statement8468);
                	        	for_condition();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_for_statement8473); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:64: ( for_iterator )?
                	int alt266 = 2;
                	int LA266_0 = input.LA(1);

                	if ( ((LA266_0 >= MONONOT && LA266_0 <= MONOTWIDDLE) || LA266_0 == NEW_ARRAY || (LA266_0 >= OBJECT && LA266_0 <= THIS) || LA266_0 == LPAREN || LA266_0 == BIT_AND || (LA266_0 >= PLUS && LA266_0 <= MINUS) || LA266_0 == STAR || (LA266_0 >= BOOL && LA266_0 <= NULL) || (LA266_0 >= ELIF && LA266_0 <= UNDEF) || LA266_0 == 195 || LA266_0 == 197 || LA266_0 == 207 || (LA266_0 >= 209 && LA266_0 <= 210) || (LA266_0 >= 214 && LA266_0 <= 219) || LA266_0 == 221 || (LA266_0 >= 224 && LA266_0 <= 239) || (LA266_0 >= 241 && LA266_0 <= 244) || (LA266_0 >= 247 && LA266_0 <= 254) || LA266_0 == 256 || (LA266_0 >= 263 && LA266_0 <= 264) || (LA266_0 >= 274 && LA266_0 <= 277)) )
                	{
                	    alt266 = 1;
                	}
                	switch (alt266) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1632:64: for_iterator
                	        {
                	        	PushFollow(FOLLOW_for_iterator_in_for_statement8477);
                	        	for_iterator();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_for_statement8482); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_for_statement8486);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "for_statement"


        // $ANTLR start "for_initializer"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1633:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
        public void for_initializer() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1633:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
                int alt267 = 2;
                alt267 = dfa267.Predict(input);
                switch (alt267) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1634:2: ( local_variable_declaration )=> local_variable_declaration
                        {
                        	PushFollow(FOLLOW_local_variable_declaration_in_for_initializer8500);
                        	local_variable_declaration();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1635:4: statement_expression_list
                        {
                        	PushFollow(FOLLOW_statement_expression_list_in_for_initializer8505);
                        	statement_expression_list();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "for_initializer"


        // $ANTLR start "for_condition"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1637:1: for_condition : boolean_expression ;
        public void for_condition() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1637:14: ( boolean_expression )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1638:2: boolean_expression
                {
                	PushFollow(FOLLOW_boolean_expression_in_for_condition8515);
                	boolean_expression();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "for_condition"


        // $ANTLR start "for_iterator"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1639:1: for_iterator : statement_expression_list ;
        public void for_iterator() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1639:13: ( statement_expression_list )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1640:2: statement_expression_list
                {
                	PushFollow(FOLLOW_statement_expression_list_in_for_iterator8523);
                	statement_expression_list();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "for_iterator"


        // $ANTLR start "statement_expression_list"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1641:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
        public void statement_expression_list() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1641:26: ( statement_expression ( ',' statement_expression )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1642:2: statement_expression ( ',' statement_expression )*
                {
                	PushFollow(FOLLOW_statement_expression_in_statement_expression_list8531);
                	statement_expression();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1642:23: ( ',' statement_expression )*
                	do 
                	{
                	    int alt268 = 2;
                	    int LA268_0 = input.LA(1);

                	    if ( (LA268_0 == COMMA) )
                	    {
                	        alt268 = 1;
                	    }


                	    switch (alt268) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1642:24: ',' statement_expression
                			    {
                			    	Match(input,COMMA,FOLLOW_COMMA_in_statement_expression_list8534); if (state.failed) return ;
                			    	PushFollow(FOLLOW_statement_expression_in_statement_expression_list8536);
                			    	statement_expression();
                			    	state._fsp--;
                			    	if (state.failed) return ;

                			    }
                			    break;

                			default:
                			    goto loop268;
                	    }
                	} while (true);

                	loop268:
                		;	// Stops C# compiler whining that label 'loop268' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "statement_expression_list"


        // $ANTLR start "foreach_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1643:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
        public void foreach_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1643:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1644:2: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
                {
                	Match(input,FOREACH,FOLLOW_FOREACH_in_foreach_statement8546); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_foreach_statement8550); if (state.failed) return ;
                	PushFollow(FOLLOW_local_variable_type_in_foreach_statement8554);
                	local_variable_type();
                	state._fsp--;
                	if (state.failed) return ;
                	PushFollow(FOLLOW_identifier_in_foreach_statement8558);
                	identifier();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,IN,FOLLOW_IN_in_foreach_statement8562); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_foreach_statement8566);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_foreach_statement8570); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_foreach_statement8574);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "foreach_statement"


        // $ANTLR start "jump_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1645:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
        public void jump_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1645:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
                int alt269 = 5;
                switch ( input.LA(1) ) 
                {
                case BREAK:
                	{
                    alt269 = 1;
                    }
                    break;
                case 271:
                	{
                    alt269 = 2;
                    }
                    break;
                case 272:
                	{
                    alt269 = 3;
                    }
                    break;
                case RETURN:
                	{
                    alt269 = 4;
                    }
                    break;
                case THROW:
                	{
                    alt269 = 5;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d269s0 =
                	        new NoViableAltException("", 269, 0, input);

                	    throw nvae_d269s0;
                }

                switch (alt269) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1646:2: break_statement
                        {
                        	PushFollow(FOLLOW_break_statement_in_jump_statement8582);
                        	break_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1647:4: continue_statement
                        {
                        	PushFollow(FOLLOW_continue_statement_in_jump_statement8587);
                        	continue_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1648:4: goto_statement
                        {
                        	PushFollow(FOLLOW_goto_statement_in_jump_statement8592);
                        	goto_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1649:4: return_statement
                        {
                        	PushFollow(FOLLOW_return_statement_in_jump_statement8597);
                        	return_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1650:4: throw_statement
                        {
                        	PushFollow(FOLLOW_throw_statement_in_jump_statement8602);
                        	throw_statement();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "jump_statement"


        // $ANTLR start "break_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1651:1: break_statement : 'break' ';' ;
        public void break_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1651:16: ( 'break' ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1652:2: 'break' ';'
                {
                	Match(input,BREAK,FOLLOW_BREAK_in_break_statement8610); if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_break_statement8614); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "break_statement"


        // $ANTLR start "continue_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1653:1: continue_statement : 'continue' ';' ;
        public void continue_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1653:19: ( 'continue' ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1654:2: 'continue' ';'
                {
                	Match(input,271,FOLLOW_271_in_continue_statement8622); if (state.failed) return ;
                	Match(input,SEMI,FOLLOW_SEMI_in_continue_statement8626); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "continue_statement"


        // $ANTLR start "goto_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1655:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
        public void goto_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1655:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1656:2: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
                {
                	Match(input,272,FOLLOW_272_in_goto_statement8634); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1656:11: ( identifier | 'case' constant_expression | 'default' )
                	int alt270 = 3;
                	switch ( input.LA(1) ) 
                	{
                	case IDENTIFIER:
                	case ELIF:
                	case ENDIF:
                	case DEFINE:
                	case UNDEF:
                	case 195:
                	case 221:
                	case 224:
                	case 225:
                	case 226:
                	case 227:
                	case 228:
                	case 229:
                	case 230:
                	case 231:
                	case 232:
                	case 233:
                	case 234:
                	case 235:
                	case 236:
                	case 237:
                	case 238:
                	case 239:
                	case 241:
                	case 242:
                	case 243:
                	case 244:
                	case 247:
                	case 248:
                	case 249:
                	case 250:
                	case 256:
                	case 263:
                	case 264:
                	case 274:
                	case 277:
                		{
                	    alt270 = 1;
                	    }
                	    break;
                	case 267:
                		{
                	    alt270 = 2;
                	    }
                	    break;
                	case 217:
                		{
                	    alt270 = 3;
                	    }
                	    break;
                		default:
                		    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                		    NoViableAltException nvae_d270s0 =
                		        new NoViableAltException("", 270, 0, input);

                		    throw nvae_d270s0;
                	}

                	switch (alt270) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1656:13: identifier
                	        {
                	        	PushFollow(FOLLOW_identifier_in_goto_statement8640);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1657:7: 'case' constant_expression
                	        {
                	        	Match(input,267,FOLLOW_267_in_goto_statement8648); if (state.failed) return ;
                	        	PushFollow(FOLLOW_constant_expression_in_goto_statement8652);
                	        	constant_expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 3 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1658:7: 'default'
                	        {
                	        	Match(input,217,FOLLOW_217_in_goto_statement8660); if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_goto_statement8665); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "goto_statement"


        // $ANTLR start "return_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1659:1: return_statement : 'return' ( expression )? ';' ;
        public void return_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1659:17: ( 'return' ( expression )? ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1660:2: 'return' ( expression )? ';'
                {
                	Match(input,RETURN,FOLLOW_RETURN_in_return_statement8673); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1660:13: ( expression )?
                	int alt271 = 2;
                	int LA271_0 = input.LA(1);

                	if ( ((LA271_0 >= MONONOT && LA271_0 <= MONOTWIDDLE) || LA271_0 == NEW_ARRAY || (LA271_0 >= OBJECT && LA271_0 <= THIS) || LA271_0 == LPAREN || LA271_0 == BIT_AND || (LA271_0 >= PLUS && LA271_0 <= MINUS) || LA271_0 == STAR || (LA271_0 >= BOOL && LA271_0 <= NULL) || (LA271_0 >= ELIF && LA271_0 <= UNDEF) || LA271_0 == 195 || LA271_0 == 197 || LA271_0 == 207 || (LA271_0 >= 209 && LA271_0 <= 210) || (LA271_0 >= 214 && LA271_0 <= 219) || LA271_0 == 221 || (LA271_0 >= 224 && LA271_0 <= 239) || (LA271_0 >= 241 && LA271_0 <= 244) || (LA271_0 >= 247 && LA271_0 <= 254) || LA271_0 == 256 || (LA271_0 >= 263 && LA271_0 <= 264) || (LA271_0 >= 274 && LA271_0 <= 277)) )
                	{
                	    alt271 = 1;
                	}
                	switch (alt271) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1660:13: expression
                	        {
                	        	PushFollow(FOLLOW_expression_in_return_statement8677);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_return_statement8682); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "return_statement"


        // $ANTLR start "throw_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1661:1: throw_statement : 'throw' ( expression )? ';' ;
        public void throw_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1661:16: ( 'throw' ( expression )? ';' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1662:2: 'throw' ( expression )? ';'
                {
                	Match(input,THROW,FOLLOW_THROW_in_throw_statement8690); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1662:12: ( expression )?
                	int alt272 = 2;
                	int LA272_0 = input.LA(1);

                	if ( ((LA272_0 >= MONONOT && LA272_0 <= MONOTWIDDLE) || LA272_0 == NEW_ARRAY || (LA272_0 >= OBJECT && LA272_0 <= THIS) || LA272_0 == LPAREN || LA272_0 == BIT_AND || (LA272_0 >= PLUS && LA272_0 <= MINUS) || LA272_0 == STAR || (LA272_0 >= BOOL && LA272_0 <= NULL) || (LA272_0 >= ELIF && LA272_0 <= UNDEF) || LA272_0 == 195 || LA272_0 == 197 || LA272_0 == 207 || (LA272_0 >= 209 && LA272_0 <= 210) || (LA272_0 >= 214 && LA272_0 <= 219) || LA272_0 == 221 || (LA272_0 >= 224 && LA272_0 <= 239) || (LA272_0 >= 241 && LA272_0 <= 244) || (LA272_0 >= 247 && LA272_0 <= 254) || LA272_0 == 256 || (LA272_0 >= 263 && LA272_0 <= 264) || (LA272_0 >= 274 && LA272_0 <= 277)) )
                	{
                	    alt272 = 1;
                	}
                	switch (alt272) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1662:12: expression
                	        {
                	        	PushFollow(FOLLOW_expression_in_throw_statement8694);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,SEMI,FOLLOW_SEMI_in_throw_statement8699); if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "throw_statement"


        // $ANTLR start "try_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1663:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
        public void try_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1663:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1664:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
                {
                	Match(input,TRY,FOLLOW_TRY_in_try_statement8712); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_try_statement8716);
                	block();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1664:23: ( catch_clauses ( finally_clause )? | finally_clause )
                	int alt274 = 2;
                	int LA274_0 = input.LA(1);

                	if ( (LA274_0 == CATCH) )
                	{
                	    alt274 = 1;
                	}
                	else if ( (LA274_0 == FINALLY) )
                	{
                	    alt274 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d274s0 =
                	        new NoViableAltException("", 274, 0, input);

                	    throw nvae_d274s0;
                	}
                	switch (alt274) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1664:25: catch_clauses ( finally_clause )?
                	        {
                	        	PushFollow(FOLLOW_catch_clauses_in_try_statement8722);
                	        	catch_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1664:41: ( finally_clause )?
                	        	int alt273 = 2;
                	        	int LA273_0 = input.LA(1);

                	        	if ( (LA273_0 == FINALLY) )
                	        	{
                	        	    alt273 = 1;
                	        	}
                	        	switch (alt273) 
                	        	{
                	        	    case 1 :
                	        	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1664:41: finally_clause
                	        	        {
                	        	        	PushFollow(FOLLOW_finally_clause_in_try_statement8726);
                	        	        	finally_clause();
                	        	        	state._fsp--;
                	        	        	if (state.failed) return ;

                	        	        }
                	        	        break;

                	        	}


                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1665:10: finally_clause
                	        {
                	        	PushFollow(FOLLOW_finally_clause_in_try_statement8738);
                	        	finally_clause();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "try_statement"


        // $ANTLR start "catch_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1667:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
        public void catch_clauses() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1667:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1668:2: 'catch' ( specific_catch_clauses | general_catch_clause )
                {
                	Match(input,CATCH,FOLLOW_CATCH_in_catch_clauses8747); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1668:12: ( specific_catch_clauses | general_catch_clause )
                	int alt275 = 2;
                	int LA275_0 = input.LA(1);

                	if ( (LA275_0 == LPAREN) )
                	{
                	    alt275 = 1;
                	}
                	else if ( (LA275_0 == OPEN_BRACE || LA275_0 == SEMI) )
                	{
                	    alt275 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d275s0 =
                	        new NoViableAltException("", 275, 0, input);

                	    throw nvae_d275s0;
                	}
                	switch (alt275) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1668:13: specific_catch_clauses
                	        {
                	        	PushFollow(FOLLOW_specific_catch_clauses_in_catch_clauses8752);
                	        	specific_catch_clauses();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1668:38: general_catch_clause
                	        {
                	        	PushFollow(FOLLOW_general_catch_clause_in_catch_clauses8756);
                	        	general_catch_clause();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "catch_clauses"


        // $ANTLR start "specific_catch_clauses"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1669:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
        public void specific_catch_clauses() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1669:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1670:2: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
                {
                	PushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses8765);
                	specific_catch_clause();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1670:26: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
                	do 
                	{
                	    int alt277 = 2;
                	    int LA277_0 = input.LA(1);

                	    if ( (LA277_0 == CATCH) )
                	    {
                	        alt277 = 1;
                	    }


                	    switch (alt277) 
                		{
                			case 1 :
                			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1670:27: 'catch' ( specific_catch_clause | general_catch_clause )
                			    {
                			    	Match(input,CATCH,FOLLOW_CATCH_in_specific_catch_clauses8770); if (state.failed) return ;
                			    	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1670:37: ( specific_catch_clause | general_catch_clause )
                			    	int alt276 = 2;
                			    	int LA276_0 = input.LA(1);

                			    	if ( (LA276_0 == LPAREN) )
                			    	{
                			    	    alt276 = 1;
                			    	}
                			    	else if ( (LA276_0 == OPEN_BRACE || LA276_0 == SEMI) )
                			    	{
                			    	    alt276 = 2;
                			    	}
                			    	else 
                			    	{
                			    	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                			    	    NoViableAltException nvae_d276s0 =
                			    	        new NoViableAltException("", 276, 0, input);

                			    	    throw nvae_d276s0;
                			    	}
                			    	switch (alt276) 
                			    	{
                			    	    case 1 :
                			    	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1670:38: specific_catch_clause
                			    	        {
                			    	        	PushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses8775);
                			    	        	specific_catch_clause();
                			    	        	state._fsp--;
                			    	        	if (state.failed) return ;

                			    	        }
                			    	        break;
                			    	    case 2 :
                			    	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1670:62: general_catch_clause
                			    	        {
                			    	        	PushFollow(FOLLOW_general_catch_clause_in_specific_catch_clauses8779);
                			    	        	general_catch_clause();
                			    	        	state._fsp--;
                			    	        	if (state.failed) return ;

                			    	        }
                			    	        break;

                			    	}


                			    }
                			    break;

                			default:
                			    goto loop277;
                	    }
                	} while (true);

                	loop277:
                		;	// Stops C# compiler whining that label 'loop277' has no statements


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "specific_catch_clauses"


        // $ANTLR start "specific_catch_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1671:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
        public void specific_catch_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1671:22: ( '(' class_type ( identifier )? ')' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1672:2: '(' class_type ( identifier )? ')' block
                {
                	Match(input,LPAREN,FOLLOW_LPAREN_in_specific_catch_clause8789); if (state.failed) return ;
                	PushFollow(FOLLOW_class_type_in_specific_catch_clause8793);
                	class_type();
                	state._fsp--;
                	if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1672:21: ( identifier )?
                	int alt278 = 2;
                	int LA278_0 = input.LA(1);

                	if ( (LA278_0 == IDENTIFIER || (LA278_0 >= ELIF && LA278_0 <= UNDEF) || LA278_0 == 195 || LA278_0 == 221 || (LA278_0 >= 224 && LA278_0 <= 239) || (LA278_0 >= 241 && LA278_0 <= 244) || (LA278_0 >= 247 && LA278_0 <= 250) || LA278_0 == 256 || (LA278_0 >= 263 && LA278_0 <= 264) || LA278_0 == 274 || LA278_0 == 277) )
                	{
                	    alt278 = 1;
                	}
                	switch (alt278) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1672:21: identifier
                	        {
                	        	PushFollow(FOLLOW_identifier_in_specific_catch_clause8797);
                	        	identifier();
                	        	state._fsp--;
                	        	if (state.failed) return ;

                	        }
                	        break;

                	}

                	Match(input,RPAREN,FOLLOW_RPAREN_in_specific_catch_clause8802); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_specific_catch_clause8806);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "specific_catch_clause"


        // $ANTLR start "general_catch_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1673:1: general_catch_clause : block ;
        public void general_catch_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1673:21: ( block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1674:2: block
                {
                	PushFollow(FOLLOW_block_in_general_catch_clause8814);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "general_catch_clause"


        // $ANTLR start "finally_clause"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1675:1: finally_clause : 'finally' block ;
        public void finally_clause() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1675:15: ( 'finally' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1676:2: 'finally' block
                {
                	Match(input,FINALLY,FOLLOW_FINALLY_in_finally_clause8822); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_finally_clause8826);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "finally_clause"


        // $ANTLR start "checked_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1677:1: checked_statement : 'checked' block ;
        public void checked_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1677:18: ( 'checked' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1678:2: 'checked' block
                {
                	Match(input,215,FOLLOW_215_in_checked_statement8834); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_checked_statement8838);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "checked_statement"


        // $ANTLR start "unchecked_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1679:1: unchecked_statement : 'unchecked' block ;
        public void unchecked_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1679:20: ( 'unchecked' block )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1680:2: 'unchecked' block
                {
                	Match(input,216,FOLLOW_216_in_unchecked_statement8846); if (state.failed) return ;
                	PushFollow(FOLLOW_block_in_unchecked_statement8850);
                	block();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "unchecked_statement"


        // $ANTLR start "lock_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1681:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
        public void lock_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1681:15: ( 'lock' '(' expression ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1682:2: 'lock' '(' expression ')' embedded_statement
                {
                	Match(input,273,FOLLOW_273_in_lock_statement8858); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_lock_statement8862); if (state.failed) return ;
                	PushFollow(FOLLOW_expression_in_lock_statement8865);
                	expression();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_lock_statement8869); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_lock_statement8873);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "lock_statement"


        // $ANTLR start "using_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1683:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
        public void using_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1683:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1684:2: 'using' '(' resource_acquisition ')' embedded_statement
                {
                	Match(input,USING,FOLLOW_USING_in_using_statement8881); if (state.failed) return ;
                	Match(input,LPAREN,FOLLOW_LPAREN_in_using_statement8885); if (state.failed) return ;
                	PushFollow(FOLLOW_resource_acquisition_in_using_statement8890);
                	resource_acquisition();
                	state._fsp--;
                	if (state.failed) return ;
                	Match(input,RPAREN,FOLLOW_RPAREN_in_using_statement8894); if (state.failed) return ;
                	PushFollow(FOLLOW_embedded_statement_in_using_statement8899);
                	embedded_statement();
                	state._fsp--;
                	if (state.failed) return ;

                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "using_statement"


        // $ANTLR start "resource_acquisition"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1685:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
        public void resource_acquisition() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1685:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
                int alt279 = 2;
                alt279 = dfa279.Predict(input);
                switch (alt279) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1686:2: ( local_variable_declaration )=> local_variable_declaration
                        {
                        	PushFollow(FOLLOW_local_variable_declaration_in_resource_acquisition8913);
                        	local_variable_declaration();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1687:4: expression
                        {
                        	PushFollow(FOLLOW_expression_in_resource_acquisition8918);
                        	expression();
                        	state._fsp--;
                        	if (state.failed) return ;

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "resource_acquisition"


        // $ANTLR start "yield_statement"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1688:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
        public void yield_statement() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1688:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1689:2: 'yield' ( 'return' expression ';' | 'break' ';' )
                {
                	Match(input,274,FOLLOW_274_in_yield_statement8926); if (state.failed) return ;
                	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1689:12: ( 'return' expression ';' | 'break' ';' )
                	int alt280 = 2;
                	int LA280_0 = input.LA(1);

                	if ( (LA280_0 == RETURN) )
                	{
                	    alt280 = 1;
                	}
                	else if ( (LA280_0 == BREAK) )
                	{
                	    alt280 = 2;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    NoViableAltException nvae_d280s0 =
                	        new NoViableAltException("", 280, 0, input);

                	    throw nvae_d280s0;
                	}
                	switch (alt280) 
                	{
                	    case 1 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1689:13: 'return' expression ';'
                	        {
                	        	Match(input,RETURN,FOLLOW_RETURN_in_yield_statement8931); if (state.failed) return ;
                	        	PushFollow(FOLLOW_expression_in_yield_statement8935);
                	        	expression();
                	        	state._fsp--;
                	        	if (state.failed) return ;
                	        	Match(input,SEMI,FOLLOW_SEMI_in_yield_statement8939); if (state.failed) return ;

                	        }
                	        break;
                	    case 2 :
                	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1690:14: 'break' ';'
                	        {
                	        	Match(input,BREAK,FOLLOW_BREAK_in_yield_statement8954); if (state.failed) return ;
                	        	Match(input,SEMI,FOLLOW_SEMI_in_yield_statement8958); if (state.failed) return ;

                	        }
                	        break;

                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "yield_statement"


        // $ANTLR start "predefined_type"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1696:1: predefined_type returns [string thetext] : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
        public string predefined_type() // throws RecognitionException [1]
        {   
            string thetext = default(string);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1696:41: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
                int alt281 = 15;
                switch ( input.LA(1) ) 
                {
                case BOOL:
                	{
                    alt281 = 1;
                    }
                    break;
                case BYTE:
                	{
                    alt281 = 2;
                    }
                    break;
                case CHAR:
                	{
                    alt281 = 3;
                    }
                    break;
                case 275:
                	{
                    alt281 = 4;
                    }
                    break;
                case DOUBLE:
                	{
                    alt281 = 5;
                    }
                    break;
                case FLOAT:
                	{
                    alt281 = 6;
                    }
                    break;
                case INT:
                	{
                    alt281 = 7;
                    }
                    break;
                case LONG:
                	{
                    alt281 = 8;
                    }
                    break;
                case OBJECT:
                	{
                    alt281 = 9;
                    }
                    break;
                case 251:
                	{
                    alt281 = 10;
                    }
                    break;
                case SHORT:
                	{
                    alt281 = 11;
                    }
                    break;
                case 276:
                	{
                    alt281 = 12;
                    }
                    break;
                case 253:
                	{
                    alt281 = 13;
                    }
                    break;
                case 254:
                	{
                    alt281 = 14;
                    }
                    break;
                case 252:
                	{
                    alt281 = 15;
                    }
                    break;
                	default:
                	    if ( state.backtracking > 0 ) {state.failed = true; return thetext;}
                	    NoViableAltException nvae_d281s0 =
                	        new NoViableAltException("", 281, 0, input);

                	    throw nvae_d281s0;
                }

                switch (alt281) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1697:4: 'bool'
                        {
                        	Match(input,BOOL,FOLLOW_BOOL_in_predefined_type8978); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Boolean"; 
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1698:7: 'byte'
                        {
                        	Match(input,BYTE,FOLLOW_BYTE_in_predefined_type8992); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Byte"; 
                        	}

                        }
                        break;
                    case 3 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1699:7: 'char'
                        {
                        	Match(input,CHAR,FOLLOW_CHAR_in_predefined_type9009); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Char"; 
                        	}

                        }
                        break;
                    case 4 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1700:7: 'decimal'
                        {
                        	Match(input,275,FOLLOW_275_in_predefined_type9023); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Decimal"; 
                        	}

                        }
                        break;
                    case 5 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1701:7: 'double'
                        {
                        	Match(input,DOUBLE,FOLLOW_DOUBLE_in_predefined_type9034); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Double"; 
                        	}

                        }
                        break;
                    case 6 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1702:7: 'float'
                        {
                        	Match(input,FLOAT,FOLLOW_FLOAT_in_predefined_type9046); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Single"; 
                        	}

                        }
                        break;
                    case 7 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1703:7: 'int'
                        {
                        	Match(input,INT,FOLLOW_INT_in_predefined_type9059); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Int32"; 
                        	}

                        }
                        break;
                    case 8 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1704:7: 'long'
                        {
                        	Match(input,LONG,FOLLOW_LONG_in_predefined_type9076); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Int64"; 
                        	}

                        }
                        break;
                    case 9 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1705:7: 'object'
                        {
                        	Match(input,OBJECT,FOLLOW_OBJECT_in_predefined_type9090); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Object"; 
                        	}

                        }
                        break;
                    case 10 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1706:7: 'sbyte'
                        {
                        	Match(input,251,FOLLOW_251_in_predefined_type9102); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.SByte"; 
                        	}

                        }
                        break;
                    case 11 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1707:4: 'short'
                        {
                        	Match(input,SHORT,FOLLOW_SHORT_in_predefined_type9112); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.Int16"; 
                        	}

                        }
                        break;
                    case 12 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1708:7: 'string'
                        {
                        	Match(input,276,FOLLOW_276_in_predefined_type9125); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.String"; 
                        	}

                        }
                        break;
                    case 13 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1709:7: 'uint'
                        {
                        	Match(input,253,FOLLOW_253_in_predefined_type9137); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.UInt32"; 
                        	}

                        }
                        break;
                    case 14 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1710:7: 'ulong'
                        {
                        	Match(input,254,FOLLOW_254_in_predefined_type9151); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.UInt64"; 
                        	}

                        }
                        break;
                    case 15 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1711:7: 'ushort'
                        {
                        	Match(input,252,FOLLOW_252_in_predefined_type9164); if (state.failed) return thetext;
                        	if ( (state.backtracking==0) )
                        	{
                        	   thetext =  "System.UInt16"; 
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return thetext;
        }
        // $ANTLR end "predefined_type"

        public class identifier_return : TreeRuleReturnScope
        {
            public string thetext;
        };

        // $ANTLR start "identifier"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1714:1: identifier returns [string thetext] : ( IDENTIFIER | also_keyword );
        public TemplateExtracter.identifier_return identifier() // throws RecognitionException [1]
        {   
            TemplateExtracter.identifier_return retval = new TemplateExtracter.identifier_return();
            retval.start = input.LT(1);

            CommonTree IDENTIFIER51 = null;
            TemplateExtracter.also_keyword_return also_keyword52 = default(TemplateExtracter.also_keyword_return);


            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1714:36: ( IDENTIFIER | also_keyword )
                int alt282 = 2;
                int LA282_0 = input.LA(1);

                if ( (LA282_0 == IDENTIFIER) )
                {
                    alt282 = 1;
                }
                else if ( ((LA282_0 >= ELIF && LA282_0 <= UNDEF) || LA282_0 == 195 || LA282_0 == 221 || (LA282_0 >= 224 && LA282_0 <= 239) || (LA282_0 >= 241 && LA282_0 <= 244) || (LA282_0 >= 247 && LA282_0 <= 250) || LA282_0 == 256 || (LA282_0 >= 263 && LA282_0 <= 264) || LA282_0 == 274 || LA282_0 == 277) )
                {
                    alt282 = 2;
                }
                else 
                {
                    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                    NoViableAltException nvae_d282s0 =
                        new NoViableAltException("", 282, 0, input);

                    throw nvae_d282s0;
                }
                switch (alt282) 
                {
                    case 1 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1715:3: IDENTIFIER
                        {
                        	IDENTIFIER51=(CommonTree)Match(input,IDENTIFIER,FOLLOW_IDENTIFIER_in_identifier9186); if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  ((IDENTIFIER51 != null) ? IDENTIFIER51.Text : null); 
                        	}

                        }
                        break;
                    case 2 :
                        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1715:49: also_keyword
                        {
                        	PushFollow(FOLLOW_also_keyword_in_identifier9192);
                        	also_keyword52 = also_keyword();
                        	state._fsp--;
                        	if (state.failed) return retval;
                        	if ( (state.backtracking==0) )
                        	{
                        	   retval.thetext =  ((also_keyword52 != null) ? input.TokenStream.ToString(
                        	    input.TreeAdaptor.GetTokenStartIndex(also_keyword52.Start),
                        	    input.TreeAdaptor.GetTokenStopIndex(also_keyword52.Start)) : null); 
                        	}

                        }
                        break;

                }
            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "identifier"


        // $ANTLR start "keyword"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1717:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
        public void keyword() // throws RecognitionException [1]
        {   
            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1717:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( input.LA(1) == ENUM || (input.LA(1) >= PUBLIC && input.LA(1) <= IN) || input.LA(1) == IF || (input.LA(1) >= BOOL && input.LA(1) <= DOUBLE) || (input.LA(1) >= TRUE && input.LA(1) <= NULL) || input.LA(1) == USING || (input.LA(1) >= 193 && input.LA(1) <= 194) || (input.LA(1) >= 197 && input.LA(1) <= 207) || (input.LA(1) >= 212 && input.LA(1) <= 219) || (input.LA(1) >= 222 && input.LA(1) <= 223) || input.LA(1) == 240 || input.LA(1) == 245 || (input.LA(1) >= 251 && input.LA(1) <= 255) || (input.LA(1) >= 257 && input.LA(1) <= 262) || (input.LA(1) >= 265 && input.LA(1) <= 267) || (input.LA(1) >= 269 && input.LA(1) <= 273) || (input.LA(1) >= 275 && input.LA(1) <= 276) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return ;
        }
        // $ANTLR end "keyword"

        public class also_keyword_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "also_keyword"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1720:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'get' | 'set' | 'var' | '__arglist' | 'dynamic' | 'elif' | 'endif' | 'define' | 'undef' | 'extends' );
        public TemplateExtracter.also_keyword_return also_keyword() // throws RecognitionException [1]
        {   
            TemplateExtracter.also_keyword_return retval = new TemplateExtracter.also_keyword_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1720:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'get' | 'set' | 'var' | '__arglist' | 'dynamic' | 'elif' | 'endif' | 'define' | 'undef' | 'extends' )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= ELIF && input.LA(1) <= UNDEF) || input.LA(1) == 195 || input.LA(1) == 221 || (input.LA(1) >= 224 && input.LA(1) <= 239) || (input.LA(1) >= 241 && input.LA(1) <= 244) || (input.LA(1) >= 247 && input.LA(1) <= 250) || input.LA(1) == 256 || (input.LA(1) >= 263 && input.LA(1) <= 264) || input.LA(1) == 274 || input.LA(1) == 277 ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "also_keyword"

        public class literal_return : TreeRuleReturnScope
        {
        };

        // $ANTLR start "literal"
        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1726:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
        public TemplateExtracter.literal_return literal() // throws RecognitionException [1]
        {   
            TemplateExtracter.literal_return retval = new TemplateExtracter.literal_return();
            retval.start = input.LT(1);

            try 
        	{
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1726:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
                // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:
                {
                	if ( (input.LA(1) >= Real_literal && input.LA(1) <= NULL) ) 
                	{
                	    input.Consume();
                	    state.errorRecovery = false;state.failed = false;
                	}
                	else 
                	{
                	    if ( state.backtracking > 0 ) {state.failed = true; return retval;}
                	    MismatchedSetException mse = new MismatchedSetException(null,input);
                	    throw mse;
                	}


                }

            }
            catch (RecognitionException re) 
        	{
                ReportError(re);
                Recover(input,re);
            }
            finally 
        	{
            }
            return retval;
        }
        // $ANTLR end "literal"

        // $ANTLR start "synpred1_TemplateExtracter"
        public void synpred1_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:263:2: ( 'partial' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:263:3: 'partial'
            {
            	Match(input,196,FOLLOW_196_in_synpred1_TemplateExtracter377); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred1_TemplateExtracter"

        // $ANTLR start "synpred2_TemplateExtracter"
        public void synpred2_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:295:14: ( member_name '(' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:295:15: member_name '('
            {
            	PushFollow(FOLLOW_member_name_in_synpred2_TemplateExtracter686);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,LPAREN,FOLLOW_LPAREN_in_synpred2_TemplateExtracter690); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred2_TemplateExtracter"

        // $ANTLR start "synpred3_TemplateExtracter"
        public void synpred3_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:296:8: ( member_name '{' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:296:9: member_name '{'
            {
            	PushFollow(FOLLOW_member_name_in_synpred3_TemplateExtracter706);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_synpred3_TemplateExtracter710); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred3_TemplateExtracter"

        // $ANTLR start "synpred4_TemplateExtracter"
        public void synpred4_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:297:8: ( member_name '.' 'this' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:297:9: member_name '.' 'this'
            {
            	PushFollow(FOLLOW_member_name_in_synpred4_TemplateExtracter726);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,DOT,FOLLOW_DOT_in_synpred4_TemplateExtracter730); if (state.failed) return ;
            	Match(input,THIS,FOLLOW_THIS_in_synpred4_TemplateExtracter734); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred4_TemplateExtracter"

        // $ANTLR start "synpred5_TemplateExtracter"
        public void synpred5_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:315:2: ( 'this' brackets )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:315:3: 'this' brackets
            {
            	Match(input,THIS,FOLLOW_THIS_in_synpred5_TemplateExtracter861); if (state.failed) return ;
            	PushFollow(FOLLOW_brackets_in_synpred5_TemplateExtracter866);
            	brackets();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred5_TemplateExtracter"

        // $ANTLR start "synpred6_TemplateExtracter"
        public void synpred6_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:316:4: ( 'base' brackets )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:316:5: 'base' brackets
            {
            	Match(input,207,FOLLOW_207_in_synpred6_TemplateExtracter886); if (state.failed) return ;
            	PushFollow(FOLLOW_brackets_in_synpred6_TemplateExtracter890);
            	brackets();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred6_TemplateExtracter"

        // $ANTLR start "synpred7_TemplateExtracter"
        public void synpred7_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:318:14: ( object_creation_expression ( '.' | '->' | '[' ) )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:318:15: object_creation_expression ( '.' | '->' | '[' )
            {
            	PushFollow(FOLLOW_object_creation_expression_in_synpred7_TemplateExtracter926);
            	object_creation_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	if ( input.LA(1) == OPEN_BRACKET || (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }
        }
        // $ANTLR end "synpred7_TemplateExtracter"

        // $ANTLR start "synpred8_TemplateExtracter"
        public void synpred8_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:324:7: ( object_creation_expression )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:324:8: object_creation_expression
            {
            	PushFollow(FOLLOW_object_creation_expression_in_synpred8_TemplateExtracter1008);
            	object_creation_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred8_TemplateExtracter"

        // $ANTLR start "synpred9_TemplateExtracter"
        public void synpred9_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:336:4: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:336:5: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred9_TemplateExtracter1134);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred9_TemplateExtracter1139);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred9_TemplateExtracter"

        // $ANTLR start "synpred10_TemplateExtracter"
        public void synpred10_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:4: ( '(' type ')' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:376:5: '(' type ')'
            {
            	Match(input,LPAREN,FOLLOW_LPAREN_in_synpred10_TemplateExtracter1402); if (state.failed) return ;
            	PushFollow(FOLLOW_type_in_synpred10_TemplateExtracter1406);
            	type();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,RPAREN,FOLLOW_RPAREN_in_synpred10_TemplateExtracter1410); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred10_TemplateExtracter"

        // $ANTLR start "synpred11_TemplateExtracter"
        public void synpred11_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:411:2: ( array_creation_expression )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:411:3: array_creation_expression
            {
            	PushFollow(FOLLOW_array_creation_expression_in_synpred11_TemplateExtracter1683);
            	array_creation_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred11_TemplateExtracter"

        // $ANTLR start "synpred12_TemplateExtracter"
        public void synpred12_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:11: ( arguments ( '[' | '.' | '->' ) )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:420:12: arguments ( '[' | '.' | '->' )
            {
            	PushFollow(FOLLOW_arguments_in_synpred12_TemplateExtracter1763);
            	arguments();
            	state._fsp--;
            	if (state.failed) return ;
            	if ( input.LA(1) == OPEN_BRACKET || (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }
        }
        // $ANTLR end "synpred12_TemplateExtracter"

        // $ANTLR start "synpred13_TemplateExtracter"
        public void synpred13_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:18: ( arguments ( '[' | '.' | '->' ) )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:429:19: arguments ( '[' | '.' | '->' )
            {
            	PushFollow(FOLLOW_arguments_in_synpred13_TemplateExtracter1889);
            	arguments();
            	state._fsp--;
            	if (state.failed) return ;
            	if ( input.LA(1) == OPEN_BRACKET || (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }
        }
        // $ANTLR end "synpred13_TemplateExtracter"

        // $ANTLR start "synpred14_TemplateExtracter"
        public void synpred14_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:495:20: ( unbound_type_name )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:495:21: unbound_type_name
            {
            	PushFollow(FOLLOW_unbound_type_name_in_synpred14_TemplateExtracter2381);
            	unbound_type_name();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred14_TemplateExtracter"

        // $ANTLR start "synpred15_TemplateExtracter"
        public void synpred15_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:505:5: ( generic_dimension_specifier '.' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:505:6: generic_dimension_specifier '.'
            {
            	PushFollow(FOLLOW_generic_dimension_specifier_in_synpred15_TemplateExtracter2439);
            	generic_dimension_specifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,DOT,FOLLOW_DOT_in_synpred15_TemplateExtracter2443); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred15_TemplateExtracter"

        // $ANTLR start "synpred16_TemplateExtracter"
        public void synpred16_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:534:2: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:534:3: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred16_TemplateExtracter2610);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred16_TemplateExtracter2614);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred16_TemplateExtracter"

        // $ANTLR start "synpred17_TemplateExtracter"
        public void synpred17_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:543:4: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:543:5: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred17_TemplateExtracter2680);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred17_TemplateExtracter2685);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred17_TemplateExtracter"

        // $ANTLR start "synpred18_TemplateExtracter"
        public void synpred18_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:4: ( ( predefined_type | type_name ) rank_specifiers )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:5: ( predefined_type | type_name ) rank_specifiers
            {
            	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:5: ( predefined_type | type_name )
            	int alt283 = 2;
            	int LA283_0 = input.LA(1);

            	if ( (LA283_0 == OBJECT || (LA283_0 >= BOOL && LA283_0 <= DOUBLE) || (LA283_0 >= 251 && LA283_0 <= 254) || (LA283_0 >= 275 && LA283_0 <= 276)) )
            	{
            	    alt283 = 1;
            	}
            	else if ( (LA283_0 == IDENTIFIER || (LA283_0 >= ELIF && LA283_0 <= UNDEF) || LA283_0 == 195 || LA283_0 == 221 || (LA283_0 >= 224 && LA283_0 <= 239) || (LA283_0 >= 241 && LA283_0 <= 244) || (LA283_0 >= 247 && LA283_0 <= 250) || LA283_0 == 256 || (LA283_0 >= 263 && LA283_0 <= 264) || LA283_0 == 274 || LA283_0 == 277) )
            	{
            	    alt283 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d283s0 =
            	        new NoViableAltException("", 283, 0, input);

            	    throw nvae_d283s0;
            	}
            	switch (alt283) 
            	{
            	    case 1 :
            	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:6: predefined_type
            	        {
            	        	PushFollow(FOLLOW_predefined_type_in_synpred18_TemplateExtracter2823);
            	        	predefined_type();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:568:24: type_name
            	        {
            	        	PushFollow(FOLLOW_type_name_in_synpred18_TemplateExtracter2827);
            	        	type_name();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	PushFollow(FOLLOW_rank_specifiers_in_synpred18_TemplateExtracter2831);
            	rank_specifiers();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred18_TemplateExtracter"

        // $ANTLR start "synpred19_TemplateExtracter"
        public void synpred19_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:4: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:5: ( predefined_type | type_name ) ( ( '*' )+ | '?' )
            {
            	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:5: ( predefined_type | type_name )
            	int alt284 = 2;
            	int LA284_0 = input.LA(1);

            	if ( (LA284_0 == OBJECT || (LA284_0 >= BOOL && LA284_0 <= DOUBLE) || (LA284_0 >= 251 && LA284_0 <= 254) || (LA284_0 >= 275 && LA284_0 <= 276)) )
            	{
            	    alt284 = 1;
            	}
            	else if ( (LA284_0 == IDENTIFIER || (LA284_0 >= ELIF && LA284_0 <= UNDEF) || LA284_0 == 195 || LA284_0 == 221 || (LA284_0 >= 224 && LA284_0 <= 239) || (LA284_0 >= 241 && LA284_0 <= 244) || (LA284_0 >= 247 && LA284_0 <= 250) || LA284_0 == 256 || (LA284_0 >= 263 && LA284_0 <= 264) || LA284_0 == 274 || LA284_0 == 277) )
            	{
            	    alt284 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d284s0 =
            	        new NoViableAltException("", 284, 0, input);

            	    throw nvae_d284s0;
            	}
            	switch (alt284) 
            	{
            	    case 1 :
            	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:6: predefined_type
            	        {
            	        	PushFollow(FOLLOW_predefined_type_in_synpred19_TemplateExtracter2873);
            	        	predefined_type();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;
            	    case 2 :
            	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:24: type_name
            	        {
            	        	PushFollow(FOLLOW_type_name_in_synpred19_TemplateExtracter2877);
            	        	type_name();
            	        	state._fsp--;
            	        	if (state.failed) return ;

            	        }
            	        break;

            	}

            	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:36: ( ( '*' )+ | '?' )
            	int alt286 = 2;
            	int LA286_0 = input.LA(1);

            	if ( (LA286_0 == STAR) )
            	{
            	    alt286 = 1;
            	}
            	else if ( (LA286_0 == 220) )
            	{
            	    alt286 = 2;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    NoViableAltException nvae_d286s0 =
            	        new NoViableAltException("", 286, 0, input);

            	    throw nvae_d286s0;
            	}
            	switch (alt286) 
            	{
            	    case 1 :
            	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:37: ( '*' )+
            	        {
            	        	// /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:37: ( '*' )+
            	        	int cnt285 = 0;
            	        	do 
            	        	{
            	        	    int alt285 = 2;
            	        	    int LA285_0 = input.LA(1);

            	        	    if ( (LA285_0 == STAR) )
            	        	    {
            	        	        alt285 = 1;
            	        	    }


            	        	    switch (alt285) 
            	        		{
            	        			case 1 :
            	        			    // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:37: '*'
            	        			    {
            	        			    	Match(input,STAR,FOLLOW_STAR_in_synpred19_TemplateExtracter2882); if (state.failed) return ;

            	        			    }
            	        			    break;

            	        			default:
            	        			    if ( cnt285 >= 1 ) goto loop285;
            	        			    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	        		            EarlyExitException eee285 =
            	        		                new EarlyExitException(285, input);
            	        		            throw eee285;
            	        	    }
            	        	    cnt285++;
            	        	} while (true);

            	        	loop285:
            	        		;	// Stops C# compiler whining that label 'loop285' has no statements


            	        }
            	        break;
            	    case 2 :
            	        // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:569:44: '?'
            	        {
            	        	Match(input,220,FOLLOW_220_in_synpred19_TemplateExtracter2887); if (state.failed) return ;

            	        }
            	        break;

            	}


            }
        }
        // $ANTLR end "synpred19_TemplateExtracter"

        // $ANTLR start "synpred20_TemplateExtracter"
        public void synpred20_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:605:2: ( unary_expression assignment_operator )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:605:3: unary_expression assignment_operator
            {
            	PushFollow(FOLLOW_unary_expression_in_synpred20_TemplateExtracter3105);
            	unary_expression();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_assignment_operator_in_synpred20_TemplateExtracter3109);
            	assignment_operator();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred20_TemplateExtracter"

        // $ANTLR start "synpred21_TemplateExtracter"
        public void synpred21_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:614:2: ( cast_expression )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:614:3: cast_expression
            {
            	PushFollow(FOLLOW_cast_expression_in_synpred21_TemplateExtracter3167);
            	cast_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred21_TemplateExtracter"

        // $ANTLR start "synpred22_TemplateExtracter"
        public void synpred22_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:640:2: ( anonymous_function_signature '=>' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:640:3: anonymous_function_signature '=>'
            {
            	PushFollow(FOLLOW_anonymous_function_signature_in_synpred22_TemplateExtracter3373);
            	anonymous_function_signature();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,LAMBDA,FOLLOW_LAMBDA_in_synpred22_TemplateExtracter3377); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred22_TemplateExtracter"

        // $ANTLR start "synpred23_TemplateExtracter"
        public void synpred23_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:641:4: ( query_expression )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:641:5: query_expression
            {
            	PushFollow(FOLLOW_query_expression_in_synpred23_TemplateExtracter3388);
            	query_expression();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred23_TemplateExtracter"

        // $ANTLR start "synpred24_TemplateExtracter"
        public void synpred24_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:50: ( 'into' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:705:51: 'into'
            {
            	Match(input,224,FOLLOW_224_in_synpred24_TemplateExtracter3811); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred24_TemplateExtracter"

        // $ANTLR start "synpred25_TemplateExtracter"
        public void synpred25_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:32: ( ',' identifier '=' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:772:33: ',' identifier '='
            {
            	Match(input,COMMA,FOLLOW_COMMA_in_synpred25_TemplateExtracter4314); if (state.failed) return ;
            	PushFollow(FOLLOW_identifier_in_synpred25_TemplateExtracter4318);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,ASSIGN,FOLLOW_ASSIGN_in_synpred25_TemplateExtracter4322); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred25_TemplateExtracter"

        // $ANTLR start "synpred26_TemplateExtracter"
        public void synpred26_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:949:4: ( member_name '{' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:949:5: member_name '{'
            {
            	PushFollow(FOLLOW_member_name_in_synpred26_TemplateExtracter5067);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_synpred26_TemplateExtracter5071); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred26_TemplateExtracter"

        // $ANTLR start "synpred27_TemplateExtracter"
        public void synpred27_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1290:17: ( member_name '(' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1290:18: member_name '('
            {
            	PushFollow(FOLLOW_member_name_in_synpred27_TemplateExtracter6283);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,LPAREN,FOLLOW_LPAREN_in_synpred27_TemplateExtracter6287); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred27_TemplateExtracter"

        // $ANTLR start "synpred28_TemplateExtracter"
        public void synpred28_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1291:14: ( member_name '{' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1291:15: member_name '{'
            {
            	PushFollow(FOLLOW_member_name_in_synpred28_TemplateExtracter6309);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_synpred28_TemplateExtracter6313); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred28_TemplateExtracter"

        // $ANTLR start "synpred29_TemplateExtracter"
        public void synpred29_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1414:14: ( member_name '(' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1414:15: member_name '('
            {
            	PushFollow(FOLLOW_member_name_in_synpred29_TemplateExtracter6952);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,LPAREN,FOLLOW_LPAREN_in_synpred29_TemplateExtracter6956); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred29_TemplateExtracter"

        // $ANTLR start "synpred30_TemplateExtracter"
        public void synpred30_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1415:8: ( member_name '{' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1415:9: member_name '{'
            {
            	PushFollow(FOLLOW_member_name_in_synpred30_TemplateExtracter6972);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,OPEN_BRACE,FOLLOW_OPEN_BRACE_in_synpred30_TemplateExtracter6976); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred30_TemplateExtracter"

        // $ANTLR start "synpred31_TemplateExtracter"
        public void synpred31_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1416:8: ( member_name '.' 'this' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1416:9: member_name '.' 'this'
            {
            	PushFollow(FOLLOW_member_name_in_synpred31_TemplateExtracter6992);
            	member_name();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,DOT,FOLLOW_DOT_in_synpred31_TemplateExtracter6996); if (state.failed) return ;
            	Match(input,THIS,FOLLOW_THIS_in_synpred31_TemplateExtracter7000); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred31_TemplateExtracter"

        // $ANTLR start "synpred32_TemplateExtracter"
        public void synpred32_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:23: ( arguments ( '[' | '.' | '->' ) )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1523:24: arguments ( '[' | '.' | '->' )
            {
            	PushFollow(FOLLOW_arguments_in_synpred32_TemplateExtracter7689);
            	arguments();
            	state._fsp--;
            	if (state.failed) return ;
            	if ( input.LA(1) == OPEN_BRACKET || (input.LA(1) >= DOT && input.LA(1) <= PTR) ) 
            	{
            	    input.Consume();
            	    state.errorRecovery = false;state.failed = false;
            	}
            	else 
            	{
            	    if ( state.backtracking > 0 ) {state.failed = true; return ;}
            	    MismatchedSetException mse = new MismatchedSetException(null,input);
            	    throw mse;
            	}


            }
        }
        // $ANTLR end "synpred32_TemplateExtracter"

        // $ANTLR start "synpred33_TemplateExtracter"
        public void synpred33_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1527:4: ( identifier generic_argument_list )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1527:5: identifier generic_argument_list
            {
            	PushFollow(FOLLOW_identifier_in_synpred33_TemplateExtracter7740);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	PushFollow(FOLLOW_generic_argument_list_in_synpred33_TemplateExtracter7745);
            	generic_argument_list();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred33_TemplateExtracter"

        // $ANTLR start "synpred34_TemplateExtracter"
        public void synpred34_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1540:2: ( declaration_statement )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1540:3: declaration_statement
            {
            	PushFollow(FOLLOW_declaration_statement_in_synpred34_TemplateExtracter7826);
            	declaration_statement();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred34_TemplateExtracter"

        // $ANTLR start "synpred35_TemplateExtracter"
        public void synpred35_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1541:4: ( identifier ':' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1541:5: identifier ':'
            {
            	PushFollow(FOLLOW_identifier_in_synpred35_TemplateExtracter7837);
            	identifier();
            	state._fsp--;
            	if (state.failed) return ;
            	Match(input,211,FOLLOW_211_in_synpred35_TemplateExtracter7841); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred35_TemplateExtracter"

        // $ANTLR start "synpred36_TemplateExtracter"
        public void synpred36_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1578:2: ( 'var' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1578:3: 'var'
            {
            	Match(input,263,FOLLOW_263_in_synpred36_TemplateExtracter8065); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred36_TemplateExtracter"

        // $ANTLR start "synpred37_TemplateExtracter"
        public void synpred37_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1579:4: ( 'dynamic' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1579:5: 'dynamic'
            {
            	Match(input,264,FOLLOW_264_in_synpred37_TemplateExtracter8076); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred37_TemplateExtracter"

        // $ANTLR start "synpred38_TemplateExtracter"
        public void synpred38_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1605:62: ( 'else' )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1605:63: 'else'
            {
            	Match(input,ELSE,FOLLOW_ELSE_in_synpred38_TemplateExtracter8244); if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred38_TemplateExtracter"

        // $ANTLR start "synpred39_TemplateExtracter"
        public void synpred39_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1634:2: ( local_variable_declaration )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1634:3: local_variable_declaration
            {
            	PushFollow(FOLLOW_local_variable_declaration_in_synpred39_TemplateExtracter8495);
            	local_variable_declaration();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred39_TemplateExtracter"

        // $ANTLR start "synpred40_TemplateExtracter"
        public void synpred40_TemplateExtracter_fragment() {
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1686:2: ( local_variable_declaration )
            // /project/src/CS2JTranslator/CS2JTransform/TemplateExtracter.g:1686:3: local_variable_declaration
            {
            	PushFollow(FOLLOW_local_variable_declaration_in_synpred40_TemplateExtracter8908);
            	local_variable_declaration();
            	state._fsp--;
            	if (state.failed) return ;

            }
        }
        // $ANTLR end "synpred40_TemplateExtracter"

        // Delegated rules

       	public bool synpred32_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred32_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred13_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred13_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred14_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred14_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred16_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred16_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred28_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred28_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred18_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred18_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred39_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred39_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred20_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred20_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred1_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred1_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred9_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred9_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred11_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred11_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred10_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred10_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred40_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred40_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred4_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred4_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred26_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred26_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred21_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred21_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred24_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred24_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred23_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred23_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred36_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred36_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred38_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred38_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred5_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred5_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred6_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred6_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred33_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred33_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred35_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred35_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred8_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred8_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred22_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred22_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred7_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred7_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred25_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred25_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred3_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred3_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred19_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred19_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred2_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred2_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred12_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred12_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred15_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred15_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred27_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred27_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred34_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred34_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred30_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred30_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred17_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred17_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred37_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred37_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred31_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred31_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}
       	public bool synpred29_TemplateExtracter() 
       	{
       	    state.backtracking++;
       	    int start = input.Mark();
       	    try 
       	    {
       	        synpred29_TemplateExtracter_fragment(); // can never throw exception
       	    }
       	    catch (RecognitionException re) 
       	    {
       	        Console.Error.WriteLine("impossible: "+re);
       	    }
       	    bool success = !state.failed;
       	    input.Rewind(start);
       	    state.backtracking--;
       	    state.failed = false;
       	    return success;
       	}


       	protected DFA21 dfa21;
       	protected DFA20 dfa20;
       	protected DFA27 dfa27;
       	protected DFA26 dfa26;
       	protected DFA29 dfa29;
       	protected DFA38 dfa38;
       	protected DFA50 dfa50;
       	protected DFA74 dfa74;
       	protected DFA75 dfa75;
       	protected DFA93 dfa93;
       	protected DFA104 dfa104;
       	protected DFA106 dfa106;
       	protected DFA108 dfa108;
       	protected DFA170 dfa170;
       	protected DFA236 dfa236;
       	protected DFA235 dfa235;
       	protected DFA240 dfa240;
       	protected DFA249 dfa249;
       	protected DFA250 dfa250;
       	protected DFA267 dfa267;
       	protected DFA279 dfa279;
    	private void InitializeCyclicDFAs()
    	{
        	this.dfa21 = new DFA21(this);
        	this.dfa20 = new DFA20(this);
        	this.dfa27 = new DFA27(this);
        	this.dfa26 = new DFA26(this);
        	this.dfa29 = new DFA29(this);
        	this.dfa38 = new DFA38(this);
        	this.dfa50 = new DFA50(this);
        	this.dfa74 = new DFA74(this);
        	this.dfa75 = new DFA75(this);
        	this.dfa93 = new DFA93(this);
        	this.dfa104 = new DFA104(this);
        	this.dfa106 = new DFA106(this);
        	this.dfa108 = new DFA108(this);
        	this.dfa170 = new DFA170(this);
        	this.dfa236 = new DFA236(this);
        	this.dfa235 = new DFA235(this);
        	this.dfa240 = new DFA240(this);
        	this.dfa249 = new DFA249(this);
        	this.dfa250 = new DFA250(this);
        	this.dfa267 = new DFA267(this);
        	this.dfa279 = new DFA279(this);
    	    this.dfa20.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA20_SpecialStateTransition);
    	    this.dfa27.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA27_SpecialStateTransition);
    	    this.dfa26.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA26_SpecialStateTransition);
    	    this.dfa29.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA29_SpecialStateTransition);
    	    this.dfa38.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA38_SpecialStateTransition);
    	    this.dfa74.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA74_SpecialStateTransition);
    	    this.dfa75.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA75_SpecialStateTransition);
    	    this.dfa93.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA93_SpecialStateTransition);
    	    this.dfa104.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA104_SpecialStateTransition);
    	    this.dfa106.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA106_SpecialStateTransition);
    	    this.dfa108.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA108_SpecialStateTransition);
    	    this.dfa170.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA170_SpecialStateTransition);
    	    this.dfa235.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA235_SpecialStateTransition);
    	    this.dfa249.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA249_SpecialStateTransition);
    	    this.dfa267.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA267_SpecialStateTransition);
    	    this.dfa279.specialStateTransitionHandler = new DFA.SpecialStateTransitionHandler(DFA279_SpecialStateTransition);
    	}

        const string DFA21_eotS =
            "\x11\uffff";
        const string DFA21_eofS =
            "\x11\uffff";
        const string DFA21_minS =
            "\x01\x14\x04\uffff\x01\x41\x01\uffff\x02\x41\x08\uffff";
        const string DFA21_maxS =
            "\x01\u0115\x04\uffff\x01\u0115\x01\uffff\x02\u0115\x08\uffff";
        const string DFA21_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\uffff\x01\x06"+
            "\x02\uffff\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0d\x01"+
            "\x05\x01\x0c";
        const string DFA21_specialS =
            "\x11\uffff}>";
        static readonly string[] DFA21_transitionS = {
                "\x01\x0b\x10\uffff\x01\x0e\x1b\uffff\x01\x06\x40\uffff\x08"+
                "\x06\x01\x07\x0d\uffff\x04\x08\x27\uffff\x01\x08\x01\x03"+
                "\x08\uffff\x01\x01\x01\x05\x0b\uffff\x01\x0c\x02\uffff\x01"+
                "\x08\x02\uffff\x10\x08\x01\x02\x04\x08\x01\x09\x01\uffff"+
                "\x04\x08\x04\x06\x01\x0a\x01\x08\x01\uffff\x01\x04\x01\uffff"+
                "\x02\x0d\x01\uffff\x02\x08\x09\uffff\x01\x08\x02\x06\x01"+
                "\x08",
                "",
                "",
                "",
                "",
                "\x01\x0f\x2b\uffff\x01\x06\x14\uffff\x12\x0f\x04\uffff"+
                "\x04\x0f\x27\uffff\x01\x0f\x19\uffff\x01\x0f\x02\uffff\x10"+
                "\x0f\x01\uffff\x04\x0f\x02\uffff\x08\x0f\x01\uffff\x01\x0f"+
                "\x06\uffff\x02\x0f\x09\uffff\x04\x0f",
                "",
                "\x02\x06\x02\uffff\x01\x06\x03\uffff\x01\x10\x18\uffff"+
                "\x01\x06\x0a\uffff\x01\x06\x14\uffff\x13\x06\x03\uffff\x04"+
                "\x06\x27\uffff\x01\x06\x0c\uffff\x01\x06\x0b\uffff\x02\x06"+
                "\x02\uffff\x10\x06\x01\uffff\x04\x06\x02\uffff\x08\x06\x01"+
                "\uffff\x01\x06\x02\uffff\x01\x06\x03\uffff\x02\x06\x09\uffff"+
                "\x04\x06",
                "\x02\x06\x02\uffff\x01\x06\x03\uffff\x01\x10\x18\uffff"+
                "\x01\x06\x0a\uffff\x01\x06\x14\uffff\x13\x06\x03\uffff\x04"+
                "\x06\x27\uffff\x01\x06\x0c\uffff\x01\x06\x0b\uffff\x02\x06"+
                "\x02\uffff\x10\x06\x01\uffff\x04\x06\x02\uffff\x08\x06\x01"+
                "\uffff\x01\x06\x02\uffff\x01\x06\x03\uffff\x02\x06\x09\uffff"+
                "\x04\x06",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA21_eot = DFA.UnpackEncodedString(DFA21_eotS);
        static readonly short[] DFA21_eof = DFA.UnpackEncodedString(DFA21_eofS);
        static readonly char[] DFA21_min = DFA.UnpackEncodedStringToUnsignedChars(DFA21_minS);
        static readonly char[] DFA21_max = DFA.UnpackEncodedStringToUnsignedChars(DFA21_maxS);
        static readonly short[] DFA21_accept = DFA.UnpackEncodedString(DFA21_acceptS);
        static readonly short[] DFA21_special = DFA.UnpackEncodedString(DFA21_specialS);
        static readonly short[][] DFA21_transition = DFA.UnpackEncodedStringArray(DFA21_transitionS);

        protected class DFA21 : DFA
        {
            public DFA21(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 21;
                this.eot = DFA21_eot;
                this.eof = DFA21_eof;
                this.min = DFA21_min;
                this.max = DFA21_max;
                this.accept = DFA21_accept;
                this.special = DFA21_special;
                this.transition = DFA21_transition;

            }

            override public string Description
            {
                get { return "287:2: ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | class_declaration[false] | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )"; }
            }

        }

        const string DFA20_eotS =
            "\x19\uffff";
        const string DFA20_eofS =
            "\x19\uffff";
        const string DFA20_minS =
            "\x01\x41\x12\x00\x06\uffff";
        const string DFA20_maxS =
            "\x01\u0115\x12\x00\x06\uffff";
        const string DFA20_acceptS =
            "\x13\uffff\x01\x04\x01\x06\x01\x01\x01\x02\x01\x03\x01\x05";
        const string DFA20_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
            "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d"+
            "\x01\x0e\x01\x0f\x01\x10\x01\x11\x06\uffff}>";
        static readonly string[] DFA20_transitionS = {
                "\x01\x09\x01\x13\x3f\uffff\x01\x01\x01\x02\x01\x03\x01\x0b"+
                "\x01\x07\x01\x08\x01\x06\x01\x05\x01\x10\x09\x12\x04\uffff"+
                "\x04\x11\x27\uffff\x01\x11\x19\uffff\x01\x11\x02\uffff\x10"+
                "\x11\x01\uffff\x04\x11\x02\uffff\x04\x11\x01\x0a\x01\x0f"+
                "\x01\x0d\x01\x0e\x01\uffff\x01\x11\x02\uffff\x01\x14\x03"+
                "\uffff\x02\x11\x09\uffff\x01\x11\x01\x04\x01\x0c\x01\x11",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA20_eot = DFA.UnpackEncodedString(DFA20_eotS);
        static readonly short[] DFA20_eof = DFA.UnpackEncodedString(DFA20_eofS);
        static readonly char[] DFA20_min = DFA.UnpackEncodedStringToUnsignedChars(DFA20_minS);
        static readonly char[] DFA20_max = DFA.UnpackEncodedStringToUnsignedChars(DFA20_maxS);
        static readonly short[] DFA20_accept = DFA.UnpackEncodedString(DFA20_acceptS);
        static readonly short[] DFA20_special = DFA.UnpackEncodedString(DFA20_specialS);
        static readonly short[][] DFA20_transition = DFA.UnpackEncodedStringArray(DFA20_transitionS);

        protected class DFA20 : DFA
        {
            public DFA20(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 20;
                this.eot = DFA20_eot;
                this.eof = DFA20_eof;
                this.min = DFA20_min;
                this.max = DFA20_max;
                this.accept = DFA20_accept;
                this.special = DFA20_special;
                this.transition = DFA20_transition;

            }

            override public string Description
            {
                get { return "295:12: ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] )"; }
            }

        }


        protected internal int DFA20_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA20_1 = input.LA(1);

                       	 
                       	int index20_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA20_2 = input.LA(1);

                       	 
                       	int index20_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA20_3 = input.LA(1);

                       	 
                       	int index20_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA20_4 = input.LA(1);

                       	 
                       	int index20_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA20_5 = input.LA(1);

                       	 
                       	int index20_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA20_6 = input.LA(1);

                       	 
                       	int index20_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA20_7 = input.LA(1);

                       	 
                       	int index20_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA20_8 = input.LA(1);

                       	 
                       	int index20_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA20_9 = input.LA(1);

                       	 
                       	int index20_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA20_10 = input.LA(1);

                       	 
                       	int index20_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA20_11 = input.LA(1);

                       	 
                       	int index20_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA20_12 = input.LA(1);

                       	 
                       	int index20_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA20_13 = input.LA(1);

                       	 
                       	int index20_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA20_14 = input.LA(1);

                       	 
                       	int index20_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA20_15 = input.LA(1);

                       	 
                       	int index20_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA20_16 = input.LA(1);

                       	 
                       	int index20_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	else if ( (synpred4_TemplateExtracter()) ) { s = 23; }

                       	else if ( (true) ) { s = 24; }

                       	 
                       	input.Seek(index20_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA20_17 = input.LA(1);

                       	 
                       	int index20_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	else if ( (synpred4_TemplateExtracter()) ) { s = 23; }

                       	else if ( (true) ) { s = 24; }

                       	 
                       	input.Seek(index20_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA20_18 = input.LA(1);

                       	 
                       	int index20_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred2_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred3_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index20_18);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae20 =
                new NoViableAltException(dfa.Description, 20, _s, input);
            dfa.Error(nvae20);
            throw nvae20;
        }
        const string DFA27_eotS =
            "\x1f\uffff";
        const string DFA27_eofS =
            "\x1f\uffff";
        const string DFA27_minS =
            "\x01\x41\x01\x00\x1d\uffff";
        const string DFA27_maxS =
            "\x01\u0115\x01\x00\x1d\uffff";
        const string DFA27_acceptS =
            "\x02\uffff\x01\x03\x14\uffff\x01\x04\x01\x05\x01\x06\x01\x07"+
            "\x01\x08\x01\x09\x01\x01\x01\x02";
        const string DFA27_specialS =
            "\x01\uffff\x01\x00\x1d\uffff}>";
        static readonly string[] DFA27_transitionS = {
                "\x01\x02\x01\x01\x06\uffff\x01\x02\x38\uffff\x12\x02\x04"+
                "\uffff\x04\x02\x27\uffff\x01\x02\x01\uffff\x01\x17\x09\uffff"+
                "\x01\x02\x06\uffff\x01\x18\x01\x19\x01\x1a\x01\x1b\x01\x1c"+
                "\x01\x02\x01\uffff\x01\x02\x02\uffff\x10\x02\x01\uffff\x04"+
                "\x02\x02\uffff\x08\x02\x01\uffff\x01\x02\x06\uffff\x02\x02"+
                "\x09\uffff\x04\x02",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA27_eot = DFA.UnpackEncodedString(DFA27_eotS);
        static readonly short[] DFA27_eof = DFA.UnpackEncodedString(DFA27_eofS);
        static readonly char[] DFA27_min = DFA.UnpackEncodedStringToUnsignedChars(DFA27_minS);
        static readonly char[] DFA27_max = DFA.UnpackEncodedStringToUnsignedChars(DFA27_maxS);
        static readonly short[] DFA27_accept = DFA.UnpackEncodedString(DFA27_acceptS);
        static readonly short[] DFA27_special = DFA.UnpackEncodedString(DFA27_specialS);
        static readonly short[][] DFA27_transition = DFA.UnpackEncodedStringArray(DFA27_transitionS);

        protected class DFA27 : DFA
        {
            public DFA27(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 27;
                this.eot = DFA27_eot;
                this.eof = DFA27_eof;
                this.min = DFA27_min;
                this.max = DFA27_max;
                this.accept = DFA27_accept;
                this.special = DFA27_special;
                this.transition = DFA27_transition;

            }

            override public string Description
            {
                get { return "314:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( object_creation_expression )=> object_creation_expression | delegate_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );"; }
            }

        }


        protected internal int DFA27_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA27_1 = input.LA(1);

                       	 
                       	int index27_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred5_TemplateExtracter()) ) { s = 29; }

                       	else if ( (synpred6_TemplateExtracter()) ) { s = 30; }

                       	else if ( (true) ) { s = 2; }

                       	 
                       	input.Seek(index27_1);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae27 =
                new NoViableAltException(dfa.Description, 27, _s, input);
            dfa.Error(nvae27);
            throw nvae27;
        }
        const string DFA26_eotS =
            "\x17\uffff";
        const string DFA26_eofS =
            "\x17\uffff";
        const string DFA26_minS =
            "\x01\x41\x12\x00\x04\uffff";
        const string DFA26_maxS =
            "\x01\u0115\x12\x00\x04\uffff";
        const string DFA26_acceptS =
            "\x13\uffff\x01\x04\x01\x01\x01\x02\x01\x03";
        const string DFA26_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
            "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d"+
            "\x01\x0e\x01\x0f\x01\x10\x01\x11\x04\uffff}>";
        static readonly string[] DFA26_transitionS = {
                "\x01\x09\x05\uffff\x01\x13\x3a\uffff\x01\x01\x01\x02\x01"+
                "\x03\x01\x0b\x01\x07\x01\x08\x01\x06\x01\x05\x01\x10\x0d"+
                "\uffff\x04\x11\x27\uffff\x01\x11\x0a\uffff\x01\x12\x0e\uffff"+
                "\x01\x11\x02\uffff\x10\x11\x01\uffff\x04\x11\x02\uffff\x04"+
                "\x11\x01\x0a\x01\x0f\x01\x0d\x01\x0e\x01\uffff\x01\x11\x06"+
                "\uffff\x02\x11\x09\uffff\x01\x11\x01\x04\x01\x0c\x01\x11",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA26_eot = DFA.UnpackEncodedString(DFA26_eotS);
        static readonly short[] DFA26_eof = DFA.UnpackEncodedString(DFA26_eofS);
        static readonly char[] DFA26_min = DFA.UnpackEncodedStringToUnsignedChars(DFA26_minS);
        static readonly char[] DFA26_max = DFA.UnpackEncodedStringToUnsignedChars(DFA26_maxS);
        static readonly short[] DFA26_accept = DFA.UnpackEncodedString(DFA26_acceptS);
        static readonly short[] DFA26_special = DFA.UnpackEncodedString(DFA26_specialS);
        static readonly short[][] DFA26_transition = DFA.UnpackEncodedStringArray(DFA26_transitionS);

        protected class DFA26 : DFA
        {
            public DFA26(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 26;
                this.eot = DFA26_eot;
                this.eof = DFA26_eof;
                this.min = DFA26_min;
                this.max = DFA26_max;
                this.accept = DFA26_accept;
                this.special = DFA26_special;
                this.transition = DFA26_transition;

            }

            override public string Description
            {
                get { return "318:10: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( object_creation_expression )=> object_creation_expression | delegate_creation_expression | anonymous_object_creation_expression )"; }
            }

        }


        protected internal int DFA26_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA26_1 = input.LA(1);

                       	 
                       	int index26_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA26_2 = input.LA(1);

                       	 
                       	int index26_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA26_3 = input.LA(1);

                       	 
                       	int index26_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA26_4 = input.LA(1);

                       	 
                       	int index26_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA26_5 = input.LA(1);

                       	 
                       	int index26_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA26_6 = input.LA(1);

                       	 
                       	int index26_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA26_7 = input.LA(1);

                       	 
                       	int index26_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA26_8 = input.LA(1);

                       	 
                       	int index26_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA26_9 = input.LA(1);

                       	 
                       	int index26_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA26_10 = input.LA(1);

                       	 
                       	int index26_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA26_11 = input.LA(1);

                       	 
                       	int index26_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA26_12 = input.LA(1);

                       	 
                       	int index26_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA26_13 = input.LA(1);

                       	 
                       	int index26_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA26_14 = input.LA(1);

                       	 
                       	int index26_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA26_15 = input.LA(1);

                       	 
                       	int index26_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA26_16 = input.LA(1);

                       	 
                       	int index26_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index26_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA26_17 = input.LA(1);

                       	 
                       	int index26_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index26_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA26_18 = input.LA(1);

                       	 
                       	int index26_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred7_TemplateExtracter()) ) { s = 20; }

                       	else if ( (synpred8_TemplateExtracter()) ) { s = 21; }

                       	 
                       	input.Seek(index26_18);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae26 =
                new NoViableAltException(dfa.Description, 26, _s, input);
            dfa.Error(nvae26);
            throw nvae26;
        }
        const string DFA29_eotS =
            "\x19\uffff";
        const string DFA29_eofS =
            "\x19\uffff";
        const string DFA29_minS =
            "\x01\x41\x0f\uffff\x02\x00\x07\uffff";
        const string DFA29_maxS =
            "\x01\u0115\x0f\uffff\x02\x00\x07\uffff";
        const string DFA29_acceptS =
            "\x01\uffff\x01\x01\x10\uffff\x01\x04\x01\x05\x01\x06\x01\x07"+
            "\x01\x08\x01\x02\x01\x03";
        const string DFA29_specialS =
            "\x10\uffff\x01\x00\x01\x01\x07\uffff}>";
        static readonly string[] DFA29_transitionS = {
                "\x01\x01\x01\x12\x06\uffff\x01\x14\x38\uffff\x08\x01\x01"+
                "\x10\x09\x16\x04\uffff\x04\x11\x27\uffff\x01\x11\x0b\uffff"+
                "\x01\x13\x0b\uffff\x01\x15\x01\uffff\x01\x11\x02\uffff\x10"+
                "\x11\x01\uffff\x04\x11\x02\uffff\x04\x11\x04\x01\x01\uffff"+
                "\x01\x11\x06\uffff\x02\x11\x09\uffff\x01\x11\x02\x01\x01"+
                "\x11",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA29_eot = DFA.UnpackEncodedString(DFA29_eotS);
        static readonly short[] DFA29_eof = DFA.UnpackEncodedString(DFA29_eofS);
        static readonly char[] DFA29_min = DFA.UnpackEncodedStringToUnsignedChars(DFA29_minS);
        static readonly char[] DFA29_max = DFA.UnpackEncodedStringToUnsignedChars(DFA29_maxS);
        static readonly short[] DFA29_accept = DFA.UnpackEncodedString(DFA29_acceptS);
        static readonly short[] DFA29_special = DFA.UnpackEncodedString(DFA29_specialS);
        static readonly short[][] DFA29_transition = DFA.UnpackEncodedStringArray(DFA29_transitionS);

        protected class DFA29 : DFA
        {
            public DFA29(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 29;
                this.eot = DFA29_eot;
                this.eof = DFA29_eof;
                this.min = DFA29_min;
                this.max = DFA29_max;
                this.accept = DFA29_accept;
                this.special = DFA29_special;
                this.transition = DFA29_transition;

            }

            override public string Description
            {
                get { return "334:1: primary_expression_start : ( predefined_type | ( identifier generic_argument_list )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );"; }
            }

        }


        protected internal int DFA29_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA29_16 = input.LA(1);

                       	 
                       	int index29_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred9_TemplateExtracter()) ) { s = 23; }

                       	else if ( (true) ) { s = 24; }

                       	 
                       	input.Seek(index29_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA29_17 = input.LA(1);

                       	 
                       	int index29_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred9_TemplateExtracter()) ) { s = 23; }

                       	else if ( (true) ) { s = 24; }

                       	 
                       	input.Seek(index29_17);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae29 =
                new NoViableAltException(dfa.Description, 29, _s, input);
            dfa.Error(nvae29);
            throw nvae29;
        }
        const string DFA38_eotS =
            "\x28\uffff";
        const string DFA38_eofS =
            "\x28\uffff";
        const string DFA38_minS =
            "\x01\x24\x01\x00\x26\uffff";
        const string DFA38_maxS =
            "\x01\u0115\x01\x00\x26\uffff";
        const string DFA38_acceptS =
            "\x02\uffff\x01\x02\x24\uffff\x01\x01";
        const string DFA38_specialS =
            "\x01\uffff\x01\x00\x26\uffff}>";
        static readonly string[] DFA38_transitionS = {
                "\x02\x02\x0b\uffff\x01\x02\x0f\uffff\x02\x02\x06\uffff\x01"+
                "\x01\x15\uffff\x01\x02\x09\uffff\x02\x02\x02\uffff\x01\x02"+
                "\x14\uffff\x12\x02\x04\uffff\x04\x02\x27\uffff\x01\x02\x01"+
                "\uffff\x01\x02\x09\uffff\x01\x02\x01\uffff\x02\x02\x03\uffff"+
                "\x06\x02\x01\uffff\x01\x02\x02\uffff\x10\x02\x01\uffff\x04"+
                "\x02\x02\uffff\x08\x02\x01\uffff\x01\x02\x06\uffff\x02\x02"+
                "\x09\uffff\x04\x02",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA38_eot = DFA.UnpackEncodedString(DFA38_eotS);
        static readonly short[] DFA38_eof = DFA.UnpackEncodedString(DFA38_eofS);
        static readonly char[] DFA38_min = DFA.UnpackEncodedStringToUnsignedChars(DFA38_minS);
        static readonly char[] DFA38_max = DFA.UnpackEncodedStringToUnsignedChars(DFA38_maxS);
        static readonly short[] DFA38_accept = DFA.UnpackEncodedString(DFA38_acceptS);
        static readonly short[] DFA38_special = DFA.UnpackEncodedString(DFA38_specialS);
        static readonly short[][] DFA38_transition = DFA.UnpackEncodedStringArray(DFA38_transitionS);

        protected class DFA38 : DFA
        {
            public DFA38(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 38;
                this.eot = DFA38_eot;
                this.eof = DFA38_eof;
                this.min = DFA38_min;
                this.max = DFA38_max;
                this.accept = DFA38_accept;
                this.special = DFA38_special;
                this.transition = DFA38_transition;

            }

            override public string Description
            {
                get { return "376:3: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )"; }
            }

        }


        protected internal int DFA38_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA38_1 = input.LA(1);

                       	 
                       	int index38_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred10_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 2; }

                       	 
                       	input.Seek(index38_1);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae38 =
                new NoViableAltException(dfa.Description, 38, _s, input);
            dfa.Error(nvae38);
            throw nvae38;
        }
        const string DFA50_eotS =
            "\x05\uffff";
        const string DFA50_eofS =
            "\x01\x02\x03\uffff\x01\x02";
        const string DFA50_minS =
            "\x01\x45\x01\x24\x02\uffff\x01\x45";
        const string DFA50_maxS =
            "\x02\u0115\x02\uffff\x01\u0115";
        const string DFA50_acceptS =
            "\x02\uffff\x01\x01\x01\x02\x01\uffff";
        const string DFA50_specialS =
            "\x05\uffff}>";
        static readonly string[] DFA50_transitionS = {
                "\x01\x01\x03\x02\x01\x03\x01\x02\x01\uffff\x0a\x02\x05\uffff"+
                "\x0b\x02\x03\uffff\x05\x02\x01\uffff\x01\x02\x1a\uffff\x01"+
                "\x02\x09\uffff\x02\x03\x01\x02\x01\uffff\x06\x02\x25\uffff"+
                "\x01\x02\x0f\uffff\x01\x02\x08\uffff\x14\x02\x01\uffff\x04"+
                "\x02\x02\uffff\x04\x02\x05\uffff\x01\x02\x06\uffff\x02\x02"+
                "\x09\uffff\x01\x02\x02\uffff\x01\x02",
                "\x02\x03\x0b\uffff\x01\x03\x0f\uffff\x02\x03\x03\uffff"+
                "\x01\x04\x02\uffff\x01\x03\x15\uffff\x01\x03\x09\uffff\x02"+
                "\x03\x02\uffff\x01\x03\x01\uffff\x01\x02\x12\uffff\x12\x03"+
                "\x04\uffff\x04\x03\x27\uffff\x01\x03\x01\uffff\x01\x03\x09"+
                "\uffff\x01\x03\x01\uffff\x02\x03\x03\uffff\x06\x03\x01\uffff"+
                "\x01\x03\x02\uffff\x10\x03\x01\uffff\x04\x03\x02\uffff\x08"+
                "\x03\x01\uffff\x01\x03\x06\uffff\x02\x03\x09\uffff\x04\x03",
                "",
                "",
                "\x01\x01\x03\x02\x01\x03\x01\x02\x01\uffff\x0a\x02\x05"+
                "\uffff\x0b\x02\x03\uffff\x05\x02\x01\uffff\x01\x02\x1a\uffff"+
                "\x01\x02\x09\uffff\x02\x03\x01\x02\x01\uffff\x06\x02\x25"+
                "\uffff\x01\x02\x0f\uffff\x01\x02\x08\uffff\x14\x02\x01\uffff"+
                "\x04\x02\x02\uffff\x04\x02\x05\uffff\x01\x02\x06\uffff\x02"+
                "\x02\x09\uffff\x01\x02\x02\uffff\x01\x02"
        };

        static readonly short[] DFA50_eot = DFA.UnpackEncodedString(DFA50_eotS);
        static readonly short[] DFA50_eof = DFA.UnpackEncodedString(DFA50_eofS);
        static readonly char[] DFA50_min = DFA.UnpackEncodedStringToUnsignedChars(DFA50_minS);
        static readonly char[] DFA50_max = DFA.UnpackEncodedStringToUnsignedChars(DFA50_maxS);
        static readonly short[] DFA50_accept = DFA.UnpackEncodedString(DFA50_acceptS);
        static readonly short[] DFA50_special = DFA.UnpackEncodedString(DFA50_specialS);
        static readonly short[][] DFA50_transition = DFA.UnpackEncodedStringArray(DFA50_transitionS);

        protected class DFA50 : DFA
        {
            public DFA50(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 50;
                this.eot = DFA50_eot;
                this.eof = DFA50_eof;
                this.min = DFA50_min;
                this.max = DFA50_max;
                this.accept = DFA50_accept;
                this.special = DFA50_special;
                this.transition = DFA50_transition;

            }

            override public string Description
            {
                get { return "418:6: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )"; }
            }

        }

        const string DFA74_eotS =
            "\x11\uffff";
        const string DFA74_eofS =
            "\x11\uffff";
        const string DFA74_minS =
            "\x01\x41\x02\x45\x01\uffff\x01\x6d\x01\x41\x02\u008a\x03\uffff"+
            "\x04\x45\x02\x41";
        const string DFA74_maxS =
            "\x01\u0115\x02\u00dc\x01\uffff\x01\u009d\x03\u0115\x03\uffff"+
            "\x04\u00dc\x02\u0115";
        const string DFA74_acceptS =
            "\x03\uffff\x01\x02\x04\uffff\x01\x03\x02\x01\x06\uffff";
        const string DFA74_specialS =
            "\x05\uffff\x01\x02\x09\uffff\x01\x01\x01\x00}>";
        static readonly string[] DFA74_transitionS = {
                "\x01\x03\x40\uffff\x08\x03\x01\x01\x0d\uffff\x04\x02\x27"+
                "\uffff\x01\x02\x0a\uffff\x01\x04\x0e\uffff\x01\x02\x02\uffff"+
                "\x10\x02\x01\uffff\x04\x02\x02\uffff\x04\x02\x04\x03\x01"+
                "\uffff\x01\x02\x06\uffff\x02\x02\x09\uffff\x01\x02\x02\x03"+
                "\x01\x02",
                "\x01\x03\x1c\uffff\x01\x05\x0a\uffff\x01\x03\x26\uffff"+
                "\x01\x07\x08\uffff\x01\x03\x32\uffff\x01\x06\x0b\uffff\x01"+
                "\x03",
                "\x01\x03\x1c\uffff\x01\x05\x0a\uffff\x01\x03\x26\uffff"+
                "\x01\x07\x08\uffff\x01\x03\x32\uffff\x01\x06\x0b\uffff\x01"+
                "\x03",
                "",
                "\x01\x03\x2f\uffff\x01\x08",
                "\x01\x03\x2d\uffff\x01\x09\x12\uffff\x09\x03\x0b\uffff"+
                "\x01\x0a\x01\uffff\x04\x03\x27\uffff\x01\x03\x0a\uffff\x01"+
                "\x03\x0e\uffff\x01\x03\x02\uffff\x10\x03\x01\uffff\x04\x03"+
                "\x02\uffff\x08\x03\x01\uffff\x01\x03\x06\uffff\x02\x03\x09"+
                "\uffff\x04\x03",
                "\x01\x0b\x0d\uffff\x04\x0c\x27\uffff\x01\x0c\x19\uffff"+
                "\x01\x0c\x02\uffff\x10\x0c\x01\uffff\x04\x0c\x02\uffff\x04"+
                "\x0c\x05\uffff\x01\x0c\x06\uffff\x02\x0c\x09\uffff\x01\x0c"+
                "\x02\uffff\x01\x0c",
                "\x01\x0d\x0d\uffff\x04\x0e\x27\uffff\x01\x0e\x19\uffff"+
                "\x01\x0e\x02\uffff\x10\x0e\x01\uffff\x04\x0e\x02\uffff\x04"+
                "\x0e\x05\uffff\x01\x0e\x06\uffff\x02\x0e\x09\uffff\x01\x0e"+
                "\x02\uffff\x01\x0e",
                "",
                "",
                "",
                "\x01\x03\x1c\uffff\x01\x0f\x0a\uffff\x01\x03\x26\uffff"+
                "\x01\x07\x08\uffff\x01\x03\x3e\uffff\x01\x03",
                "\x01\x03\x1c\uffff\x01\x0f\x0a\uffff\x01\x03\x26\uffff"+
                "\x01\x07\x08\uffff\x01\x03\x3e\uffff\x01\x03",
                "\x01\x03\x1c\uffff\x01\x10\x0a\uffff\x01\x03\x26\uffff"+
                "\x01\x07\x08\uffff\x01\x03\x3e\uffff\x01\x03",
                "\x01\x03\x1c\uffff\x01\x10\x0a\uffff\x01\x03\x26\uffff"+
                "\x01\x07\x08\uffff\x01\x03\x3e\uffff\x01\x03",
                "\x01\x03\x2d\uffff\x01\x09\x12\uffff\x09\x03\x0b\uffff"+
                "\x01\x0a\x01\uffff\x04\x03\x27\uffff\x01\x03\x0a\uffff\x01"+
                "\x03\x0e\uffff\x01\x03\x02\uffff\x10\x03\x01\uffff\x04\x03"+
                "\x02\uffff\x08\x03\x01\uffff\x01\x03\x06\uffff\x02\x03\x09"+
                "\uffff\x04\x03",
                "\x01\x03\x2d\uffff\x01\x09\x12\uffff\x09\x03\x0b\uffff"+
                "\x01\x0a\x01\uffff\x04\x03\x27\uffff\x01\x03\x0a\uffff\x01"+
                "\x03\x0e\uffff\x01\x03\x02\uffff\x10\x03\x01\uffff\x04\x03"+
                "\x02\uffff\x08\x03\x01\uffff\x01\x03\x06\uffff\x02\x03\x09"+
                "\uffff\x04\x03"
        };

        static readonly short[] DFA74_eot = DFA.UnpackEncodedString(DFA74_eotS);
        static readonly short[] DFA74_eof = DFA.UnpackEncodedString(DFA74_eofS);
        static readonly char[] DFA74_min = DFA.UnpackEncodedStringToUnsignedChars(DFA74_minS);
        static readonly char[] DFA74_max = DFA.UnpackEncodedStringToUnsignedChars(DFA74_maxS);
        static readonly short[] DFA74_accept = DFA.UnpackEncodedString(DFA74_acceptS);
        static readonly short[] DFA74_special = DFA.UnpackEncodedString(DFA74_specialS);
        static readonly short[][] DFA74_transition = DFA.UnpackEncodedStringArray(DFA74_transitionS);

        protected class DFA74 : DFA
        {
            public DFA74(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 74;
                this.eot = DFA74_eot;
                this.eof = DFA74_eof;
                this.min = DFA74_min;
                this.max = DFA74_max;
                this.accept = DFA74_accept;
                this.special = DFA74_special;
                this.transition = DFA74_transition;

            }

            override public string Description
            {
                get { return "495:19: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )"; }
            }

        }


        protected internal int DFA74_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA74_16 = input.LA(1);

                       	 
                       	int index74_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA74_16 == COMMA) && (synpred14_TemplateExtracter()) ) { s = 9; }

                       	else if ( (LA74_16 == GT) && (synpred14_TemplateExtracter()) ) { s = 10; }

                       	else if ( (LA74_16 == OBJECT || (LA74_16 >= BOOL && LA74_16 <= IDENTIFIER) || (LA74_16 >= ELIF && LA74_16 <= UNDEF) || LA74_16 == 195 || LA74_16 == 206 || LA74_16 == 221 || (LA74_16 >= 224 && LA74_16 <= 239) || (LA74_16 >= 241 && LA74_16 <= 244) || (LA74_16 >= 247 && LA74_16 <= 254) || LA74_16 == 256 || (LA74_16 >= 263 && LA74_16 <= 264) || (LA74_16 >= 274 && LA74_16 <= 277)) ) { s = 3; }

                       	 
                       	input.Seek(index74_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA74_15 = input.LA(1);

                       	 
                       	int index74_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA74_15 == OBJECT || (LA74_15 >= BOOL && LA74_15 <= IDENTIFIER) || (LA74_15 >= ELIF && LA74_15 <= UNDEF) || LA74_15 == 195 || LA74_15 == 206 || LA74_15 == 221 || (LA74_15 >= 224 && LA74_15 <= 239) || (LA74_15 >= 241 && LA74_15 <= 244) || (LA74_15 >= 247 && LA74_15 <= 254) || LA74_15 == 256 || (LA74_15 >= 263 && LA74_15 <= 264) || (LA74_15 >= 274 && LA74_15 <= 277)) ) { s = 3; }

                       	else if ( (LA74_15 == COMMA) && (synpred14_TemplateExtracter()) ) { s = 9; }

                       	else if ( (LA74_15 == GT) && (synpred14_TemplateExtracter()) ) { s = 10; }

                       	 
                       	input.Seek(index74_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA74_5 = input.LA(1);

                       	 
                       	int index74_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA74_5 == OBJECT || (LA74_5 >= BOOL && LA74_5 <= IDENTIFIER) || (LA74_5 >= ELIF && LA74_5 <= UNDEF) || LA74_5 == 195 || LA74_5 == 206 || LA74_5 == 221 || (LA74_5 >= 224 && LA74_5 <= 239) || (LA74_5 >= 241 && LA74_5 <= 244) || (LA74_5 >= 247 && LA74_5 <= 254) || LA74_5 == 256 || (LA74_5 >= 263 && LA74_5 <= 264) || (LA74_5 >= 274 && LA74_5 <= 277)) ) { s = 3; }

                       	else if ( (LA74_5 == COMMA) && (synpred14_TemplateExtracter()) ) { s = 9; }

                       	else if ( (LA74_5 == GT) && (synpred14_TemplateExtracter()) ) { s = 10; }

                       	 
                       	input.Seek(index74_5);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae74 =
                new NoViableAltException(dfa.Description, 74, _s, input);
            dfa.Error(nvae74);
            throw nvae74;
        }
        const string DFA75_eotS =
            "\x07\uffff";
        const string DFA75_eofS =
            "\x04\uffff\x01\x05\x02\uffff";
        const string DFA75_minS =
            "\x01\x62\x01\x6f\x01\uffff\x01\x6f\x01\u0094\x02\uffff";
        const string DFA75_maxS =
            "\x01\u0094\x01\u0096\x01\uffff\x01\u0096\x01\u009d\x02\uffff";
        const string DFA75_acceptS =
            "\x02\uffff\x01\x02\x02\uffff\x01\x03\x01\x01";
        const string DFA75_specialS =
            "\x04\uffff\x01\x00\x02\uffff}>";
        static readonly string[] DFA75_transitionS = {
                "\x01\x01\x31\uffff\x01\x02",
                "\x01\x03\x26\uffff\x01\x04",
                "",
                "\x01\x03\x26\uffff\x01\x04",
                "\x01\x06\x08\uffff\x01\x05",
                "",
                ""
        };

        static readonly short[] DFA75_eot = DFA.UnpackEncodedString(DFA75_eotS);
        static readonly short[] DFA75_eof = DFA.UnpackEncodedString(DFA75_eofS);
        static readonly char[] DFA75_min = DFA.UnpackEncodedStringToUnsignedChars(DFA75_minS);
        static readonly char[] DFA75_max = DFA.UnpackEncodedStringToUnsignedChars(DFA75_maxS);
        static readonly short[] DFA75_accept = DFA.UnpackEncodedString(DFA75_acceptS);
        static readonly short[] DFA75_special = DFA.UnpackEncodedString(DFA75_specialS);
        static readonly short[][] DFA75_transition = DFA.UnpackEncodedStringArray(DFA75_transitionS);

        protected class DFA75 : DFA
        {
            public DFA75(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 75;
                this.eot = DFA75_eot;
                this.eof = DFA75_eof;
                this.min = DFA75_min;
                this.max = DFA75_max;
                this.accept = DFA75_accept;
                this.special = DFA75_special;
                this.transition = DFA75_transition;

            }

            override public string Description
            {
                get { return "()* loopback of 505:3: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*"; }
            }

        }


        protected internal int DFA75_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA75_4 = input.LA(1);

                       	 
                       	int index75_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA75_4 == EOF || LA75_4 == RPAREN) ) { s = 5; }

                       	else if ( (LA75_4 == DOT) && (synpred15_TemplateExtracter()) ) { s = 6; }

                       	 
                       	input.Seek(index75_4);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae75 =
                new NoViableAltException(dfa.Description, 75, _s, input);
            dfa.Error(nvae75);
            throw nvae75;
        }
        const string DFA93_eotS =
            "\x16\uffff";
        const string DFA93_eofS =
            "\x16\uffff";
        const string DFA93_minS =
            "\x01\x41\x11\x00\x04\uffff";
        const string DFA93_maxS =
            "\x01\u0115\x11\x00\x04\uffff";
        const string DFA93_acceptS =
            "\x12\uffff\x01\x04\x01\x01\x01\x02\x01\x03";
        const string DFA93_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
            "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d"+
            "\x01\x0e\x01\x0f\x01\x10\x04\uffff}>";
        static readonly string[] DFA93_transitionS = {
                "\x01\x09\x40\uffff\x01\x01\x01\x02\x01\x03\x01\x0b\x01\x07"+
                "\x01\x08\x01\x06\x01\x05\x01\x10\x0d\uffff\x04\x11\x27\uffff"+
                "\x01\x11\x0a\uffff\x01\x12\x0e\uffff\x01\x11\x02\uffff\x10"+
                "\x11\x01\uffff\x04\x11\x02\uffff\x04\x11\x01\x0a\x01\x0f"+
                "\x01\x0d\x01\x0e\x01\uffff\x01\x11\x06\uffff\x02\x11\x09"+
                "\uffff\x01\x11\x01\x04\x01\x0c\x01\x11",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA93_eot = DFA.UnpackEncodedString(DFA93_eotS);
        static readonly short[] DFA93_eof = DFA.UnpackEncodedString(DFA93_eofS);
        static readonly char[] DFA93_min = DFA.UnpackEncodedStringToUnsignedChars(DFA93_minS);
        static readonly char[] DFA93_max = DFA.UnpackEncodedStringToUnsignedChars(DFA93_maxS);
        static readonly short[] DFA93_accept = DFA.UnpackEncodedString(DFA93_acceptS);
        static readonly short[] DFA93_special = DFA.UnpackEncodedString(DFA93_specialS);
        static readonly short[][] DFA93_transition = DFA.UnpackEncodedStringArray(DFA93_transitionS);

        protected class DFA93 : DFA
        {
            public DFA93(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 93;
                this.eot = DFA93_eot;
                this.eof = DFA93_eof;
                this.min = DFA93_min;
                this.max = DFA93_max;
                this.accept = DFA93_accept;
                this.special = DFA93_special;
                this.transition = DFA93_transition;

            }

            override public string Description
            {
                get { return "567:1: type returns [string thetext] : ( ( ( predefined_type | type_name ) rank_specifiers )=> (p1= predefined_type | tn1= type_name ) rs= rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> (p2= predefined_type | tn2= type_name ) ( ( '*' )+ | '?' ) | (p3= predefined_type | tn3= type_name ) | 'void' ( '*' )+ );"; }
            }

        }


        protected internal int DFA93_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA93_1 = input.LA(1);

                       	 
                       	int index93_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA93_2 = input.LA(1);

                       	 
                       	int index93_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA93_3 = input.LA(1);

                       	 
                       	int index93_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA93_4 = input.LA(1);

                       	 
                       	int index93_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA93_5 = input.LA(1);

                       	 
                       	int index93_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA93_6 = input.LA(1);

                       	 
                       	int index93_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA93_7 = input.LA(1);

                       	 
                       	int index93_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA93_8 = input.LA(1);

                       	 
                       	int index93_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA93_9 = input.LA(1);

                       	 
                       	int index93_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA93_10 = input.LA(1);

                       	 
                       	int index93_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA93_11 = input.LA(1);

                       	 
                       	int index93_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA93_12 = input.LA(1);

                       	 
                       	int index93_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA93_13 = input.LA(1);

                       	 
                       	int index93_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA93_14 = input.LA(1);

                       	 
                       	int index93_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA93_15 = input.LA(1);

                       	 
                       	int index93_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA93_16 = input.LA(1);

                       	 
                       	int index93_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA93_17 = input.LA(1);

                       	 
                       	int index93_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred18_TemplateExtracter()) ) { s = 19; }

                       	else if ( (synpred19_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index93_17);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae93 =
                new NoViableAltException(dfa.Description, 93, _s, input);
            dfa.Error(nvae93);
            throw nvae93;
        }
        const string DFA104_eotS =
            "\x29\uffff";
        const string DFA104_eofS =
            "\x29\uffff";
        const string DFA104_minS =
            "\x01\x24\x26\x00\x02\uffff";
        const string DFA104_maxS =
            "\x01\u0115\x26\x00\x02\uffff";
        const string DFA104_acceptS =
            "\x27\uffff\x01\x01\x01\x02";
        const string DFA104_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
            "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d"+
            "\x01\x0e\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x01\x14\x01"+
            "\x15\x01\x16\x01\x17\x01\x18\x01\x19\x01\x1a\x01\x1b\x01\x1c"+
            "\x01\x1d\x01\x1e\x01\x1f\x01\x20\x01\x21\x01\x22\x01\x23\x01"+
            "\x24\x01\x25\x02\uffff}>";
        static readonly string[] DFA104_transitionS = {
                "\x01\x20\x01\x21\x0b\uffff\x01\x02\x0f\uffff\x01\x0c\x01"+
                "\x03\x06\uffff\x01\x01\x15\uffff\x01\x25\x09\uffff\x01\x1e"+
                "\x01\x1f\x02\uffff\x01\x24\x14\uffff\x01\x04\x01\x05\x01"+
                "\x06\x01\x0e\x01\x0a\x01\x0b\x01\x09\x01\x08\x01\x13\x09"+
                "\x17\x04\uffff\x04\x26\x27\uffff\x01\x26\x01\uffff\x01\x18"+
                "\x09\uffff\x01\x15\x01\uffff\x01\x22\x01\x23\x03\uffff\x01"+
                "\x19\x01\x1a\x01\x1b\x01\x1c\x01\x1d\x01\x16\x01\uffff\x01"+
                "\x26\x02\uffff\x01\x26\x01\x14\x0e\x26\x01\uffff\x04\x26"+
                "\x02\uffff\x04\x26\x01\x0d\x01\x12\x01\x10\x01\x11\x01\uffff"+
                "\x01\x26\x06\uffff\x02\x26\x09\uffff\x01\x26\x01\x07\x01"+
                "\x0f\x01\x26",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                ""
        };

        static readonly short[] DFA104_eot = DFA.UnpackEncodedString(DFA104_eotS);
        static readonly short[] DFA104_eof = DFA.UnpackEncodedString(DFA104_eofS);
        static readonly char[] DFA104_min = DFA.UnpackEncodedStringToUnsignedChars(DFA104_minS);
        static readonly char[] DFA104_max = DFA.UnpackEncodedStringToUnsignedChars(DFA104_maxS);
        static readonly short[] DFA104_accept = DFA.UnpackEncodedString(DFA104_acceptS);
        static readonly short[] DFA104_special = DFA.UnpackEncodedString(DFA104_specialS);
        static readonly short[][] DFA104_transition = DFA.UnpackEncodedStringArray(DFA104_transitionS);

        protected class DFA104 : DFA
        {
            public DFA104(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 104;
                this.eot = DFA104_eot;
                this.eof = DFA104_eof;
                this.min = DFA104_min;
                this.max = DFA104_max;
                this.accept = DFA104_accept;
                this.special = DFA104_special;
                this.transition = DFA104_transition;

            }

            override public string Description
            {
                get { return "604:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );"; }
            }

        }


        protected internal int DFA104_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA104_1 = input.LA(1);

                       	 
                       	int index104_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA104_2 = input.LA(1);

                       	 
                       	int index104_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA104_3 = input.LA(1);

                       	 
                       	int index104_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA104_4 = input.LA(1);

                       	 
                       	int index104_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA104_5 = input.LA(1);

                       	 
                       	int index104_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA104_6 = input.LA(1);

                       	 
                       	int index104_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA104_7 = input.LA(1);

                       	 
                       	int index104_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA104_8 = input.LA(1);

                       	 
                       	int index104_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA104_9 = input.LA(1);

                       	 
                       	int index104_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA104_10 = input.LA(1);

                       	 
                       	int index104_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA104_11 = input.LA(1);

                       	 
                       	int index104_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA104_12 = input.LA(1);

                       	 
                       	int index104_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA104_13 = input.LA(1);

                       	 
                       	int index104_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA104_14 = input.LA(1);

                       	 
                       	int index104_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA104_15 = input.LA(1);

                       	 
                       	int index104_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA104_16 = input.LA(1);

                       	 
                       	int index104_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA104_17 = input.LA(1);

                       	 
                       	int index104_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA104_18 = input.LA(1);

                       	 
                       	int index104_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA104_19 = input.LA(1);

                       	 
                       	int index104_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA104_20 = input.LA(1);

                       	 
                       	int index104_20 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_20);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA104_21 = input.LA(1);

                       	 
                       	int index104_21 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_21);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA104_22 = input.LA(1);

                       	 
                       	int index104_22 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_22);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 22 : 
                       	int LA104_23 = input.LA(1);

                       	 
                       	int index104_23 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_23);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 23 : 
                       	int LA104_24 = input.LA(1);

                       	 
                       	int index104_24 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_24);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 24 : 
                       	int LA104_25 = input.LA(1);

                       	 
                       	int index104_25 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_25);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 25 : 
                       	int LA104_26 = input.LA(1);

                       	 
                       	int index104_26 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_26);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 26 : 
                       	int LA104_27 = input.LA(1);

                       	 
                       	int index104_27 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_27);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 27 : 
                       	int LA104_28 = input.LA(1);

                       	 
                       	int index104_28 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_28);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 28 : 
                       	int LA104_29 = input.LA(1);

                       	 
                       	int index104_29 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_29);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 29 : 
                       	int LA104_30 = input.LA(1);

                       	 
                       	int index104_30 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_30);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 30 : 
                       	int LA104_31 = input.LA(1);

                       	 
                       	int index104_31 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_31);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 31 : 
                       	int LA104_32 = input.LA(1);

                       	 
                       	int index104_32 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_32);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 32 : 
                       	int LA104_33 = input.LA(1);

                       	 
                       	int index104_33 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_33);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 33 : 
                       	int LA104_34 = input.LA(1);

                       	 
                       	int index104_34 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_34);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 34 : 
                       	int LA104_35 = input.LA(1);

                       	 
                       	int index104_35 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_35);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 35 : 
                       	int LA104_36 = input.LA(1);

                       	 
                       	int index104_36 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_36);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 36 : 
                       	int LA104_37 = input.LA(1);

                       	 
                       	int index104_37 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_37);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 37 : 
                       	int LA104_38 = input.LA(1);

                       	 
                       	int index104_38 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred20_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 40; }

                       	 
                       	input.Seek(index104_38);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae104 =
                new NoViableAltException(dfa.Description, 104, _s, input);
            dfa.Error(nvae104);
            throw nvae104;
        }
        const string DFA106_eotS =
            "\x27\uffff";
        const string DFA106_eofS =
            "\x27\uffff";
        const string DFA106_minS =
            "\x01\x24\x01\x00\x25\uffff";
        const string DFA106_maxS =
            "\x01\u0115\x01\x00\x25\uffff";
        const string DFA106_acceptS =
            "\x02\uffff\x01\x02\x1b\uffff\x01\x03\x01\x04\x01\x05\x01\x06"+
            "\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x01";
        const string DFA106_specialS =
            "\x01\uffff\x01\x00\x25\uffff}>";
        static readonly string[] DFA106_transitionS = {
                "\x01\x20\x01\x21\x0b\uffff\x01\x02\x0f\uffff\x02\x02\x06"+
                "\uffff\x01\x01\x15\uffff\x01\x25\x09\uffff\x01\x1e\x01\x1f"+
                "\x02\uffff\x01\x24\x14\uffff\x12\x02\x04\uffff\x04\x02\x27"+
                "\uffff\x01\x02\x01\uffff\x01\x02\x09\uffff\x01\x02\x01\uffff"+
                "\x01\x22\x01\x23\x03\uffff\x06\x02\x01\uffff\x01\x02\x02"+
                "\uffff\x10\x02\x01\uffff\x04\x02\x02\uffff\x08\x02\x01\uffff"+
                "\x01\x02\x06\uffff\x02\x02\x09\uffff\x04\x02",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA106_eot = DFA.UnpackEncodedString(DFA106_eotS);
        static readonly short[] DFA106_eof = DFA.UnpackEncodedString(DFA106_eofS);
        static readonly char[] DFA106_min = DFA.UnpackEncodedStringToUnsignedChars(DFA106_minS);
        static readonly char[] DFA106_max = DFA.UnpackEncodedStringToUnsignedChars(DFA106_maxS);
        static readonly short[] DFA106_accept = DFA.UnpackEncodedString(DFA106_acceptS);
        static readonly short[] DFA106_special = DFA.UnpackEncodedString(DFA106_specialS);
        static readonly short[][] DFA106_transition = DFA.UnpackEncodedStringArray(DFA106_transitionS);

        protected class DFA106 : DFA
        {
            public DFA106(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 106;
                this.eot = DFA106_eot;
                this.eof = DFA106_eof;
                this.min = DFA106_min;
                this.max = DFA106_max;
                this.accept = DFA106_accept;
                this.special = DFA106_special;
                this.transition = DFA106_transition;

            }

            override public string Description
            {
                get { return "612:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );"; }
            }

        }


        protected internal int DFA106_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA106_1 = input.LA(1);

                       	 
                       	int index106_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred21_TemplateExtracter()) ) { s = 38; }

                       	else if ( (true) ) { s = 2; }

                       	 
                       	input.Seek(index106_1);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae106 =
                new NoViableAltException(dfa.Description, 106, _s, input);
            dfa.Error(nvae106);
            throw nvae106;
        }
        const string DFA108_eotS =
            "\x29\uffff";
        const string DFA108_eofS =
            "\x29\uffff";
        const string DFA108_minS =
            "\x01\x24\x04\x00\x24\uffff";
        const string DFA108_maxS =
            "\x01\u0115\x04\x00\x24\uffff";
        const string DFA108_acceptS =
            "\x05\uffff\x01\x03\x21\uffff\x01\x01\x01\x02";
        const string DFA108_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x24\uffff}>";
        static readonly string[] DFA108_transitionS = {
                "\x02\x05\x0b\uffff\x01\x05\x0f\uffff\x02\x05\x06\uffff\x01"+
                "\x01\x15\uffff\x01\x05\x09\uffff\x02\x05\x02\uffff\x01\x05"+
                "\x14\uffff\x08\x05\x01\x02\x09\x05\x04\uffff\x04\x04\x27"+
                "\uffff\x01\x04\x01\uffff\x01\x05\x09\uffff\x01\x05\x01\uffff"+
                "\x02\x05\x03\uffff\x06\x05\x01\uffff\x01\x04\x02\uffff\x01"+
                "\x04\x01\x03\x0e\x04\x01\uffff\x04\x04\x02\uffff\x04\x04"+
                "\x04\x05\x01\uffff\x01\x04\x06\uffff\x02\x04\x09\uffff\x01"+
                "\x04\x02\x05\x01\x04",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA108_eot = DFA.UnpackEncodedString(DFA108_eotS);
        static readonly short[] DFA108_eof = DFA.UnpackEncodedString(DFA108_eofS);
        static readonly char[] DFA108_min = DFA.UnpackEncodedStringToUnsignedChars(DFA108_minS);
        static readonly char[] DFA108_max = DFA.UnpackEncodedStringToUnsignedChars(DFA108_maxS);
        static readonly short[] DFA108_accept = DFA.UnpackEncodedString(DFA108_acceptS);
        static readonly short[] DFA108_special = DFA.UnpackEncodedString(DFA108_specialS);
        static readonly short[][] DFA108_transition = DFA.UnpackEncodedStringArray(DFA108_transitionS);

        protected class DFA108 : DFA
        {
            public DFA108(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 108;
                this.eot = DFA108_eot;
                this.eof = DFA108_eof;
                this.min = DFA108_min;
                this.max = DFA108_max;
                this.accept = DFA108_accept;
                this.special = DFA108_special;
                this.transition = DFA108_transition;

            }

            override public string Description
            {
                get { return "638:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );"; }
            }

        }


        protected internal int DFA108_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA108_1 = input.LA(1);

                       	 
                       	int index108_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred22_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 5; }

                       	 
                       	input.Seek(index108_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA108_2 = input.LA(1);

                       	 
                       	int index108_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred22_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 5; }

                       	 
                       	input.Seek(index108_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA108_3 = input.LA(1);

                       	 
                       	int index108_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred22_TemplateExtracter()) ) { s = 39; }

                       	else if ( (synpred23_TemplateExtracter()) ) { s = 40; }

                       	else if ( (true) ) { s = 5; }

                       	 
                       	input.Seek(index108_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA108_4 = input.LA(1);

                       	 
                       	int index108_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred22_TemplateExtracter()) ) { s = 39; }

                       	else if ( (true) ) { s = 5; }

                       	 
                       	input.Seek(index108_4);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae108 =
                new NoViableAltException(dfa.Description, 108, _s, input);
            dfa.Error(nvae108);
            throw nvae108;
        }
        const string DFA170_eotS =
            "\x14\uffff";
        const string DFA170_eofS =
            "\x14\uffff";
        const string DFA170_minS =
            "\x01\x41\x0f\uffff\x02\x00\x02\uffff";
        const string DFA170_maxS =
            "\x01\u0115\x0f\uffff\x02\x00\x02\uffff";
        const string DFA170_acceptS =
            "\x01\uffff\x0f\x01\x02\uffff\x01\x01\x01\x02";
        const string DFA170_specialS =
            "\x01\x00\x0f\uffff\x01\x01\x01\x02\x02\uffff}>";
        static readonly string[] DFA170_transitionS = {
                "\x01\x09\x40\uffff\x01\x01\x01\x02\x01\x03\x01\x0b\x01\x07"+
                "\x01\x08\x01\x06\x01\x05\x01\x10\x09\x12\x04\uffff\x04\x11"+
                "\x27\uffff\x01\x11\x19\uffff\x01\x11\x02\uffff\x10\x11\x01"+
                "\uffff\x04\x11\x02\uffff\x04\x11\x01\x0a\x01\x0f\x01\x0d"+
                "\x01\x0e\x01\uffff\x01\x11\x06\uffff\x02\x11\x09\uffff\x01"+
                "\x11\x01\x04\x01\x0c\x01\x11",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\uffff",
                "\x01\uffff",
                "",
                ""
        };

        static readonly short[] DFA170_eot = DFA.UnpackEncodedString(DFA170_eotS);
        static readonly short[] DFA170_eof = DFA.UnpackEncodedString(DFA170_eofS);
        static readonly char[] DFA170_min = DFA.UnpackEncodedStringToUnsignedChars(DFA170_minS);
        static readonly char[] DFA170_max = DFA.UnpackEncodedStringToUnsignedChars(DFA170_maxS);
        static readonly short[] DFA170_accept = DFA.UnpackEncodedString(DFA170_acceptS);
        static readonly short[] DFA170_special = DFA.UnpackEncodedString(DFA170_specialS);
        static readonly short[][] DFA170_transition = DFA.UnpackEncodedStringArray(DFA170_transitionS);

        protected class DFA170 : DFA
        {
            public DFA170(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 170;
                this.eot = DFA170_eot;
                this.eof = DFA170_eof;
                this.min = DFA170_min;
                this.max = DFA170_max;
                this.accept = DFA170_accept;
                this.special = DFA170_special;
                this.transition = DFA170_transition;

            }

            override public string Description
            {
                get { return "949:3: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators[$type.thetext, false] ';' )"; }
            }

        }


        protected internal int DFA170_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA170_0 = input.LA(1);

                       	 
                       	int index170_0 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA170_0 == BOOL) && (synpred26_TemplateExtracter()) ) { s = 1; }

                       	else if ( (LA170_0 == BYTE) && (synpred26_TemplateExtracter()) ) { s = 2; }

                       	else if ( (LA170_0 == CHAR) && (synpred26_TemplateExtracter()) ) { s = 3; }

                       	else if ( (LA170_0 == 275) && (synpred26_TemplateExtracter()) ) { s = 4; }

                       	else if ( (LA170_0 == DOUBLE) && (synpred26_TemplateExtracter()) ) { s = 5; }

                       	else if ( (LA170_0 == FLOAT) && (synpred26_TemplateExtracter()) ) { s = 6; }

                       	else if ( (LA170_0 == INT) && (synpred26_TemplateExtracter()) ) { s = 7; }

                       	else if ( (LA170_0 == LONG) && (synpred26_TemplateExtracter()) ) { s = 8; }

                       	else if ( (LA170_0 == OBJECT) && (synpred26_TemplateExtracter()) ) { s = 9; }

                       	else if ( (LA170_0 == 251) && (synpred26_TemplateExtracter()) ) { s = 10; }

                       	else if ( (LA170_0 == SHORT) && (synpred26_TemplateExtracter()) ) { s = 11; }

                       	else if ( (LA170_0 == 276) && (synpred26_TemplateExtracter()) ) { s = 12; }

                       	else if ( (LA170_0 == 253) && (synpred26_TemplateExtracter()) ) { s = 13; }

                       	else if ( (LA170_0 == 254) && (synpred26_TemplateExtracter()) ) { s = 14; }

                       	else if ( (LA170_0 == 252) && (synpred26_TemplateExtracter()) ) { s = 15; }

                       	else if ( (LA170_0 == IDENTIFIER) ) { s = 16; }

                       	else if ( ((LA170_0 >= ELIF && LA170_0 <= UNDEF) || LA170_0 == 195 || LA170_0 == 221 || (LA170_0 >= 224 && LA170_0 <= 239) || (LA170_0 >= 241 && LA170_0 <= 244) || (LA170_0 >= 247 && LA170_0 <= 250) || LA170_0 == 256 || (LA170_0 >= 263 && LA170_0 <= 264) || LA170_0 == 274 || LA170_0 == 277) ) { s = 17; }

                       	else if ( ((LA170_0 >= Real_literal && LA170_0 <= NULL)) && (synpred26_TemplateExtracter()) ) { s = 18; }

                       	 
                       	input.Seek(index170_0);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA170_16 = input.LA(1);

                       	 
                       	int index170_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred26_TemplateExtracter()) ) { s = 18; }

                       	else if ( (true) ) { s = 19; }

                       	 
                       	input.Seek(index170_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA170_17 = input.LA(1);

                       	 
                       	int index170_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred26_TemplateExtracter()) ) { s = 18; }

                       	else if ( (true) ) { s = 19; }

                       	 
                       	input.Seek(index170_17);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae170 =
                new NoViableAltException(dfa.Description, 170, _s, input);
            dfa.Error(nvae170);
            throw nvae170;
        }
        const string DFA236_eotS =
            "\x10\uffff";
        const string DFA236_eofS =
            "\x10\uffff";
        const string DFA236_minS =
            "\x01\x14\x05\uffff\x01\x41\x01\uffff\x02\x41\x06\uffff";
        const string DFA236_maxS =
            "\x01\u0115\x05\uffff\x01\u0115\x01\uffff\x02\u0115\x06\uffff";
        const string DFA236_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\uffff"+
            "\x01\x07\x02\uffff\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x06\x01"+
            "\x0c";
        const string DFA236_specialS =
            "\x10\uffff}>";
        static readonly string[] DFA236_transitionS = {
                "\x01\x0b\x2c\uffff\x01\x07\x40\uffff\x08\x07\x01\x08\x0d"+
                "\uffff\x04\x09\x27\uffff\x01\x09\x01\x03\x08\uffff\x01\x01"+
                "\x01\x06\x0b\uffff\x01\x0c\x02\uffff\x01\x09\x02\uffff\x10"+
                "\x09\x01\x02\x04\x09\x01\x05\x01\uffff\x04\x09\x04\x07\x01"+
                "\x0a\x01\x09\x01\uffff\x01\x04\x01\uffff\x02\x0d\x01\uffff"+
                "\x02\x09\x09\uffff\x01\x09\x02\x07\x01\x09",
                "",
                "",
                "",
                "",
                "",
                "\x01\x0e\x2b\uffff\x01\x07\x14\uffff\x12\x0e\x04\uffff"+
                "\x04\x0e\x27\uffff\x01\x0e\x19\uffff\x01\x0e\x02\uffff\x10"+
                "\x0e\x01\uffff\x04\x0e\x02\uffff\x08\x0e\x01\uffff\x01\x0e"+
                "\x06\uffff\x02\x0e\x09\uffff\x04\x0e",
                "",
                "\x02\x07\x02\uffff\x01\x07\x03\uffff\x01\x0f\x18\uffff"+
                "\x01\x07\x0a\uffff\x01\x07\x14\uffff\x13\x07\x03\uffff\x04"+
                "\x07\x27\uffff\x01\x07\x0c\uffff\x01\x07\x0b\uffff\x02\x07"+
                "\x02\uffff\x10\x07\x01\uffff\x04\x07\x02\uffff\x08\x07\x01"+
                "\uffff\x01\x07\x02\uffff\x01\x07\x03\uffff\x02\x07\x09\uffff"+
                "\x04\x07",
                "\x02\x07\x02\uffff\x01\x07\x03\uffff\x01\x0f\x18\uffff"+
                "\x01\x07\x0a\uffff\x01\x07\x14\uffff\x13\x07\x03\uffff\x04"+
                "\x07\x27\uffff\x01\x07\x0c\uffff\x01\x07\x0b\uffff\x02\x07"+
                "\x02\uffff\x10\x07\x01\uffff\x04\x07\x02\uffff\x08\x07\x01"+
                "\uffff\x01\x07\x02\uffff\x01\x07\x03\uffff\x02\x07\x09\uffff"+
                "\x04\x07",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA236_eot = DFA.UnpackEncodedString(DFA236_eotS);
        static readonly short[] DFA236_eof = DFA.UnpackEncodedString(DFA236_eofS);
        static readonly char[] DFA236_min = DFA.UnpackEncodedStringToUnsignedChars(DFA236_minS);
        static readonly char[] DFA236_max = DFA.UnpackEncodedStringToUnsignedChars(DFA236_maxS);
        static readonly short[] DFA236_accept = DFA.UnpackEncodedString(DFA236_acceptS);
        static readonly short[] DFA236_special = DFA.UnpackEncodedString(DFA236_specialS);
        static readonly short[][] DFA236_transition = DFA.UnpackEncodedStringArray(DFA236_transitionS);

        protected class DFA236 : DFA
        {
            public DFA236(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 236;
                this.eot = DFA236_eot;
                this.eof = DFA236_eof;
                this.min = DFA236_min;
                this.max = DFA236_max;
                this.accept = DFA236_accept;
                this.special = DFA236_special;
                this.transition = DFA236_transition;

            }

            override public string Description
            {
                get { return "1404:2: ( 'const' ct= type constant_declarators[$ct.thetext] ';' | event_declaration | p= 'partial' ( 'void' method_declaration[true, \"System.Void\"] | interface_declaration[true] | class_declaration[true] | struct_declaration[true] ) | interface_declaration[false] | class_declaration[false] | 'void' method_declaration[false, \"System.Void\"] | rt= type ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] ) | struct_declaration[false] | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )"; }
            }

        }

        const string DFA235_eotS =
            "\x19\uffff";
        const string DFA235_eofS =
            "\x19\uffff";
        const string DFA235_minS =
            "\x01\x41\x12\x00\x06\uffff";
        const string DFA235_maxS =
            "\x01\u0115\x12\x00\x06\uffff";
        const string DFA235_acceptS =
            "\x13\uffff\x01\x04\x01\x06\x01\x01\x01\x02\x01\x03\x01\x05";
        const string DFA235_specialS =
            "\x01\uffff\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01"+
            "\x06\x01\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d"+
            "\x01\x0e\x01\x0f\x01\x10\x01\x11\x06\uffff}>";
        static readonly string[] DFA235_transitionS = {
                "\x01\x09\x01\x13\x3f\uffff\x01\x01\x01\x02\x01\x03\x01\x0b"+
                "\x01\x07\x01\x08\x01\x06\x01\x05\x01\x10\x09\x12\x04\uffff"+
                "\x04\x11\x27\uffff\x01\x11\x19\uffff\x01\x11\x02\uffff\x10"+
                "\x11\x01\uffff\x04\x11\x02\uffff\x04\x11\x01\x0a\x01\x0f"+
                "\x01\x0d\x01\x0e\x01\uffff\x01\x11\x02\uffff\x01\x14\x03"+
                "\uffff\x02\x11\x09\uffff\x01\x11\x01\x04\x01\x0c\x01\x11",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA235_eot = DFA.UnpackEncodedString(DFA235_eotS);
        static readonly short[] DFA235_eof = DFA.UnpackEncodedString(DFA235_eofS);
        static readonly char[] DFA235_min = DFA.UnpackEncodedStringToUnsignedChars(DFA235_minS);
        static readonly char[] DFA235_max = DFA.UnpackEncodedStringToUnsignedChars(DFA235_maxS);
        static readonly short[] DFA235_accept = DFA.UnpackEncodedString(DFA235_acceptS);
        static readonly short[] DFA235_special = DFA.UnpackEncodedString(DFA235_specialS);
        static readonly short[][] DFA235_transition = DFA.UnpackEncodedStringArray(DFA235_transitionS);

        protected class DFA235 : DFA
        {
            public DFA235(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 235;
                this.eot = DFA235_eot;
                this.eof = DFA235_eof;
                this.min = DFA235_min;
                this.max = DFA235_max;
                this.accept = DFA235_accept;
                this.special = DFA235_special;
                this.transition = DFA235_transition;

            }

            override public string Description
            {
                get { return "1414:12: ( ( member_name '(' )=> method_declaration[false, $rt.thetext] | ( member_name '{' )=> property_declaration[$rt.thetext] | ( member_name '.' 'this' )=> type_name '.' indexer_declaration[$rt.thetext, $type_name.thetext+\".\"] | indexer_declaration[$rt.thetext, \"\"] | field_declaration[$rt.thetext] | operator_declaration[$rt.thetext] )"; }
            }

        }


        protected internal int DFA235_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA235_1 = input.LA(1);

                       	 
                       	int index235_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA235_2 = input.LA(1);

                       	 
                       	int index235_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA235_3 = input.LA(1);

                       	 
                       	int index235_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA235_4 = input.LA(1);

                       	 
                       	int index235_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA235_5 = input.LA(1);

                       	 
                       	int index235_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA235_6 = input.LA(1);

                       	 
                       	int index235_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA235_7 = input.LA(1);

                       	 
                       	int index235_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA235_8 = input.LA(1);

                       	 
                       	int index235_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA235_9 = input.LA(1);

                       	 
                       	int index235_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA235_10 = input.LA(1);

                       	 
                       	int index235_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA235_11 = input.LA(1);

                       	 
                       	int index235_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA235_12 = input.LA(1);

                       	 
                       	int index235_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA235_13 = input.LA(1);

                       	 
                       	int index235_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA235_14 = input.LA(1);

                       	 
                       	int index235_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA235_15 = input.LA(1);

                       	 
                       	int index235_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA235_16 = input.LA(1);

                       	 
                       	int index235_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	else if ( (synpred31_TemplateExtracter()) ) { s = 23; }

                       	else if ( (true) ) { s = 24; }

                       	 
                       	input.Seek(index235_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA235_17 = input.LA(1);

                       	 
                       	int index235_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	else if ( (synpred31_TemplateExtracter()) ) { s = 23; }

                       	else if ( (true) ) { s = 24; }

                       	 
                       	input.Seek(index235_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA235_18 = input.LA(1);

                       	 
                       	int index235_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred29_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred30_TemplateExtracter()) ) { s = 22; }

                       	 
                       	input.Seek(index235_18);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae235 =
                new NoViableAltException(dfa.Description, 235, _s, input);
            dfa.Error(nvae235);
            throw nvae235;
        }
        const string DFA240_eotS =
            "\x10\uffff";
        const string DFA240_eofS =
            "\x10\uffff";
        const string DFA240_minS =
            "\x01\x5d\x07\uffff\x01\x49\x07\uffff";
        const string DFA240_maxS =
            "\x01\u0096\x07\uffff\x01\u0096\x07\uffff";
        const string DFA240_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\x07\x01\uffff\x01\x09\x01\x0a\x01\x0c\x01\x0d\x01\x0e\x01\x08"+
            "\x01\x0b";
        const string DFA240_specialS =
            "\x10\uffff}>";
        static readonly string[] DFA240_transitionS = {
                "\x01\x05\x01\x06\x01\x04\x01\x0a\x01\x09\x01\x0b\x01\x0d"+
                "\x01\x0c\x01\x07\x05\uffff\x01\x02\x01\x03\x01\x01\x28\uffff"+
                "\x01\x08",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\x0f\x4c\uffff\x01\x0e",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA240_eot = DFA.UnpackEncodedString(DFA240_eotS);
        static readonly short[] DFA240_eof = DFA.UnpackEncodedString(DFA240_eofS);
        static readonly char[] DFA240_min = DFA.UnpackEncodedStringToUnsignedChars(DFA240_minS);
        static readonly char[] DFA240_max = DFA.UnpackEncodedStringToUnsignedChars(DFA240_maxS);
        static readonly short[] DFA240_accept = DFA.UnpackEncodedString(DFA240_acceptS);
        static readonly short[] DFA240_special = DFA.UnpackEncodedString(DFA240_specialS);
        static readonly short[][] DFA240_transition = DFA.UnpackEncodedStringArray(DFA240_transitionS);

        protected class DFA240 : DFA
        {
            public DFA240(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 240;
                this.eot = DFA240_eot;
                this.eof = DFA240_eof;
                this.min = DFA240_min;
                this.max = DFA240_max;
                this.accept = DFA240_accept;
                this.special = DFA240_special;
                this.transition = DFA240_transition;

            }

            override public string Description
            {
                get { return "1474:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );"; }
            }

        }

        const string DFA249_eotS =
            "\x3f\uffff";
        const string DFA249_eofS =
            "\x3f\uffff";
        const string DFA249_minS =
            "\x01\x24\x13\x00\x14\uffff\x01\x00\x14\uffff\x01\x00\x01\uffff";
        const string DFA249_maxS =
            "\x01\u0115\x13\x00\x14\uffff\x01\x00\x14\uffff\x01\x00\x01\uffff";
        const string DFA249_acceptS =
            "\x14\uffff\x02\x01\x01\x03\x27\uffff\x01\x02";
        const string DFA249_specialS =
            "\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x0e"+
            "\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x14\uffff\x01\x14\x14"+
            "\uffff\x01\x15\x01\uffff}>";
        static readonly string[] DFA249_transitionS = {
                "\x02\x16\x0b\uffff\x01\x16\x08\uffff\x02\x16\x02\uffff\x01"+
                "\x16\x01\uffff\x01\x16\x01\x0b\x02\x16\x03\uffff\x01\x16"+
                "\x01\uffff\x01\x16\x01\uffff\x01\x16\x13\uffff\x01\x16\x09"+
                "\uffff\x02\x16\x02\uffff\x01\x16\x14\uffff\x01\x03\x01\x04"+
                "\x01\x05\x01\x0d\x01\x09\x01\x0a\x01\x08\x01\x07\x01\x12"+
                "\x09\x16\x03\uffff\x01\x16\x04\x3d\x01\x16\x26\uffff\x01"+
                "\x3d\x01\uffff\x02\x16\x06\uffff\x01\x15\x01\x14\x01\x16"+
                "\x01\uffff\x02\x16\x03\uffff\x06\x16\x01\uffff\x01\x3d\x02"+
                "\uffff\x01\x3d\x01\x28\x0e\x3d\x01\uffff\x04\x3d\x02\uffff"+
                "\x04\x3d\x01\x0c\x01\x11\x01\x0f\x01\x10\x01\uffff\x01\x3d"+
                "\x05\uffff\x01\x16\x01\x01\x01\x02\x01\uffff\x01\x16\x01"+
                "\uffff\x06\x16\x01\x13\x01\x06\x01\x0e\x01\x3d",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\uffff",
                ""
        };

        static readonly short[] DFA249_eot = DFA.UnpackEncodedString(DFA249_eotS);
        static readonly short[] DFA249_eof = DFA.UnpackEncodedString(DFA249_eofS);
        static readonly char[] DFA249_min = DFA.UnpackEncodedStringToUnsignedChars(DFA249_minS);
        static readonly char[] DFA249_max = DFA.UnpackEncodedStringToUnsignedChars(DFA249_maxS);
        static readonly short[] DFA249_accept = DFA.UnpackEncodedString(DFA249_acceptS);
        static readonly short[] DFA249_special = DFA.UnpackEncodedString(DFA249_specialS);
        static readonly short[][] DFA249_transition = DFA.UnpackEncodedStringArray(DFA249_transitionS);

        protected class DFA249 : DFA
        {
            public DFA249(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 249;
                this.eot = DFA249_eot;
                this.eof = DFA249_eof;
                this.min = DFA249_min;
                this.max = DFA249_max;
                this.accept = DFA249_accept;
                this.special = DFA249_special;
                this.transition = DFA249_transition;

            }

            override public string Description
            {
                get { return "1539:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );"; }
            }

        }


        protected internal int DFA249_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA249_0 = input.LA(1);

                       	 
                       	int index249_0 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA249_0 == 263) ) { s = 1; }

                       	else if ( (LA249_0 == 264) ) { s = 2; }

                       	else if ( (LA249_0 == BOOL) ) { s = 3; }

                       	else if ( (LA249_0 == BYTE) ) { s = 4; }

                       	else if ( (LA249_0 == CHAR) ) { s = 5; }

                       	else if ( (LA249_0 == 275) ) { s = 6; }

                       	else if ( (LA249_0 == DOUBLE) ) { s = 7; }

                       	else if ( (LA249_0 == FLOAT) ) { s = 8; }

                       	else if ( (LA249_0 == INT) ) { s = 9; }

                       	else if ( (LA249_0 == LONG) ) { s = 10; }

                       	else if ( (LA249_0 == OBJECT) ) { s = 11; }

                       	else if ( (LA249_0 == 251) ) { s = 12; }

                       	else if ( (LA249_0 == SHORT) ) { s = 13; }

                       	else if ( (LA249_0 == 276) ) { s = 14; }

                       	else if ( (LA249_0 == 253) ) { s = 15; }

                       	else if ( (LA249_0 == 254) ) { s = 16; }

                       	else if ( (LA249_0 == 252) ) { s = 17; }

                       	else if ( (LA249_0 == IDENTIFIER) ) { s = 18; }

                       	else if ( (LA249_0 == 274) ) { s = 19; }

                       	else if ( (LA249_0 == 206) && (synpred34_TemplateExtracter()) ) { s = 20; }

                       	else if ( (LA249_0 == 205) && (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( ((LA249_0 >= MONONOT && LA249_0 <= MONOTWIDDLE) || LA249_0 == NEW_ARRAY || (LA249_0 >= RETURN && LA249_0 <= TRY) || LA249_0 == THROW || LA249_0 == BREAK || (LA249_0 >= THIS && LA249_0 <= FOREACH) || LA249_0 == OPEN_BRACE || LA249_0 == LPAREN || LA249_0 == IF || LA249_0 == BIT_AND || (LA249_0 >= PLUS && LA249_0 <= MINUS) || LA249_0 == STAR || (LA249_0 >= Real_literal && LA249_0 <= NULL) || LA249_0 == USING || LA249_0 == SEMI || (LA249_0 >= 197 && LA249_0 <= 198) || LA249_0 == 207 || (LA249_0 >= 209 && LA249_0 <= 210) || (LA249_0 >= 214 && LA249_0 <= 219) || LA249_0 == 262 || LA249_0 == 266 || (LA249_0 >= 268 && LA249_0 <= 273)) ) { s = 22; }

                       	else if ( (LA249_0 == 225) ) { s = 40; }

                       	else if ( ((LA249_0 >= ELIF && LA249_0 <= UNDEF) || LA249_0 == 195 || LA249_0 == 221 || LA249_0 == 224 || (LA249_0 >= 226 && LA249_0 <= 239) || (LA249_0 >= 241 && LA249_0 <= 244) || (LA249_0 >= 247 && LA249_0 <= 250) || LA249_0 == 256 || LA249_0 == 277) ) { s = 61; }

                       	 
                       	input.Seek(index249_0);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA249_1 = input.LA(1);

                       	 
                       	int index249_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred35_TemplateExtracter()) ) { s = 62; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA249_2 = input.LA(1);

                       	 
                       	int index249_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred35_TemplateExtracter()) ) { s = 62; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA249_3 = input.LA(1);

                       	 
                       	int index249_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA249_4 = input.LA(1);

                       	 
                       	int index249_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA249_5 = input.LA(1);

                       	 
                       	int index249_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA249_6 = input.LA(1);

                       	 
                       	int index249_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA249_7 = input.LA(1);

                       	 
                       	int index249_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA249_8 = input.LA(1);

                       	 
                       	int index249_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA249_9 = input.LA(1);

                       	 
                       	int index249_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA249_10 = input.LA(1);

                       	 
                       	int index249_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA249_11 = input.LA(1);

                       	 
                       	int index249_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA249_12 = input.LA(1);

                       	 
                       	int index249_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA249_13 = input.LA(1);

                       	 
                       	int index249_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA249_14 = input.LA(1);

                       	 
                       	int index249_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA249_15 = input.LA(1);

                       	 
                       	int index249_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA249_16 = input.LA(1);

                       	 
                       	int index249_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA249_17 = input.LA(1);

                       	 
                       	int index249_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA249_18 = input.LA(1);

                       	 
                       	int index249_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred35_TemplateExtracter()) ) { s = 62; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA249_19 = input.LA(1);

                       	 
                       	int index249_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred35_TemplateExtracter()) ) { s = 62; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA249_40 = input.LA(1);

                       	 
                       	int index249_40 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred35_TemplateExtracter()) ) { s = 62; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_40);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 21 : 
                       	int LA249_61 = input.LA(1);

                       	 
                       	int index249_61 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred34_TemplateExtracter()) ) { s = 21; }

                       	else if ( (synpred35_TemplateExtracter()) ) { s = 62; }

                       	else if ( (true) ) { s = 22; }

                       	 
                       	input.Seek(index249_61);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae249 =
                new NoViableAltException(dfa.Description, 249, _s, input);
            dfa.Error(nvae249);
            throw nvae249;
        }
        const string DFA250_eotS =
            "\x11\uffff";
        const string DFA250_eofS =
            "\x11\uffff";
        const string DFA250_minS =
            "\x01\x24\x05\uffff\x02\x47\x02\uffff\x01\x3a\x06\uffff";
        const string DFA250_maxS =
            "\x01\u0115\x05\uffff\x02\u009c\x02\uffff\x01\u00df\x06\uffff";
        const string DFA250_acceptS =
            "\x01\uffff\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x02\uffff"+
            "\x01\x08\x01\x09\x01\uffff\x01\x0b\x01\x0c\x01\x0d\x01\x06\x01"+
            "\x07\x01\x0a";
        const string DFA250_specialS =
            "\x11\uffff}>";
        static readonly string[] DFA250_transitionS = {
                "\x02\x0d\x0b\uffff\x01\x0d\x08\uffff\x01\x04\x01\x05\x02"+
                "\uffff\x01\x04\x01\uffff\x01\x04\x02\x0d\x01\x03\x03\uffff"+
                "\x01\x01\x01\uffff\x01\x0d\x01\uffff\x01\x02\x13\uffff\x01"+
                "\x0d\x09\uffff\x02\x0d\x02\uffff\x01\x0d\x14\uffff\x12\x0d"+
                "\x03\uffff\x01\x09\x04\x0d\x01\x01\x26\uffff\x01\x0d\x01"+
                "\uffff\x01\x0d\x01\x0b\x08\uffff\x01\x0d\x01\uffff\x02\x0d"+
                "\x03\uffff\x01\x0d\x01\x06\x01\x07\x03\x0d\x01\uffff\x01"+
                "\x0d\x02\uffff\x10\x0d\x01\uffff\x04\x0d\x02\uffff\x08\x0d"+
                "\x01\uffff\x01\x0d\x05\uffff\x01\x0c\x02\x0d\x01\uffff\x01"+
                "\x02\x01\uffff\x03\x03\x02\x04\x01\x08\x01\x0a\x03\x0d",
                "",
                "",
                "",
                "",
                "",
                "\x01\x0e\x01\uffff\x01\x0d\x52\uffff\x01\x0e",
                "\x01\x0f\x01\uffff\x01\x0d\x52\uffff\x01\x0f",
                "",
                "",
                "\x01\x10\x05\uffff\x01\x10\x04\uffff\x01\x0d\x03\uffff"+
                "\x02\x0d\x01\uffff\x0a\x0d\x05\uffff\x0b\x0d\x03\uffff\x07"+
                "\x0d\x24\uffff\x03\x0d\x05\uffff\x01\x0d\x33\uffff\x03\x0d"+
                "\x09\uffff\x01\x0d\x01\uffff\x02\x0d",
                "",
                "",
                "",
                "",
                "",
                ""
        };

        static readonly short[] DFA250_eot = DFA.UnpackEncodedString(DFA250_eotS);
        static readonly short[] DFA250_eof = DFA.UnpackEncodedString(DFA250_eofS);
        static readonly char[] DFA250_min = DFA.UnpackEncodedStringToUnsignedChars(DFA250_minS);
        static readonly char[] DFA250_max = DFA.UnpackEncodedStringToUnsignedChars(DFA250_maxS);
        static readonly short[] DFA250_accept = DFA.UnpackEncodedString(DFA250_acceptS);
        static readonly short[] DFA250_special = DFA.UnpackEncodedString(DFA250_specialS);
        static readonly short[][] DFA250_transition = DFA.UnpackEncodedStringArray(DFA250_transitionS);

        protected class DFA250 : DFA
        {
            public DFA250(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 250;
                this.eot = DFA250_eot;
                this.eof = DFA250_eof;
                this.min = DFA250_min;
                this.max = DFA250_max;
                this.accept = DFA250_accept;
                this.special = DFA250_special;
                this.transition = DFA250_transition;

            }

            override public string Description
            {
                get { return "1544:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );"; }
            }

        }

        const string DFA267_eotS =
            "\x2a\uffff";
        const string DFA267_eofS =
            "\x2a\uffff";
        const string DFA267_minS =
            "\x01\x24\x13\x00\x15\uffff\x01\x00";
        const string DFA267_maxS =
            "\x01\u0115\x13\x00\x15\uffff\x01\x00";
        const string DFA267_acceptS =
            "\x14\uffff\x01\x01\x01\x02\x14\uffff";
        const string DFA267_specialS =
            "\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x0e"+
            "\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x15\uffff\x01\x14}>";
        static readonly string[] DFA267_transitionS = {
                "\x02\x15\x0b\uffff\x01\x15\x0f\uffff\x01\x0b\x01\x15\x06"+
                "\uffff\x01\x15\x15\uffff\x01\x15\x09\uffff\x02\x15\x02\uffff"+
                "\x01\x15\x14\uffff\x01\x03\x01\x04\x01\x05\x01\x0d\x01\x09"+
                "\x01\x0a\x01\x08\x01\x07\x01\x12\x09\x15\x04\uffff\x04\x29"+
                "\x27\uffff\x01\x29\x01\uffff\x01\x15\x08\uffff\x01\x14\x01"+
                "\x15\x01\uffff\x02\x15\x03\uffff\x06\x15\x01\uffff\x01\x29"+
                "\x02\uffff\x01\x29\x01\x13\x0e\x29\x01\uffff\x04\x29\x02"+
                "\uffff\x04\x29\x01\x0c\x01\x11\x01\x0f\x01\x10\x01\uffff"+
                "\x01\x29\x06\uffff\x01\x01\x01\x02\x09\uffff\x01\x29\x01"+
                "\x06\x01\x0e\x01\x29",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\uffff"
        };

        static readonly short[] DFA267_eot = DFA.UnpackEncodedString(DFA267_eotS);
        static readonly short[] DFA267_eof = DFA.UnpackEncodedString(DFA267_eofS);
        static readonly char[] DFA267_min = DFA.UnpackEncodedStringToUnsignedChars(DFA267_minS);
        static readonly char[] DFA267_max = DFA.UnpackEncodedStringToUnsignedChars(DFA267_maxS);
        static readonly short[] DFA267_accept = DFA.UnpackEncodedString(DFA267_acceptS);
        static readonly short[] DFA267_special = DFA.UnpackEncodedString(DFA267_specialS);
        static readonly short[][] DFA267_transition = DFA.UnpackEncodedStringArray(DFA267_transitionS);

        protected class DFA267 : DFA
        {
            public DFA267(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 267;
                this.eot = DFA267_eot;
                this.eof = DFA267_eof;
                this.min = DFA267_min;
                this.max = DFA267_max;
                this.accept = DFA267_accept;
                this.special = DFA267_special;
                this.transition = DFA267_transition;

            }

            override public string Description
            {
                get { return "1633:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );"; }
            }

        }


        protected internal int DFA267_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA267_0 = input.LA(1);

                       	 
                       	int index267_0 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA267_0 == 263) ) { s = 1; }

                       	else if ( (LA267_0 == 264) ) { s = 2; }

                       	else if ( (LA267_0 == BOOL) ) { s = 3; }

                       	else if ( (LA267_0 == BYTE) ) { s = 4; }

                       	else if ( (LA267_0 == CHAR) ) { s = 5; }

                       	else if ( (LA267_0 == 275) ) { s = 6; }

                       	else if ( (LA267_0 == DOUBLE) ) { s = 7; }

                       	else if ( (LA267_0 == FLOAT) ) { s = 8; }

                       	else if ( (LA267_0 == INT) ) { s = 9; }

                       	else if ( (LA267_0 == LONG) ) { s = 10; }

                       	else if ( (LA267_0 == OBJECT) ) { s = 11; }

                       	else if ( (LA267_0 == 251) ) { s = 12; }

                       	else if ( (LA267_0 == SHORT) ) { s = 13; }

                       	else if ( (LA267_0 == 276) ) { s = 14; }

                       	else if ( (LA267_0 == 253) ) { s = 15; }

                       	else if ( (LA267_0 == 254) ) { s = 16; }

                       	else if ( (LA267_0 == 252) ) { s = 17; }

                       	else if ( (LA267_0 == IDENTIFIER) ) { s = 18; }

                       	else if ( (LA267_0 == 225) ) { s = 19; }

                       	else if ( (LA267_0 == 206) && (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( ((LA267_0 >= MONONOT && LA267_0 <= MONOTWIDDLE) || LA267_0 == NEW_ARRAY || LA267_0 == THIS || LA267_0 == LPAREN || LA267_0 == BIT_AND || (LA267_0 >= PLUS && LA267_0 <= MINUS) || LA267_0 == STAR || (LA267_0 >= Real_literal && LA267_0 <= NULL) || LA267_0 == 197 || LA267_0 == 207 || (LA267_0 >= 209 && LA267_0 <= 210) || (LA267_0 >= 214 && LA267_0 <= 219)) ) { s = 21; }

                       	else if ( ((LA267_0 >= ELIF && LA267_0 <= UNDEF) || LA267_0 == 195 || LA267_0 == 221 || LA267_0 == 224 || (LA267_0 >= 226 && LA267_0 <= 239) || (LA267_0 >= 241 && LA267_0 <= 244) || (LA267_0 >= 247 && LA267_0 <= 250) || LA267_0 == 256 || LA267_0 == 274 || LA267_0 == 277) ) { s = 41; }

                       	 
                       	input.Seek(index267_0);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA267_1 = input.LA(1);

                       	 
                       	int index267_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA267_2 = input.LA(1);

                       	 
                       	int index267_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA267_3 = input.LA(1);

                       	 
                       	int index267_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA267_4 = input.LA(1);

                       	 
                       	int index267_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA267_5 = input.LA(1);

                       	 
                       	int index267_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA267_6 = input.LA(1);

                       	 
                       	int index267_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA267_7 = input.LA(1);

                       	 
                       	int index267_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA267_8 = input.LA(1);

                       	 
                       	int index267_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA267_9 = input.LA(1);

                       	 
                       	int index267_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA267_10 = input.LA(1);

                       	 
                       	int index267_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA267_11 = input.LA(1);

                       	 
                       	int index267_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA267_12 = input.LA(1);

                       	 
                       	int index267_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA267_13 = input.LA(1);

                       	 
                       	int index267_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA267_14 = input.LA(1);

                       	 
                       	int index267_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA267_15 = input.LA(1);

                       	 
                       	int index267_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA267_16 = input.LA(1);

                       	 
                       	int index267_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA267_17 = input.LA(1);

                       	 
                       	int index267_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA267_18 = input.LA(1);

                       	 
                       	int index267_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA267_19 = input.LA(1);

                       	 
                       	int index267_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA267_41 = input.LA(1);

                       	 
                       	int index267_41 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred39_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index267_41);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae267 =
                new NoViableAltException(dfa.Description, 267, _s, input);
            dfa.Error(nvae267);
            throw nvae267;
        }
        const string DFA279_eotS =
            "\x2a\uffff";
        const string DFA279_eofS =
            "\x2a\uffff";
        const string DFA279_minS =
            "\x01\x24\x13\x00\x15\uffff\x01\x00";
        const string DFA279_maxS =
            "\x01\u0115\x13\x00\x15\uffff\x01\x00";
        const string DFA279_acceptS =
            "\x14\uffff\x01\x01\x01\x02\x14\uffff";
        const string DFA279_specialS =
            "\x01\x00\x01\x01\x01\x02\x01\x03\x01\x04\x01\x05\x01\x06\x01"+
            "\x07\x01\x08\x01\x09\x01\x0a\x01\x0b\x01\x0c\x01\x0d\x01\x0e"+
            "\x01\x0f\x01\x10\x01\x11\x01\x12\x01\x13\x15\uffff\x01\x14}>";
        static readonly string[] DFA279_transitionS = {
                "\x02\x15\x0b\uffff\x01\x15\x0f\uffff\x01\x0b\x01\x15\x06"+
                "\uffff\x01\x15\x15\uffff\x01\x15\x09\uffff\x02\x15\x02\uffff"+
                "\x01\x15\x14\uffff\x01\x03\x01\x04\x01\x05\x01\x0d\x01\x09"+
                "\x01\x0a\x01\x08\x01\x07\x01\x12\x09\x15\x04\uffff\x04\x29"+
                "\x27\uffff\x01\x29\x01\uffff\x01\x15\x08\uffff\x01\x14\x01"+
                "\x15\x01\uffff\x02\x15\x03\uffff\x06\x15\x01\uffff\x01\x29"+
                "\x02\uffff\x01\x29\x01\x13\x0e\x29\x01\uffff\x04\x29\x02"+
                "\uffff\x04\x29\x01\x0c\x01\x11\x01\x0f\x01\x10\x01\uffff"+
                "\x01\x29\x06\uffff\x01\x01\x01\x02\x09\uffff\x01\x29\x01"+
                "\x06\x01\x0e\x01\x29",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "\x01\uffff",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "\x01\uffff"
        };

        static readonly short[] DFA279_eot = DFA.UnpackEncodedString(DFA279_eotS);
        static readonly short[] DFA279_eof = DFA.UnpackEncodedString(DFA279_eofS);
        static readonly char[] DFA279_min = DFA.UnpackEncodedStringToUnsignedChars(DFA279_minS);
        static readonly char[] DFA279_max = DFA.UnpackEncodedStringToUnsignedChars(DFA279_maxS);
        static readonly short[] DFA279_accept = DFA.UnpackEncodedString(DFA279_acceptS);
        static readonly short[] DFA279_special = DFA.UnpackEncodedString(DFA279_specialS);
        static readonly short[][] DFA279_transition = DFA.UnpackEncodedStringArray(DFA279_transitionS);

        protected class DFA279 : DFA
        {
            public DFA279(BaseRecognizer recognizer)
            {
                this.recognizer = recognizer;
                this.decisionNumber = 279;
                this.eot = DFA279_eot;
                this.eof = DFA279_eof;
                this.min = DFA279_min;
                this.max = DFA279_max;
                this.accept = DFA279_accept;
                this.special = DFA279_special;
                this.transition = DFA279_transition;

            }

            override public string Description
            {
                get { return "1685:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );"; }
            }

        }


        protected internal int DFA279_SpecialStateTransition(DFA dfa, int s, IIntStream _input) //throws NoViableAltException
        {
                ITreeNodeStream input = (ITreeNodeStream)_input;
        	int _s = s;
            switch ( s )
            {
                   	case 0 : 
                       	int LA279_0 = input.LA(1);

                       	 
                       	int index279_0 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (LA279_0 == 263) ) { s = 1; }

                       	else if ( (LA279_0 == 264) ) { s = 2; }

                       	else if ( (LA279_0 == BOOL) ) { s = 3; }

                       	else if ( (LA279_0 == BYTE) ) { s = 4; }

                       	else if ( (LA279_0 == CHAR) ) { s = 5; }

                       	else if ( (LA279_0 == 275) ) { s = 6; }

                       	else if ( (LA279_0 == DOUBLE) ) { s = 7; }

                       	else if ( (LA279_0 == FLOAT) ) { s = 8; }

                       	else if ( (LA279_0 == INT) ) { s = 9; }

                       	else if ( (LA279_0 == LONG) ) { s = 10; }

                       	else if ( (LA279_0 == OBJECT) ) { s = 11; }

                       	else if ( (LA279_0 == 251) ) { s = 12; }

                       	else if ( (LA279_0 == SHORT) ) { s = 13; }

                       	else if ( (LA279_0 == 276) ) { s = 14; }

                       	else if ( (LA279_0 == 253) ) { s = 15; }

                       	else if ( (LA279_0 == 254) ) { s = 16; }

                       	else if ( (LA279_0 == 252) ) { s = 17; }

                       	else if ( (LA279_0 == IDENTIFIER) ) { s = 18; }

                       	else if ( (LA279_0 == 225) ) { s = 19; }

                       	else if ( (LA279_0 == 206) && (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( ((LA279_0 >= MONONOT && LA279_0 <= MONOTWIDDLE) || LA279_0 == NEW_ARRAY || LA279_0 == THIS || LA279_0 == LPAREN || LA279_0 == BIT_AND || (LA279_0 >= PLUS && LA279_0 <= MINUS) || LA279_0 == STAR || (LA279_0 >= Real_literal && LA279_0 <= NULL) || LA279_0 == 197 || LA279_0 == 207 || (LA279_0 >= 209 && LA279_0 <= 210) || (LA279_0 >= 214 && LA279_0 <= 219)) ) { s = 21; }

                       	else if ( ((LA279_0 >= ELIF && LA279_0 <= UNDEF) || LA279_0 == 195 || LA279_0 == 221 || LA279_0 == 224 || (LA279_0 >= 226 && LA279_0 <= 239) || (LA279_0 >= 241 && LA279_0 <= 244) || (LA279_0 >= 247 && LA279_0 <= 250) || LA279_0 == 256 || LA279_0 == 274 || LA279_0 == 277) ) { s = 41; }

                       	 
                       	input.Seek(index279_0);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 1 : 
                       	int LA279_1 = input.LA(1);

                       	 
                       	int index279_1 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_1);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 2 : 
                       	int LA279_2 = input.LA(1);

                       	 
                       	int index279_2 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_2);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 3 : 
                       	int LA279_3 = input.LA(1);

                       	 
                       	int index279_3 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_3);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 4 : 
                       	int LA279_4 = input.LA(1);

                       	 
                       	int index279_4 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_4);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 5 : 
                       	int LA279_5 = input.LA(1);

                       	 
                       	int index279_5 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_5);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 6 : 
                       	int LA279_6 = input.LA(1);

                       	 
                       	int index279_6 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_6);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 7 : 
                       	int LA279_7 = input.LA(1);

                       	 
                       	int index279_7 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_7);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 8 : 
                       	int LA279_8 = input.LA(1);

                       	 
                       	int index279_8 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_8);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 9 : 
                       	int LA279_9 = input.LA(1);

                       	 
                       	int index279_9 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_9);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 10 : 
                       	int LA279_10 = input.LA(1);

                       	 
                       	int index279_10 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_10);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 11 : 
                       	int LA279_11 = input.LA(1);

                       	 
                       	int index279_11 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_11);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 12 : 
                       	int LA279_12 = input.LA(1);

                       	 
                       	int index279_12 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_12);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 13 : 
                       	int LA279_13 = input.LA(1);

                       	 
                       	int index279_13 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_13);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 14 : 
                       	int LA279_14 = input.LA(1);

                       	 
                       	int index279_14 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_14);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 15 : 
                       	int LA279_15 = input.LA(1);

                       	 
                       	int index279_15 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_15);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 16 : 
                       	int LA279_16 = input.LA(1);

                       	 
                       	int index279_16 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_16);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 17 : 
                       	int LA279_17 = input.LA(1);

                       	 
                       	int index279_17 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_17);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 18 : 
                       	int LA279_18 = input.LA(1);

                       	 
                       	int index279_18 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_18);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 19 : 
                       	int LA279_19 = input.LA(1);

                       	 
                       	int index279_19 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_19);
                       	if ( s >= 0 ) return s;
                       	break;
                   	case 20 : 
                       	int LA279_41 = input.LA(1);

                       	 
                       	int index279_41 = input.Index;
                       	input.Rewind();
                       	s = -1;
                       	if ( (synpred40_TemplateExtracter()) ) { s = 20; }

                       	else if ( (true) ) { s = 21; }

                       	 
                       	input.Seek(index279_41);
                       	if ( s >= 0 ) return s;
                       	break;
            }
            if (state.backtracking > 0) {state.failed = true; return -1;}
            NoViableAltException nvae279 =
                new NoViableAltException(dfa.Description, 279, _s, input);
            dfa.Error(nvae279);
            throw nvae279;
        }
     

        public static readonly BitSet FOLLOW_namespace_body_in_compilation_unit113 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_193_in_namespace_declaration139 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_qualified_identifier_in_namespace_declaration145 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_namespace_block_in_namespace_declaration169 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_namespace_declaration173 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_namespace_block182 = new BitSet(new ulong[]{0x03E0000000100000UL,0x0000000000000120UL,0x0000000000800000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_namespace_body_in_namespace_block186 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_namespace_block190 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_extern_alias_directives_in_namespace_body198 = new BitSet(new ulong[]{0x03E0000000100002UL,0x0000000000000020UL,0x0000000000800000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_using_directives_in_namespace_body203 = new BitSet(new ulong[]{0x03E0000000100002UL,0x0000000000000020UL,0x0000000000000000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_global_attributes_in_namespace_body208 = new BitSet(new ulong[]{0x03E0000000100002UL,0x0000000000000020UL,0x0000000000000000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_namespace_member_declarations_in_namespace_body213 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_extern_alias_directive_in_extern_alias_directives222 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_194_in_extern_alias_directive233 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
        public static readonly BitSet FOLLOW_195_in_extern_alias_directive237 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_extern_alias_directive243 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_extern_alias_directive246 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_using_directive_in_using_directives256 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000800000UL});
        public static readonly BitSet FOLLOW_using_alias_directive_in_using_directive266 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_using_namespace_directive_in_using_directive271 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_USING_in_using_alias_directive289 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_using_alias_directive295 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_using_alias_directive299 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_namespace_or_type_name_in_using_alias_directive305 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_using_alias_directive309 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_USING_in_using_namespace_directive326 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_namespace_name_in_using_namespace_directive332 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_using_namespace_directive336 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_namespace_member_declaration_in_namespace_member_declarations344 = new BitSet(new ulong[]{0x03E0000000100002UL,0x0000000000000020UL,0x0000000000000000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_namespace_declaration_in_namespace_member_declaration353 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attributes_in_namespace_member_declaration358 = new BitSet(new ulong[]{0x03E0000000100000UL,0x0000000000000020UL,0x0000000000000000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_modifiers_in_namespace_member_declaration363 = new BitSet(new ulong[]{0x03E0000000100000UL,0x0000000000000020UL,0x0000000000000000UL,0x8020000004001FF6UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_type_declaration_in_namespace_member_declaration368 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_196_in_type_declaration384 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x8020000000000000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_class_declaration_in_type_declaration388 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_declaration_in_type_declaration401 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_type_declaration414 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_declaration_in_type_declaration421 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_declaration_in_type_declaration427 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_type_declaration433 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_enum_declaration_in_type_declaration439 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_delegate_declaration_in_type_declaration444 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_qualified_identifier459 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_qualified_identifier464 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_qualified_identifier468 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_namespace_or_type_name_in_namespace_name485 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_modifiers495 = new BitSet(new ulong[]{0x03E0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FE4UL});
        public static readonly BitSet FOLLOW_set_in_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attributes_in_class_member_declaration567 = new BitSet(new ulong[]{0x03E0002000100000UL,0x0000000000000022UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_modifiers_in_class_member_declaration578 = new BitSet(new ulong[]{0x03E0002000100000UL,0x0000000000000022UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_205_in_class_member_declaration584 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_class_member_declaration590 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_class_member_declaration594 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_class_member_declaration599 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_event_declaration_in_class_member_declaration604 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_196_in_class_member_declaration613 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x8020000000004000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_206_in_class_member_declaration617 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_method_declaration_in_class_member_declaration619 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_class_member_declaration631 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_declaration_in_class_member_declaration643 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_declaration_in_class_member_declaration655 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_class_member_declaration662 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_206_in_class_member_declaration669 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_method_declaration_in_class_member_declaration673 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_class_member_declaration681 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000006UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0189UL});
        public static readonly BitSet FOLLOW_method_declaration_in_class_member_declaration695 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_property_declaration_in_class_member_declaration715 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_name_in_class_member_declaration739 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_class_member_declaration741 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_indexer_declaration_in_class_member_declaration743 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_indexer_declaration_in_class_member_declaration753 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_field_declaration_in_class_member_declaration767 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_operator_declaration_in_class_member_declaration786 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_declaration_in_class_member_declaration805 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_declaration_in_class_member_declaration813 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_enum_declaration_in_class_member_declaration821 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_delegate_declaration_in_class_member_declaration828 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_conversion_operator_declaration_in_class_member_declaration834 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_constructor_declaration_in_class_member_declaration839 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_destructor_declaration_in_class_member_declaration845 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_primary_expression871 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_brackets_in_primary_expression875 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression879 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_THIS_in_primary_expression895 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_brackets_in_primary_expression899 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression903 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_primary_expression_start_in_primary_expression909 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression913 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_197_in_primary_expression919 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000082UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_object_creation_expression_in_primary_expression947 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_primary_expression_part_in_primary_expression951 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_object_creation_expression_in_primary_expression1013 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_delegate_creation_expression_in_primary_expression1021 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_object_creation_expression_in_primary_expression1030 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_sizeof_expression_in_primary_expression1043 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_checked_expression_in_primary_expression1054 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unchecked_expression_in_primary_expression1073 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_default_value_expression_in_primary_expression1090 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_method_expression_in_primary_expression1103 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_primary_expression_start1116 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_start1144 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_primary_expression_start1148 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_start1153 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_primary_expression_start1156 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_primary_expression_start1160 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_primary_expression_start1167 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_207_in_primary_expression_start1173 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_paren_expression_in_primary_expression_start1178 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_typeof_expression_in_primary_expression_start1183 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_literal_in_primary_expression_start1201 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_identifier_in_primary_expression_part1212 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_brackets_or_arguments_in_primary_expression_part1217 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_209_in_primary_expression_part1223 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_210_in_primary_expression_part1228 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_operator_in_access_identifier1236 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_access_identifier1240 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_access_operator0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_brackets_in_brackets_or_arguments1262 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_brackets_or_arguments1266 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_brackets1274 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000246UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_brackets1278 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_brackets1283 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_paren_expression1293 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_paren_expression1297 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_paren_expression1301 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_arguments1310 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FF68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_list_in_arguments1314 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_arguments1319 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_argument_in_argument_list1328 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_argument_list1331 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FF68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_in_argument_list1333 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_argument_name_in_argument1343 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FF68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_value_in_argument1347 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_argument_value_in_argument1352 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_argument_name1359 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_argument_name1363 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_argument_value1371 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ref_variable_reference_in_argument_value1377 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_212_in_argument_value1383 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_reference_in_argument_value1387 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_213_in_ref_variable_reference1395 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_LPAREN_in_ref_variable_reference1417 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_ref_variable_reference1421 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_ref_variable_reference1425 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FE68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_ref_variable_reference_in_ref_variable_reference1430 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_reference_in_ref_variable_reference1434 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_reference_in_ref_variable_reference1470 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_variable_reference1480 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_rank_specifier_in_rank_specifiers1505 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_rank_specifier1535 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000040UL});
        public static readonly BitSet FOLLOW_dim_separators_in_rank_specifier1541 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_rank_specifier1550 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_dim_separators1572 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_type_name_in_delegate_creation_expression1589 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_delegate_creation_expression1593 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_name_in_delegate_creation_expression1597 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_delegate_creation_expression1601 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression1612 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_anonymous_object_initializer1621 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000102UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer1626 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_anonymous_object_initializer1630 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_anonymous_object_initializer1637 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_declarator_in_member_declarator_list1645 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_member_declarator_list1649 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_member_declarator_in_member_declarator_list1651 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_qid_in_member_declarator1663 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_member_declarator1668 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_member_declarator1672 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_creation_expression_in_primary_or_array_creation_expression1688 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_primary_expression_in_primary_or_array_creation_expression1693 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_NEW_ARRAY_in_array_creation_expression1704 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000000000A2UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_array_creation_expression1712 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000000000A2UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_array_creation_expression1717 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_array_creation_expression1721 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_array_creation_expression1725 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000000002A2UL,0x000000000F3007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_rank_specifiers_in_array_creation_expression1737 = new BitSet(new ulong[]{0x0000000000000002UL,0x00000000000000A2UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression1742 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_array_creation_expression1778 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_array_creation_expression1782 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_array_creation_expression1794 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_array_creation_expression1800 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression1822 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_rank_specifier_in_array_creation_expression1836 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000000000A2UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_array_initializer_in_array_creation_expression1845 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_array_creation_expression1904 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_array_creation_expression1908 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_array_creation_expression1920 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_array_creation_expression1926 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_array_initializer1953 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000A600800003A6UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_initializer_list_in_array_initializer1957 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_array_initializer1962 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_array_initializer1967 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_initializer_in_variable_initializer_list1975 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_variable_initializer_list1978 = new BitSet(new ulong[]{0x0002003000000000UL,0x00002600800002A6UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_initializer_in_variable_initializer_list1980 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_expression_in_variable_initializer1990 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_initializer_in_variable_initializer1994 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_214_in_sizeof_expression2002 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_sizeof_expression2006 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unmanaged_type_in_sizeof_expression2010 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_sizeof_expression2014 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_215_in_checked_expression2022 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_checked_expression2026 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_checked_expression2030 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_checked_expression2034 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_216_in_unchecked_expression2043 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_unchecked_expression2047 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_unchecked_expression2051 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_unchecked_expression2055 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_217_in_default_value_expression2064 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_default_value_expression2068 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_default_value_expression2072 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_default_value_expression2076 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_218_in_anonymous_method_expression2084 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression2088 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_anonymous_method_expression2093 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_explicit_anonymous_function_signature2100 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000002F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature2104 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_explicit_anonymous_function_signature2109 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2117 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_explicit_anonymous_function_parameter_list2122 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list2126 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter2137 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_explicit_anonymous_function_parameter2142 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_explicit_anonymous_function_parameter2146 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_anonymous_function_parameter_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_object_creation_expression2170 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL});
        public static readonly BitSet FOLLOW_LPAREN_in_object_creation_expression2179 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FF68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_list_in_object_creation_expression2183 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_object_creation_expression2188 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000280UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression2192 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression2203 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_object_or_collection_initializer2215 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000A60080000386UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_object_initializer_in_object_or_collection_initializer2219 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer2226 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_element_initializer_list_in_collection_initializer2236 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_collection_initializer2240 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_collection_initializer2245 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_element_initializer_in_element_initializer_list2254 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_element_initializer_list2258 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000A60080000386UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_element_initializer_in_element_initializer_list2260 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_element_initializer2271 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_element_initializer2277 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_list_in_element_initializer2281 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_element_initializer2285 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_initializer_list_in_object_initializer2300 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_object_initializer2305 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_object_initializer2310 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_initializer_in_member_initializer_list2319 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_member_initializer_list2323 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_member_initializer_in_member_initializer_list2325 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_member_initializer2336 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_member_initializer2340 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000286UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_initializer_value_in_member_initializer2344 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_initializer_value2353 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_object_or_collection_initializer_in_initializer_value2359 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_219_in_typeof_expression2371 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_typeof_expression2375 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unbound_type_name_in_typeof_expression2386 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_type_in_typeof_expression2397 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_206_in_typeof_expression2409 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_typeof_expression2414 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unbound_type_name_start_in_unbound_type_name2429 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name2448 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name2452 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name2459 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name2469 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_start2479 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_unbound_type_name_start2482 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_start2484 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DOT_in_unbound_type_name_part2493 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_unbound_type_name_part2497 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTHAN_in_generic_dimension_specifier2505 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_commas_in_generic_dimension_specifier2509 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_generic_dimension_specifier2514 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_commas2523 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_namespace_or_type_name_in_type_name2543 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2560 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_namespace_or_type_name2566 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2570 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_namespace_or_type_name2577 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_namespace_or_type_name2583 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_identifier_in_type_or_generic2621 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_type_or_generic2627 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_type_or_generic2636 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_qid_start_in_qid2652 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_qid_part_in_qid2656 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_predefined_type_in_qid_start2672 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_qid_start2690 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_qid_start2694 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_qid_start2706 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_qid_start2712 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_qid_start2718 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_literal_in_qid_start2727 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_identifier_in_qid_part2742 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTHAN_in_generic_argument_list2762 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_arguments_in_generic_argument_list2768 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_generic_argument_list2772 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_type_arguments2793 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_type_arguments2798 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_type_arguments2802 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_predefined_type_in_type2839 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_type_name_in_type2847 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_rank_specifiers_in_type2856 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_STAR_in_type2862 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_predefined_type_in_type2896 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000200000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_type_name_in_type2904 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000200000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_STAR_in_type2913 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_220_in_type2921 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_type2932 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_name_in_type2940 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_206_in_type2948 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_STAR_in_type2953 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_predefined_type_in_non_nullable_type2967 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000020UL});
        public static readonly BitSet FOLLOW_type_name_in_non_nullable_type2971 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000020UL});
        public static readonly BitSet FOLLOW_rank_specifiers_in_non_nullable_type2980 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_STAR_in_non_nullable_type2984 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_STAR_in_non_nullable_type2993 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_206_in_non_nullable_type3005 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_STAR_in_non_nullable_type3009 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_type_in_non_array_type3020 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_array_type3027 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_unmanaged_type3034 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_class_type3041 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_pointer_type3048 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SEMI_in_block3064 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_block3071 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000B8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_statement_list_in_block3075 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_block3080 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_in_statement_list3089 = new BitSet(new ulong[]{0x4C02003000000002UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_assignment_in_expression3114 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_non_assignment_expression_in_expression3120 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_expression_list3129 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_expression_list3133 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_expression_list3137 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_unary_expression_in_assignment3147 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000003FF000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_assignment_operator_in_assignment3151 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_assignment3155 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_cast_expression_in_unary_expression3172 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_primary_or_array_creation_expression_in_unary_expression3177 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PLUS_in_unary_expression3182 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_unary_expression3186 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MINUS_in_unary_expression3192 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_unary_expression3196 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MONONOT_in_unary_expression3202 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_unary_expression3206 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MONOTWIDDLE_in_unary_expression3212 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_unary_expression3216 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_pre_increment_expression_in_unary_expression3222 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_pre_decrement_expression_in_unary_expression3228 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_pointer_indirection_expression_in_unary_expression3234 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_addressof_expression_in_unary_expression3239 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_cast_expression3249 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_cast_expression3253 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_cast_expression3257 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_cast_expression3261 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_assignment_operator3269 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PLUS_ASSIGN_in_assignment_operator3273 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MINUS_ASSIGN_in_assignment_operator3277 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STAR_ASSIGN_in_assignment_operator3281 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DIV_ASSIGN_in_assignment_operator3285 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MOD_ASSIGN_in_assignment_operator3289 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_AND_ASSIGN_in_assignment_operator3293 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_OR_ASSIGN_in_assignment_operator3297 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_XOR_ASSIGN_in_assignment_operator3301 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LEFT_SHIFT_ASSIGN_in_assignment_operator3305 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GT_in_assignment_operator3309 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000001000000000UL});
        public static readonly BitSet FOLLOW_GTE_in_assignment_operator3311 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_209_in_pre_increment_expression3320 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_pre_increment_expression3324 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_210_in_pre_decrement_expression3333 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_pre_decrement_expression3337 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STAR_in_pointer_indirection_expression3345 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_pointer_indirection_expression3349 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_AND_in_addressof_expression3357 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_addressof_expression3361 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_lambda_expression_in_non_assignment_expression3382 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_expression_in_non_assignment_expression3393 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_conditional_expression_in_non_assignment_expression3399 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unary_expression_in_multiplicative_expression3413 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000380000000000UL});
        public static readonly BitSet FOLLOW_set_in_multiplicative_expression3418 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unary_expression_in_multiplicative_expression3428 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000380000000000UL});
        public static readonly BitSet FOLLOW_multiplicative_expression_in_additive_expression3438 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000060000000000UL});
        public static readonly BitSet FOLLOW_set_in_additive_expression3441 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_multiplicative_expression_in_additive_expression3449 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000060000000000UL});
        public static readonly BitSet FOLLOW_additive_expression_in_shift_expression3460 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_LEFT_SHIFT_in_shift_expression3464 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_GT_in_shift_expression3466 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_shift_expression3468 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_additive_expression_in_shift_expression3471 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000002000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_shift_expression_in_relational_expression3481 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001C00000000UL,0x0000000000400000UL,0x00000000C0000000UL});
        public static readonly BitSet FOLLOW_set_in_relational_expression3488 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_shift_expression_in_relational_expression3498 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001C00000000UL,0x0000000000400000UL,0x00000000C0000000UL});
        public static readonly BitSet FOLLOW_set_in_relational_expression3507 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_non_nullable_type_in_relational_expression3515 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000001C00000000UL,0x0000000000400000UL,0x00000000C0000000UL});
        public static readonly BitSet FOLLOW_relational_expression_in_equality_expression3529 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000300000000UL});
        public static readonly BitSet FOLLOW_set_in_equality_expression3536 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_relational_expression_in_equality_expression3544 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000300000000UL});
        public static readonly BitSet FOLLOW_equality_expression_in_and_expression3554 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000080000000UL});
        public static readonly BitSet FOLLOW_BIT_AND_in_and_expression3557 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_equality_expression_in_and_expression3561 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000080000000UL});
        public static readonly BitSet FOLLOW_and_expression_in_exclusive_or_expression3571 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000040000000UL});
        public static readonly BitSet FOLLOW_BIT_XOR_in_exclusive_or_expression3574 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_and_expression_in_exclusive_or_expression3578 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000040000000UL});
        public static readonly BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression3588 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_BIT_OR_in_inclusive_or_expression3593 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression3597 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression3607 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_LOG_AND_in_conditional_and_expression3612 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression3616 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression3626 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000008000000UL});
        public static readonly BitSet FOLLOW_LOG_OR_in_conditional_or_expression3630 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression3634 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000008000000UL});
        public static readonly BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression3645 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000400UL});
        public static readonly BitSet FOLLOW_NULL_COALESCE_in_null_coalescing_expression3650 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression3654 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000400UL});
        public static readonly BitSet FOLLOW_null_coalescing_expression_in_conditional_expression3664 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_220_in_conditional_expression3669 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_conditional_expression3673 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_conditional_expression3677 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_conditional_expression3681 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_function_signature_in_lambda_expression3701 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000400000000000UL});
        public static readonly BitSet FOLLOW_LAMBDA_in_lambda_expression3705 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000286UL,0x000000001F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_anonymous_function_body_in_lambda_expression3709 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_anonymous_function_signature3716 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000202UL,0x000000002F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature3719 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3725 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_anonymous_function_signature3729 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature3734 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3743 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_implicit_anonymous_function_parameter_list3748 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list3752 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_implicit_anonymous_function_parameter3762 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_anonymous_function_body3769 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_anonymous_function_body3774 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_from_clause_in_query_expression3786 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000166600000000UL});
        public static readonly BitSet FOLLOW_query_body_in_query_expression3790 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_body_clauses_in_query_body3800 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000166600000000UL});
        public static readonly BitSet FOLLOW_select_or_group_clause_in_query_body3805 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000100000000UL});
        public static readonly BitSet FOLLOW_query_continuation_in_query_body3816 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_224_in_query_continuation3826 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_query_continuation3830 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000166600000000UL});
        public static readonly BitSet FOLLOW_query_body_in_query_continuation3834 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_body_clause_in_query_body_clauses3841 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000106600000000UL});
        public static readonly BitSet FOLLOW_from_clause_in_query_body_clause3850 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_let_clause_in_query_body_clause3855 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_where_clause_in_query_body_clause3860 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_join_clause_in_query_body_clause3865 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_orderby_clause_in_query_body_clause3870 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_225_in_from_clause3877 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_from_clause3881 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_from_clause3886 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000010UL});
        public static readonly BitSet FOLLOW_IN_in_from_clause3890 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_from_clause3894 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_226_in_join_clause3902 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_join_clause3906 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_join_clause3911 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000010UL});
        public static readonly BitSet FOLLOW_IN_in_join_clause3915 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_join_clause3919 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000800000000UL});
        public static readonly BitSet FOLLOW_227_in_join_clause3923 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_join_clause3927 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000001000000000UL});
        public static readonly BitSet FOLLOW_228_in_join_clause3931 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_join_clause3935 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000100000000UL});
        public static readonly BitSet FOLLOW_224_in_join_clause3938 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_join_clause3940 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_229_in_let_clause3950 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_let_clause3954 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_let_clause3958 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_let_clause3962 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_230_in_orderby_clause3969 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_ordering_list_in_orderby_clause3973 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ordering_in_ordering_list3981 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_ordering_list3986 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_ordering_in_ordering_list3990 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_expression_in_ordering4000 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000018000000000UL});
        public static readonly BitSet FOLLOW_ordering_direction_in_ordering4005 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_ordering_direction0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_select_clause_in_select_or_group_clause4028 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_group_clause_in_select_or_group_clause4033 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_233_in_select_clause4041 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_select_clause4045 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_234_in_group_clause4053 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_group_clause4057 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000080000000000UL});
        public static readonly BitSet FOLLOW_235_in_group_clause4061 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_group_clause4065 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_236_in_where_clause4073 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_where_clause4077 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_boolean_expression4085 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_global_attribute_in_global_attributes4097 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_global_attribute4107 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000600000000000UL});
        public static readonly BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute4111 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_list_in_global_attribute4115 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000040UL});
        public static readonly BitSet FOLLOW_COMMA_in_global_attribute4119 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_global_attribute4124 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier4133 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_global_attribute_target_specifier4137 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_global_attribute_target0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_sections_in_attributes4159 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_section_in_attribute_sections4168 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_attribute_section4178 = new BitSet(new ulong[]{0x0400000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9FFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_target_specifier_in_attribute_section4182 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_list_in_attribute_section4187 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000040UL});
        public static readonly BitSet FOLLOW_COMMA_in_attribute_section4191 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_attribute_section4196 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_target_in_attribute_target_specifier4205 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_attribute_target_specifier4209 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_attribute_target0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attribute_in_attribute_list4251 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_attribute_list4254 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_in_attribute_list4256 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_type_name_in_attribute4268 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_attribute_arguments_in_attribute4272 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_attribute_arguments4283 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_RPAREN_in_attribute_arguments4288 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_positional_argument_in_attribute_arguments4308 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_named_argument_in_attribute_arguments4327 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_COMMA_in_attribute_arguments4343 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_positional_argument_in_attribute_arguments4345 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_RPAREN_in_attribute_arguments4356 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_positional_argument_in_positional_argument_list4370 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_positional_argument_list4373 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_positional_argument_in_positional_argument_list4375 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_attribute_argument_expression_in_positional_argument4386 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_named_argument_in_named_argument_list4395 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_named_argument_list4398 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_named_argument_in_named_argument_list4400 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_named_argument4411 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_named_argument4415 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attribute_argument_expression_in_named_argument4419 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_attribute_argument_expression4428 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_245_in_class_declaration4455 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_class_declaration4458 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_class_base_in_class_declaration4484 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration4502 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_class_body_in_class_declaration4505 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_class_declaration4508 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_211_in_class_base4532 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_interface_type_list_in_class_base4538 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_interface_type_list4560 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_interface_type_list4565 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_interface_type_list4571 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_class_body4585 = new BitSet(new ulong[]{0x03E0002000100000UL,0x0000000000000122UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_class_member_declarations_in_class_body4589 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_class_body4594 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_member_declaration_in_class_member_declarations4602 = new BitSet(new ulong[]{0x03E0002000100002UL,0x0000000000000022UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_205_in_constant_declaration4613 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_constant_declaration4617 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_constant_declaration4621 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_constant_declaration4626 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_constant_declarator_in_constant_declarators4636 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_constant_declarators4640 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarator_in_constant_declarators4642 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_constant_declarator4655 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_constant_declarator4662 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constant_expression_in_constant_declarator4666 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_constant_expression4687 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_declarators_in_field_declaration4698 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_field_declaration4703 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_declarator_in_variable_declarators4713 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_variable_declarators4717 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_declarator_in_variable_declarators4721 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_type_name_in_variable_declarator4734 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_variable_declarator4747 = new BitSet(new ulong[]{0x0002003000000000UL,0x00002600800002A6UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_variable_initializer_in_variable_declarator4751 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_method_header_in_method_declaration4774 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_method_body_in_method_declaration4779 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_method_header4806 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_method_header4809 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000002F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_method_header4815 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_method_header4820 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000100000000000UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_method_header4829 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_method_body4858 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_qid_in_member_name4871 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_property_declaration4886 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_property_declaration4890 = new BitSet(new ulong[]{0x01C0000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_accessor_declarations_in_property_declaration4894 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_property_declaration4898 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attributes_in_accessor_declarations4940 = new BitSet(new ulong[]{0x01C0000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations4946 = new BitSet(new ulong[]{0x01C0000000000002UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_accessor_declarations4951 = new BitSet(new ulong[]{0x01C0000000000002UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations4957 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations4967 = new BitSet(new ulong[]{0x01C0000000000002UL,0x0000000000000020UL,0x0000000000000000UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_accessor_declarations4972 = new BitSet(new ulong[]{0x01C0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations4978 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_accessor_modifier_in_get_accessor_declaration4991 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_247_in_get_accessor_declaration4996 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_accessor_body_in_get_accessor_declaration5000 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_accessor_modifier_in_set_accessor_declaration5008 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0100000000000000UL});
        public static readonly BitSet FOLLOW_248_in_set_accessor_declaration5013 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_accessor_body_in_set_accessor_declaration5017 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PROTECTED_in_accessor_modifier5025 = new BitSet(new ulong[]{0x0100000000000002UL});
        public static readonly BitSet FOLLOW_INTERNAL_in_accessor_modifier5027 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_PRIVATE_in_accessor_modifier5032 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_INTERNAL_in_accessor_modifier5036 = new BitSet(new ulong[]{0x0040000000000002UL});
        public static readonly BitSet FOLLOW_PROTECTED_in_accessor_modifier5038 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_accessor_body5047 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_240_in_event_declaration5057 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_event_declaration5061 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_member_name_in_event_declaration5076 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_event_declaration5078 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_event_accessor_declarations_in_event_declaration5080 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_event_declaration5082 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variable_declarators_in_event_declaration5091 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_event_declaration5096 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_event_modifiers5118 = new BitSet(new ulong[]{0x03E0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FE4UL});
        public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations5127 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations5134 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations5138 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0600000000000000UL});
        public static readonly BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations5143 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations5164 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0200000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_event_accessor_declarations5168 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0200000000000000UL});
        public static readonly BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations5173 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_249_in_add_accessor_declaration5183 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_add_accessor_declaration5187 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_250_in_remove_accessor_declaration5195 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_remove_accessor_declaration5199 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ENUM_in_enum_declaration5226 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_enum_declaration5230 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_enum_base_in_enum_declaration5234 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_enum_body_in_enum_declaration5253 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_enum_declaration5257 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_211_in_enum_base5270 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x00000000000000F8UL,0x7800000000000000UL});
        public static readonly BitSet FOLLOW_integral_type_in_enum_base5274 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_enum_body5284 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000120UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_enum_member_declarations_in_enum_body5287 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000100UL});
        public static readonly BitSet FOLLOW_COMMA_in_enum_body5289 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_enum_body5296 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations5304 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_enum_member_declarations5307 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations5309 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_enum_member_declaration5319 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_enum_member_declaration5324 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_enum_member_declaration5329 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_enum_member_declaration5333 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BYTE_in_integral_type5376 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CHAR_in_integral_type5393 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_INT_in_integral_type5407 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LONG_in_integral_type5424 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_251_in_integral_type5438 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SHORT_in_integral_type5448 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_253_in_integral_type5461 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_254_in_integral_type5475 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_252_in_integral_type5488 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_218_in_delegate_declaration5517 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_return_type_in_delegate_declaration5521 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_delegate_declaration5525 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000200UL});
        public static readonly BitSet FOLLOW_variant_generic_parameter_list_in_delegate_declaration5528 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_delegate_declaration5536 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000002F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_delegate_declaration5540 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_delegate_declaration5545 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL,0x0000100000000000UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration5549 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_delegate_declaration5554 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_delegate_modifiers5574 = new BitSet(new ulong[]{0x03E0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FE4UL});
        public static readonly BitSet FOLLOW_LTHAN_in_variant_generic_parameter_list5593 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000030UL,0x000000000F000400UL,0x079EFFFF20100008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_variant_type_parameters_in_variant_generic_parameter_list5597 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_variant_generic_parameter_list5602 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters5614 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_variant_type_parameters5619 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000030UL,0x000000000F000400UL,0x079EFFFF20100008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters5623 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_variant_type_variable_name5636 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000030UL,0x000000000F000400UL,0x079EFFFF20100008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_variance_annotation_in_variant_type_variable_name5641 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000030UL,0x000000000F000400UL,0x079EFFFF20100008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_variable_name_in_variant_type_variable_name5646 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_variance_annotation0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses5667 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000100000000000UL});
        public static readonly BitSet FOLLOW_236_in_type_parameter_constraints_clause5677 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000030UL,0x000000000F000400UL,0x079EFFFF20100008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_variable_name_in_type_parameter_constraints_clause5681 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_type_parameter_constraints_clause5685 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0xFFBEFFFF20000028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause5689 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_type_parameter_constraint_list5752 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_type_parameter_constraint_list5763 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5767 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_type_parameter_constraint_list5774 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0xFFBEFFFF20000028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list5778 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list5785 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_type_parameter_constraint_list5790 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0xFFBEFFFF20000028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list5794 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list5801 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list5813 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_secondary_constraint_list5816 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list5818 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_type_name_in_secondary_constraint5828 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_type_variable_name5838 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_197_in_constructor_constraint5846 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_constructor_constraint5850 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_constructor_constraint5854 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_return_type5866 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_206_in_return_type5876 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_formal_parameter_in_formal_parameter_list5897 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_formal_parameter_list5911 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000000F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_in_formal_parameter_list5915 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_formal_parameter5932 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000000F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_fixed_parameter_in_formal_parameter5940 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_parameter_array_in_formal_parameter5948 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_256_in_formal_parameter5959 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_fixed_parameter_in_fixed_parameters5981 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_fixed_parameters5987 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000006UL,0x000000000F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_fixed_parameter_in_fixed_parameters5993 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_parameter_modifier_in_fixed_parameter6026 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_fixed_parameter6036 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_fixed_parameter6042 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_default_argument_in_fixed_parameter6047 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_default_argument6057 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_default_argument6059 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_parameter_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_257_in_parameter_array6086 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_parameter_array6092 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_parameter_array6098 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_258_in_interface_declaration6125 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_interface_declaration6129 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_variant_generic_parameter_list_in_interface_declaration6133 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_interface_base_in_interface_declaration6153 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration6171 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_interface_body_in_interface_declaration6176 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_interface_declaration6180 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_interface_modifiers6190 = new BitSet(new ulong[]{0x03E0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FE4UL});
        public static readonly BitSet FOLLOW_211_in_interface_base6207 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_interface_type_list_in_interface_base6209 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_interface_body6219 = new BitSet(new ulong[]{0x03E0000000000000UL,0x0000000000000122UL,0x000000000F0007FCUL,0x7F9FFFFF20005FECUL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_interface_member_declarations_in_interface_body6223 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_interface_body6228 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_member_declaration_in_interface_member_declarations6236 = new BitSet(new ulong[]{0x03E0000000000002UL,0x0000000000000022UL,0x000000000F0007FCUL,0x7F9FFFFF20005FECUL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_member_declaration6245 = new BitSet(new ulong[]{0x03E0000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9FFFFF20005FECUL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_modifiers_in_interface_member_declaration6251 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9FFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_206_in_interface_member_declaration6257 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration6261 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_event_declaration_in_interface_member_declaration6268 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_interface_member_declaration6276 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration6292 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_property_declaration_in_interface_member_declaration6318 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_indexer_declaration_in_interface_member_declaration6329 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_interface_property_declaration6349 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_interface_property_declaration6353 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_interface_accessor_declarations_in_interface_property_declaration6357 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_interface_property_declaration6361 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_interface_method_declaration6399 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000200UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_interface_method_declaration6405 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_interface_method_declaration6413 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000002F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_interface_method_declaration6419 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_interface_method_declaration6424 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL,0x0000100000000000UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration6446 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_interface_method_declaration6451 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_240_in_interface_event_declaration6473 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_interface_event_declaration6477 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_interface_event_declaration6481 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_interface_event_declaration6487 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_interface_indexer_declaration6512 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_interface_indexer_declaration6516 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000000F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_interface_indexer_declaration6522 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_interface_indexer_declaration6526 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_interface_indexer_declaration6530 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration6534 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_interface_indexer_declaration6538 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_accessor_declarations6582 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6591 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_accessor_declarations6596 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6602 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations6612 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000020UL,0x0000000000000000UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_attributes_in_interface_accessor_declarations6617 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0080000000000000UL});
        public static readonly BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations6623 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_247_in_interface_get_accessor_declaration6636 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_interface_get_accessor_declaration6640 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_248_in_interface_set_accessor_declaration6650 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_interface_set_accessor_declaration6654 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_modifier_in_method_modifiers6664 = new BitSet(new ulong[]{0x03E0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001FE4UL});
        public static readonly BitSet FOLLOW_255_in_struct_declaration6694 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_type_or_generic_in_struct_declaration6698 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_struct_interfaces_in_struct_declaration6716 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_declaration6731 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL,0x0000000000000000UL,0x0000100000080000UL});
        public static readonly BitSet FOLLOW_struct_body_in_struct_declaration6736 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_struct_declaration6740 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_modifier_in_struct_modifiers6749 = new BitSet(new ulong[]{0x01E0000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000060UL});
        public static readonly BitSet FOLLOW_set_in_struct_modifier0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_211_in_struct_interfaces6790 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_interface_type_list_in_struct_interfaces6794 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_struct_body6804 = new BitSet(new ulong[]{0x03E0000000100000UL,0x0000000000000122UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_struct_member_declarations_in_struct_body6808 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_struct_body6813 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations6820 = new BitSet(new ulong[]{0x03E0000000100002UL,0x0000000000000022UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_attributes_in_struct_member_declaration6829 = new BitSet(new ulong[]{0x03E0000000100000UL,0x0000000000000022UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_modifiers_in_struct_member_declaration6836 = new BitSet(new ulong[]{0x03E0000000100000UL,0x0000000000000022UL,0x000000000F0007FCUL,0xFFBFFFFF24007FFEUL,0x00000000003C01B5UL});
        public static readonly BitSet FOLLOW_205_in_struct_member_declaration6842 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_struct_member_declaration6848 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_struct_member_declaration6852 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_struct_member_declaration6857 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_event_declaration_in_struct_member_declaration6862 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_196_in_struct_member_declaration6871 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x8020000000004000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_206_in_struct_member_declaration6874 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_method_declaration_in_struct_member_declaration6876 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_struct_member_declaration6888 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_declaration_in_struct_member_declaration6900 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_declaration_in_struct_member_declaration6912 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_interface_declaration_in_struct_member_declaration6920 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_class_declaration_in_struct_member_declaration6927 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_206_in_struct_member_declaration6935 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_method_declaration_in_struct_member_declaration6939 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_struct_member_declaration6947 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000006UL,0x000000000F0FFFFCUL,0x7F9EFFFF20000008UL,0x00000000003C0189UL});
        public static readonly BitSet FOLLOW_method_declaration_in_struct_member_declaration6961 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_property_declaration_in_struct_member_declaration6981 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_name_in_struct_member_declaration7005 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_struct_member_declaration7007 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_indexer_declaration_in_struct_member_declaration7009 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_indexer_declaration_in_struct_member_declaration7019 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_field_declaration_in_struct_member_declaration7033 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_operator_declaration_in_struct_member_declaration7052 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_struct_declaration_in_struct_member_declaration7071 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_enum_declaration_in_struct_member_declaration7078 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_delegate_declaration_in_struct_member_declaration7085 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_conversion_operator_declaration_in_struct_member_declaration7091 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_constructor_declaration_in_struct_member_declaration7096 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_indexer_declarator_in_indexer_declaration7115 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_indexer_declaration7120 = new BitSet(new ulong[]{0x01C0000000000000UL,0x0000000000000020UL,0x0000000000000000UL,0x0180000000000000UL});
        public static readonly BitSet FOLLOW_accessor_declarations_in_indexer_declaration7124 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_indexer_declaration7128 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_indexer_declarator7140 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_indexer_declarator7144 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000000F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_indexer_declarator7150 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_indexer_declarator7154 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_operator_declarator_in_operator_declaration7193 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_operator_body_in_operator_declaration7198 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_259_in_operator_declarator7218 = new BitSet(new ulong[]{0x0000003000000000UL,0x00003E3FE0000000UL,0x0000000000460000UL,0x0000000000060000UL});
        public static readonly BitSet FOLLOW_PLUS_in_operator_declarator7227 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_MINUS_in_operator_declarator7233 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_operator_declarator7240 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_operator_declarator7246 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_operator_declarator7252 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_binary_operator_declarator_in_operator_declarator7257 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unary_operator_declarator_in_operator_declarator7262 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_overloadable_unary_operator_in_operator_declarator7271 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_operator_declarator7275 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_operator_declarator7281 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_operator_declarator7287 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_unary_operator_declarator_in_operator_declarator7291 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_overloadable_binary_operator_in_operator_declarator7300 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_operator_declarator7304 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_operator_declarator7308 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_operator_declarator7314 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_binary_operator_declarator_in_operator_declarator7318 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_RPAREN_in_unary_operator_declarator7332 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_overloadable_unary_operator0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_binary_operator_declarator7377 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_binary_operator_declarator7381 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_binary_operator_declarator7385 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_binary_operator_declarator7389 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_STAR_in_overloadable_binary_operator7402 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DIV_in_overloadable_binary_operator7406 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MOD_in_overloadable_binary_operator7410 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_AND_in_overloadable_binary_operator7414 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_OR_in_overloadable_binary_operator7418 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BIT_XOR_in_overloadable_binary_operator7422 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LEFT_SHIFT_in_overloadable_binary_operator7426 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator7430 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator7432 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_EQUAL_in_overloadable_binary_operator7436 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_NOT_EQUAL_in_overloadable_binary_operator7440 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GT_in_overloadable_binary_operator7444 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTHAN_in_overloadable_binary_operator7448 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_GTE_in_overloadable_binary_operator7452 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LTE_in_overloadable_binary_operator7456 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration7466 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_operator_body_in_conversion_operator_declaration7470 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_260_in_conversion_operator_declarator7481 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
        public static readonly BitSet FOLLOW_261_in_conversion_operator_declarator7487 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000008UL});
        public static readonly BitSet FOLLOW_259_in_conversion_operator_declarator7491 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_conversion_operator_declarator7497 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_conversion_operator_declarator7501 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_conversion_operator_declarator7507 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_conversion_operator_declarator7511 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_conversion_operator_declarator7515 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_operator_body7539 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_constructor_declarator_in_constructor_declaration7549 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_constructor_body_in_constructor_declaration7553 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_constructor_declarator7561 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_constructor_declarator7565 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000026UL,0x000000002F0007FCUL,0x7F9EFFFF20304008UL,0x00000000003C0183UL});
        public static readonly BitSet FOLLOW_formal_parameter_list_in_constructor_declarator7571 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_constructor_declarator7576 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_constructor_initializer_in_constructor_declarator7580 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_211_in_constructor_initializer7601 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL,0x0000000000000000UL,0x0000000000008000UL});
        public static readonly BitSet FOLLOW_set_in_constructor_initializer7605 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_constructor_initializer7615 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FF68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_argument_list_in_constructor_initializer7619 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_constructor_initializer7624 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_constructor_body7632 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_MONOTWIDDLE_in_destructor_declaration7648 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_destructor_declaration7651 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_destructor_declaration7655 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_destructor_declaration7659 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_destructor_body_in_destructor_declaration7664 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_destructor_body7672 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_invocation_start_in_invocation_expression7682 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_invocation_expression7704 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_invocation_expression7708 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_invocation_part_in_invocation_expression7719 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000220UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_arguments_in_invocation_expression7725 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_invocation_start7733 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_invocation_start7750 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_invocation_start7754 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_invocation_start7759 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_207_in_invocation_start7765 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_invocation_start7770 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000010000UL});
        public static readonly BitSet FOLLOW_208_in_invocation_start7775 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_invocation_start7779 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_typeof_expression_in_invocation_start7786 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_access_identifier_in_invocation_part7809 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_brackets_in_invocation_part7814 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_declaration_statement_in_statement7831 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_labeled_statement_in_statement7846 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_statement7851 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_embedded_statement7861 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_selection_statement_in_embedded_statement7866 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_iteration_statement_in_embedded_statement7872 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_jump_statement_in_embedded_statement7878 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_try_statement_in_embedded_statement7885 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_checked_statement_in_embedded_statement7890 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unchecked_statement_in_embedded_statement7895 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_lock_statement_in_embedded_statement7900 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_using_statement_in_embedded_statement7905 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_yield_statement_in_embedded_statement7911 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unsafe_statement_in_embedded_statement7917 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_fixed_statement_in_embedded_statement7922 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_statement_in_embedded_statement7927 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_262_in_fixed_statement7937 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_fixed_statement7941 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_pointer_type_in_fixed_statement7945 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement7947 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_fixed_statement7951 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_fixed_statement7955 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7963 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_fixed_pointer_declarators7968 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators7972 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_fixed_pointer_declarator7982 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_fixed_pointer_declarator7986 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator7990 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_fixed_pointer_initializer8000 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_198_in_unsafe_statement8007 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_unsafe_statement8011 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_labeled_statement8018 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_labeled_statement8022 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_statement_in_labeled_statement8026 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_declaration_statement8035 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_local_constant_declaration_in_declaration_statement8041 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_declaration_statement8044 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_type_in_local_variable_declaration8052 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration8056 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_263_in_local_variable_type8070 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_264_in_local_variable_type8081 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_type_in_local_variable_type8086 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators8094 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_local_variable_declarators8097 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators8099 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_identifier_in_local_variable_declarator8109 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_local_variable_declarator8112 = new BitSet(new ulong[]{0x0002003000000000UL,0x00002600800002A6UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0381UL});
        public static readonly BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator8116 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_local_variable_initializer8127 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_initializer_in_local_variable_initializer8132 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer8138 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_265_in_stackalloc_initializer8145 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer8149 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_OPEN_BRACKET_in_stackalloc_initializer8153 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_stackalloc_initializer8157 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000040UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACKET_in_stackalloc_initializer8161 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_205_in_local_constant_declaration8169 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_local_constant_declaration8173 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_constant_declarators_in_local_constant_declaration8177 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_expression_statement8186 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_expression_statement8190 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_statement_expression8200 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_if_statement_in_selection_statement8209 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_switch_statement_in_selection_statement8214 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_IF_in_if_statement8224 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_if_statement8228 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_if_statement8232 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_if_statement8236 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_if_statement8240 = new BitSet(new ulong[]{0x8000000000000002UL});
        public static readonly BitSet FOLLOW_else_statement_in_if_statement8249 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ELSE_in_else_statement8260 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_else_statement8264 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_266_in_switch_statement8272 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_switch_statement8276 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_switch_statement8280 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_switch_statement8284 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_switch_block_in_switch_statement8288 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_switch_block8296 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL,0x0000000000000000UL,0x0000000002000000UL,0x0000000000000800UL});
        public static readonly BitSet FOLLOW_switch_sections_in_switch_block8300 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000100UL});
        public static readonly BitSet FOLLOW_CLOSE_BRACE_in_switch_block8305 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_switch_section_in_switch_sections8313 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000002000000UL,0x0000000000000800UL});
        public static readonly BitSet FOLLOW_switch_labels_in_switch_section8322 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_statement_list_in_switch_section8326 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_switch_label_in_switch_labels8334 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000002000000UL,0x0000000000000800UL});
        public static readonly BitSet FOLLOW_267_in_switch_label8344 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constant_expression_in_switch_label8348 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_switch_label8352 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_217_in_switch_label8359 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_switch_label8363 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_while_statement_in_iteration_statement8372 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_do_statement_in_iteration_statement8377 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_for_statement_in_iteration_statement8382 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_foreach_statement_in_iteration_statement8387 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_268_in_while_statement8395 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_while_statement8399 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_while_statement8403 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_while_statement8407 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_while_statement8411 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_269_in_do_statement8419 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_do_statement8423 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_268_in_do_statement8427 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_do_statement8431 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_do_statement8435 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_do_statement8439 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_do_statement8443 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_270_in_for_statement8451 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_for_statement8455 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000001F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_for_initializer_in_for_statement8459 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_for_statement8464 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000001F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_for_condition_in_for_statement8468 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_for_statement8473 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000002F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_for_iterator_in_for_statement8477 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_for_statement8482 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_for_statement8486 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_for_initializer8500 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_expression_list_in_for_initializer8505 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_boolean_expression_in_for_condition8515 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_expression_list_in_for_iterator8523 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_statement_expression_in_statement_expression_list8531 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_COMMA_in_statement_expression_list8534 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_statement_expression_in_statement_expression_list8536 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000800000000000UL});
        public static readonly BitSet FOLLOW_FOREACH_in_foreach_statement8546 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_foreach_statement8550 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_local_variable_type_in_foreach_statement8554 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_foreach_statement8558 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000010UL});
        public static readonly BitSet FOLLOW_IN_in_foreach_statement8562 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_foreach_statement8566 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_foreach_statement8570 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_foreach_statement8574 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_break_statement_in_jump_statement8582 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_continue_statement_in_jump_statement8587 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_goto_statement_in_jump_statement8592 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_return_statement_in_jump_statement8597 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_throw_statement_in_jump_statement8602 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BREAK_in_break_statement8610 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_break_statement8614 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_271_in_continue_statement8622 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_continue_statement8626 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_272_in_goto_statement8634 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF22000008UL,0x0000000000240981UL});
        public static readonly BitSet FOLLOW_identifier_in_goto_statement8640 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_267_in_goto_statement8648 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_constant_expression_in_goto_statement8652 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_217_in_goto_statement8660 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_goto_statement8665 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_RETURN_in_return_statement8673 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000001F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_return_statement8677 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_return_statement8682 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THROW_in_throw_statement8690 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000001F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_throw_statement8694 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_throw_statement8699 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_TRY_in_try_statement8712 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_try_statement8716 = new BitSet(new ulong[]{0x3000000000000000UL});
        public static readonly BitSet FOLLOW_catch_clauses_in_try_statement8722 = new BitSet(new ulong[]{0x3000000000000002UL});
        public static readonly BitSet FOLLOW_finally_clause_in_try_statement8726 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_finally_clause_in_try_statement8738 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CATCH_in_catch_clauses8747 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_specific_catch_clauses_in_catch_clauses8752 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_general_catch_clause_in_catch_clauses8756 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses8765 = new BitSet(new ulong[]{0x1000000000000002UL});
        public static readonly BitSet FOLLOW_CATCH_in_specific_catch_clauses8770 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses8775 = new BitSet(new ulong[]{0x1000000000000002UL});
        public static readonly BitSet FOLLOW_general_catch_clause_in_specific_catch_clauses8779 = new BitSet(new ulong[]{0x1000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_specific_catch_clause8789 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_class_type_in_specific_catch_clause8793 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000002F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_specific_catch_clause8797 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_specific_catch_clause8802 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_specific_catch_clause8806 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_block_in_general_catch_clause8814 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_FINALLY_in_finally_clause8822 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_finally_clause8826 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_215_in_checked_statement8834 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_checked_statement8838 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_216_in_unchecked_statement8846 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000280UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_block_in_unchecked_statement8850 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_273_in_lock_statement8858 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_lock_statement8862 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_lock_statement8865 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_lock_statement8869 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_lock_statement8873 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_USING_in_using_statement8881 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_using_statement8885 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC6C028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_resource_acquisition_in_using_statement8890 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_using_statement8894 = new BitSet(new ulong[]{0x4C02003000000000UL,0x0000260080000A8FUL,0x000000001F8FFFFCUL,0x7F9EFFFF2FC6E068UL,0x00000000003FF5C1UL});
        public static readonly BitSet FOLLOW_embedded_statement_in_using_statement8899 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_resource_acquisition8913 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_expression_in_resource_acquisition8918 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_274_in_yield_statement8926 = new BitSet(new ulong[]{0x0400000000000000UL,0x0000000000000001UL});
        public static readonly BitSet FOLLOW_RETURN_in_yield_statement8931 = new BitSet(new ulong[]{0x0002003000000000UL,0x0000260080000206UL,0x000000000F0FFFFCUL,0x7F9EFFFF2FC68028UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_expression_in_yield_statement8935 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_yield_statement8939 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BREAK_in_yield_statement8954 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_SEMI_in_yield_statement8958 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BOOL_in_predefined_type8978 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_BYTE_in_predefined_type8992 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_CHAR_in_predefined_type9009 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_275_in_predefined_type9023 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_DOUBLE_in_predefined_type9034 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_FLOAT_in_predefined_type9046 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_INT_in_predefined_type9059 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LONG_in_predefined_type9076 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_OBJECT_in_predefined_type9090 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_251_in_predefined_type9102 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_SHORT_in_predefined_type9112 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_276_in_predefined_type9125 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_253_in_predefined_type9137 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_254_in_predefined_type9151 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_252_in_predefined_type9164 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_IDENTIFIER_in_identifier9186 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_also_keyword_in_identifier9192 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_keyword0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_also_keyword0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_set_in_literal0 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_196_in_synpred1_TemplateExtracter377 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred2_TemplateExtracter686 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_synpred2_TemplateExtracter690 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred3_TemplateExtracter706 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_synpred3_TemplateExtracter710 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred4_TemplateExtracter726 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_synpred4_TemplateExtracter730 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_THIS_in_synpred4_TemplateExtracter734 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_THIS_in_synpred5_TemplateExtracter861 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_brackets_in_synpred5_TemplateExtracter866 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_207_in_synpred6_TemplateExtracter886 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_brackets_in_synpred6_TemplateExtracter890 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_object_creation_expression_in_synpred7_TemplateExtracter926 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_set_in_synpred7_TemplateExtracter930 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_object_creation_expression_in_synpred8_TemplateExtracter1008 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred9_TemplateExtracter1134 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred9_TemplateExtracter1139 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_LPAREN_in_synpred10_TemplateExtracter1402 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000002UL,0x000000000F0007FCUL,0x7F9EFFFF20004008UL,0x00000000003C0181UL});
        public static readonly BitSet FOLLOW_type_in_synpred10_TemplateExtracter1406 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000020000000UL});
        public static readonly BitSet FOLLOW_RPAREN_in_synpred10_TemplateExtracter1410 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_array_creation_expression_in_synpred11_TemplateExtracter1683 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_synpred12_TemplateExtracter1763 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_set_in_synpred12_TemplateExtracter1767 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_synpred13_TemplateExtracter1889 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_set_in_synpred13_TemplateExtracter1893 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unbound_type_name_in_synpred14_TemplateExtracter2381 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_generic_dimension_specifier_in_synpred15_TemplateExtracter2439 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_synpred15_TemplateExtracter2443 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred16_TemplateExtracter2610 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred16_TemplateExtracter2614 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred17_TemplateExtracter2680 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred17_TemplateExtracter2685 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_synpred18_TemplateExtracter2823 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_type_name_in_synpred18_TemplateExtracter2827 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL});
        public static readonly BitSet FOLLOW_rank_specifiers_in_synpred18_TemplateExtracter2831 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_predefined_type_in_synpred19_TemplateExtracter2873 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000200000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_type_name_in_synpred19_TemplateExtracter2877 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000200000000000UL,0x0000000000000000UL,0x0000000010000000UL});
        public static readonly BitSet FOLLOW_STAR_in_synpred19_TemplateExtracter2882 = new BitSet(new ulong[]{0x0000000000000002UL,0x0000200000000000UL});
        public static readonly BitSet FOLLOW_220_in_synpred19_TemplateExtracter2887 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_unary_expression_in_synpred20_TemplateExtracter3105 = new BitSet(new ulong[]{0x0000000000000000UL,0x00000000003FF000UL,0x0000000000400000UL});
        public static readonly BitSet FOLLOW_assignment_operator_in_synpred20_TemplateExtracter3109 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_cast_expression_in_synpred21_TemplateExtracter3167 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_anonymous_function_signature_in_synpred22_TemplateExtracter3373 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000400000000000UL});
        public static readonly BitSet FOLLOW_LAMBDA_in_synpred22_TemplateExtracter3377 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_query_expression_in_synpred23_TemplateExtracter3388 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_224_in_synpred24_TemplateExtracter3811 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_COMMA_in_synpred25_TemplateExtracter4314 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x000000000F000400UL,0x079EFFFF20000008UL,0x0000000000240181UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred25_TemplateExtracter4318 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000001000UL});
        public static readonly BitSet FOLLOW_ASSIGN_in_synpred25_TemplateExtracter4322 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred26_TemplateExtracter5067 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_synpred26_TemplateExtracter5071 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred27_TemplateExtracter6283 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_synpred27_TemplateExtracter6287 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred28_TemplateExtracter6309 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_synpred28_TemplateExtracter6313 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred29_TemplateExtracter6952 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000200UL});
        public static readonly BitSet FOLLOW_LPAREN_in_synpred29_TemplateExtracter6956 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred30_TemplateExtracter6972 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000080UL});
        public static readonly BitSet FOLLOW_OPEN_BRACE_in_synpred30_TemplateExtracter6976 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_member_name_in_synpred31_TemplateExtracter6992 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000100000UL});
        public static readonly BitSet FOLLOW_DOT_in_synpred31_TemplateExtracter6996 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000004UL});
        public static readonly BitSet FOLLOW_THIS_in_synpred31_TemplateExtracter7000 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_arguments_in_synpred32_TemplateExtracter7689 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000020UL,0x0000000000300000UL});
        public static readonly BitSet FOLLOW_set_in_synpred32_TemplateExtracter7693 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred33_TemplateExtracter7740 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000400000000UL});
        public static readonly BitSet FOLLOW_generic_argument_list_in_synpred33_TemplateExtracter7745 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_declaration_statement_in_synpred34_TemplateExtracter7826 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_identifier_in_synpred35_TemplateExtracter7837 = new BitSet(new ulong[]{0x0000000000000000UL,0x0000000000000000UL,0x0000000000000000UL,0x0000000000080000UL});
        public static readonly BitSet FOLLOW_211_in_synpred35_TemplateExtracter7841 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_263_in_synpred36_TemplateExtracter8065 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_264_in_synpred37_TemplateExtracter8076 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_ELSE_in_synpred38_TemplateExtracter8244 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_synpred39_TemplateExtracter8495 = new BitSet(new ulong[]{0x0000000000000002UL});
        public static readonly BitSet FOLLOW_local_variable_declaration_in_synpred40_TemplateExtracter8908 = new BitSet(new ulong[]{0x0000000000000002UL});

    }
}